/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class AssignOrgHoldingToEmpHoldingBatchHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AssignOrgHoldingToEmpHoldingBatchRequest extends $tea.Model {
    /**
     * @example
     * 表现优秀，特此奖励
     *
     * **if can be null:**
     * true
     */
    remark?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    sendOrgCultureInform?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10000
     */
    singleAmount?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * OPEN_ORG_POINT_PERSONAL_ASSIGN
     */
    sourceUsage?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * OPEN_EMP_POINT_PERSONAL_RECEIVE
     */
    targetUsage?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    targetUserList?: AssignOrgHoldingToEmpHoldingBatchRequestTargetUserList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AssignOrgHoldingToEmpHoldingBatchResponseBody extends $tea.Model {
    result?: AssignOrgHoldingToEmpHoldingBatchResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AssignOrgHoldingToEmpHoldingBatchResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AssignOrgHoldingToEmpHoldingBatchResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsumeUserPointsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsumeUserPointsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    amount?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * qwe123
     */
    outId?: string;
    /**
     * @example
     * 测试积分扣减
     */
    remark?: string;
    /**
     * @example
     * OPEN_EMP_POINT_CONSUME_DEFAULT
     */
    usage?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsumeUserPointsResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: ConsumeUserPointsResponseBodyResult;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsumeUserPointsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ConsumeUserPointsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOrgHonorHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOrgHonorRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * $xxxxxxx
     */
    avatarFrameMediaId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * #FFFBB4
     */
    defaultBgColor?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 客户服务用心，奖励荣誉
     */
    medalDesc?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * @xxxxxxx
     */
    medalMediaId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 客户第一
     */
    medalName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 12312312
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOrgHonorResponseBody extends $tea.Model {
    result?: CreateOrgHonorResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOrgHonorResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateOrgHonorResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeductionPointBatchHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeductionPointBatchRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10000
     */
    deductionAmount?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 表现不佳，以此惩罚。
     *
     * **if can be null:**
     * false
     */
    remark?: string;
    /**
     * @example
     * 组织文化通知扣减原因
     */
    sendOrgCultureInform?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    targetUserList?: DeductionPointBatchRequestTargetUserList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 01274411491620908910
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeductionPointBatchResponseBody extends $tea.Model {
    result?: DeductionPointBatchResponseBodyResult;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeductionPointBatchResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeductionPointBatchResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ExportPointOpenHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ExportPointOpenRequest extends $tea.Model {
    /**
     * @example
     * 20220601
     */
    exportDate?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    exportType?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 11185568-1380470824
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ExportPointOpenResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ExportPointOpenResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ExportPointOpenResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GrantHonorHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GrantHonorRequest extends $tea.Model {
    expirationTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 表现优秀，特此奖励！
     */
    grantReason?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 组织文化团队
     */
    granterName?: string;
    /**
     * @example
     * false
     */
    noticeAnnouncer?: boolean;
    /**
     * @example
     * false
     */
    noticeSingle?: boolean;
    openConversationIds?: string[];
    /**
     * @remarks
     * This parameter is required.
     */
    receiverUserIds?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxxUserId
     */
    senderUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GrantHonorResponseBody extends $tea.Model {
    result?: GrantHonorResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GrantHonorResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GrantHonorResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCorpPointsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCorpPointsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 042216842933
     */
    optUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCorpPointsResponseBody extends $tea.Model {
    result?: QueryCorpPointsResponseBodyResult;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCorpPointsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryCorpPointsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEmpPointDetailsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEmpPointDetailsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @example
     * 10
     */
    pageSize?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 042216842933
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEmpPointDetailsResponseBody extends $tea.Model {
    result?: QueryEmpPointDetailsResponseBodyResult;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEmpPointDetailsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryEmpPointDetailsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgHonorsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgHonorsRequest extends $tea.Model {
    /**
     * @example
     * 20
     */
    maxResults?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    nextToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgHonorsResponseBody extends $tea.Model {
    result?: QueryOrgHonorsResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgHonorsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryOrgHonorsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgPointDetailsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgPointDetailsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ORG_DEDUCTIONS
     */
    accountType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @example
     * 10
     */
    pageSize?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 042216842933
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgPointDetailsResponseBody extends $tea.Model {
    result?: QueryOrgPointDetailsResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgPointDetailsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryOrgPointDetailsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPointActionAutoAssignRuleHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPointActionAutoAssignRuleResponseBody extends $tea.Model {
    result?: QueryPointActionAutoAssignRuleResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPointActionAutoAssignRuleResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryPointActionAutoAssignRuleResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPointAutoIssueSettingHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPointAutoIssueSettingResponseBody extends $tea.Model {
    result?: QueryPointAutoIssueSettingResponseBodyResult;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPointAutoIssueSettingResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryPointAutoIssueSettingResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserHonorsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserHonorsRequest extends $tea.Model {
    /**
     * @example
     * 20
     */
    maxResults?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    nextToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserHonorsResponseBody extends $tea.Model {
    result?: QueryUserHonorsResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserHonorsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryUserHonorsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserPointsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserPointsResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: QueryUserPointsResponseBodyResult;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserPointsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryUserPointsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RecallHonorHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RecallHonorRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * suyfsdjfu
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RecallHonorResponseBody extends $tea.Model {
    result?: RecallHonorResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RecallHonorResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: RecallHonorResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateAutoIssuePointHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateAutoIssuePointRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100
     */
    pointAutoNum?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    pointAutoState?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 15
     */
    pointAutoTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 11185568-1380470824
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateAutoIssuePointResponseBody extends $tea.Model {
    result?: UpdateAutoIssuePointResponseBodyResult;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateAutoIssuePointResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateAutoIssuePointResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdatePointActionAutoAssignRuleHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdatePointActionAutoAssignRuleRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    updatePointRuleRequestDTOList?: UpdatePointActionAutoAssignRuleRequestUpdatePointRuleRequestDTOList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 11185568-1380470824
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdatePointActionAutoAssignRuleResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdatePointActionAutoAssignRuleResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdatePointActionAutoAssignRuleResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WearOrgHonorHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WearOrgHonorRequest extends $tea.Model {
    /**
     * @example
     * accs233sxx
     *
     * **if can be null:**
     * false
     */
    userId?: string;
    wear?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WearOrgHonorResponseBody extends $tea.Model {
    result?: WearOrgHonorResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WearOrgHonorResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: WearOrgHonorResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AssignOrgHoldingToEmpHoldingBatchRequestTargetUserList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 4353453454241
     */
    outId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 551341216920908910
     */
    targetUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AssignOrgHoldingToEmpHoldingBatchResponseBodyResultOpenPointInvokeResultDTOS extends $tea.Model {
    /**
     * @example
     * null
     */
    code?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SUCCESS
     */
    invokeStatus?: string;
    /**
     * @example
     * null
     */
    msg?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 23423568784
     */
    outId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 01274411491620908910
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AssignOrgHoldingToEmpHoldingBatchResponseBodyResult extends $tea.Model {
    openPointInvokeResultDTOS?: AssignOrgHoldingToEmpHoldingBatchResponseBodyResultOpenPointInvokeResultDTOS[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsumeUserPointsResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 4990
     */
    amount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOrgHonorResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 10000283
     */
    honorId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeductionPointBatchRequestTargetUserList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 232344342
     */
    outId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 01274411491620908910
     */
    targetUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeductionPointBatchResponseBodyResultOpenPointInvokeResultDTOS extends $tea.Model {
    /**
     * @example
     * banliang#-20005
     */
    code?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * Fail
     */
    invokeStatus?: string;
    /**
     * @example
     * freeze already settle
     */
    msg?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 34345435345
     */
    outId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 01274411491620908910
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeductionPointBatchResponseBodyResult extends $tea.Model {
    openPointInvokeResultDTOS?: DeductionPointBatchResponseBodyResultOpenPointInvokeResultDTOS[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GrantHonorResponseBodyResult extends $tea.Model {
    failedUserIds?: string[];
    successUserIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCorpPointsResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 1000
     */
    amount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEmpPointDetailsResponseBodyResultDetailsPointOperateFeatureResponseDTOAccountSource extends $tea.Model {
    /**
     * @example
     * EMP
     */
    accountType?: string;
    /**
     * @example
     * 张三
     */
    empName?: string;
    /**
     * @example
     * 01274411491620908910
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEmpPointDetailsResponseBodyResultDetailsPointOperateFeatureResponseDTOAccountTarget extends $tea.Model {
    /**
     * @example
     * personal
     */
    accountType?: string;
    /**
     * @example
     * 李四
     */
    empName?: string;
    /**
     * @example
     * 01274411491620908910
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEmpPointDetailsResponseBodyResultDetailsPointOperateFeatureResponseDTO extends $tea.Model {
    accountSource?: QueryEmpPointDetailsResponseBodyResultDetailsPointOperateFeatureResponseDTOAccountSource;
    accountTarget?: QueryEmpPointDetailsResponseBodyResultDetailsPointOperateFeatureResponseDTOAccountTarget;
    /**
     * @example
     * 收到奖励积分
     */
    remark?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 三方系统员工收到积分
     */
    usage?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEmpPointDetailsResponseBodyResultDetails extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    amount?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1655450856000
     */
    gmtCreate?: number;
    /**
     * @example
     * 324324353535
     */
    outId?: string;
    pointOperateFeatureResponseDTO?: QueryEmpPointDetailsResponseBodyResultDetailsPointOperateFeatureResponseDTO;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * personal
     */
    sourceBizCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEmpPointDetailsResponseBodyResult extends $tea.Model {
    details?: QueryEmpPointDetailsResponseBodyResultDetails[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    hasMore?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgHonorsResponseBodyResultOpenHonors extends $tea.Model {
    honorDesc?: string;
    honorId?: number;
    honorImgUrl?: string;
    honorName?: string;
    honorPendantImgUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgHonorsResponseBodyResult extends $tea.Model {
    nextToken?: string;
    openHonors?: QueryOrgHonorsResponseBodyResultOpenHonors[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgPointDetailsResponseBodyResultDetailsPointOperateFeatureResponseDTOAccountSource extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ORG
     */
    accountType?: string;
    /**
     * @example
     * 张三
     */
    empName?: string;
    /**
     * @example
     * 01274411491620908910
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgPointDetailsResponseBodyResultDetailsPointOperateFeatureResponseDTOAccountTarget extends $tea.Model {
    /**
     * @example
     * EMP
     */
    accountType?: string;
    /**
     * @example
     * 李四
     */
    empName?: string;
    /**
     * @example
     * 01274411491620908910
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgPointDetailsResponseBodyResultDetailsPointOperateFeatureResponseDTO extends $tea.Model {
    accountSource?: QueryOrgPointDetailsResponseBodyResultDetailsPointOperateFeatureResponseDTOAccountSource;
    accountTarget?: QueryOrgPointDetailsResponseBodyResultDetailsPointOperateFeatureResponseDTOAccountTarget;
    /**
     * @example
     * 表现优秀，特此奖励
     */
    remark?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 三方系统管理员发放额度
     */
    usage?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgPointDetailsResponseBodyResultDetails extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100
     */
    amount?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1655450960000
     */
    gmtCreate?: number;
    /**
     * @example
     * 2323232134455667
     */
    outId?: string;
    pointOperateFeatureResponseDTO?: QueryOrgPointDetailsResponseBodyResultDetailsPointOperateFeatureResponseDTO;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * credit
     */
    sourceBizCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgPointDetailsResponseBodyResult extends $tea.Model {
    details?: QueryOrgPointDetailsResponseBodyResultDetails[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    hasMore?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPointActionAutoAssignRuleResponseBodyResultQueryPointRuleResponseDTOS extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    awardScore?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * DAILY_VISIT
     */
    code?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    dayLimitTimes?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 每日访问
     */
    description?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    status?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPointActionAutoAssignRuleResponseBodyResult extends $tea.Model {
    queryPointRuleResponseDTOS?: QueryPointActionAutoAssignRuleResponseBodyResultQueryPointRuleResponseDTOS[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPointAutoIssueSettingResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100
     */
    pointAutoNum?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    pointAutoState?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 15
     */
    pointAutoTime?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserHonorsResponseBodyResultHonorsGrantHistory extends $tea.Model {
    grantTime?: number;
    senderUserid?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserHonorsResponseBodyResultHonors extends $tea.Model {
    expirationTime?: number;
    grantHistory?: QueryUserHonorsResponseBodyResultHonorsGrantHistory[];
    honorDesc?: string;
    honorId?: string;
    honorName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserHonorsResponseBodyResult extends $tea.Model {
    honors?: QueryUserHonorsResponseBodyResultHonors[];
    nextToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserPointsResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 4990
     */
    amount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RecallHonorResponseBodyResult extends $tea.Model {
    honorId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateAutoIssuePointResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1655450856000
     */
    nextAutoIssuePointTime?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdatePointActionAutoAssignRuleRequestUpdatePointRuleRequestDTOList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100
     */
    awardScore?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * POST_IS_COMMENT
     */
    code?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    dayLimitTimes?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    status?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WearOrgHonorResponseBodyResult extends $tea.Model {
    honorId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 批量发放积分或额度
     *
     * @param request - AssignOrgHoldingToEmpHoldingBatchRequest
     * @param headers - AssignOrgHoldingToEmpHoldingBatchHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AssignOrgHoldingToEmpHoldingBatchResponse
     */
    assignOrgHoldingToEmpHoldingBatchWithOptions(request: AssignOrgHoldingToEmpHoldingBatchRequest, headers: AssignOrgHoldingToEmpHoldingBatchHeaders, runtime: $Util.RuntimeOptions): Promise<AssignOrgHoldingToEmpHoldingBatchResponse>;
    /**
     * 批量发放积分或额度
     *
     * @param request - AssignOrgHoldingToEmpHoldingBatchRequest
     * @returns AssignOrgHoldingToEmpHoldingBatchResponse
     */
    assignOrgHoldingToEmpHoldingBatch(request: AssignOrgHoldingToEmpHoldingBatchRequest): Promise<AssignOrgHoldingToEmpHoldingBatchResponse>;
    /**
     * 扣减员工积分
     *
     * @param request - ConsumeUserPointsRequest
     * @param headers - ConsumeUserPointsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ConsumeUserPointsResponse
     */
    consumeUserPointsWithOptions(userId: string, request: ConsumeUserPointsRequest, headers: ConsumeUserPointsHeaders, runtime: $Util.RuntimeOptions): Promise<ConsumeUserPointsResponse>;
    /**
     * 扣减员工积分
     *
     * @param request - ConsumeUserPointsRequest
     * @returns ConsumeUserPointsResponse
     */
    consumeUserPoints(userId: string, request: ConsumeUserPointsRequest): Promise<ConsumeUserPointsResponse>;
    /**
     * 创建荣誉勋章模板
     *
     * @param request - CreateOrgHonorRequest
     * @param headers - CreateOrgHonorHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateOrgHonorResponse
     */
    createOrgHonorWithOptions(request: CreateOrgHonorRequest, headers: CreateOrgHonorHeaders, runtime: $Util.RuntimeOptions): Promise<CreateOrgHonorResponse>;
    /**
     * 创建荣誉勋章模板
     *
     * @param request - CreateOrgHonorRequest
     * @returns CreateOrgHonorResponse
     */
    createOrgHonor(request: CreateOrgHonorRequest): Promise<CreateOrgHonorResponse>;
    /**
     * 批量扣减积分
     *
     * @param request - DeductionPointBatchRequest
     * @param headers - DeductionPointBatchHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeductionPointBatchResponse
     */
    deductionPointBatchWithOptions(request: DeductionPointBatchRequest, headers: DeductionPointBatchHeaders, runtime: $Util.RuntimeOptions): Promise<DeductionPointBatchResponse>;
    /**
     * 批量扣减积分
     *
     * @param request - DeductionPointBatchRequest
     * @returns DeductionPointBatchResponse
     */
    deductionPointBatch(request: DeductionPointBatchRequest): Promise<DeductionPointBatchResponse>;
    /**
     * 积分榜单导出
     *
     * @param request - ExportPointOpenRequest
     * @param headers - ExportPointOpenHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ExportPointOpenResponse
     */
    exportPointOpenWithOptions(request: ExportPointOpenRequest, headers: ExportPointOpenHeaders, runtime: $Util.RuntimeOptions): Promise<ExportPointOpenResponse>;
    /**
     * 积分榜单导出
     *
     * @param request - ExportPointOpenRequest
     * @returns ExportPointOpenResponse
     */
    exportPointOpen(request: ExportPointOpenRequest): Promise<ExportPointOpenResponse>;
    /**
     * 授予荣誉 异步执行
     *
     * @param request - GrantHonorRequest
     * @param headers - GrantHonorHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GrantHonorResponse
     */
    grantHonorWithOptions(honorId: string, request: GrantHonorRequest, headers: GrantHonorHeaders, runtime: $Util.RuntimeOptions): Promise<GrantHonorResponse>;
    /**
     * 授予荣誉 异步执行
     *
     * @param request - GrantHonorRequest
     * @returns GrantHonorResponse
     */
    grantHonor(honorId: string, request: GrantHonorRequest): Promise<GrantHonorResponse>;
    /**
     * 查询当前企业下可兑换的积分
     *
     * @param request - QueryCorpPointsRequest
     * @param headers - QueryCorpPointsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryCorpPointsResponse
     */
    queryCorpPointsWithOptions(request: QueryCorpPointsRequest, headers: QueryCorpPointsHeaders, runtime: $Util.RuntimeOptions): Promise<QueryCorpPointsResponse>;
    /**
     * 查询当前企业下可兑换的积分
     *
     * @param request - QueryCorpPointsRequest
     * @returns QueryCorpPointsResponse
     */
    queryCorpPoints(request: QueryCorpPointsRequest): Promise<QueryCorpPointsResponse>;
    /**
     * 查询个人积分使用明细
     *
     * @param request - QueryEmpPointDetailsRequest
     * @param headers - QueryEmpPointDetailsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryEmpPointDetailsResponse
     */
    queryEmpPointDetailsWithOptions(request: QueryEmpPointDetailsRequest, headers: QueryEmpPointDetailsHeaders, runtime: $Util.RuntimeOptions): Promise<QueryEmpPointDetailsResponse>;
    /**
     * 查询个人积分使用明细
     *
     * @param request - QueryEmpPointDetailsRequest
     * @returns QueryEmpPointDetailsResponse
     */
    queryEmpPointDetails(request: QueryEmpPointDetailsRequest): Promise<QueryEmpPointDetailsResponse>;
    /**
     * 获取组织荣誉
     *
     * @param request - QueryOrgHonorsRequest
     * @param headers - QueryOrgHonorsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryOrgHonorsResponse
     */
    queryOrgHonorsWithOptions(request: QueryOrgHonorsRequest, headers: QueryOrgHonorsHeaders, runtime: $Util.RuntimeOptions): Promise<QueryOrgHonorsResponse>;
    /**
     * 获取组织荣誉
     *
     * @param request - QueryOrgHonorsRequest
     * @returns QueryOrgHonorsResponse
     */
    queryOrgHonors(request: QueryOrgHonorsRequest): Promise<QueryOrgHonorsResponse>;
    /**
     * 查询组织发放扣除积分明细
     *
     * @param request - QueryOrgPointDetailsRequest
     * @param headers - QueryOrgPointDetailsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryOrgPointDetailsResponse
     */
    queryOrgPointDetailsWithOptions(request: QueryOrgPointDetailsRequest, headers: QueryOrgPointDetailsHeaders, runtime: $Util.RuntimeOptions): Promise<QueryOrgPointDetailsResponse>;
    /**
     * 查询组织发放扣除积分明细
     *
     * @param request - QueryOrgPointDetailsRequest
     * @returns QueryOrgPointDetailsResponse
     */
    queryOrgPointDetails(request: QueryOrgPointDetailsRequest): Promise<QueryOrgPointDetailsResponse>;
    /**
     * 查询积分自动发放行为规则
     *
     * @param headers - QueryPointActionAutoAssignRuleHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryPointActionAutoAssignRuleResponse
     */
    queryPointActionAutoAssignRuleWithOptions(headers: QueryPointActionAutoAssignRuleHeaders, runtime: $Util.RuntimeOptions): Promise<QueryPointActionAutoAssignRuleResponse>;
    /**
     * 查询积分自动发放行为规则
     * @returns QueryPointActionAutoAssignRuleResponse
     */
    queryPointActionAutoAssignRule(): Promise<QueryPointActionAutoAssignRuleResponse>;
    /**
     * 每月自动发放额度查询
     *
     * @param headers - QueryPointAutoIssueSettingHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryPointAutoIssueSettingResponse
     */
    queryPointAutoIssueSettingWithOptions(headers: QueryPointAutoIssueSettingHeaders, runtime: $Util.RuntimeOptions): Promise<QueryPointAutoIssueSettingResponse>;
    /**
     * 每月自动发放额度查询
     * @returns QueryPointAutoIssueSettingResponse
     */
    queryPointAutoIssueSetting(): Promise<QueryPointAutoIssueSettingResponse>;
    /**
     * 查询员工已获得的组织荣誉列表
     *
     * @param request - QueryUserHonorsRequest
     * @param headers - QueryUserHonorsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryUserHonorsResponse
     */
    queryUserHonorsWithOptions(userId: string, request: QueryUserHonorsRequest, headers: QueryUserHonorsHeaders, runtime: $Util.RuntimeOptions): Promise<QueryUserHonorsResponse>;
    /**
     * 查询员工已获得的组织荣誉列表
     *
     * @param request - QueryUserHonorsRequest
     * @returns QueryUserHonorsResponse
     */
    queryUserHonors(userId: string, request: QueryUserHonorsRequest): Promise<QueryUserHonorsResponse>;
    /**
     * 查询员工已获得的积分
     *
     * @param headers - QueryUserPointsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryUserPointsResponse
     */
    queryUserPointsWithOptions(userId: string, headers: QueryUserPointsHeaders, runtime: $Util.RuntimeOptions): Promise<QueryUserPointsResponse>;
    /**
     * 查询员工已获得的积分
     * @returns QueryUserPointsResponse
     */
    queryUserPoints(userId: string): Promise<QueryUserPointsResponse>;
    /**
     * 撤销员工获得的荣誉勋章
     *
     * @param request - RecallHonorRequest
     * @param headers - RecallHonorHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns RecallHonorResponse
     */
    recallHonorWithOptions(honorId: string, request: RecallHonorRequest, headers: RecallHonorHeaders, runtime: $Util.RuntimeOptions): Promise<RecallHonorResponse>;
    /**
     * 撤销员工获得的荣誉勋章
     *
     * @param request - RecallHonorRequest
     * @returns RecallHonorResponse
     */
    recallHonor(honorId: string, request: RecallHonorRequest): Promise<RecallHonorResponse>;
    /**
     * 每月自动发放额度修改
     *
     * @param request - UpdateAutoIssuePointRequest
     * @param headers - UpdateAutoIssuePointHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateAutoIssuePointResponse
     */
    updateAutoIssuePointWithOptions(request: UpdateAutoIssuePointRequest, headers: UpdateAutoIssuePointHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateAutoIssuePointResponse>;
    /**
     * 每月自动发放额度修改
     *
     * @param request - UpdateAutoIssuePointRequest
     * @returns UpdateAutoIssuePointResponse
     */
    updateAutoIssuePoint(request: UpdateAutoIssuePointRequest): Promise<UpdateAutoIssuePointResponse>;
    /**
     * 修改积分系统行为规则
     *
     * @param request - UpdatePointActionAutoAssignRuleRequest
     * @param headers - UpdatePointActionAutoAssignRuleHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdatePointActionAutoAssignRuleResponse
     */
    updatePointActionAutoAssignRuleWithOptions(request: UpdatePointActionAutoAssignRuleRequest, headers: UpdatePointActionAutoAssignRuleHeaders, runtime: $Util.RuntimeOptions): Promise<UpdatePointActionAutoAssignRuleResponse>;
    /**
     * 修改积分系统行为规则
     *
     * @param request - UpdatePointActionAutoAssignRuleRequest
     * @returns UpdatePointActionAutoAssignRuleResponse
     */
    updatePointActionAutoAssignRule(request: UpdatePointActionAutoAssignRuleRequest): Promise<UpdatePointActionAutoAssignRuleResponse>;
    /**
     * 佩戴/卸下荣誉勋章
     *
     * @param request - WearOrgHonorRequest
     * @param headers - WearOrgHonorHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns WearOrgHonorResponse
     */
    wearOrgHonorWithOptions(honorId: string, request: WearOrgHonorRequest, headers: WearOrgHonorHeaders, runtime: $Util.RuntimeOptions): Promise<WearOrgHonorResponse>;
    /**
     * 佩戴/卸下荣誉勋章
     *
     * @param request - WearOrgHonorRequest
     * @returns WearOrgHonorResponse
     */
    wearOrgHonor(honorId: string, request: WearOrgHonorRequest): Promise<WearOrgHonorResponse>;
}
