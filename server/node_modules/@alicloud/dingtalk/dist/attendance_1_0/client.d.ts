/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class ResultDurationSettingsValue extends $tea.Model {
    calcType?: number;
    durationType?: number;
    overtimeRedress?: boolean;
    settings?: {
        [key: string]: any;
    };
    overtimeRedressBy?: string;
    vacationRate?: number;
    skipTime?: string;
    skipTimeByFrames?: ResultDurationSettingsValueSkipTimeByFrames[];
    skipTimeByDurations?: ResultDurationSettingsValueSkipTimeByDurations[];
    holidayPlanOvertimeRedress?: boolean;
    holidayPlanOvertimeRedressBy?: string;
    holidayPlanVacationRate?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddLeaveTypeHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddLeaveTypeRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * general_leave
     */
    bizType?: string;
    /**
     * @example
     * {"validity_type":"absolute_time","validity_value":"12-31"}
     */
    extras?: string;
    /**
     * @example
     * false
     */
    freedomLeave?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1000
     */
    hoursInPerDay?: number;
    leaveCertificate?: AddLeaveTypeRequestLeaveCertificate;
    /**
     * @example
     * up
     */
    leaveHourCeil?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 年假
     */
    leaveName?: string;
    /**
     * @example
     * false
     */
    leaveTimeCeil?: boolean;
    /**
     * @example
     * hour
     */
    leaveTimeCeilMinUnit?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * day
     */
    leaveViewUnit?: string;
    /**
     * @example
     * 1
     */
    maxLeaveTime?: number;
    /**
     * @example
     * 2
     */
    minLeaveHour?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    naturalDayLeave?: boolean;
    /**
     * @example
     * false
     */
    paidLeave?: boolean;
    submitTimeRule?: AddLeaveTypeRequestSubmitTimeRule;
    visibilityRules?: AddLeaveTypeRequestVisibilityRules[];
    /**
     * @example
     * entry
     */
    whenCanLeave?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * user01
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddLeaveTypeResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: AddLeaveTypeResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddLeaveTypeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddLeaveTypeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AttendanceBleDevicesAddHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AttendanceBleDevicesAddRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    deviceIdList?: number[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 62001E1C5B9362D369D316DED25F3656
     */
    groupKey?: string;
    /**
     * @example
     * userId001
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AttendanceBleDevicesAddResponseBody extends $tea.Model {
    errorList?: AttendanceBleDevicesAddResponseBodyErrorList[];
    successList?: AttendanceBleDevicesAddResponseBodySuccessList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AttendanceBleDevicesAddResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AttendanceBleDevicesAddResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AttendanceBleDevicesQueryHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AttendanceBleDevicesQueryRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 62001E1C5B9XXXX369D316DED25FXXXX
     */
    groupKey?: string;
    /**
     * @example
     * userId001
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AttendanceBleDevicesQueryResponseBody extends $tea.Model {
    result?: AttendanceBleDevicesQueryResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AttendanceBleDevicesQueryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AttendanceBleDevicesQueryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AttendanceBleDevicesRemoveHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AttendanceBleDevicesRemoveRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    deviceIdList?: number[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 62001E1C5B9362D369D316DED25F3656
     */
    groupKey?: string;
    /**
     * @example
     * userId001
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AttendanceBleDevicesRemoveResponseBody extends $tea.Model {
    errorList?: AttendanceBleDevicesRemoveResponseBodyErrorList[];
    successList?: number[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AttendanceBleDevicesRemoveResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AttendanceBleDevicesRemoveResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchBossCheckHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchBossCheckRequest extends $tea.Model {
    models?: BatchBossCheckRequestModels[];
    /**
     * @remarks
     * This parameter is required.
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchBossCheckResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchBossCheckResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchBossCheckResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CalculateDurationHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CalculateDurationRequest extends $tea.Model {
    /**
     * @example
     * 3
     */
    bizType?: number;
    /**
     * @example
     * 1
     */
    calculateModel?: number;
    /**
     * @example
     * day
     */
    durationUnit?: string;
    /**
     * @example
     * 2019-08-15
     */
    fromTime?: string;
    /**
     * @example
     * e2dsad-34dfa-2vas23da
     */
    leaveCode?: string;
    /**
     * @example
     * 2019-08-15
     */
    toTime?: string;
    /**
     * @example
     * manager123
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CalculateDurationResponseBody extends $tea.Model {
    result?: CalculateDurationResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CalculateDurationResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CalculateDurationResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckClosingAccountHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckClosingAccountRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    bizCode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    userIds?: string[];
    /**
     * @remarks
     * This parameter is required.
     */
    userTimeRange?: CheckClosingAccountRequestUserTimeRange[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckClosingAccountResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    code?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    mesage?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    pass?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckClosingAccountResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CheckClosingAccountResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckWritePermissionHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckWritePermissionRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * GROUP
     */
    category?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    entityIds?: number[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 050728xxx921
     */
    opUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SCHEDULE
     */
    resourceKey?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckWritePermissionResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    entityPermissionMap?: {
        [key: string]: boolean;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckWritePermissionResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CheckWritePermissionResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateApproveHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateApproveRequest extends $tea.Model {
    /**
     * @example
     * 341lkfjdkf
     */
    approveId?: string;
    /**
     * @example
     * 4243235dfd
     */
    opUserid?: string;
    punchParam?: CreateApproveRequestPunchParam;
    /**
     * @example
     * 年假
     */
    subType?: string;
    /**
     * @example
     * 请假
     */
    tagName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * fdfi3435
     */
    userid?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateApproveResponseBody extends $tea.Model {
    dingtalkApproveId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateApproveResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateApproveResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteLeaveRequestHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteLeaveRequestRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * zxfgsdfsdfvsd
     */
    outerId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteLeaveRequestResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteLeaveRequestResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteLeaveRequestResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteWaterMarkTemplateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteWaterMarkTemplateRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * PROC-292988B1-5064-4A42-9389-A76B97xxxxx
     */
    formCode?: string;
    /**
     * @example
     * {     \"items\":[         {             \"componentName\":\"HiddenField\",             \"props\":{                 \"bizAlias\":\"enableModifyPlace\",                 \"id\":\"enableModifyPlace-undefined\",                 \"value\":\"true\"             }         },         {             \"componentName\":\"HiddenField\",             \"props\":{                 \"bizAlias\":\"modifyPlaceDistance\",                 \"id\":\"modifyPlaceDistance-undefined\",                 \"value\":200             }         },         {             \"componentName\":\"HiddenField\",             \"props\":{                 \"bizAlias\":\"title\",                 \"id\":\"title-undefined\",                 \"value\":\"wofu1\"             }         },         {             \"componentName\":\"HiddenField\",             \"props\":{                 \"bizAlias\":\"titleBgColor\",                 \"id\":\"titleBgColor-undefined\",                 \"value\":\"#0089FF\"             }         }     ] }
     */
    formContent?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1234567
     */
    openConversationId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    systemTemplate?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manage123
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteWaterMarkTemplateResponseBody extends $tea.Model {
    /**
     * @example
     * PROC-292988B1-5064-4A42-9389-A76B97xxxxx
     */
    result?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteWaterMarkTemplateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteWaterMarkTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DingTalkSecurityCheckHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DingTalkSecurityCheckRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 6.3.30
     */
    clientVer?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * iOS
     */
    platform?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 15
     */
    platformVer?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * {"lbsWuaToken": "lbsWua","ddSec":"ddSec"}
     */
    sec?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * user01
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DingTalkSecurityCheckResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: DingTalkSecurityCheckResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DingTalkSecurityCheckResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DingTalkSecurityCheckResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetATManageScopeHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetATManageScopeRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 50
     */
    maxResults?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    nextToken?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * user01
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetATManageScopeResponseBody extends $tea.Model {
    result?: GetATManageScopeResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetATManageScopeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetATManageScopeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAdjustmentsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAdjustmentsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAdjustmentsResponseBody extends $tea.Model {
    result?: GetAdjustmentsResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAdjustmentsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetAdjustmentsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCheckInSchemaTemplateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCheckInSchemaTemplateRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * water_mark_checkin
     */
    bizCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1234567
     */
    openConversationId?: string;
    /**
     * @example
     * water_mark_checkin
     */
    sceneCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manage123
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCheckInSchemaTemplateResponseBody extends $tea.Model {
    result?: GetCheckInSchemaTemplateResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCheckInSchemaTemplateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetCheckInSchemaTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCheckinRecordByUserHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCheckinRecordByUserRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    endTime?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    maxResults?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    nextToken?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    operatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    startTime?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    userIdList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCheckinRecordByUserResponseBody extends $tea.Model {
    result?: GetCheckinRecordByUserResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCheckinRecordByUserResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetCheckinRecordByUserResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetClassWithDeletedHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetClassWithDeletedResponseBody extends $tea.Model {
    result?: GetClassWithDeletedResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetClassWithDeletedResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetClassWithDeletedResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetClosingAccountsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetClosingAccountsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    userIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetClosingAccountsResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: GetClosingAccountsResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetClosingAccountsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetClosingAccountsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetColumnvalsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetColumnvalsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    columnIdList?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1709222400000
     */
    fromDate?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1711728000000
     */
    toDate?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    userIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetColumnvalsResponseBody extends $tea.Model {
    result?: GetColumnvalsResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetColumnvalsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetColumnvalsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetLeaveRecordsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetLeaveRecordsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * f84a2dxxxx
     */
    leaveCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * user01
     */
    opUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    pageNumber?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    pageSize?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    userIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetLeaveRecordsResponseBody extends $tea.Model {
    result?: GetLeaveRecordsResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetLeaveRecordsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetLeaveRecordsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetLeaveTypeHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetLeaveTypeRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * user01
     */
    opUserId?: string;
    /**
     * @example
     * all
     */
    vacationSource?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetLeaveTypeResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: GetLeaveTypeResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetLeaveTypeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetLeaveTypeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMachineHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMachineResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: GetMachineResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMachineResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetMachineResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMachineUserHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMachineUserRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    maxResults?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    nextToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMachineUserResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: GetMachineUserResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMachineUserResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetMachineUserResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOverdraftInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOverdraftInfoRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    leaveCode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    userIdList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOverdraftInfoResponseBody extends $tea.Model {
    overdraftList?: GetOverdraftInfoResponseBodyOverdraftList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOverdraftInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetOverdraftInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOvertimeSettingHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOvertimeSettingRequest extends $tea.Model {
    overtimeSettingIds?: number[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOvertimeSettingResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: GetOvertimeSettingResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOvertimeSettingResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetOvertimeSettingResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShiftHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShiftRequest extends $tea.Model {
    opUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    shiftId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShiftResponseBody extends $tea.Model {
    result?: GetShiftResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShiftResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetShiftResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSimpleGroupsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSimpleGroupsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    maxResults?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    nextToken?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSimpleGroupsResponseBody extends $tea.Model {
    result?: GetSimpleGroupsResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSimpleGroupsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetSimpleGroupsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSimpleOvertimeSettingHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSimpleOvertimeSettingRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSimpleOvertimeSettingResponseBody extends $tea.Model {
    result?: GetSimpleOvertimeSettingResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSimpleOvertimeSettingResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetSimpleOvertimeSettingResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserHolidaysHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserHolidaysRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    userIds?: string[];
    /**
     * @remarks
     * This parameter is required.
     */
    workDateFrom?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    workDateTo?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserHolidaysResponseBody extends $tea.Model {
    result?: GetUserHolidaysResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserHolidaysResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetUserHolidaysResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GroupAddHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GroupAddRequest extends $tea.Model {
    /**
     * @example
     * 123L
     */
    adjustmentSettingId?: number;
    bleDeviceList?: GroupAddRequestBleDeviceList[];
    /**
     * @example
     * true
     */
    checkNeedHealthyCode?: boolean;
    /**
     * @example
     * 1234
     */
    defaultClassId?: number;
    /**
     * @example
     * true
     */
    disableCheckWhenRest?: boolean;
    /**
     * @example
     * true
     */
    disableCheckWithoutSchedule?: boolean;
    /**
     * @example
     * true
     */
    enableCameraCheck?: boolean;
    /**
     * @example
     * true
     */
    enableEmpSelectClass?: boolean;
    /**
     * @example
     * true
     */
    enableFaceCheck?: boolean;
    /**
     * @example
     * true
     */
    enableFaceStrictMode?: boolean;
    /**
     * @example
     * true
     */
    enableNextDay?: boolean;
    /**
     * @example
     * true
     */
    enableOutSideUpdateNormalCheck?: boolean;
    /**
     * @example
     * true
     */
    enableOutsideApply?: boolean;
    /**
     * @example
     * true
     */
    enableOutsideCameraCheck?: boolean;
    /**
     * @example
     * true
     */
    enableOutsideCheck?: boolean;
    /**
     * @example
     * true
     */
    enableOutsideRemark?: boolean;
    enablePositionBle?: boolean;
    enableTrimDistance?: boolean;
    /**
     * @example
     * true
     */
    forbidHideOutSideAddress?: boolean;
    freeCheckSetting?: GroupAddRequestFreeCheckSetting;
    /**
     * @example
     * 0
     */
    freeCheckTypeId?: number;
    /**
     * @example
     * 240
     */
    freecheckDayStartMinOffset?: number;
    freecheckWorkDays?: number[];
    /**
     * @example
     * 123
     */
    groupId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 白班考勤
     */
    groupName?: string;
    managerList?: string[];
    /**
     * @remarks
     * This parameter is required.
     */
    members?: GroupAddRequestMembers[];
    /**
     * @example
     * true
     */
    modifyMember?: boolean;
    /**
     * @example
     * 500
     */
    offset?: number;
    onlyMachineCheck?: boolean;
    openCameraCheck?: boolean;
    /**
     * @example
     * true
     */
    openFaceCheck?: boolean;
    /**
     * @example
     * -1
     */
    outsideCheckApproveModeId?: number;
    /**
     * @example
     * 123L
     */
    overtimeSettingId?: number;
    /**
     * @example
     * 123dfdf
     */
    owner?: string;
    positions?: GroupAddRequestPositions[];
    resourcePermissionMap?: {
        [key: string]: any;
    };
    shiftVOList?: GroupAddRequestShiftVOList[];
    /**
     * @example
     * true
     */
    skipHolidays?: boolean;
    /**
     * @example
     * {"onDuty":{1400000:123,1400001:123},"offDuty":[1400000,1400001]}
     */
    specialDays?: string;
    /**
     * @example
     * 100
     */
    trimDistance?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * TURN
     */
    type?: string;
    wifis?: GroupAddRequestWifis[];
    workdayClassList?: number[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123dfd
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GroupAddResponseBody extends $tea.Model {
    result?: GroupAddResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GroupAddResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GroupAddResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GroupUpdateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GroupUpdateRequest extends $tea.Model {
    /**
     * @example
     * 123L
     */
    adjustmentSettingId?: number;
    /**
     * @example
     * true
     */
    disableCheckWhenRest?: boolean;
    /**
     * @example
     * true
     */
    disableCheckWithoutSchedule?: boolean;
    /**
     * @example
     * true
     */
    enableCameraCheck?: boolean;
    /**
     * @example
     * true
     */
    enableEmpSelectClass?: boolean;
    /**
     * @example
     * true
     */
    enableFaceCheck?: boolean;
    /**
     * @example
     * true
     */
    enableFaceStrictMode?: boolean;
    /**
     * @example
     * true
     */
    enableOutSideUpdateNormalCheck?: boolean;
    /**
     * @example
     * true
     */
    enableOutsideApply?: boolean;
    /**
     * @example
     * true
     */
    enableOutsideCheck?: boolean;
    /**
     * @example
     * true
     */
    enableOutsideRemark?: boolean;
    /**
     * @example
     * true
     */
    enableTrimDistance?: boolean;
    /**
     * @example
     * true
     */
    forbidHideOutSideAddress?: boolean;
    freeCheckSetting?: GroupUpdateRequestFreeCheckSetting;
    /**
     * @example
     * 0
     */
    freeCheckTypeId?: number;
    freecheckDayStartMinOffset?: number;
    /**
     * @example
     * 123
     */
    groupId?: number;
    /**
     * @example
     * 白班考勤
     */
    groupName?: string;
    managerList?: string[];
    /**
     * @example
     * 500
     */
    offset?: number;
    onlyMachineCheck?: boolean;
    openCameraCheck?: boolean;
    /**
     * @example
     * true
     */
    openFaceCheck?: boolean;
    /**
     * @example
     * -1
     */
    outsideCheckApproveModeId?: number;
    /**
     * @example
     * 123L
     */
    overtimeSettingId?: number;
    /**
     * @example
     * 123dfdf
     */
    owner?: string;
    positions?: GroupUpdateRequestPositions[];
    resourcePermissionMap?: {
        [key: string]: any;
    };
    shiftVOList?: GroupUpdateRequestShiftVOList[];
    /**
     * @example
     * true
     */
    skipHolidays?: boolean;
    /**
     * @example
     * 100
     */
    trimDistance?: number;
    workdayClassList?: number[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123dfd
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GroupUpdateResponseBody extends $tea.Model {
    result?: GroupUpdateResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GroupUpdateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GroupUpdateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitAndGetLeaveALlocationQuotasHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitAndGetLeaveALlocationQuotasRequest extends $tea.Model {
    /**
     * @example
     * f84a2829-xxxx0653
     */
    leaveCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager1
     */
    opUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager211
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitAndGetLeaveALlocationQuotasResponseBody extends $tea.Model {
    result?: InitAndGetLeaveALlocationQuotasResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitAndGetLeaveALlocationQuotasResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: InitAndGetLeaveALlocationQuotasResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListApproveByUsersHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListApproveByUsersRequest extends $tea.Model {
    bizTypes?: number[];
    /**
     * @example
     * 1678636800000
     */
    fromDateTime?: number;
    /**
     * @example
     * 1678636800000
     */
    toDateTime?: number;
    /**
     * @example
     * user1,user2
     */
    userIds?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListApproveByUsersResponseBody extends $tea.Model {
    result?: ListApproveByUsersResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListApproveByUsersResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListApproveByUsersResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifyWaterMarkTemplateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifyWaterMarkTemplateRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * PROC-292988B1-5064-4A42-9389-A76B97xxxxx
     */
    formCode?: string;
    /**
     * @example
     * https://xx.xx.png
     */
    icon?: string;
    /**
     * @example
     * industry_dx_xx
     */
    layoutDesignId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * { \"items\":[ { \"componentName\":\"HiddenField\", \"props\":{ \"bizAlias\":\"enableModifyPlace\", \"id\":\"enableModifyPlace-undefined\", \"value\":\"true\" } }, { \"componentName\":\"HiddenField\", \"props\":{ \"bizAlias\":\"modifyPlaceDistance\", \"id\":\"modifyPlaceDistance-undefined\", \"value\":200 } }, { \"componentName\":\"HiddenField\", \"props\":{ \"bizAlias\":\"title\", \"id\":\"title-undefined\", \"value\":\"wofu1\" } }, { \"componentName\":\"HiddenField\", \"props\":{ \"bizAlias\":\"titleBgColor\", \"id\":\"titleBgColor-undefined\", \"value\":\"#0089FF\" } } ] }
     */
    schemaContent?: string;
    /**
     * @example
     * 标题
     */
    title?: string;
    /**
     * @example
     * PROC-292988B1-5064-4A42-9389-A76B97xxxxx
     */
    waterMarkId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1234567
     */
    openConversationId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manage123
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifyWaterMarkTemplateResponseBody extends $tea.Model {
    /**
     * @example
     * PROC-292988B1-5064-4A42-9389-A76B97xxxxx
     */
    result?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifyWaterMarkTemplateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ModifyWaterMarkTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ProcessApproveCreateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ProcessApproveCreateRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 25c4c49f-cf3a-4ba1-b321-7defd93b7f89
     */
    approveId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * user02
     */
    opUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    punchParam?: ProcessApproveCreateRequestPunchParam;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * shiftGroup
     */
    subType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 请假
     */
    tagName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * user01
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ProcessApproveCreateResponseBody extends $tea.Model {
    result?: ProcessApproveCreateResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ProcessApproveCreateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ProcessApproveCreateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ProcessApproveFinishHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ProcessApproveFinishRequest extends $tea.Model {
    /**
     * @example
     * 1234abcd
     */
    approveId?: string;
    /**
     * @example
     * https://open.dingtalk.com/
     */
    jumpUrl?: string;
    /**
     * @example
     * 1
     */
    overTimeToMore?: number;
    /**
     * @example
     * 1.07
     */
    overtimeDuration?: string;
    /**
     * @example
     * 年假
     */
    subType?: string;
    /**
     * @example
     * 请假
     */
    tagName?: string;
    topCalculateApproveDurationParam?: ProcessApproveFinishRequestTopCalculateApproveDurationParam;
    /**
     * @example
     * manager123
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ProcessApproveFinishResponseBody extends $tea.Model {
    result?: ProcessApproveFinishResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ProcessApproveFinishResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ProcessApproveFinishResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReduceQuotaWithLeaveRecordHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReduceQuotaWithLeaveRecordRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    endTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * asdfaad-asdfadfa-asdfa
     */
    leaveCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123342345
     */
    outerId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100
     */
    quotaNum?: number;
    /**
     * @example
     * 家中有事请假1天
     */
    reason?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    startTime?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReduceQuotaWithLeaveRecordResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReduceQuotaWithLeaveRecordResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ReduceQuotaWithLeaveRecordResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RetainLeaveTypesHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RetainLeaveTypesRequest extends $tea.Model {
    leaveCodes?: string[];
    /**
     * @example
     * manager233
     */
    opUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    source?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RetainLeaveTypesResponseBody extends $tea.Model {
    result?: RetainLeaveTypesResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RetainLeaveTypesResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: RetainLeaveTypesResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReverseTrialAdvancedLeaveHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReverseTrialAdvancedLeaveRequest extends $tea.Model {
    /**
     * @example
     * manager234
     */
    opUserId?: string;
    /**
     * @example
     * 1
     */
    servCode?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReverseTrialAdvancedLeaveResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReverseTrialAdvancedLeaveResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ReverseTrialAdvancedLeaveResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SalaryThirdDataIntegrationHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SalaryThirdDataIntegrationRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * atData
     */
    bizType?: string;
    items?: SalaryThirdDataIntegrationRequestItems[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SalaryThirdDataIntegrationResponseBody extends $tea.Model {
    result?: SalaryThirdDataIntegrationResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SalaryThirdDataIntegrationResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SalaryThirdDataIntegrationResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveCustomWaterMarkTemplateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveCustomWaterMarkTemplateRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * water_mark_checkin
     */
    bizCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * https://xx.xx.png
     */
    icon?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * industry_dx_xx
     */
    layoutDesignId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * water_mark_checkin_open
     */
    sceneCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * { \"items\":[ { \"componentName\":\"HiddenField\", \"props\":{ \"bizAlias\":\"enableModifyPlace\", \"id\":\"enableModifyPlace-undefined\", \"value\":\"true\" } }, { \"componentName\":\"HiddenField\", \"props\":{ \"bizAlias\":\"modifyPlaceDistance\", \"id\":\"modifyPlaceDistance-undefined\", \"value\":200 } }, { \"componentName\":\"HiddenField\", \"props\":{ \"bizAlias\":\"title\", \"id\":\"title-undefined\", \"value\":\"wofu1\" } }, { \"componentName\":\"HiddenField\", \"props\":{ \"bizAlias\":\"titleBgColor\", \"id\":\"titleBgColor-undefined\", \"value\":\"#0089FF\" } } ] }
     */
    schemaContent?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 标题
     */
    title?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1234567
     */
    openConversationId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manage123
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveCustomWaterMarkTemplateResponseBody extends $tea.Model {
    result?: SaveCustomWaterMarkTemplateResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveCustomWaterMarkTemplateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SaveCustomWaterMarkTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ShiftAddHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ShiftAddRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 白班
     */
    name?: string;
    /**
     * @example
     * user01
     */
    owner?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    sections?: ShiftAddRequestSections[];
    /**
     * @example
     * 123
     */
    serviceId?: number;
    setting?: ShiftAddRequestSetting;
    /**
     * @example
     * 1234
     */
    shiftId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * user01
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ShiftAddResponseBody extends $tea.Model {
    result?: ShiftAddResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ShiftAddResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ShiftAddResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncScheduleInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncScheduleInfoRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    opUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    scheduleInfos?: SyncScheduleInfoRequestScheduleInfos[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncScheduleInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateLeaveTypeHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateLeaveTypeRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * general_leave
     */
    bizType?: string;
    /**
     * @example
     * {"validity_type":"absolute_time","validity_value":"12-31"}
     */
    extras?: string;
    freedomLeave?: boolean;
    /**
     * @example
     * 1000
     */
    hoursInPerDay?: number;
    leaveCertificate?: UpdateLeaveTypeRequestLeaveCertificate;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 047477ae-1009-4632-b8e9-e919ae5e7973
     */
    leaveCode?: string;
    /**
     * @example
     * 年假
     */
    leaveName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * day
     */
    leaveViewUnit?: string;
    /**
     * @example
     * true
     */
    naturalDayLeave?: boolean;
    submitTimeRule?: UpdateLeaveTypeRequestSubmitTimeRule;
    visibilityRules?: UpdateLeaveTypeRequestVisibilityRules[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * user01
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateLeaveTypeResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: UpdateLeaveTypeResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateLeaveTypeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateLeaveTypeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ResultDurationSettingsValueSkipTimeByFrames extends $tea.Model {
    startTime?: string;
    endTime?: string;
    valid?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ResultDurationSettingsValueSkipTimeByDurations extends $tea.Model {
    duration?: number;
    minus?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddLeaveTypeRequestLeaveCertificate extends $tea.Model {
    /**
     * @example
     * 1
     */
    duration?: number;
    /**
     * @example
     * false
     */
    enable?: boolean;
    /**
     * @example
     * 请假文案
     */
    promptInformation?: string;
    /**
     * @example
     * hour
     */
    unit?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddLeaveTypeRequestSubmitTimeRule extends $tea.Model {
    /**
     * @example
     * true
     */
    enableTimeLimit?: boolean;
    /**
     * @example
     * before
     */
    timeType?: string;
    /**
     * @example
     * day
     */
    timeUnit?: string;
    /**
     * @example
     * 2
     */
    timeValue?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddLeaveTypeRequestVisibilityRules extends $tea.Model {
    /**
     * @example
     * staff
     */
    type?: string;
    visible?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddLeaveTypeResponseBodyResultLeaveCertificate extends $tea.Model {
    /**
     * @example
     * 1
     */
    duration?: number;
    /**
     * @example
     * false
     */
    enable?: boolean;
    /**
     * @example
     * 请假文案
     */
    promptInformation?: string;
    /**
     * @example
     * hour
     */
    unit?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddLeaveTypeResponseBodyResultSubmitTimeRule extends $tea.Model {
    /**
     * @example
     * false
     */
    enableTimeLimit?: boolean;
    /**
     * @example
     * before
     */
    timeType?: string;
    /**
     * @example
     * day
     */
    timeUnit?: string;
    /**
     * @example
     * 1
     */
    timeValue?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddLeaveTypeResponseBodyResultVisibilityRules extends $tea.Model {
    /**
     * @example
     * staff
     */
    type?: string;
    visible?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddLeaveTypeResponseBodyResult extends $tea.Model {
    /**
     * @example
     * general_leave
     */
    bizType?: string;
    /**
     * @example
     * 1000
     */
    hoursInPerDay?: number;
    leaveCertificate?: AddLeaveTypeResponseBodyResultLeaveCertificate;
    /**
     * @example
     * 037477ae-1009-4632-b8e9-e919ae5e7973
     */
    leaveCode?: string;
    /**
     * @example
     * 年假
     */
    leaveName?: string;
    /**
     * @example
     * day
     */
    leaveViewUnit?: string;
    /**
     * @example
     * true
     */
    naturalDayLeave?: boolean;
    submitTimeRule?: AddLeaveTypeResponseBodyResultSubmitTimeRule;
    visibilityRules?: AddLeaveTypeResponseBodyResultVisibilityRules[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AttendanceBleDevicesAddResponseBodyErrorListFailureList extends $tea.Model {
    /**
     * @example
     * 3244523553
     */
    deviceId?: number;
    /**
     * @example
     * 蓝牙设备1
     */
    deviceName?: string;
    /**
     * @example
     * dfsgdsdgd
     */
    sn?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AttendanceBleDevicesAddResponseBodyErrorList extends $tea.Model {
    /**
     * @example
     * 400001
     */
    code?: string;
    failureList?: AttendanceBleDevicesAddResponseBodyErrorListFailureList[];
    /**
     * @example
     * error
     */
    msg?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AttendanceBleDevicesAddResponseBodySuccessList extends $tea.Model {
    /**
     * @example
     * 6567575
     */
    deviceId?: number;
    /**
     * @example
     * 蓝牙设备2
     */
    deviceName?: string;
    /**
     * @example
     * xfdfsdfgsdgfs
     */
    sn?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AttendanceBleDevicesQueryResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 34666777
     */
    deviceId?: number;
    /**
     * @example
     * 蓝牙设备
     */
    deviceName?: string;
    /**
     * @example
     * 12321kllksdf
     */
    sn?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AttendanceBleDevicesRemoveResponseBodyErrorList extends $tea.Model {
    /**
     * @example
     * 400001
     */
    code?: string;
    failureList?: number[];
    /**
     * @example
     * error
     */
    msg?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchBossCheckRequestModels extends $tea.Model {
    /**
     * @example
     * 1
     */
    absentMin?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    planId?: number;
    remark?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * Normal
     */
    timeResult?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CalculateDurationResponseBodyResultDurationDetail extends $tea.Model {
    /**
     * @example
     * 2019-08-15
     */
    date?: string;
    /**
     * @example
     * 1.0
     */
    duration?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CalculateDurationResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2.0
     */
    duration?: number;
    durationDetail?: CalculateDurationResponseBodyResultDurationDetail[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckClosingAccountRequestUserTimeRange extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    endTime?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    startTime?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateApproveRequestPunchParam extends $tea.Model {
    /**
     * @example
     * 120.023425_30.291465
     */
    positionId?: string;
    /**
     * @example
     * 余杭区五常街道
     */
    positionName?: string;
    /**
     * @example
     * gps
     */
    positionType?: string;
    /**
     * @example
     * 1614222064000
     */
    punchTime?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DingTalkSecurityCheckResponseBodyResult extends $tea.Model {
    /**
     * @example
     * true
     */
    hasRisk?: boolean;
    /**
     * @example
     * {"riskTypeMinor":"bbbb""riskTypeMajor":"aaaa""riskTypeMsg":"ccc"}
     */
    riskInfo?: {
        [key: string]: string;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetATManageScopeResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * false
     */
    hasMore?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * partial
     */
    manageScope?: string;
    userIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAdjustmentsResponseBodyResultItems extends $tea.Model {
    /**
     * @example
     * 1
     */
    id?: number;
    name?: string;
    /**
     * @example
     * 1
     */
    settingId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAdjustmentsResponseBodyResult extends $tea.Model {
    items?: GetAdjustmentsResponseBodyResultItems[];
    /**
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @example
     * 1
     */
    totalPage?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCheckInSchemaTemplateResponseBodyResultWaterMarkTemplateModels extends $tea.Model {
    canModify?: boolean;
    /**
     * @example
     * PROC-292988B1-5064-4A42-9389-xxxxx
     */
    formCode?: string;
    /**
     * @example
     * https://xx.xx.png
     */
    icon?: string;
    /**
     * @example
     * {     \"widgetName\":\"dd_watermark_xxx_xxx\",     \"miniAppId\":\"50000xxx\",     \"templateRule\":{         \"maxItems\":6,         \"canEditColor\":true,         \"canEditTitle\":true,         \"items\":[          ]     },     \"layoutDesignId\":\"industry_xx_xx\",     \"width\":\"111\" }
     */
    layoutDesign?: string;
    /**
     * @example
     * water_mark_checkin_open
     */
    sceneCode?: string;
    /**
     * @example
     * {     \"items\":[         {             \"componentName\":\"HiddenField\",             \"props\":{                 \"bizAlias\":\"enableModifyPlace\",                 \"id\":\"enableModifyPlace-undefined\",                 \"value\":\"true\"             }         },         {             \"componentName\":\"HiddenField\",             \"props\":{                 \"bizAlias\":\"modifyPlaceDistance\",                 \"id\":\"modifyPlaceDistance-undefined\",                 \"value\":200             }         },         {             \"componentName\":\"HiddenField\",             \"props\":{                 \"bizAlias\":\"title\",                 \"id\":\"title-undefined\",                 \"value\":\"wofu1\"             }         },         {             \"componentName\":\"HiddenField\",             \"props\":{                 \"bizAlias\":\"titleBgColor\",                 \"id\":\"titleBgColor-undefined\",                 \"value\":\"#0089FF\"             }         }     ] }
     */
    schemaContent?: string;
    /**
     * @example
     * suiteKey
     */
    suiteKey?: string;
    systemTemplate?: boolean;
    /**
     * @example
     * 标题
     */
    title?: string;
    /**
     * @example
     * PROC-292988B1-5064-4A42-9389-xxxxx
     */
    waterMarkId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCheckInSchemaTemplateResponseBodyResult extends $tea.Model {
    /**
     * @example
     * water_mark_checkin
     */
    bizCode?: string;
    canModifyAndAddTemplate?: boolean;
    conversationAdmin?: boolean;
    customTemplateMaxSize?: number;
    /**
     * @example
     * 1234567
     */
    openConversationId?: string;
    showStat?: boolean;
    templateDegrade?: boolean;
    waterMarkTemplateModels?: GetCheckInSchemaTemplateResponseBodyResultWaterMarkTemplateModels[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCheckinRecordByUserResponseBodyResultPageListCustomDataList extends $tea.Model {
    key?: string;
    label?: string;
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCheckinRecordByUserResponseBodyResultPageList extends $tea.Model {
    checkinTime?: number;
    customDataList?: GetCheckinRecordByUserResponseBodyResultPageListCustomDataList[];
    detailPlace?: string;
    imageList?: string[];
    latitude?: string;
    longitude?: string;
    place?: string;
    remark?: string;
    userId?: string;
    visitUser?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCheckinRecordByUserResponseBodyResult extends $tea.Model {
    nextToken?: number;
    pageList?: GetCheckinRecordByUserResponseBodyResultPageList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetClassWithDeletedResponseBodyResultClassSettingRestTimeListBegin extends $tea.Model {
    /**
     * @example
     * 0
     */
    across?: number;
    /**
     * @example
     * 1970-01-01T12:00Z
     */
    checkTime?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetClassWithDeletedResponseBodyResultClassSettingRestTimeListEnd extends $tea.Model {
    /**
     * @example
     * 0
     */
    across?: number;
    /**
     * @example
     * 1970-01-01T13:00Z
     */
    checkTime?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetClassWithDeletedResponseBodyResultClassSettingRestTimeList extends $tea.Model {
    begin?: GetClassWithDeletedResponseBodyResultClassSettingRestTimeListBegin;
    end?: GetClassWithDeletedResponseBodyResultClassSettingRestTimeListEnd;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetClassWithDeletedResponseBodyResultClassSetting extends $tea.Model {
    /**
     * @example
     * 1
     */
    classSettingId?: number;
    restTimeList?: GetClassWithDeletedResponseBodyResultClassSettingRestTimeList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetClassWithDeletedResponseBodyResultSectionsTimes extends $tea.Model {
    /**
     * @example
     * 0
     */
    across?: number;
    /**
     * @example
     * 10
     */
    beginMin?: number;
    /**
     * @example
     * 1970-01-01T09:00Z
     */
    checkTime?: string;
    /**
     * @example
     * OnDuty
     */
    checkType?: string;
    /**
     * @example
     * 10
     */
    endMin?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetClassWithDeletedResponseBodyResultSections extends $tea.Model {
    times?: GetClassWithDeletedResponseBodyResultSectionsTimes[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetClassWithDeletedResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 1
     */
    classId?: number;
    classSetting?: GetClassWithDeletedResponseBodyResultClassSetting;
    /**
     * @example
     * ding1234
     */
    corpId?: string;
    /**
     * @example
     * 夜班
     */
    name?: string;
    sections?: GetClassWithDeletedResponseBodyResultSections[];
    workDays?: number[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetClosingAccountsResponseBodyResultClosingAccountModel extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    closingDay?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    closingHourMinutes?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    endDay?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    endMonth?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    startDay?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    startMonth?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetClosingAccountsResponseBodyResultUnsealClosingAccountModel extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    invalidTimeStamp?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetClosingAccountsResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    closingAccountModel?: GetClosingAccountsResponseBodyResultClosingAccountModel;
    /**
     * @remarks
     * This parameter is required.
     */
    switchOn?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    unsealClosingAccountModel?: GetClosingAccountsResponseBodyResultUnsealClosingAccountModel;
    /**
     * @remarks
     * This parameter is required.
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetColumnvalsResponseBodyResultColumnDataColumnValues extends $tea.Model {
    /**
     * @example
     * 1709222400000
     */
    date?: number;
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetColumnvalsResponseBodyResultColumnData extends $tea.Model {
    columnValues?: GetColumnvalsResponseBodyResultColumnDataColumnValues[];
    /**
     * @example
     * 0
     */
    fixedValue?: string;
    /**
     * @example
     * 129339038
     */
    id?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetColumnvalsResponseBodyResult extends $tea.Model {
    columnData?: GetColumnvalsResponseBodyResultColumnData[];
    /**
     * @example
     * manager123
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetLeaveRecordsResponseBodyResultLeaveRecords extends $tea.Model {
    /**
     * @example
     * add
     */
    calType?: string;
    /**
     * @example
     * 1753851001000
     */
    endTime?: number;
    /**
     * @example
     * 1653851001000
     */
    gmtCreate?: number;
    /**
     * @example
     * 1753851001000
     */
    gmtModified?: number;
    /**
     * @example
     * f84a2dxxxx
     */
    leaveCode?: string;
    /**
     * @example
     * 管理员导入
     */
    leaveReason?: string;
    /**
     * @example
     * update
     */
    leaveRecordType?: string;
    /**
     * @example
     * init
     */
    leaveStatus?: string;
    /**
     * @example
     * day
     */
    leaveViewUnit?: string;
    /**
     * @example
     * manage223
     */
    opUserId?: string;
    /**
     * @example
     * db1d74xxxxbaa
     */
    quotaId?: string;
    /**
     * @example
     * db1d74xxxxbaa
     */
    recordId?: string;
    /**
     * @example
     * 100
     */
    recordNumPerDay?: number;
    /**
     * @example
     * 100
     */
    recordNumPerHour?: number;
    /**
     * @example
     * 1653851001000
     */
    startTime?: number;
    /**
     * @example
     * user1
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetLeaveRecordsResponseBodyResult extends $tea.Model {
    hasMore?: boolean;
    leaveRecords?: GetLeaveRecordsResponseBodyResultLeaveRecords[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetLeaveTypeResponseBodyResultLeaveCertificate extends $tea.Model {
    /**
     * @example
     * 1
     */
    duration?: number;
    /**
     * @example
     * false
     */
    enable?: boolean;
    /**
     * @example
     * 请假文案
     */
    promptInformation?: string;
    /**
     * @example
     * hour
     */
    unit?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetLeaveTypeResponseBodyResultSubmitTimeRule extends $tea.Model {
    /**
     * @example
     * false
     */
    enableTimeLimit?: boolean;
    /**
     * @example
     * before
     */
    timeType?: string;
    /**
     * @example
     * day
     */
    timeUnit?: string;
    /**
     * @example
     * 1
     */
    timeValue?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetLeaveTypeResponseBodyResultVisibilityRules extends $tea.Model {
    /**
     * @example
     * staff
     */
    type?: string;
    visible?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetLeaveTypeResponseBodyResult extends $tea.Model {
    /**
     * @example
     * general_leave
     */
    bizType?: string;
    /**
     * @example
     * 1000
     */
    hoursInPerDay?: number;
    leaveCertificate?: GetLeaveTypeResponseBodyResultLeaveCertificate;
    /**
     * @example
     * 037477ae-1009-4632-b8e9-e919ae5e7973
     */
    leaveCode?: string;
    /**
     * @example
     * 年假
     */
    leaveName?: string;
    /**
     * @example
     * day
     */
    leaveViewUnit?: string;
    /**
     * @example
     * true
     */
    naturalDayLeave?: boolean;
    /**
     * @example
     * external
     */
    source?: string;
    submitTimeRule?: GetLeaveTypeResponseBodyResultSubmitTimeRule;
    /**
     * @example
     * absolute_time
     */
    validityType?: string;
    /**
     * @example
     * 12-31
     */
    validityValue?: string;
    visibilityRules?: GetLeaveTypeResponseBodyResultVisibilityRules[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMachineResponseBodyResultMachineBluetoothVO extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 绿城-未来park
     */
    address?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    bluetoothCheckWithFace?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * default
     */
    bluetoothDistanceMode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 默认 (最远5-10米)
     */
    bluetoothDistanceModeDesc?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    bluetoothValue?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 30.285871310763888
     */
    latitude?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    limitUserDeviceCount?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 120.01757758246528
     */
    longitude?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    monitorLocationAbnormal?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    userDeviceCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMachineResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    atmManagerList?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1406333705
     */
    devId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2078053438
     */
    deviceId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 泱云❄️的体00056
     */
    deviceName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0601IFW201001N000056
     */
    deviceSn?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    machineBluetoothVO?: GetMachineResponseBodyResultMachineBluetoothVO;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10000
     */
    maxFace?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 4
     */
    netStatus?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * M1F
     */
    productName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1.0.1-R-20200326.1543
     */
    productVersion?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2
     */
    voiceMode?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMachineUserResponseBodyResultUserList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    hasFace?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMachineUserResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    hasMore?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    nextToken?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    userList?: GetMachineUserResponseBodyResultUserList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOverdraftInfoResponseBodyOverdraftList extends $tea.Model {
    overdraft?: number;
    unit?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOvertimeSettingResponseBodyResultOvertimeDivisions extends $tea.Model {
    nextDayType?: string;
    previousDayType?: string;
    timeSplitPoint?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOvertimeSettingResponseBodyResultWarningSettings extends $tea.Model {
    action?: string;
    threshold?: number;
    time?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOvertimeSettingResponseBodyResult extends $tea.Model {
    default?: boolean;
    durationSettings?: {
        [key: string]: ResultDurationSettingsValue;
    };
    /**
     * @remarks
     * This parameter is required.
     */
    id?: number;
    name?: string;
    overtimeDivisions?: GetOvertimeSettingResponseBodyResultOvertimeDivisions[];
    settingId?: number;
    stepType?: number;
    stepValue?: number;
    warningSettings?: GetOvertimeSettingResponseBodyResultWarningSettings[];
    workMinutesPerDay?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShiftResponseBodyResultSectionsPunchesLateBackSettingLateBackPairs extends $tea.Model {
    extra?: number;
    late?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShiftResponseBodyResultSectionsPunchesLateBackSetting extends $tea.Model {
    lateBackPairs?: GetShiftResponseBodyResultSectionsPunchesLateBackSettingLateBackPairs[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShiftResponseBodyResultSectionsPunches extends $tea.Model {
    absenteeismLateMinutes?: number;
    /**
     * @example
     * 0
     */
    across?: number;
    beginMin?: number;
    /**
     * @remarks
     * Use the UTC time format: yyyy-MM-ddTHH:mmZ
     *
     * @example
     * 1970-01-01 19:00:00
     */
    checkTime?: string;
    /**
     * @example
     * OnDuty
     */
    checkType?: string;
    /**
     * @example
     * -1
     */
    endMin?: number;
    flexMinutes?: number[];
    freeCheck?: boolean;
    lateBackSetting?: GetShiftResponseBodyResultSectionsPunchesLateBackSetting;
    /**
     * @example
     * 0
     */
    permitMinutes?: number;
    /**
     * @example
     * 33928201
     */
    puncheId?: number;
    seriousLateMinutes?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShiftResponseBodyResultSectionsRests extends $tea.Model {
    across?: number;
    /**
     * @remarks
     * Use the UTC time format: yyyy-MM-ddTHH:mmZ
     */
    checkTime?: string;
    checkType?: string;
    restId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShiftResponseBodyResultSections extends $tea.Model {
    punches?: GetShiftResponseBodyResultSectionsPunches[];
    rests?: GetShiftResponseBodyResultSectionsRests[];
    sectionId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShiftResponseBodyResultShiftSetting extends $tea.Model {
    /**
     * @example
     * 12
     */
    attendDays?: string;
    /**
     * @example
     * dinge87f1xxxx
     */
    corpId?: string;
    /**
     * @remarks
     * Use the UTC time format: yyyy-MM-ddTHH:mmZ
     *
     * @example
     * 2020-09-06 15:49:27
     */
    gmtCreate?: string;
    /**
     * @remarks
     * Use the UTC time format: yyyy-MM-ddTHH:mmZ
     *
     * @example
     * 2020-09-06 15:49:27
     */
    gmtModified?: string;
    /**
     * @example
     * 678215070
     */
    shiftId?: number;
    /**
     * @example
     * 233840112
     */
    shiftSettingId?: number;
    /**
     * @example
     * NORMAL
     */
    shiftType?: string;
    /**
     * @example
     * 600
     */
    workTimeMinutes?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShiftResponseBodyResult extends $tea.Model {
    /**
     * @example
     * dinge87f1xxxx
     */
    corpId?: string;
    /**
     * @example
     * 678215070
     */
    id?: number;
    /**
     * @example
     * B
     */
    name?: string;
    /**
     * @example
     * user123
     */
    owner?: string;
    sections?: GetShiftResponseBodyResultSections[];
    shiftGroupId?: number;
    /**
     * @example
     * 考勤班
     */
    shiftGroupName?: string;
    shiftSetting?: GetShiftResponseBodyResultShiftSetting;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSimpleGroupsResponseBodyResultGroupsSelectedClassSectionsTimes extends $tea.Model {
    /**
     * @example
     * 0
     */
    across?: number;
    /**
     * @example
     * 1970-01-01T09:00Z
     */
    checkTime?: string;
    /**
     * @example
     * OnDuty
     */
    checkType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSimpleGroupsResponseBodyResultGroupsSelectedClassSections extends $tea.Model {
    times?: GetSimpleGroupsResponseBodyResultGroupsSelectedClassSectionsTimes[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSimpleGroupsResponseBodyResultGroupsSelectedClassSettingRestTimeListBegin extends $tea.Model {
    /**
     * @example
     * 0
     */
    across?: number;
    /**
     * @example
     * 1970-01-01T12:00Z
     */
    checkTime?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSimpleGroupsResponseBodyResultGroupsSelectedClassSettingRestTimeListEnd extends $tea.Model {
    /**
     * @example
     * 0
     */
    across?: number;
    /**
     * @example
     * 1970-01-01T13:00Z
     */
    checkTime?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSimpleGroupsResponseBodyResultGroupsSelectedClassSettingRestTimeList extends $tea.Model {
    begin?: GetSimpleGroupsResponseBodyResultGroupsSelectedClassSettingRestTimeListBegin;
    end?: GetSimpleGroupsResponseBodyResultGroupsSelectedClassSettingRestTimeListEnd;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSimpleGroupsResponseBodyResultGroupsSelectedClassSetting extends $tea.Model {
    /**
     * @example
     * 30
     */
    absenteeismLateMinutes?: number;
    /**
     * @example
     * 1
     */
    classSettingId?: number;
    /**
     * @example
     * Y
     */
    isOffDutyFreeCheck?: string;
    /**
     * @example
     * 10
     */
    permitLateMinutes?: number;
    restTimeList?: GetSimpleGroupsResponseBodyResultGroupsSelectedClassSettingRestTimeList[];
    /**
     * @example
     * 20
     */
    seriousLateMinutes?: number;
    /**
     * @example
     * -1
     */
    workTimeMinutes?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSimpleGroupsResponseBodyResultGroupsSelectedClass extends $tea.Model {
    /**
     * @example
     * 20008010
     */
    classId?: number;
    /**
     * @example
     * 早班
     */
    className?: string;
    sections?: GetSimpleGroupsResponseBodyResultGroupsSelectedClassSections[];
    setting?: GetSimpleGroupsResponseBodyResultGroupsSelectedClassSetting;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSimpleGroupsResponseBodyResultGroups extends $tea.Model {
    classesList?: string[];
    /**
     * @example
     * 111
     */
    defaultClassId?: number;
    deptIds?: number[];
    deptNameList?: string[];
    /**
     * @example
     * false
     */
    disableCheckWhenRest?: boolean;
    /**
     * @example
     * false
     */
    disableCheckWithoutSchedule?: boolean;
    /**
     * @example
     * false
     */
    enableEmpSelectClass?: boolean;
    /**
     * @example
     * 240
     */
    freeCheckDayStartMinOffset?: number;
    freecheckWorkDays?: number[];
    /**
     * @example
     * 20015047
     */
    groupId?: number;
    /**
     * @example
     * 固定排班
     */
    groupName?: string;
    /**
     * @example
     * false
     */
    isDefault?: boolean;
    /**
     * @example
     * 1,2
     */
    managerList?: string[];
    /**
     * @example
     * 1
     */
    memberCount?: number;
    /**
     * @example
     * 123
     */
    ownerUserId?: string;
    selectedClass?: GetSimpleGroupsResponseBodyResultGroupsSelectedClass[];
    /**
     * @example
     * FIXED
     */
    type?: string;
    userIds?: string[];
    workDayList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSimpleGroupsResponseBodyResult extends $tea.Model {
    /**
     * @example
     * []
     */
    groups?: GetSimpleGroupsResponseBodyResultGroups[];
    /**
     * @example
     * true
     */
    hasMore?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSimpleOvertimeSettingResponseBodyResultItems extends $tea.Model {
    /**
     * @example
     * 1
     */
    id?: number;
    name?: string;
    /**
     * @example
     * 1
     */
    settingId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSimpleOvertimeSettingResponseBodyResult extends $tea.Model {
    items?: GetSimpleOvertimeSettingResponseBodyResultItems[];
    /**
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @example
     * 1
     */
    totalPage?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserHolidaysResponseBodyResultHolidays extends $tea.Model {
    holidayName?: string;
    holidayType?: string;
    realWorkDate?: number;
    workDate?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserHolidaysResponseBodyResult extends $tea.Model {
    holidays?: GetUserHolidaysResponseBodyResultHolidays[];
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GroupAddRequestBleDeviceList extends $tea.Model {
    /**
     * @example
     * 1311089987
     */
    deviceId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GroupAddRequestFreeCheckSettingFreeCheckGap extends $tea.Model {
    /**
     * @example
     * 0
     */
    offOnCheckGapMinutes?: number;
    /**
     * @example
     * 0
     */
    onOffCheckGapMinutes?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GroupAddRequestFreeCheckSetting extends $tea.Model {
    delimitOffsetMinutesBetweenDays?: number;
    freeCheckGap?: GroupAddRequestFreeCheckSettingFreeCheckGap;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GroupAddRequestMembers extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * Attendance
     */
    role?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * StaffMember
     */
    type?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1212jfkd
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GroupAddRequestPositions extends $tea.Model {
    /**
     * @example
     * 生物科技产业园区经二路21号
     */
    address?: string;
    /**
     * @example
     * 36.687495
     */
    latitude?: string;
    /**
     * @example
     * 101.750329
     */
    longitude?: string;
    /**
     * @example
     * 500
     */
    offset?: number;
    /**
     * @example
     * 青藏高原自然博物馆
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GroupAddRequestShiftVOList extends $tea.Model {
    /**
     * @example
     * 123
     */
    shiftId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GroupAddRequestWifis extends $tea.Model {
    /**
     * @example
     * C0:E0:D0:E0:C0:0F
     */
    macAddr?: string;
    /**
     * @example
     * OFFICE-WiFi
     */
    ssid?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GroupAddResponseBodyResult extends $tea.Model {
    id?: number;
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GroupUpdateRequestFreeCheckSettingFreeCheckGap extends $tea.Model {
    /**
     * @example
     * 0
     */
    offOnCheckGapMinutes?: number;
    /**
     * @example
     * 0
     */
    onOffCheckGapMinutes?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GroupUpdateRequestFreeCheckSetting extends $tea.Model {
    delimitOffsetMinutesBetweenDays?: number;
    freeCheckGap?: GroupUpdateRequestFreeCheckSettingFreeCheckGap;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GroupUpdateRequestPositions extends $tea.Model {
    /**
     * @example
     * 生物科技产业园区经二路21号
     */
    address?: string;
    /**
     * @example
     * 36.687495
     */
    latitude?: string;
    /**
     * @example
     * 101.750329
     */
    longitude?: string;
    /**
     * @example
     * 500
     */
    offset?: number;
    /**
     * @example
     * 青藏高原自然博物馆
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GroupUpdateRequestShiftVOList extends $tea.Model {
    /**
     * @example
     * 123
     */
    shiftId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GroupUpdateResponseBodyResult extends $tea.Model {
    id?: number;
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitAndGetLeaveALlocationQuotasResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 1753851001000
     */
    endTime?: number;
    /**
     * @example
     * c00ced14-xxxxxd438748
     */
    leaveCode?: string;
    /**
     * @example
     * 2022
     */
    quotaCycle?: string;
    /**
     * @example
     * b13cc5b0--xxxx5b0
     */
    quotaId?: string;
    /**
     * @example
     * 700
     */
    quotaNumPerDay?: number;
    /**
     * @example
     * 800
     */
    quotaNumPerHour?: number;
    /**
     * @example
     * 1653851001000
     */
    startTime?: number;
    /**
     * @example
     * 200
     */
    usedNumPerDay?: number;
    /**
     * @example
     * 100
     */
    usedNumPerHour?: number;
    /**
     * @example
     * user1
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListApproveByUsersResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 4850378c0ee83
     */
    approveId?: string;
    /**
     * @example
     * 2023-03-15 AM
     */
    beginTime?: string;
    /**
     * @example
     * 1
     */
    bizType?: number;
    /**
     * @example
     * 1
     */
    calculateModel?: number;
    /**
     * @example
     * hour
     */
    durationUnit?: string;
    /**
     * @example
     * 2023-03-15 AM
     */
    endTime?: string;
    /**
     * @example
     * 年假
     */
    subType?: string;
    /**
     * @example
     * 请假
     */
    tagName?: string;
    /**
     * @example
     * user1
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ProcessApproveCreateRequestPunchParam extends $tea.Model {
    /**
     * @example
     * longitude_latitude
     */
    positionId?: string;
    /**
     * @example
     * 未来park
     */
    positionName?: string;
    /**
     * @example
     * gps
     */
    positionType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1650511474978
     */
    punchTime?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ProcessApproveCreateResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 3534654765756234
     */
    dingtalkApproveId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ProcessApproveFinishRequestTopCalculateApproveDurationParam extends $tea.Model {
    /**
     * @example
     * 3
     */
    bizType?: number;
    /**
     * @example
     * 1
     */
    calculateModel?: number;
    /**
     * @example
     * day
     */
    durationUnit?: string;
    /**
     * @example
     * 2019-08-15
     */
    fromTime?: string;
    /**
     * @example
     * 3afdsf-143dsadw3-ad23
     */
    leaveCode?: string;
    /**
     * @example
     * 2019-08-15
     */
    toTime?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ProcessApproveFinishResponseBodyResultDurationDetail extends $tea.Model {
    /**
     * @example
     * 2019-08-15
     */
    date?: string;
    /**
     * @example
     * 1.0
     */
    duration?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ProcessApproveFinishResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2.0
     */
    duration?: number;
    durationDetail?: ProcessApproveFinishResponseBodyResultDurationDetail[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RetainLeaveTypesResponseBodyResultLeaveCertificate extends $tea.Model {
    /**
     * @example
     * 2
     */
    duration?: number;
    enable?: boolean;
    /**
     * @example
     * leaveCertificate
     */
    promptInformation?: string;
    /**
     * @example
     * hour
     */
    unit?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RetainLeaveTypesResponseBodyResultSubmitTimeRule extends $tea.Model {
    enableTimeLimit?: boolean;
    /**
     * @example
     * after
     */
    timeType?: string;
    /**
     * @example
     * hour
     */
    timeUnit?: string;
    /**
     * @example
     * 10
     */
    timeValue?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RetainLeaveTypesResponseBodyResultVisibilityRules extends $tea.Model {
    /**
     * @example
     * dept
     */
    type?: string;
    visible?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RetainLeaveTypesResponseBodyResult extends $tea.Model {
    /**
     * @example
     * lieu_leave
     */
    bizType?: string;
    /**
     * @example
     * 8
     */
    hoursInPerDay?: number;
    leaveCertificate?: RetainLeaveTypesResponseBodyResultLeaveCertificate;
    /**
     * @example
     * 2e8b764e-7989-4b5d-ac64-xxxxx
     */
    leaveCode?: string;
    /**
     * @example
     * ""
     */
    leaveHourCeil?: string;
    /**
     * @example
     * 高级测试假期
     */
    leaveName?: string;
    leaveTimeCeil?: boolean;
    /**
     * @example
     * hour
     */
    leaveTimeCeilMinUnit?: string;
    /**
     * @example
     * hour
     */
    leaveViewUnit?: string;
    /**
     * @example
     * 30
     */
    lieuDelayNum?: number;
    /**
     * @example
     * day
     */
    lieuDelayUnit?: string;
    /**
     * @example
     * 24
     */
    maxLeaveTime?: number;
    /**
     * @example
     * 0.5
     */
    minLeaveHour?: number;
    naturalDayLeave?: boolean;
    paidLeave?: boolean;
    submitTimeRule?: RetainLeaveTypesResponseBodyResultSubmitTimeRule;
    visibilityRules?: RetainLeaveTypesResponseBodyResultVisibilityRules[];
    /**
     * @example
     * formal
     */
    whenCanLeave?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SalaryThirdDataIntegrationRequestItemsBizContents extends $tea.Model {
    /**
     * @example
     * 工作时长
     */
    key?: string;
    /**
     * @example
     * 9
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SalaryThirdDataIntegrationRequestItems extends $tea.Model {
    bizContents?: SalaryThirdDataIntegrationRequestItemsBizContents[];
    /**
     * @remarks
     * This parameter is required.
     */
    bizDate?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100001
     */
    bizId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * user001
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SalaryThirdDataIntegrationResponseBodyResult extends $tea.Model {
    reason?: {
        [key: string]: any;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveCustomWaterMarkTemplateResponseBodyResult extends $tea.Model {
    /**
     * @example
     * PROC-292988B1-5064-4A42-9389-A76B97xxxxx
     */
    formCode?: string;
    /**
     * @example
     * PROC-292988B1-5064-4A42-9389-A76B97xxxxx
     */
    waterMarkId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ShiftAddRequestSectionsTimes extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    across?: number;
    /**
     * @example
     * 30
     */
    beginMin?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1714298274613
     */
    checkTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * OnDuty
     */
    checkType?: string;
    /**
     * @example
     * -1
     */
    endMin?: number;
    flexMinutes?: number[];
    freeCheck?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ShiftAddRequestSections extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    times?: ShiftAddRequestSectionsTimes[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ShiftAddRequestSettingLateBackSettingSections extends $tea.Model {
    /**
     * @example
     * 120
     */
    extra?: number;
    /**
     * @example
     * 60
     */
    late?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ShiftAddRequestSettingLateBackSetting extends $tea.Model {
    enable?: boolean;
    sections?: ShiftAddRequestSettingLateBackSettingSections[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ShiftAddRequestSettingTopRestTimeList extends $tea.Model {
    /**
     * @example
     * 0
     */
    across?: number;
    /**
     * @example
     * 1714298002940
     */
    checkTime?: number;
    /**
     * @example
     * OnDuty
     */
    checkType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ShiftAddRequestSetting extends $tea.Model {
    /**
     * @example
     * 60
     */
    absenteeismLateMinutes?: number;
    /**
     * @example
     * 0.8
     */
    attendDays?: number;
    /**
     * @example
     * 480
     */
    demandWorkTimeMinutes?: number;
    enableOutsideLateBack?: boolean;
    extras?: {
        [key: string]: any;
    };
    isFlexible?: boolean;
    lateBackSetting?: ShiftAddRequestSettingLateBackSetting;
    /**
     * @example
     * 1234
     */
    referenceClassId?: number;
    /**
     * @example
     * 31
     */
    seriousLateMinutes?: number;
    /**
     * @example
     * NORMAL
     *
     * **if can be null:**
     * false
     */
    shiftType?: string;
    /**
     * @example
     * temp:schedule:isv
     */
    tags?: string;
    topRestTimeList?: ShiftAddRequestSettingTopRestTimeList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ShiftAddResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 白班
     */
    name?: string;
    /**
     * @example
     * 1111
     */
    shiftId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncScheduleInfoRequestScheduleInfos extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    planId?: number;
    positionKeys?: string[];
    retainAttendanceCheck?: boolean;
    wifiKeys?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateLeaveTypeRequestLeaveCertificate extends $tea.Model {
    /**
     * @example
     * 1
     */
    duration?: number;
    /**
     * @example
     * false
     */
    enable?: boolean;
    /**
     * @example
     * 请假文案
     */
    promptInformation?: string;
    /**
     * @example
     * hour
     */
    unit?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateLeaveTypeRequestSubmitTimeRule extends $tea.Model {
    /**
     * @example
     * true
     */
    enableTimeLimit?: boolean;
    /**
     * @example
     * before
     */
    timeType?: string;
    /**
     * @example
     * day
     */
    timeUnit?: string;
    /**
     * @example
     * 2
     */
    timeValue?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateLeaveTypeRequestVisibilityRules extends $tea.Model {
    /**
     * @example
     * staff
     */
    type?: string;
    visible?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateLeaveTypeResponseBodyResultLeaveCertificate extends $tea.Model {
    /**
     * @example
     * 1
     */
    duration?: number;
    /**
     * @example
     * false
     */
    enable?: boolean;
    /**
     * @example
     * 请假文案
     */
    promptInformation?: string;
    /**
     * @example
     * hour
     */
    unit?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateLeaveTypeResponseBodyResultSubmitTimeRule extends $tea.Model {
    /**
     * @example
     * false
     */
    enableTimeLimit?: boolean;
    /**
     * @example
     * before
     */
    timeType?: string;
    /**
     * @example
     * day
     */
    timeUnit?: string;
    /**
     * @example
     * 1
     */
    timeValue?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateLeaveTypeResponseBodyResultVisibilityRules extends $tea.Model {
    /**
     * @example
     * staff
     */
    type?: string;
    visible?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateLeaveTypeResponseBodyResult extends $tea.Model {
    /**
     * @example
     * general_leave
     */
    bizType?: string;
    freedomLeave?: boolean;
    /**
     * @example
     * 1000
     */
    hoursInPerDay?: number;
    leaveCertificate?: UpdateLeaveTypeResponseBodyResultLeaveCertificate;
    /**
     * @example
     * 037477ae-1009-4632-b8e9-e919ae5e7973
     */
    leaveCode?: string;
    /**
     * @example
     * 年假
     */
    leaveName?: string;
    /**
     * @example
     * day
     */
    leaveViewUnit?: string;
    /**
     * @example
     * true
     */
    naturalDayLeave?: boolean;
    submitTimeRule?: UpdateLeaveTypeResponseBodyResultSubmitTimeRule;
    visibilityRules?: UpdateLeaveTypeResponseBodyResultVisibilityRules[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 添加假期规则
     *
     * @param request - AddLeaveTypeRequest
     * @param headers - AddLeaveTypeHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddLeaveTypeResponse
     */
    addLeaveTypeWithOptions(request: AddLeaveTypeRequest, headers: AddLeaveTypeHeaders, runtime: $Util.RuntimeOptions): Promise<AddLeaveTypeResponse>;
    /**
     * 添加假期规则
     *
     * @param request - AddLeaveTypeRequest
     * @returns AddLeaveTypeResponse
     */
    addLeaveType(request: AddLeaveTypeRequest): Promise<AddLeaveTypeResponse>;
    /**
     * 批量给考勤组添加蓝牙设备
     *
     * @param request - AttendanceBleDevicesAddRequest
     * @param headers - AttendanceBleDevicesAddHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AttendanceBleDevicesAddResponse
     */
    attendanceBleDevicesAddWithOptions(request: AttendanceBleDevicesAddRequest, headers: AttendanceBleDevicesAddHeaders, runtime: $Util.RuntimeOptions): Promise<AttendanceBleDevicesAddResponse>;
    /**
     * 批量给考勤组添加蓝牙设备
     *
     * @param request - AttendanceBleDevicesAddRequest
     * @returns AttendanceBleDevicesAddResponse
     */
    attendanceBleDevicesAdd(request: AttendanceBleDevicesAddRequest): Promise<AttendanceBleDevicesAddResponse>;
    /**
     * 批量查询蓝牙设备
     *
     * @param request - AttendanceBleDevicesQueryRequest
     * @param headers - AttendanceBleDevicesQueryHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AttendanceBleDevicesQueryResponse
     */
    attendanceBleDevicesQueryWithOptions(request: AttendanceBleDevicesQueryRequest, headers: AttendanceBleDevicesQueryHeaders, runtime: $Util.RuntimeOptions): Promise<AttendanceBleDevicesQueryResponse>;
    /**
     * 批量查询蓝牙设备
     *
     * @param request - AttendanceBleDevicesQueryRequest
     * @returns AttendanceBleDevicesQueryResponse
     */
    attendanceBleDevicesQuery(request: AttendanceBleDevicesQueryRequest): Promise<AttendanceBleDevicesQueryResponse>;
    /**
     * 批量删除考勤组的蓝牙设备
     *
     * @param request - AttendanceBleDevicesRemoveRequest
     * @param headers - AttendanceBleDevicesRemoveHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AttendanceBleDevicesRemoveResponse
     */
    attendanceBleDevicesRemoveWithOptions(request: AttendanceBleDevicesRemoveRequest, headers: AttendanceBleDevicesRemoveHeaders, runtime: $Util.RuntimeOptions): Promise<AttendanceBleDevicesRemoveResponse>;
    /**
     * 批量删除考勤组的蓝牙设备
     *
     * @param request - AttendanceBleDevicesRemoveRequest
     * @returns AttendanceBleDevicesRemoveResponse
     */
    attendanceBleDevicesRemove(request: AttendanceBleDevicesRemoveRequest): Promise<AttendanceBleDevicesRemoveResponse>;
    /**
     * 批量修改考勤结果
     *
     * @param request - BatchBossCheckRequest
     * @param headers - BatchBossCheckHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BatchBossCheckResponse
     */
    batchBossCheckWithOptions(request: BatchBossCheckRequest, headers: BatchBossCheckHeaders, runtime: $Util.RuntimeOptions): Promise<BatchBossCheckResponse>;
    /**
     * 批量修改考勤结果
     *
     * @param request - BatchBossCheckRequest
     * @returns BatchBossCheckResponse
     */
    batchBossCheck(request: BatchBossCheckRequest): Promise<BatchBossCheckResponse>;
    /**
     * 预计算时长
     *
     * @param request - CalculateDurationRequest
     * @param headers - CalculateDurationHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CalculateDurationResponse
     */
    calculateDurationWithOptions(request: CalculateDurationRequest, headers: CalculateDurationHeaders, runtime: $Util.RuntimeOptions): Promise<CalculateDurationResponse>;
    /**
     * 预计算时长
     *
     * @param request - CalculateDurationRequest
     * @returns CalculateDurationResponse
     */
    calculateDuration(request: CalculateDurationRequest): Promise<CalculateDurationResponse>;
    /**
     * 针对某些员工某段时间内封账状态的查询
     *
     * @param request - CheckClosingAccountRequest
     * @param headers - CheckClosingAccountHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CheckClosingAccountResponse
     */
    checkClosingAccountWithOptions(request: CheckClosingAccountRequest, headers: CheckClosingAccountHeaders, runtime: $Util.RuntimeOptions): Promise<CheckClosingAccountResponse>;
    /**
     * 针对某些员工某段时间内封账状态的查询
     *
     * @param request - CheckClosingAccountRequest
     * @returns CheckClosingAccountResponse
     */
    checkClosingAccount(request: CheckClosingAccountRequest): Promise<CheckClosingAccountResponse>;
    /**
     * 考勤资源的写权限查询
     *
     * @param request - CheckWritePermissionRequest
     * @param headers - CheckWritePermissionHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CheckWritePermissionResponse
     */
    checkWritePermissionWithOptions(request: CheckWritePermissionRequest, headers: CheckWritePermissionHeaders, runtime: $Util.RuntimeOptions): Promise<CheckWritePermissionResponse>;
    /**
     * 考勤资源的写权限查询
     *
     * @param request - CheckWritePermissionRequest
     * @returns CheckWritePermissionResponse
     */
    checkWritePermission(request: CheckWritePermissionRequest): Promise<CheckWritePermissionResponse>;
    /**
     * 创建考勤打卡审批单
     *
     * @param request - CreateApproveRequest
     * @param headers - CreateApproveHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateApproveResponse
     */
    createApproveWithOptions(request: CreateApproveRequest, headers: CreateApproveHeaders, runtime: $Util.RuntimeOptions): Promise<CreateApproveResponse>;
    /**
     * 创建考勤打卡审批单
     *
     * @param request - CreateApproveRequest
     * @returns CreateApproveResponse
     */
    createApprove(request: CreateApproveRequest): Promise<CreateApproveResponse>;
    /**
     * 撤销请假
     *
     * @param request - DeleteLeaveRequestRequest
     * @param headers - DeleteLeaveRequestHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteLeaveRequestResponse
     */
    deleteLeaveRequestWithOptions(unionId: string, request: DeleteLeaveRequestRequest, headers: DeleteLeaveRequestHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteLeaveRequestResponse>;
    /**
     * 撤销请假
     *
     * @param request - DeleteLeaveRequestRequest
     * @returns DeleteLeaveRequestResponse
     */
    deleteLeaveRequest(unionId: string, request: DeleteLeaveRequestRequest): Promise<DeleteLeaveRequestResponse>;
    /**
     * 删除水印模板
     *
     * @param request - DeleteWaterMarkTemplateRequest
     * @param headers - DeleteWaterMarkTemplateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteWaterMarkTemplateResponse
     */
    deleteWaterMarkTemplateWithOptions(request: DeleteWaterMarkTemplateRequest, headers: DeleteWaterMarkTemplateHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteWaterMarkTemplateResponse>;
    /**
     * 删除水印模板
     *
     * @param request - DeleteWaterMarkTemplateRequest
     * @returns DeleteWaterMarkTemplateResponse
     */
    deleteWaterMarkTemplate(request: DeleteWaterMarkTemplateRequest): Promise<DeleteWaterMarkTemplateResponse>;
    /**
     * 钉钉安全检查
     *
     * @param request - DingTalkSecurityCheckRequest
     * @param headers - DingTalkSecurityCheckHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DingTalkSecurityCheckResponse
     */
    dingTalkSecurityCheckWithOptions(request: DingTalkSecurityCheckRequest, headers: DingTalkSecurityCheckHeaders, runtime: $Util.RuntimeOptions): Promise<DingTalkSecurityCheckResponse>;
    /**
     * 钉钉安全检查
     *
     * @param request - DingTalkSecurityCheckRequest
     * @returns DingTalkSecurityCheckResponse
     */
    dingTalkSecurityCheck(request: DingTalkSecurityCheckRequest): Promise<DingTalkSecurityCheckResponse>;
    /**
     * 查询管理员管理范围下的userid
     *
     * @param request - GetATManageScopeRequest
     * @param headers - GetATManageScopeHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetATManageScopeResponse
     */
    getATManageScopeWithOptions(request: GetATManageScopeRequest, headers: GetATManageScopeHeaders, runtime: $Util.RuntimeOptions): Promise<GetATManageScopeResponse>;
    /**
     * 查询管理员管理范围下的userid
     *
     * @param request - GetATManageScopeRequest
     * @returns GetATManageScopeResponse
     */
    getATManageScope(request: GetATManageScopeRequest): Promise<GetATManageScopeResponse>;
    /**
     * 获取补卡规则列表
     *
     * @param request - GetAdjustmentsRequest
     * @param headers - GetAdjustmentsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetAdjustmentsResponse
     */
    getAdjustmentsWithOptions(request: GetAdjustmentsRequest, headers: GetAdjustmentsHeaders, runtime: $Util.RuntimeOptions): Promise<GetAdjustmentsResponse>;
    /**
     * 获取补卡规则列表
     *
     * @param request - GetAdjustmentsRequest
     * @returns GetAdjustmentsResponse
     */
    getAdjustments(request: GetAdjustmentsRequest): Promise<GetAdjustmentsResponse>;
    /**
     * 获取水印打卡模板
     *
     * @param request - GetCheckInSchemaTemplateRequest
     * @param headers - GetCheckInSchemaTemplateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetCheckInSchemaTemplateResponse
     */
    getCheckInSchemaTemplateWithOptions(request: GetCheckInSchemaTemplateRequest, headers: GetCheckInSchemaTemplateHeaders, runtime: $Util.RuntimeOptions): Promise<GetCheckInSchemaTemplateResponse>;
    /**
     * 获取水印打卡模板
     *
     * @param request - GetCheckInSchemaTemplateRequest
     * @returns GetCheckInSchemaTemplateResponse
     */
    getCheckInSchemaTemplate(request: GetCheckInSchemaTemplateRequest): Promise<GetCheckInSchemaTemplateResponse>;
    /**
     * 调用本接口，获取用户签到记录。
     *
     * @param request - GetCheckinRecordByUserRequest
     * @param headers - GetCheckinRecordByUserHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetCheckinRecordByUserResponse
     */
    getCheckinRecordByUserWithOptions(request: GetCheckinRecordByUserRequest, headers: GetCheckinRecordByUserHeaders, runtime: $Util.RuntimeOptions): Promise<GetCheckinRecordByUserResponse>;
    /**
     * 调用本接口，获取用户签到记录。
     *
     * @param request - GetCheckinRecordByUserRequest
     * @returns GetCheckinRecordByUserResponse
     */
    getCheckinRecordByUser(request: GetCheckinRecordByUserRequest): Promise<GetCheckinRecordByUserResponse>;
    /**
     * 班次查询（包含已删除班次）
     *
     * @param headers - GetClassWithDeletedHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetClassWithDeletedResponse
     */
    getClassWithDeletedWithOptions(classId: string, headers: GetClassWithDeletedHeaders, runtime: $Util.RuntimeOptions): Promise<GetClassWithDeletedResponse>;
    /**
     * 班次查询（包含已删除班次）
     * @returns GetClassWithDeletedResponse
     */
    getClassWithDeleted(classId: string): Promise<GetClassWithDeletedResponse>;
    /**
     * 查询指定用户的封账规则
     *
     * @param request - GetClosingAccountsRequest
     * @param headers - GetClosingAccountsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetClosingAccountsResponse
     */
    getClosingAccountsWithOptions(request: GetClosingAccountsRequest, headers: GetClosingAccountsHeaders, runtime: $Util.RuntimeOptions): Promise<GetClosingAccountsResponse>;
    /**
     * 查询指定用户的封账规则
     *
     * @param request - GetClosingAccountsRequest
     * @returns GetClosingAccountsResponse
     */
    getClosingAccounts(request: GetClosingAccountsRequest): Promise<GetClosingAccountsResponse>;
    /**
     * 获取多个用户的智能考勤报表的列值
     *
     * @param request - GetColumnvalsRequest
     * @param headers - GetColumnvalsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetColumnvalsResponse
     */
    getColumnvalsWithOptions(request: GetColumnvalsRequest, headers: GetColumnvalsHeaders, runtime: $Util.RuntimeOptions): Promise<GetColumnvalsResponse>;
    /**
     * 获取多个用户的智能考勤报表的列值
     *
     * @param request - GetColumnvalsRequest
     * @returns GetColumnvalsResponse
     */
    getColumnvals(request: GetColumnvalsRequest): Promise<GetColumnvalsResponse>;
    /**
     * 批量查询员工假期余额变更记录
     *
     * @param request - GetLeaveRecordsRequest
     * @param headers - GetLeaveRecordsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetLeaveRecordsResponse
     */
    getLeaveRecordsWithOptions(request: GetLeaveRecordsRequest, headers: GetLeaveRecordsHeaders, runtime: $Util.RuntimeOptions): Promise<GetLeaveRecordsResponse>;
    /**
     * 批量查询员工假期余额变更记录
     *
     * @param request - GetLeaveRecordsRequest
     * @returns GetLeaveRecordsResponse
     */
    getLeaveRecords(request: GetLeaveRecordsRequest): Promise<GetLeaveRecordsResponse>;
    /**
     * 查询假期规则列表
     *
     * @param request - GetLeaveTypeRequest
     * @param headers - GetLeaveTypeHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetLeaveTypeResponse
     */
    getLeaveTypeWithOptions(request: GetLeaveTypeRequest, headers: GetLeaveTypeHeaders, runtime: $Util.RuntimeOptions): Promise<GetLeaveTypeResponse>;
    /**
     * 查询假期规则列表
     *
     * @param request - GetLeaveTypeRequest
     * @returns GetLeaveTypeResponse
     */
    getLeaveType(request: GetLeaveTypeRequest): Promise<GetLeaveTypeResponse>;
    /**
     * 根据设备id获取考勤机信息
     *
     * @param headers - GetMachineHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetMachineResponse
     */
    getMachineWithOptions(devId: string, headers: GetMachineHeaders, runtime: $Util.RuntimeOptions): Promise<GetMachineResponse>;
    /**
     * 根据设备id获取考勤机信息
     * @returns GetMachineResponse
     */
    getMachine(devId: string): Promise<GetMachineResponse>;
    /**
     * 根据设备id获取员工信息
     *
     * @param request - GetMachineUserRequest
     * @param headers - GetMachineUserHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetMachineUserResponse
     */
    getMachineUserWithOptions(devId: string, request: GetMachineUserRequest, headers: GetMachineUserHeaders, runtime: $Util.RuntimeOptions): Promise<GetMachineUserResponse>;
    /**
     * 根据设备id获取员工信息
     *
     * @param request - GetMachineUserRequest
     * @returns GetMachineUserResponse
     */
    getMachineUser(devId: string, request: GetMachineUserRequest): Promise<GetMachineUserResponse>;
    /**
     * 假期透支信息查询
     *
     * @param request - GetOverdraftInfoRequest
     * @param headers - GetOverdraftInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetOverdraftInfoResponse
     */
    getOverdraftInfoWithOptions(request: GetOverdraftInfoRequest, headers: GetOverdraftInfoHeaders, runtime: $Util.RuntimeOptions): Promise<GetOverdraftInfoResponse>;
    /**
     * 假期透支信息查询
     *
     * @param request - GetOverdraftInfoRequest
     * @returns GetOverdraftInfoResponse
     */
    getOverdraftInfo(request: GetOverdraftInfoRequest): Promise<GetOverdraftInfoResponse>;
    /**
     * 批量获取加班规则设置
     *
     * @param request - GetOvertimeSettingRequest
     * @param headers - GetOvertimeSettingHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetOvertimeSettingResponse
     */
    getOvertimeSettingWithOptions(request: GetOvertimeSettingRequest, headers: GetOvertimeSettingHeaders, runtime: $Util.RuntimeOptions): Promise<GetOvertimeSettingResponse>;
    /**
     * 批量获取加班规则设置
     *
     * @param request - GetOvertimeSettingRequest
     * @returns GetOvertimeSettingResponse
     */
    getOvertimeSetting(request: GetOvertimeSettingRequest): Promise<GetOvertimeSettingResponse>;
    /**
     * 班次详情
     *
     * @param request - GetShiftRequest
     * @param headers - GetShiftHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetShiftResponse
     */
    getShiftWithOptions(request: GetShiftRequest, headers: GetShiftHeaders, runtime: $Util.RuntimeOptions): Promise<GetShiftResponse>;
    /**
     * 班次详情
     *
     * @param request - GetShiftRequest
     * @returns GetShiftResponse
     */
    getShift(request: GetShiftRequest): Promise<GetShiftResponse>;
    /**
     * 获取考勤组列表详情
     *
     * @param request - GetSimpleGroupsRequest
     * @param headers - GetSimpleGroupsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetSimpleGroupsResponse
     */
    getSimpleGroupsWithOptions(request: GetSimpleGroupsRequest, headers: GetSimpleGroupsHeaders, runtime: $Util.RuntimeOptions): Promise<GetSimpleGroupsResponse>;
    /**
     * 获取考勤组列表详情
     *
     * @param request - GetSimpleGroupsRequest
     * @returns GetSimpleGroupsResponse
     */
    getSimpleGroups(request: GetSimpleGroupsRequest): Promise<GetSimpleGroupsResponse>;
    /**
     * 加班规则列表
     *
     * @param request - GetSimpleOvertimeSettingRequest
     * @param headers - GetSimpleOvertimeSettingHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetSimpleOvertimeSettingResponse
     */
    getSimpleOvertimeSettingWithOptions(request: GetSimpleOvertimeSettingRequest, headers: GetSimpleOvertimeSettingHeaders, runtime: $Util.RuntimeOptions): Promise<GetSimpleOvertimeSettingResponse>;
    /**
     * 加班规则列表
     *
     * @param request - GetSimpleOvertimeSettingRequest
     * @returns GetSimpleOvertimeSettingResponse
     */
    getSimpleOvertimeSetting(request: GetSimpleOvertimeSettingRequest): Promise<GetSimpleOvertimeSettingResponse>;
    /**
     * 查询员工某段时间的假期
     *
     * @param request - GetUserHolidaysRequest
     * @param headers - GetUserHolidaysHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetUserHolidaysResponse
     */
    getUserHolidaysWithOptions(request: GetUserHolidaysRequest, headers: GetUserHolidaysHeaders, runtime: $Util.RuntimeOptions): Promise<GetUserHolidaysResponse>;
    /**
     * 查询员工某段时间的假期
     *
     * @param request - GetUserHolidaysRequest
     * @returns GetUserHolidaysResponse
     */
    getUserHolidays(request: GetUserHolidaysRequest): Promise<GetUserHolidaysResponse>;
    /**
     * 创建考勤组
     *
     * @param request - GroupAddRequest
     * @param headers - GroupAddHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GroupAddResponse
     */
    groupAddWithOptions(request: GroupAddRequest, headers: GroupAddHeaders, runtime: $Util.RuntimeOptions): Promise<GroupAddResponse>;
    /**
     * 创建考勤组
     *
     * @param request - GroupAddRequest
     * @returns GroupAddResponse
     */
    groupAdd(request: GroupAddRequest): Promise<GroupAddResponse>;
    /**
     * 修改考勤组
     *
     * @param request - GroupUpdateRequest
     * @param headers - GroupUpdateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GroupUpdateResponse
     */
    groupUpdateWithOptions(request: GroupUpdateRequest, headers: GroupUpdateHeaders, runtime: $Util.RuntimeOptions): Promise<GroupUpdateResponse>;
    /**
     * 修改考勤组
     *
     * @param request - GroupUpdateRequest
     * @returns GroupUpdateResponse
     */
    groupUpdate(request: GroupUpdateRequest): Promise<GroupUpdateResponse>;
    /**
     * 生态系统假期初始化查询余额接口
     *
     * @param request - InitAndGetLeaveALlocationQuotasRequest
     * @param headers - InitAndGetLeaveALlocationQuotasHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns InitAndGetLeaveALlocationQuotasResponse
     */
    initAndGetLeaveALlocationQuotasWithOptions(request: InitAndGetLeaveALlocationQuotasRequest, headers: InitAndGetLeaveALlocationQuotasHeaders, runtime: $Util.RuntimeOptions): Promise<InitAndGetLeaveALlocationQuotasResponse>;
    /**
     * 生态系统假期初始化查询余额接口
     *
     * @param request - InitAndGetLeaveALlocationQuotasRequest
     * @returns InitAndGetLeaveALlocationQuotasResponse
     */
    initAndGetLeaveALlocationQuotas(request: InitAndGetLeaveALlocationQuotasRequest): Promise<InitAndGetLeaveALlocationQuotasResponse>;
    /**
     * 获取用户某段时间内同步到考勤的审批单信息
     *
     * @param request - ListApproveByUsersRequest
     * @param headers - ListApproveByUsersHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListApproveByUsersResponse
     */
    listApproveByUsersWithOptions(request: ListApproveByUsersRequest, headers: ListApproveByUsersHeaders, runtime: $Util.RuntimeOptions): Promise<ListApproveByUsersResponse>;
    /**
     * 获取用户某段时间内同步到考勤的审批单信息
     *
     * @param request - ListApproveByUsersRequest
     * @returns ListApproveByUsersResponse
     */
    listApproveByUsers(request: ListApproveByUsersRequest): Promise<ListApproveByUsersResponse>;
    /**
     * 修改水印模板
     *
     * @param request - ModifyWaterMarkTemplateRequest
     * @param headers - ModifyWaterMarkTemplateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ModifyWaterMarkTemplateResponse
     */
    modifyWaterMarkTemplateWithOptions(request: ModifyWaterMarkTemplateRequest, headers: ModifyWaterMarkTemplateHeaders, runtime: $Util.RuntimeOptions): Promise<ModifyWaterMarkTemplateResponse>;
    /**
     * 修改水印模板
     *
     * @param request - ModifyWaterMarkTemplateRequest
     * @returns ModifyWaterMarkTemplateResponse
     */
    modifyWaterMarkTemplate(request: ModifyWaterMarkTemplateRequest): Promise<ModifyWaterMarkTemplateResponse>;
    /**
     * 创建考勤打卡审批单
     *
     * @param request - ProcessApproveCreateRequest
     * @param headers - ProcessApproveCreateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ProcessApproveCreateResponse
     */
    processApproveCreateWithOptions(request: ProcessApproveCreateRequest, headers: ProcessApproveCreateHeaders, runtime: $Util.RuntimeOptions): Promise<ProcessApproveCreateResponse>;
    /**
     * 创建考勤打卡审批单
     *
     * @param request - ProcessApproveCreateRequest
     * @returns ProcessApproveCreateResponse
     */
    processApproveCreate(request: ProcessApproveCreateRequest): Promise<ProcessApproveCreateResponse>;
    /**
     * 通知审批通过
     *
     * @param request - ProcessApproveFinishRequest
     * @param headers - ProcessApproveFinishHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ProcessApproveFinishResponse
     */
    processApproveFinishWithOptions(request: ProcessApproveFinishRequest, headers: ProcessApproveFinishHeaders, runtime: $Util.RuntimeOptions): Promise<ProcessApproveFinishResponse>;
    /**
     * 通知审批通过
     *
     * @param request - ProcessApproveFinishRequest
     * @returns ProcessApproveFinishResponse
     */
    processApproveFinish(request: ProcessApproveFinishRequest): Promise<ProcessApproveFinishResponse>;
    /**
     * 扣减员工假期余额
     *
     * @param request - ReduceQuotaWithLeaveRecordRequest
     * @param headers - ReduceQuotaWithLeaveRecordHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ReduceQuotaWithLeaveRecordResponse
     */
    reduceQuotaWithLeaveRecordWithOptions(unionId: string, request: ReduceQuotaWithLeaveRecordRequest, headers: ReduceQuotaWithLeaveRecordHeaders, runtime: $Util.RuntimeOptions): Promise<ReduceQuotaWithLeaveRecordResponse>;
    /**
     * 扣减员工假期余额
     *
     * @param request - ReduceQuotaWithLeaveRecordRequest
     * @returns ReduceQuotaWithLeaveRecordResponse
     */
    reduceQuotaWithLeaveRecord(unionId: string, request: ReduceQuotaWithLeaveRecordRequest): Promise<ReduceQuotaWithLeaveRecordResponse>;
    /**
     * 修改假期规则来源
     *
     * @param request - RetainLeaveTypesRequest
     * @param headers - RetainLeaveTypesHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns RetainLeaveTypesResponse
     */
    retainLeaveTypesWithOptions(request: RetainLeaveTypesRequest, headers: RetainLeaveTypesHeaders, runtime: $Util.RuntimeOptions): Promise<RetainLeaveTypesResponse>;
    /**
     * 修改假期规则来源
     *
     * @param request - RetainLeaveTypesRequest
     * @returns RetainLeaveTypesResponse
     */
    retainLeaveTypes(request: RetainLeaveTypesRequest): Promise<RetainLeaveTypesResponse>;
    /**
     * 提供给高级假期的试用订单回退
     *
     * @param request - ReverseTrialAdvancedLeaveRequest
     * @param headers - ReverseTrialAdvancedLeaveHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ReverseTrialAdvancedLeaveResponse
     */
    reverseTrialAdvancedLeaveWithOptions(request: ReverseTrialAdvancedLeaveRequest, headers: ReverseTrialAdvancedLeaveHeaders, runtime: $Util.RuntimeOptions): Promise<ReverseTrialAdvancedLeaveResponse>;
    /**
     * 提供给高级假期的试用订单回退
     *
     * @param request - ReverseTrialAdvancedLeaveRequest
     * @returns ReverseTrialAdvancedLeaveResponse
     */
    reverseTrialAdvancedLeave(request: ReverseTrialAdvancedLeaveRequest): Promise<ReverseTrialAdvancedLeaveResponse>;
    /**
     * 薪酬三方数据写入
     *
     * @param request - SalaryThirdDataIntegrationRequest
     * @param headers - SalaryThirdDataIntegrationHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SalaryThirdDataIntegrationResponse
     */
    salaryThirdDataIntegrationWithOptions(request: SalaryThirdDataIntegrationRequest, headers: SalaryThirdDataIntegrationHeaders, runtime: $Util.RuntimeOptions): Promise<SalaryThirdDataIntegrationResponse>;
    /**
     * 薪酬三方数据写入
     *
     * @param request - SalaryThirdDataIntegrationRequest
     * @returns SalaryThirdDataIntegrationResponse
     */
    salaryThirdDataIntegration(request: SalaryThirdDataIntegrationRequest): Promise<SalaryThirdDataIntegrationResponse>;
    /**
     * 新增水印签到模板
     *
     * @param request - SaveCustomWaterMarkTemplateRequest
     * @param headers - SaveCustomWaterMarkTemplateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SaveCustomWaterMarkTemplateResponse
     */
    saveCustomWaterMarkTemplateWithOptions(request: SaveCustomWaterMarkTemplateRequest, headers: SaveCustomWaterMarkTemplateHeaders, runtime: $Util.RuntimeOptions): Promise<SaveCustomWaterMarkTemplateResponse>;
    /**
     * 新增水印签到模板
     *
     * @param request - SaveCustomWaterMarkTemplateRequest
     * @returns SaveCustomWaterMarkTemplateResponse
     */
    saveCustomWaterMarkTemplate(request: SaveCustomWaterMarkTemplateRequest): Promise<SaveCustomWaterMarkTemplateResponse>;
    /**
     * 创建班次
     *
     * @param request - ShiftAddRequest
     * @param headers - ShiftAddHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ShiftAddResponse
     */
    shiftAddWithOptions(request: ShiftAddRequest, headers: ShiftAddHeaders, runtime: $Util.RuntimeOptions): Promise<ShiftAddResponse>;
    /**
     * 创建班次
     *
     * @param request - ShiftAddRequest
     * @returns ShiftAddResponse
     */
    shiftAdd(request: ShiftAddRequest): Promise<ShiftAddResponse>;
    /**
     * 用于考勤排班附加信息，例如打卡位置，打卡wifi等
     *
     * @param request - SyncScheduleInfoRequest
     * @param headers - SyncScheduleInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SyncScheduleInfoResponse
     */
    syncScheduleInfoWithOptions(request: SyncScheduleInfoRequest, headers: SyncScheduleInfoHeaders, runtime: $Util.RuntimeOptions): Promise<SyncScheduleInfoResponse>;
    /**
     * 用于考勤排班附加信息，例如打卡位置，打卡wifi等
     *
     * @param request - SyncScheduleInfoRequest
     * @returns SyncScheduleInfoResponse
     */
    syncScheduleInfo(request: SyncScheduleInfoRequest): Promise<SyncScheduleInfoResponse>;
    /**
     * 更新假期规则
     *
     * @param request - UpdateLeaveTypeRequest
     * @param headers - UpdateLeaveTypeHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateLeaveTypeResponse
     */
    updateLeaveTypeWithOptions(request: UpdateLeaveTypeRequest, headers: UpdateLeaveTypeHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateLeaveTypeResponse>;
    /**
     * 更新假期规则
     *
     * @param request - UpdateLeaveTypeRequest
     * @returns UpdateLeaveTypeResponse
     */
    updateLeaveType(request: UpdateLeaveTypeRequest): Promise<UpdateLeaveTypeResponse>;
}
