/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class BankGatewayInvokeHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BankGatewayInvokeRequest extends $tea.Model {
    /**
     * @example
     * bankHttp
     */
    actionType?: string;
    inputData?: string;
    /**
     * @example
     * https://cdc.cmbchina.com/cdcserver/api/v2
     */
    url?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BankGatewayInvokeResponseBody extends $tea.Model {
    outputData?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BankGatewayInvokeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BankGatewayInvokeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchDeleteReceiptHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchDeleteReceiptRequest extends $tea.Model {
    instanceIdList?: string[];
    /**
     * @example
     * 504XX
     */
    operator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchDeleteReceiptResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchDeleteReceiptResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchDeleteReceiptResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryOrgInvoiceUrlHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryOrgInvoiceUrlRequest extends $tea.Model {
    companyCode?: string;
    invoiceKeyVOList?: BatchQueryOrgInvoiceUrlRequestInvoiceKeyVOList[];
    operator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryOrgInvoiceUrlResponseBody extends $tea.Model {
    failInvoiceList?: BatchQueryOrgInvoiceUrlResponseBodyFailInvoiceList[];
    orgInvoiceUrlList?: BatchQueryOrgInvoiceUrlResponseBodyOrgInvoiceUrlList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryOrgInvoiceUrlResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchQueryOrgInvoiceUrlResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryPaymentRecallFileHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryPaymentRecallFileRequest extends $tea.Model {
    detailIdList?: string[];
    operator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryPaymentRecallFileResponseBody extends $tea.Model {
    paymentRecallFileList?: BatchQueryPaymentRecallFileResponseBodyPaymentRecallFileList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryPaymentRecallFileResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchQueryPaymentRecallFileResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchSyncBankReceiptHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchSyncBankReceiptRequest extends $tea.Model {
    body?: BatchSyncBankReceiptRequestBody[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchSyncBankReceiptResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchSyncBankReceiptResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchSyncBankReceiptResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckVoucherStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckVoucherStatusRequest extends $tea.Model {
    /**
     * @example
     * COM_DEFUALT
     */
    companyCode?: string;
    /**
     * @example
     * 1631526550994
     */
    endTime?: number;
    /**
     * @example
     * VAT_IN
     */
    financeType?: string;
    /**
     * @example
     * 3121234560
     */
    invoiceCode?: string;
    /**
     * @example
     * 1234567890
     */
    invoiceNo?: string;
    /**
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @example
     * 100
     */
    pageSize?: number;
    /**
     * @example
     * 1631526550994
     */
    startTime?: number;
    /**
     * @example
     * 12345678901
     */
    taxNo?: string;
    /**
     * @example
     * VERIFIED
     */
    verifyStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckVoucherStatusResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckVoucherStatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CheckVoucherStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCategoryHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCategoryRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * INCOME_XXX
     */
    code?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCategoryResponseBody extends $tea.Model {
    accountantBookIdList?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * INCOME_XXX
     */
    code?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * false
     */
    isDir?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 汽车
     */
    name?: string;
    /**
     * @example
     * DIR_XXX
     */
    parentCode?: string;
    remark?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * valid
     */
    status?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * income
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCategoryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetCategoryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFinanceAccountHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFinanceAccountRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    accountCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFinanceAccountResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 12345
     */
    accountCode?: string;
    /**
     * @example
     * test@alipay.com
     */
    accountId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 测试
     */
    accountName?: string;
    accountRemark?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ALIPAY
     */
    accountType?: string;
    accountantBookIdList?: string[];
    /**
     * @example
     * 50000.55
     */
    amount?: string;
    bankCode?: string;
    bankName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1631526550994
     */
    createTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * abcdef
     */
    creator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFinanceAccountResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetFinanceAccountResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * PROJ-xxx
     */
    code?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectResponseBody extends $tea.Model {
    accountantBookIdList?: string[];
    code?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1631526550994
     */
    createTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * aaa
     */
    creator?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 和外部合作
     */
    description?: string;
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * PROJ-XXX
     */
    projectCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 外包项目
     */
    projectName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * valid
     */
    status?: string;
    userDefineCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetProjectResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetReceiptHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetReceiptRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 19b98a1c-5a31-4d78-9da7-0e347593820a
     */
    code?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * EM-1017F28E03350B1738B3000X
     */
    modelId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetReceiptResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1234
     */
    appId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * {"operatorUserId":"015865244722391178","data":{"amount":{"amountStr":"566"},"code":"d0d54815-32c5-4b18-8391-e79713bba95e","payeeAt":1637251200000,"departmentCode":"-1","project":{"projectCode":"PROJ_101761F3FF6B21362ECA000N","projectName":"客户合作项目"},"principalId":"015865244722391178","enterpriseAccount":{},"approvedAt":1637305373000,"title":"地狱猫提交的智能财务-收款","createAt":1637305353000,"paymentAt":1637251200000,"supplier":{},"operateUserId":"015865244722391178","applicantEmployeeId":"015865244722391178","comment":"ffff","category":{"categoryCode":"INC_1016D6CB3C181E28F0120009","categoryName":"销售收入"},"customer":{"customerCode":"CUS_10178592ECEC2133C893000F","customerName":"钉钉"},"status":"agree"}}
     */
    data?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * EM-1017F28E03350B1738B3000X
     */
    modelId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * approval
     */
    source?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetReceiptResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetReceiptResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSupplierHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSupplierRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SUP_XXX
     */
    code?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSupplierResponseBody extends $tea.Model {
    accountantBookIdList?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SUP_XXX
     */
    code?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1634786828686
     */
    createTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 原材料供应商
     */
    description?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * XX公司
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * valid
     */
    status?: string;
    userDefineCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSupplierResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetSupplierResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class IssueInvoiceWithOrderHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class IssueInvoiceWithOrderRequest extends $tea.Model {
    content?: IssueInvoiceWithOrderRequestContent;
    financeAppKey?: string;
    operator?: string;
    signature?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class IssueInvoiceWithOrderResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class IssueInvoiceWithOrderResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: IssueInvoiceWithOrderResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class LinkCommonInvokeHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class LinkCommonInvokeRequest extends $tea.Model {
    /**
     * @example
     * TEST
     */
    bizType?: string;
    /**
     * @example
     * "{\"key\":\"value\"}"
     */
    data?: string;
    /**
     * @example
     * INOVKE_XXX
     */
    invokeId?: string;
    /**
     * @example
     * abc
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class LinkCommonInvokeResponseBody extends $tea.Model {
    bizType?: string;
    data?: string;
    invokeId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class LinkCommonInvokeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: LinkCommonInvokeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OrderBillingHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OrderBillingRequest extends $tea.Model {
    additionInfos?: OrderBillingRequestAdditionInfos[];
    /**
     * @example
     * abc
     */
    appKey?: string;
    applyPerson?: string;
    invoiceRemark?: string;
    /**
     * @example
     * VAT_NORMAL_E
     */
    invoiceType?: string;
    isNaturalPerson?: boolean;
    operator?: string;
    /**
     * @example
     * abc
     */
    orderId?: string;
    payee?: string;
    phone?: string;
    products?: OrderBillingRequestProducts[];
    /**
     * @example
     * 浙江省杭州市XXX街道
     */
    purchaserAddress?: string;
    purchaserBankAccount?: string;
    purchaserBankName?: string;
    /**
     * @example
     * XXX公司
     */
    purchaserName?: string;
    purchaserTaxNo?: string;
    purchaserTel?: string;
    remark?: string;
    reviewer?: string;
    signature?: string;
    taxSign?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OrderBillingResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OrderBillingResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: OrderBillingResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAccountTradeByPageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAccountTradeByPageRequest extends $tea.Model {
    /**
     * @example
     * ACC_XXXXX
     */
    accountId?: string;
    /**
     * @example
     * 1730778990150
     */
    endDate?: number;
    filter?: QueryAccountTradeByPageRequestFilter;
    /**
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @example
     * 20
     */
    pageSize?: number;
    /**
     * @example
     * 1730778990150
     */
    startDate?: number;
    /**
     * @example
     * 50423414443123
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAccountTradeByPageResponseBody extends $tea.Model {
    result?: QueryAccountTradeByPageResponseBodyResult[];
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAccountTradeByPageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryAccountTradeByPageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCategoryByPageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCategoryByPageRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    pageSize?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCategoryByPageResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    hasMore?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    list?: QueryCategoryByPageResponseBodyList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCategoryByPageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryCategoryByPageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerByPageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerByPageRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerByPageResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    hasMore?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    list?: QueryCustomerByPageResponseBodyList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerByPageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryCustomerByPageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEnterpriseAccountByPageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEnterpriseAccountByPageRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEnterpriseAccountByPageResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    hasMore?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    list?: QueryEnterpriseAccountByPageResponseBodyList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEnterpriseAccountByPageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryEnterpriseAccountByPageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInstancePaymentOrderDetailHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInstancePaymentOrderDetailRequest extends $tea.Model {
    /**
     * @example
     * abc
     */
    orderNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInstancePaymentOrderDetailResponseBody extends $tea.Model {
    amount?: string;
    instanceId?: string;
    payeeAccountDTO?: QueryInstancePaymentOrderDetailResponseBodyPayeeAccountDTO;
    payerAccountDTO?: QueryInstancePaymentOrderDetailResponseBodyPayerAccountDTO;
    remark?: string;
    usage?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInstancePaymentOrderDetailResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryInstancePaymentOrderDetailResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInvoiceTransferDataHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInvoiceTransferDataRequest extends $tea.Model {
    body?: QueryInvoiceTransferDataRequestBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInvoiceTransferDataShrinkRequest extends $tea.Model {
    bodyShrink?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInvoiceTransferDataResponseBody extends $tea.Model {
    keyToData?: {
        [key: string]: string;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInvoiceTransferDataResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryInvoiceTransferDataResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPaymentRecallFileHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPaymentRecallFileRequest extends $tea.Model {
    /**
     * @example
     * 504
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPaymentRecallFileResponseBody extends $tea.Model {
    corpId?: string;
    paymentRecallFileList?: QueryPaymentRecallFileResponseBodyPaymentRecallFileList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPaymentRecallFileResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryPaymentRecallFileResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPaymentStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPaymentStatusRequest extends $tea.Model {
    /**
     * @example
     * ABC
     */
    instanceId?: string;
    /**
     * @example
     * 20241102231
     */
    orderNo?: string;
    /**
     * @example
     * 504323
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPaymentStatusResponseBody extends $tea.Model {
    /**
     * @example
     * dingXXX
     */
    corpId?: string;
    /**
     * @example
     * 收款账户错误
     */
    failReason?: string;
    /**
     * @example
     * ABC
     */
    instanceId?: string;
    /**
     * @example
     * 20241112
     */
    orderNo?: string;
    payeeAccountInfo?: QueryPaymentStatusResponseBodyPayeeAccountInfo;
    payerAccountInfo?: QueryPaymentStatusResponseBodyPayerAccountInfo;
    /**
     * @example
     * SUCCESS
     */
    paymentStatus?: string;
    /**
     * @example
     * 2024-11-11 00:00:00
     */
    paymentTime?: string;
    /**
     * @example
     * ABC
     */
    remark?: string;
    /**
     * @example
     * 报销
     */
    usage?: string;
    /**
     * @example
     * 504
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPaymentStatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryPaymentStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProjectByPageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProjectByPageRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProjectByPageResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    hasMore?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    list?: QueryProjectByPageResponseBodyList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProjectByPageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryProjectByPageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptForInvoiceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptForInvoiceRequest extends $tea.Model {
    /**
     * @example
     * abc
     */
    accountantBookId?: string;
    applyStatusList?: string[];
    bizStatusList?: string[];
    /**
     * @example
     * COM_DEFAULT
     */
    companyCode?: string;
    endTime?: number;
    pageNumber?: number;
    pageSize?: number;
    receiptStatusList?: string[];
    searchParams?: {
        [key: string]: string;
    };
    startTime?: number;
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptForInvoiceResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    hasMore?: string;
    list?: QueryReceiptForInvoiceResponseBodyList[];
    /**
     * @example
     * 500
     */
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptForInvoiceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryReceiptForInvoiceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySupplierByPageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySupplierByPageRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySupplierByPageResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    hasMore?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    list?: QuerySupplierByPageResponseBodyList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySupplierByPageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QuerySupplierByPageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUseNewInvoiceAppHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUseNewInvoiceAppResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    useNew?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUseNewInvoiceAppResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryUseNewInvoiceAppResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserRoleListHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserRoleListRequest extends $tea.Model {
    /**
     * @example
     * COM_DEFAULT
     */
    companyCode?: string;
    /**
     * @example
     * 12312231231
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserRoleListResponseBody extends $tea.Model {
    /**
     * @example
     * COM_DEFAULT
     */
    companyCode?: string;
    financeEmpDeptOpenList?: QueryUserRoleListResponseBodyFinanceEmpDeptOpenList[];
    roleVOList?: QueryUserRoleListResponseBodyRoleVOList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserRoleListResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryUserRoleListResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SignEnterpriseAccountHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SignEnterpriseAccountRequest extends $tea.Model {
    /**
     * @example
     * 123
     */
    bankCardNo?: string;
    /**
     * @example
     * 123
     *
     * **if can be null:**
     * true
     */
    bankOpenId?: string;
    /**
     * @example
     * COMM_UNIONPAY
     *
     * **if can be null:**
     * true
     */
    channelType?: string;
    /**
     * @example
     * 123
     */
    operator?: string;
    /**
     * @example
     * signed
     */
    signOperateType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SignEnterpriseAccountResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SignEnterpriseAccountResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SignEnterpriseAccountResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncReceiptRecallHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncReceiptRecallRequest extends $tea.Model {
    /**
     * @example
     * https:xxxx.pdf
     */
    fileDownloadUrl?: string;
    /**
     * @example
     * 1234.pdf
     */
    fileName?: string;
    /**
     * @example
     * 123
     */
    orderNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncReceiptRecallResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncReceiptRecallResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SyncReceiptRecallResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInstanceOrderInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInstanceOrderInfoRequest extends $tea.Model {
    /**
     * @example
     * xxx错误
     */
    failReason?: string;
    /**
     * @example
     * abc
     */
    orderNo?: string;
    /**
     * @example
     * 123
     */
    outOrderNo?: string;
    payerBank?: UpdateInstanceOrderInfoRequestPayerBank;
    /**
     * @example
     * 1709691000682
     */
    paymentTime?: number;
    /**
     * @example
     * PAYING
     */
    status?: string;
    /**
     * @example
     * 123
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInstanceOrderInfoShrinkRequest extends $tea.Model {
    /**
     * @example
     * xxx错误
     */
    failReason?: string;
    /**
     * @example
     * abc
     */
    orderNo?: string;
    /**
     * @example
     * 123
     */
    outOrderNo?: string;
    payerBankShrink?: string;
    /**
     * @example
     * 1709691000682
     */
    paymentTime?: number;
    /**
     * @example
     * PAYING
     */
    status?: string;
    /**
     * @example
     * 123
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInstanceOrderInfoResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInstanceOrderInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateInstanceOrderInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceDataTransferDoneHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceDataTransferDoneResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceDataTransferDoneResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateInvoiceDataTransferDoneResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceUrlHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceUrlRequest extends $tea.Model {
    body?: UpdateInvoiceUrlRequestBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceUrlShrinkRequest extends $tea.Model {
    bodyShrink?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceUrlResponseBody extends $tea.Model {
    result?: UpdateInvoiceUrlResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceUrlResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateInvoiceUrlResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryOrgInvoiceUrlRequestInvoiceKeyVOList extends $tea.Model {
    invoiceCode?: string;
    invoiceNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryOrgInvoiceUrlResponseBodyFailInvoiceList extends $tea.Model {
    errorMsg?: string;
    invoiceCode?: string;
    invoiceNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryOrgInvoiceUrlResponseBodyOrgInvoiceUrlList extends $tea.Model {
    invoiceCode?: string;
    invoiceNo?: string;
    ofdUrl?: string;
    originFileType?: string;
    originFileUrl?: string;
    pdfUrl?: string;
    xmlUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryPaymentRecallFileResponseBodyPaymentRecallFileList extends $tea.Model {
    detailId?: string;
    fileId?: string;
    fileName?: string;
    fileSize?: string;
    fileType?: string;
    recallFileUrl?: string;
    spaceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchSyncBankReceiptRequestBody extends $tea.Model {
    /**
     * @example
     * https://xxxxx
     */
    fileDownloadUrl?: string;
    /**
     * @example
     * xxxx回单.pdf
     */
    fileName?: string;
    /**
     * @example
     * 2024000001902335
     */
    messageId?: string;
    /**
     * @example
     * detailId
     */
    messageIdType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class IssueInvoiceWithOrderRequestContentAdditionInfo extends $tea.Model {
    additionContent?: string;
    additionName?: string;
    dataType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class IssueInvoiceWithOrderRequestContentProducts extends $tea.Model {
    amountIncludeTax?: string;
    productName?: string;
    quantity?: string;
    revenueCode?: string;
    specs?: string;
    taxSign?: string;
    unit?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class IssueInvoiceWithOrderRequestContent extends $tea.Model {
    additionInfo?: IssueInvoiceWithOrderRequestContentAdditionInfo[];
    applyPerson?: string;
    bankAccount?: string;
    bankName?: string;
    invoiceRemark?: string;
    invoiceType?: number;
    naturalPerson?: string;
    orderId?: string;
    payee?: string;
    phone?: string;
    products?: IssueInvoiceWithOrderRequestContentProducts[];
    purchaser?: string;
    purchaserAddress?: string;
    purchaserTel?: string;
    remark?: string;
    reviewer?: string;
    taxnum?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OrderBillingRequestAdditionInfos extends $tea.Model {
    additionContent?: string;
    additionName?: string;
    dataType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OrderBillingRequestProducts extends $tea.Model {
    /**
     * @example
     * 12.55
     */
    amountWithTax?: string;
    /**
     * @example
     * 面包
     */
    productName?: string;
    /**
     * @example
     * 5
     */
    quantity?: string;
    revenueCode?: string;
    specification?: string;
    /**
     * @example
     * 个
     */
    unit?: string;
    /**
     * @example
     * 19.99
     */
    unitPrice?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAccountTradeByPageRequestFilter extends $tea.Model {
    /**
     * @example
     * 10
     */
    endAmount?: string;
    /**
     * @example
     * 钉钉
     */
    otherAccountName?: string;
    /**
     * @example
     * 1
     */
    startAmount?: string;
    /**
     * @example
     * in
     */
    tradeType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAccountTradeByPageResponseBodyResultReceiptFile extends $tea.Model {
    fileId?: string;
    fileName?: string;
    fileSize?: number;
    fileType?: string;
    previewUrl?: string;
    spaceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAccountTradeByPageResponseBodyResult extends $tea.Model {
    balance?: string;
    detailId?: string;
    instanceId?: string;
    instanceTitle?: string;
    instanceUrl?: string;
    otherAccountName?: string;
    otherAccountNo?: string;
    receiptFile?: QueryAccountTradeByPageResponseBodyResultReceiptFile;
    remark?: string;
    tradeAmount?: string;
    tradeNo?: string;
    tradeTime?: number;
    tradeType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCategoryByPageResponseBodyList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * INCOME_XXX
     */
    code?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * false
     */
    isDir?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 汽车
     */
    name?: string;
    /**
     * @example
     * INCOM_XXX
     */
    parentCode?: string;
    remark?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * valid
     */
    status?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * income
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerByPageResponseBodyList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * CUS_XXX
     */
    code?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1634786828686
     */
    createTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 重要客户
     */
    description?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * XX有限公司
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * valid
     */
    status?: string;
    userDefineCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEnterpriseAccountByPageResponseBodyList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 12345
     */
    accountCode?: string;
    /**
     * @example
     * test@alipay.com
     */
    accountId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 网商银行
     */
    accountName?: string;
    /**
     * @example
     * test
     */
    accountRemark?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ALIPAY
     */
    accountType?: string;
    /**
     * @example
     * 10000.33
     */
    amount?: string;
    bankCode?: string;
    bankName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1631526550994
     */
    createTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * aaa
     */
    creator?: string;
    signStatus?: string;
    supportReceipt?: boolean;
    supportTradeDetail?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInstancePaymentOrderDetailResponseBodyPayeeAccountDTOBankOpenDTO extends $tea.Model {
    accountName?: string;
    bankBranchCode?: string;
    bankBranchName?: string;
    bankCardNo?: string;
    bankCode?: string;
    bankName?: string;
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInstancePaymentOrderDetailResponseBodyPayeeAccountDTO extends $tea.Model {
    bankOpenDTO?: QueryInstancePaymentOrderDetailResponseBodyPayeeAccountDTOBankOpenDTO;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInstancePaymentOrderDetailResponseBodyPayerAccountDTOBankOpenDTO extends $tea.Model {
    accountName?: string;
    bankBranchCode?: string;
    bankBranchName?: string;
    bankCardNo?: string;
    bankCode?: string;
    bankName?: string;
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInstancePaymentOrderDetailResponseBodyPayerAccountDTO extends $tea.Model {
    bankOpenDTO?: QueryInstancePaymentOrderDetailResponseBodyPayerAccountDTOBankOpenDTO;
    enterpriseAccountCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInvoiceTransferDataRequestBody extends $tea.Model {
    keys?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPaymentRecallFileResponseBodyPaymentRecallFileList extends $tea.Model {
    fileId?: string;
    fileName?: string;
    fileSize?: string;
    fileType?: string;
    instanceId?: string;
    orderNo?: string;
    previewUrl?: string;
    spaceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPaymentStatusResponseBodyPayeeAccountInfoBankOpenDTO extends $tea.Model {
    bankBranchName?: string;
    bankCardNo?: string;
    bankName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPaymentStatusResponseBodyPayeeAccountInfo extends $tea.Model {
    bankOpenDTO?: QueryPaymentStatusResponseBodyPayeeAccountInfoBankOpenDTO;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPaymentStatusResponseBodyPayerAccountInfoBankOpenDTO extends $tea.Model {
    bankBranchName?: string;
    bankCardNo?: string;
    bankName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPaymentStatusResponseBodyPayerAccountInfo extends $tea.Model {
    accountType?: string;
    bankOpenDTO?: QueryPaymentStatusResponseBodyPayerAccountInfoBankOpenDTO;
    enterpriseAccountCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProjectByPageResponseBodyList extends $tea.Model {
    caode?: string;
    code?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1631524595555
     */
    createTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * aaaa
     */
    creator?: string;
    /**
     * @example
     * 外派项目
     */
    description?: string;
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * PROJ-xxx
     */
    projectCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 外派项目
     */
    projectName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * valid
     */
    status?: string;
    userDefineCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptForInvoiceResponseBodyListCreator extends $tea.Model {
    /**
     * @example
     * https://xxxx
     */
    avatarUrl?: string;
    /**
     * @example
     * 测试名字
     */
    nick?: string;
    /**
     * @example
     * 1231
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptForInvoiceResponseBodyListCustomer extends $tea.Model {
    /**
     * @example
     * CUS_xxxxx
     */
    code?: string;
    /**
     * @example
     * 李四
     */
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptForInvoiceResponseBodyListProductInfoList extends $tea.Model {
    /**
     * @example
     * 12.3
     */
    amountWithTax?: string;
    /**
     * @example
     * 100
     */
    amountWithoutTax?: string;
    /**
     * @example
     * 10
     */
    discountAmount?: string;
    /**
     * @example
     * 鱼
     */
    name?: string;
    /**
     * @example
     * 2
     */
    quantity?: string;
    /**
     * @example
     * 大型
     */
    specification?: string;
    /**
     * @example
     * XXX
     */
    taxClassificationCode?: string;
    /**
     * @example
     * 0.3
     */
    taxRate?: string;
    /**
     * @example
     * 千克
     */
    unit?: string;
    /**
     * @example
     * 12.3
     */
    unitPriceWithTax?: string;
    /**
     * @example
     * 100
     */
    unitPriceWithoutTax?: string;
    withTax?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryReceiptForInvoiceResponseBodyList extends $tea.Model {
    /**
     * @example
     * abc
     */
    accountantBookId?: string;
    /**
     * @example
     * 5000
     */
    amount?: string;
    /**
     * @example
     * applied
     */
    applyStatus?: string;
    /**
     * @example
     * invoicing
     */
    bizStatus?: string;
    /**
     * @example
     * 123
     */
    businessId?: string;
    /**
     * @example
     * COM_DEFAULT
     */
    companyCode?: string;
    createTime?: string;
    creator?: QueryReceiptForInvoiceResponseBodyListCreator;
    customer?: QueryReceiptForInvoiceResponseBodyListCustomer;
    /**
     * @example
     * www.abc.com
     */
    drawerEmail?: string;
    /**
     * @example
     * 12345678901
     */
    drawerTelephone?: string;
    /**
     * @example
     * 增值税发票
     */
    invoiceType?: string;
    /**
     * @example
     * EM-xxxxx
     */
    modelId?: string;
    productInfoList?: QueryReceiptForInvoiceResponseBodyListProductInfoList[];
    /**
     * @example
     * abc
     */
    purchaserAccount?: string;
    /**
     * @example
     * 杭州市
     */
    purchaserAddress?: string;
    /**
     * @example
     * 建设银行
     */
    purchaserBankName?: string;
    /**
     * @example
     * 钉有限公司
     */
    purchaserName?: string;
    /**
     * @example
     * 123456
     */
    purchaserTaxNo?: string;
    /**
     * @example
     * 13333333333
     */
    purchaserTel?: string;
    /**
     * @example
     * abc
     */
    receiptId?: string;
    /**
     * @example
     * 16000000
     */
    recordTime?: string;
    /**
     * @example
     * 备注信息
     */
    remark?: string;
    /**
     * @example
     * approval
     */
    source?: string;
    /**
     * @example
     * agree
     */
    status?: string;
    /**
     * @example
     * 张三提交的开票申请单
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySupplierByPageResponseBodyList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SUP_XXX
     */
    code?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1634786828686
     */
    createTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 原材料供应商
     */
    description?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * XX供应商
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * valid
     */
    status?: string;
    userDefineCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserRoleListResponseBodyFinanceEmpDeptOpenList extends $tea.Model {
    cascadeDeptId?: string;
    deptId?: number;
    name?: string;
    superDeptId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserRoleListResponseBodyRoleVOList extends $tea.Model {
    /**
     * @example
     * applicationManager
     */
    roleCode?: string;
    /**
     * @example
     * 应用管理员
     */
    roleName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInstanceOrderInfoRequestPayerBank extends $tea.Model {
    /**
     * @example
     * 64112222
     */
    cardNo?: string;
    /**
     * @example
     * 招商银行
     */
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceUrlRequestBodyUrlList extends $tea.Model {
    invoiceCode?: string;
    invoiceNo?: string;
    ofdUrl?: string;
    pdfUrl?: string;
    xmlUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceUrlRequestBody extends $tea.Model {
    companyCode?: string;
    operator?: string;
    urlList?: UpdateInvoiceUrlRequestBodyUrlList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceUrlResponseBodyResultFailInvoiceList extends $tea.Model {
    errorMsg?: string;
    invoiceCode?: string;
    invoiceNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceUrlResponseBodyResult extends $tea.Model {
    failInvoiceList?: UpdateInvoiceUrlResponseBodyResultFailInvoiceList[];
    isAllSuccess?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 银行接入层通用接口
     *
     * @param request - BankGatewayInvokeRequest
     * @param headers - BankGatewayInvokeHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BankGatewayInvokeResponse
     */
    bankGatewayInvokeWithOptions(request: BankGatewayInvokeRequest, headers: BankGatewayInvokeHeaders, runtime: $Util.RuntimeOptions): Promise<BankGatewayInvokeResponse>;
    /**
     * 银行接入层通用接口
     *
     * @param request - BankGatewayInvokeRequest
     * @returns BankGatewayInvokeResponse
     */
    bankGatewayInvoke(request: BankGatewayInvokeRequest): Promise<BankGatewayInvokeResponse>;
    /**
     * 批量删除智能财务单据
     *
     * @param request - BatchDeleteReceiptRequest
     * @param headers - BatchDeleteReceiptHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BatchDeleteReceiptResponse
     */
    batchDeleteReceiptWithOptions(request: BatchDeleteReceiptRequest, headers: BatchDeleteReceiptHeaders, runtime: $Util.RuntimeOptions): Promise<BatchDeleteReceiptResponse>;
    /**
     * 批量删除智能财务单据
     *
     * @param request - BatchDeleteReceiptRequest
     * @returns BatchDeleteReceiptResponse
     */
    batchDeleteReceipt(request: BatchDeleteReceiptRequest): Promise<BatchDeleteReceiptResponse>;
    /**
     * 批量查询企业票池发票下载链接
     *
     * @param request - BatchQueryOrgInvoiceUrlRequest
     * @param headers - BatchQueryOrgInvoiceUrlHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BatchQueryOrgInvoiceUrlResponse
     */
    batchQueryOrgInvoiceUrlWithOptions(request: BatchQueryOrgInvoiceUrlRequest, headers: BatchQueryOrgInvoiceUrlHeaders, runtime: $Util.RuntimeOptions): Promise<BatchQueryOrgInvoiceUrlResponse>;
    /**
     * 批量查询企业票池发票下载链接
     *
     * @param request - BatchQueryOrgInvoiceUrlRequest
     * @returns BatchQueryOrgInvoiceUrlResponse
     */
    batchQueryOrgInvoiceUrl(request: BatchQueryOrgInvoiceUrlRequest): Promise<BatchQueryOrgInvoiceUrlResponse>;
    /**
     * 批量查询支付回单文件
     *
     * @param request - BatchQueryPaymentRecallFileRequest
     * @param headers - BatchQueryPaymentRecallFileHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BatchQueryPaymentRecallFileResponse
     */
    batchQueryPaymentRecallFileWithOptions(request: BatchQueryPaymentRecallFileRequest, headers: BatchQueryPaymentRecallFileHeaders, runtime: $Util.RuntimeOptions): Promise<BatchQueryPaymentRecallFileResponse>;
    /**
     * 批量查询支付回单文件
     *
     * @param request - BatchQueryPaymentRecallFileRequest
     * @returns BatchQueryPaymentRecallFileResponse
     */
    batchQueryPaymentRecallFile(request: BatchQueryPaymentRecallFileRequest): Promise<BatchQueryPaymentRecallFileResponse>;
    /**
     * 批量同步银行回单
     *
     * @param request - BatchSyncBankReceiptRequest
     * @param headers - BatchSyncBankReceiptHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BatchSyncBankReceiptResponse
     */
    batchSyncBankReceiptWithOptions(request: BatchSyncBankReceiptRequest, headers: BatchSyncBankReceiptHeaders, runtime: $Util.RuntimeOptions): Promise<BatchSyncBankReceiptResponse>;
    /**
     * 批量同步银行回单
     *
     * @param request - BatchSyncBankReceiptRequest
     * @returns BatchSyncBankReceiptResponse
     */
    batchSyncBankReceipt(request: BatchSyncBankReceiptRequest): Promise<BatchSyncBankReceiptResponse>;
    /**
     * 查验发票是否生成凭证
     *
     * @param request - CheckVoucherStatusRequest
     * @param headers - CheckVoucherStatusHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CheckVoucherStatusResponse
     */
    checkVoucherStatusWithOptions(request: CheckVoucherStatusRequest, headers: CheckVoucherStatusHeaders, runtime: $Util.RuntimeOptions): Promise<CheckVoucherStatusResponse>;
    /**
     * 查验发票是否生成凭证
     *
     * @param request - CheckVoucherStatusRequest
     * @returns CheckVoucherStatusResponse
     */
    checkVoucherStatus(request: CheckVoucherStatusRequest): Promise<CheckVoucherStatusResponse>;
    /**
     * 获取费用类别
     *
     * @param request - GetCategoryRequest
     * @param headers - GetCategoryHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetCategoryResponse
     */
    getCategoryWithOptions(request: GetCategoryRequest, headers: GetCategoryHeaders, runtime: $Util.RuntimeOptions): Promise<GetCategoryResponse>;
    /**
     * 获取费用类别
     *
     * @param request - GetCategoryRequest
     * @returns GetCategoryResponse
     */
    getCategory(request: GetCategoryRequest): Promise<GetCategoryResponse>;
    /**
     * 获取企业账户
     *
     * @param request - GetFinanceAccountRequest
     * @param headers - GetFinanceAccountHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetFinanceAccountResponse
     */
    getFinanceAccountWithOptions(request: GetFinanceAccountRequest, headers: GetFinanceAccountHeaders, runtime: $Util.RuntimeOptions): Promise<GetFinanceAccountResponse>;
    /**
     * 获取企业账户
     *
     * @param request - GetFinanceAccountRequest
     * @returns GetFinanceAccountResponse
     */
    getFinanceAccount(request: GetFinanceAccountRequest): Promise<GetFinanceAccountResponse>;
    /**
     * 获取单条项目
     *
     * @param request - GetProjectRequest
     * @param headers - GetProjectHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetProjectResponse
     */
    getProjectWithOptions(request: GetProjectRequest, headers: GetProjectHeaders, runtime: $Util.RuntimeOptions): Promise<GetProjectResponse>;
    /**
     * 获取单条项目
     *
     * @param request - GetProjectRequest
     * @returns GetProjectResponse
     */
    getProject(request: GetProjectRequest): Promise<GetProjectResponse>;
    /**
     * 获取智能财务单据详情
     *
     * @param request - GetReceiptRequest
     * @param headers - GetReceiptHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetReceiptResponse
     */
    getReceiptWithOptions(request: GetReceiptRequest, headers: GetReceiptHeaders, runtime: $Util.RuntimeOptions): Promise<GetReceiptResponse>;
    /**
     * 获取智能财务单据详情
     *
     * @param request - GetReceiptRequest
     * @returns GetReceiptResponse
     */
    getReceipt(request: GetReceiptRequest): Promise<GetReceiptResponse>;
    /**
     * 获取智能财务应用内维护的供应商信息
     *
     * @param request - GetSupplierRequest
     * @param headers - GetSupplierHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetSupplierResponse
     */
    getSupplierWithOptions(request: GetSupplierRequest, headers: GetSupplierHeaders, runtime: $Util.RuntimeOptions): Promise<GetSupplierResponse>;
    /**
     * 获取智能财务应用内维护的供应商信息
     *
     * @param request - GetSupplierRequest
     * @returns GetSupplierResponse
     */
    getSupplier(request: GetSupplierRequest): Promise<GetSupplierResponse>;
    /**
     * 订单开票
     *
     * @param request - IssueInvoiceWithOrderRequest
     * @param headers - IssueInvoiceWithOrderHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns IssueInvoiceWithOrderResponse
     */
    issueInvoiceWithOrderWithOptions(request: IssueInvoiceWithOrderRequest, headers: IssueInvoiceWithOrderHeaders, runtime: $Util.RuntimeOptions): Promise<IssueInvoiceWithOrderResponse>;
    /**
     * 订单开票
     *
     * @param request - IssueInvoiceWithOrderRequest
     * @returns IssueInvoiceWithOrderResponse
     */
    issueInvoiceWithOrder(request: IssueInvoiceWithOrderRequest): Promise<IssueInvoiceWithOrderResponse>;
    /**
     * 根据不同的bizType查询不同的数据
     *
     * @param request - LinkCommonInvokeRequest
     * @param headers - LinkCommonInvokeHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns LinkCommonInvokeResponse
     */
    linkCommonInvokeWithOptions(request: LinkCommonInvokeRequest, headers: LinkCommonInvokeHeaders, runtime: $Util.RuntimeOptions): Promise<LinkCommonInvokeResponse>;
    /**
     * 根据不同的bizType查询不同的数据
     *
     * @param request - LinkCommonInvokeRequest
     * @returns LinkCommonInvokeResponse
     */
    linkCommonInvoke(request: LinkCommonInvokeRequest): Promise<LinkCommonInvokeResponse>;
    /**
     * 订单开票
     *
     * @param request - OrderBillingRequest
     * @param headers - OrderBillingHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns OrderBillingResponse
     */
    orderBillingWithOptions(request: OrderBillingRequest, headers: OrderBillingHeaders, runtime: $Util.RuntimeOptions): Promise<OrderBillingResponse>;
    /**
     * 订单开票
     *
     * @param request - OrderBillingRequest
     * @returns OrderBillingResponse
     */
    orderBilling(request: OrderBillingRequest): Promise<OrderBillingResponse>;
    /**
     * 分页查询账户的银行交易流水
     *
     * @param request - QueryAccountTradeByPageRequest
     * @param headers - QueryAccountTradeByPageHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryAccountTradeByPageResponse
     */
    queryAccountTradeByPageWithOptions(request: QueryAccountTradeByPageRequest, headers: QueryAccountTradeByPageHeaders, runtime: $Util.RuntimeOptions): Promise<QueryAccountTradeByPageResponse>;
    /**
     * 分页查询账户的银行交易流水
     *
     * @param request - QueryAccountTradeByPageRequest
     * @returns QueryAccountTradeByPageResponse
     */
    queryAccountTradeByPage(request: QueryAccountTradeByPageRequest): Promise<QueryAccountTradeByPageResponse>;
    /**
     * 批量获取费用类别
     *
     * @param request - QueryCategoryByPageRequest
     * @param headers - QueryCategoryByPageHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryCategoryByPageResponse
     */
    queryCategoryByPageWithOptions(request: QueryCategoryByPageRequest, headers: QueryCategoryByPageHeaders, runtime: $Util.RuntimeOptions): Promise<QueryCategoryByPageResponse>;
    /**
     * 批量获取费用类别
     *
     * @param request - QueryCategoryByPageRequest
     * @returns QueryCategoryByPageResponse
     */
    queryCategoryByPage(request: QueryCategoryByPageRequest): Promise<QueryCategoryByPageResponse>;
    /**
     * 分页批量获取智能财务应用内维护的客户信息
     *
     * @param request - QueryCustomerByPageRequest
     * @param headers - QueryCustomerByPageHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryCustomerByPageResponse
     */
    queryCustomerByPageWithOptions(request: QueryCustomerByPageRequest, headers: QueryCustomerByPageHeaders, runtime: $Util.RuntimeOptions): Promise<QueryCustomerByPageResponse>;
    /**
     * 分页批量获取智能财务应用内维护的客户信息
     *
     * @param request - QueryCustomerByPageRequest
     * @returns QueryCustomerByPageResponse
     */
    queryCustomerByPage(request: QueryCustomerByPageRequest): Promise<QueryCustomerByPageResponse>;
    /**
     * 批量获取企业账户
     *
     * @param request - QueryEnterpriseAccountByPageRequest
     * @param headers - QueryEnterpriseAccountByPageHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryEnterpriseAccountByPageResponse
     */
    queryEnterpriseAccountByPageWithOptions(request: QueryEnterpriseAccountByPageRequest, headers: QueryEnterpriseAccountByPageHeaders, runtime: $Util.RuntimeOptions): Promise<QueryEnterpriseAccountByPageResponse>;
    /**
     * 批量获取企业账户
     *
     * @param request - QueryEnterpriseAccountByPageRequest
     * @returns QueryEnterpriseAccountByPageResponse
     */
    queryEnterpriseAccountByPage(request: QueryEnterpriseAccountByPageRequest): Promise<QueryEnterpriseAccountByPageResponse>;
    /**
     * 查询支付订单详情
     *
     * @param request - QueryInstancePaymentOrderDetailRequest
     * @param headers - QueryInstancePaymentOrderDetailHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryInstancePaymentOrderDetailResponse
     */
    queryInstancePaymentOrderDetailWithOptions(instanceId: string, request: QueryInstancePaymentOrderDetailRequest, headers: QueryInstancePaymentOrderDetailHeaders, runtime: $Util.RuntimeOptions): Promise<QueryInstancePaymentOrderDetailResponse>;
    /**
     * 查询支付订单详情
     *
     * @param request - QueryInstancePaymentOrderDetailRequest
     * @returns QueryInstancePaymentOrderDetailResponse
     */
    queryInstancePaymentOrderDetail(instanceId: string, request: QueryInstancePaymentOrderDetailRequest): Promise<QueryInstancePaymentOrderDetailResponse>;
    /**
     * 发票数据迁移，根据数据key查询具体数据data
     *
     * @param tmpReq - QueryInvoiceTransferDataRequest
     * @param headers - QueryInvoiceTransferDataHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryInvoiceTransferDataResponse
     */
    queryInvoiceTransferDataWithOptions(tmpReq: QueryInvoiceTransferDataRequest, headers: QueryInvoiceTransferDataHeaders, runtime: $Util.RuntimeOptions): Promise<QueryInvoiceTransferDataResponse>;
    /**
     * 发票数据迁移，根据数据key查询具体数据data
     *
     * @param request - QueryInvoiceTransferDataRequest
     * @returns QueryInvoiceTransferDataResponse
     */
    queryInvoiceTransferData(request: QueryInvoiceTransferDataRequest): Promise<QueryInvoiceTransferDataResponse>;
    /**
     * 查询支付回单信息
     *
     * @param request - QueryPaymentRecallFileRequest
     * @param headers - QueryPaymentRecallFileHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryPaymentRecallFileResponse
     */
    queryPaymentRecallFileWithOptions(instanceId: string, request: QueryPaymentRecallFileRequest, headers: QueryPaymentRecallFileHeaders, runtime: $Util.RuntimeOptions): Promise<QueryPaymentRecallFileResponse>;
    /**
     * 查询支付回单信息
     *
     * @param request - QueryPaymentRecallFileRequest
     * @returns QueryPaymentRecallFileResponse
     */
    queryPaymentRecallFile(instanceId: string, request: QueryPaymentRecallFileRequest): Promise<QueryPaymentRecallFileResponse>;
    /**
     * 查询支付订单的状态
     *
     * @param request - QueryPaymentStatusRequest
     * @param headers - QueryPaymentStatusHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryPaymentStatusResponse
     */
    queryPaymentStatusWithOptions(request: QueryPaymentStatusRequest, headers: QueryPaymentStatusHeaders, runtime: $Util.RuntimeOptions): Promise<QueryPaymentStatusResponse>;
    /**
     * 查询支付订单的状态
     *
     * @param request - QueryPaymentStatusRequest
     * @returns QueryPaymentStatusResponse
     */
    queryPaymentStatus(request: QueryPaymentStatusRequest): Promise<QueryPaymentStatusResponse>;
    /**
     * 批量获取项目信息
     *
     * @param request - QueryProjectByPageRequest
     * @param headers - QueryProjectByPageHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryProjectByPageResponse
     */
    queryProjectByPageWithOptions(request: QueryProjectByPageRequest, headers: QueryProjectByPageHeaders, runtime: $Util.RuntimeOptions): Promise<QueryProjectByPageResponse>;
    /**
     * 批量获取项目信息
     *
     * @param request - QueryProjectByPageRequest
     * @returns QueryProjectByPageResponse
     */
    queryProjectByPage(request: QueryProjectByPageRequest): Promise<QueryProjectByPageResponse>;
    /**
     * 批量查询智能财务单据主数据信息
     *
     * @param request - QueryReceiptForInvoiceRequest
     * @param headers - QueryReceiptForInvoiceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryReceiptForInvoiceResponse
     */
    queryReceiptForInvoiceWithOptions(request: QueryReceiptForInvoiceRequest, headers: QueryReceiptForInvoiceHeaders, runtime: $Util.RuntimeOptions): Promise<QueryReceiptForInvoiceResponse>;
    /**
     * 批量查询智能财务单据主数据信息
     *
     * @param request - QueryReceiptForInvoiceRequest
     * @returns QueryReceiptForInvoiceResponse
     */
    queryReceiptForInvoice(request: QueryReceiptForInvoiceRequest): Promise<QueryReceiptForInvoiceResponse>;
    /**
     * 分页批量获取智能财务应用内维护的供应商信息
     *
     * @param request - QuerySupplierByPageRequest
     * @param headers - QuerySupplierByPageHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QuerySupplierByPageResponse
     */
    querySupplierByPageWithOptions(request: QuerySupplierByPageRequest, headers: QuerySupplierByPageHeaders, runtime: $Util.RuntimeOptions): Promise<QuerySupplierByPageResponse>;
    /**
     * 分页批量获取智能财务应用内维护的供应商信息
     *
     * @param request - QuerySupplierByPageRequest
     * @returns QuerySupplierByPageResponse
     */
    querySupplierByPage(request: QuerySupplierByPageRequest): Promise<QuerySupplierByPageResponse>;
    /**
     * 查询组织是否命中走新发票应用
     *
     * @param headers - QueryUseNewInvoiceAppHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryUseNewInvoiceAppResponse
     */
    queryUseNewInvoiceAppWithOptions(headers: QueryUseNewInvoiceAppHeaders, runtime: $Util.RuntimeOptions): Promise<QueryUseNewInvoiceAppResponse>;
    /**
     * 查询组织是否命中走新发票应用
     * @returns QueryUseNewInvoiceAppResponse
     */
    queryUseNewInvoiceApp(): Promise<QueryUseNewInvoiceAppResponse>;
    /**
     * 查询用户角色成员，支持分页，可获取某个企业主体下的角色成员
     *
     * @param request - QueryUserRoleListRequest
     * @param headers - QueryUserRoleListHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryUserRoleListResponse
     */
    queryUserRoleListWithOptions(request: QueryUserRoleListRequest, headers: QueryUserRoleListHeaders, runtime: $Util.RuntimeOptions): Promise<QueryUserRoleListResponse>;
    /**
     * 查询用户角色成员，支持分页，可获取某个企业主体下的角色成员
     *
     * @param request - QueryUserRoleListRequest
     * @returns QueryUserRoleListResponse
     */
    queryUserRoleList(request: QueryUserRoleListRequest): Promise<QueryUserRoleListResponse>;
    /**
     * 签约企业账户
     *
     * @param request - SignEnterpriseAccountRequest
     * @param headers - SignEnterpriseAccountHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SignEnterpriseAccountResponse
     */
    signEnterpriseAccountWithOptions(request: SignEnterpriseAccountRequest, headers: SignEnterpriseAccountHeaders, runtime: $Util.RuntimeOptions): Promise<SignEnterpriseAccountResponse>;
    /**
     * 签约企业账户
     *
     * @param request - SignEnterpriseAccountRequest
     * @returns SignEnterpriseAccountResponse
     */
    signEnterpriseAccount(request: SignEnterpriseAccountRequest): Promise<SignEnterpriseAccountResponse>;
    /**
     * 发送银企支付回单文件信息
     *
     * @param request - SyncReceiptRecallRequest
     * @param headers - SyncReceiptRecallHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SyncReceiptRecallResponse
     */
    syncReceiptRecallWithOptions(request: SyncReceiptRecallRequest, headers: SyncReceiptRecallHeaders, runtime: $Util.RuntimeOptions): Promise<SyncReceiptRecallResponse>;
    /**
     * 发送银企支付回单文件信息
     *
     * @param request - SyncReceiptRecallRequest
     * @returns SyncReceiptRecallResponse
     */
    syncReceiptRecall(request: SyncReceiptRecallRequest): Promise<SyncReceiptRecallResponse>;
    /**
     * 更新单据的支付状态
     *
     * @param tmpReq - UpdateInstanceOrderInfoRequest
     * @param headers - UpdateInstanceOrderInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateInstanceOrderInfoResponse
     */
    updateInstanceOrderInfoWithOptions(instanceId: string, tmpReq: UpdateInstanceOrderInfoRequest, headers: UpdateInstanceOrderInfoHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateInstanceOrderInfoResponse>;
    /**
     * 更新单据的支付状态
     *
     * @param request - UpdateInstanceOrderInfoRequest
     * @returns UpdateInstanceOrderInfoResponse
     */
    updateInstanceOrderInfo(instanceId: string, request: UpdateInstanceOrderInfoRequest): Promise<UpdateInstanceOrderInfoResponse>;
    /**
     * 发票数据迁移，新发票应用上报已成功搬移数据
     *
     * @param headers - UpdateInvoiceDataTransferDoneHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateInvoiceDataTransferDoneResponse
     */
    updateInvoiceDataTransferDoneWithOptions(headers: UpdateInvoiceDataTransferDoneHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateInvoiceDataTransferDoneResponse>;
    /**
     * 发票数据迁移，新发票应用上报已成功搬移数据
     * @returns UpdateInvoiceDataTransferDoneResponse
     */
    updateInvoiceDataTransferDone(): Promise<UpdateInvoiceDataTransferDoneResponse>;
    /**
     * 用于更新智能财务企业票池内对应发票的下载链接
     *
     * @param tmpReq - UpdateInvoiceUrlRequest
     * @param headers - UpdateInvoiceUrlHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateInvoiceUrlResponse
     */
    updateInvoiceUrlWithOptions(tmpReq: UpdateInvoiceUrlRequest, headers: UpdateInvoiceUrlHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateInvoiceUrlResponse>;
    /**
     * 用于更新智能财务企业票池内对应发票的下载链接
     *
     * @param request - UpdateInvoiceUrlRequest
     * @returns UpdateInvoiceUrlResponse
     */
    updateInvoiceUrl(request: UpdateInvoiceUrlRequest): Promise<UpdateInvoiceUrlResponse>;
}
