/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class AddApplicationRegFormTemplateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddApplicationRegFormTemplateRequest extends $tea.Model {
    /**
     * @example
     * ddats
     */
    bizCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * {"key":"value"}
     */
    content?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 应聘登记表
     */
    name?: string;
    /**
     * @example
     * xxx
     */
    outerId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxx
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddApplicationRegFormTemplateResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxxxxx
     */
    templateId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    version?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddApplicationRegFormTemplateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddApplicationRegFormTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddFileHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddFileRequest extends $tea.Model {
    /**
     * @example
     * ddats
     */
    bizCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 张三的简历
     */
    fileName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxx
     */
    mediaId?: string;
    /**
     * @example
     * manager5875
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddFileResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 111111
     */
    fileId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 张三的简历
     */
    fileName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123456
     */
    spaceId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddFileResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddFileResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddUserAccountHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddUserAccountRequest extends $tea.Model {
    /**
     * @example
     * ddats
     */
    bizCode?: string;
    /**
     * @example
     * 示例昵称xxx
     */
    channelAccountName?: string;
    /**
     * @example
     * 6FSe51616SOdd394d6
     */
    channelUserIdentify?: string;
    /**
     * @example
     * 16600010001
     */
    phoneNumber?: string;
    /**
     * @example
     * ding123456789
     */
    corpId?: string;
    /**
     * @example
     * 1676451039
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddUserAccountResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddUserAccountResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddUserAccountResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectRecruitJobDetailHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectRecruitJobDetailRequest extends $tea.Model {
    /**
     * @example
     * ddats
     */
    bizCode?: string;
    /**
     * @example
     * zhilian
     */
    channel?: string;
    jobInfo?: CollectRecruitJobDetailRequestJobInfo;
    /**
     * @example
     * corpxxxxxxxxx
     */
    outCorpId?: string;
    /**
     * @example
     * 小莫科技有限公司
     */
    outCorpName?: string;
    recruitUserInfo?: CollectRecruitJobDetailRequestRecruitUserInfo;
    /**
     * @example
     * BOSS
     */
    source?: string;
    /**
     * @example
     * 1677465956008
     */
    updateTime?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectRecruitJobDetailResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectRecruitJobDetailResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CollectRecruitJobDetailResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectResumeDetailHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectResumeDetailRequest extends $tea.Model {
    /**
     * @example
     * ddats
     */
    bizCode?: string;
    /**
     * @example
     * liepin
     */
    channelCode?: string;
    /**
     * @example
     * resumexxxxxxxxxx
     */
    channelOuterId?: string;
    /**
     * @example
     * xxxxxx
     */
    channelTalentId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * jobId8fc0d56a605d495ea0214af7axxxxxxx
     */
    deliverJobId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2701606624233xxxxx
     */
    optUserId?: string;
    /**
     * @example
     * http:www.xxx.com
     */
    resumeChannelUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    resumeData?: CollectResumeDetailRequestResumeData;
    resumeFile?: CollectResumeDetailRequestResumeFile;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectResumeDetailResponseBody extends $tea.Model {
    resumeId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectResumeDetailResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CollectResumeDetailResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectResumeMailHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectResumeMailRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ddats
     */
    bizCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * liepin
     */
    channelCode?: string;
    /**
     * @example
     * jobId8fc0d56a605d495ea0214af7axxxxxxx
     */
    deliverJobId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxxx@163.com
     */
    fromMailAddress?: string;
    historyMailImport?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxxxxxxx
     */
    mailId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxxxx应聘贵公司xxx职位
     */
    mailTitle?: string;
    /**
     * @example
     * 2701606624233xxxxx
     */
    optUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxxx@163.com
     */
    receiveMailAddress?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    receiveMailType?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    receivedTime?: number;
    /**
     * @example
     * http:www.xxx.com
     */
    resumeChannelUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    resumeFile?: CollectResumeMailRequestResumeFile;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectResumeMailResponseBody extends $tea.Model {
    resumeId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectResumeMailResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CollectResumeMailResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConfirmRightsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConfirmRightsRequest extends $tea.Model {
    /**
     * @example
     * ddats
     */
    bizCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConfirmRightsResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConfirmRightsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ConfirmRightsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class FinishBeginnerTaskHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class FinishBeginnerTaskRequest extends $tea.Model {
    /**
     * @example
     * advancedBeginnerTask
     */
    scope?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager5875
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class FinishBeginnerTaskResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class FinishBeginnerTaskResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: FinishBeginnerTaskResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetApplicationRegFormByFlowIdHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetApplicationRegFormByFlowIdRequest extends $tea.Model {
    /**
     * @example
     * ddats
     */
    bizCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetApplicationRegFormByFlowIdResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxx
     */
    candidateId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager5875
     */
    creatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * flowXXX
     */
    flowId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * formXXX
     */
    formId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1626775016427
     */
    gmtCreateMillis?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1626775016427
     */
    gmtModifiedMillis?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * jobXXX
     */
    jobId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    status?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * templateXXX
     */
    templateId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    templateVersion?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetApplicationRegFormByFlowIdResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetApplicationRegFormByFlowIdResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCandidateByPhoneNumberHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCandidateByPhoneNumberRequest extends $tea.Model {
    /**
     * @example
     * ddats
     */
    bizCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 13688888888
     */
    phoneNumber?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCandidateByPhoneNumberResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxx
     */
    candidateId?: string;
    /**
     * @example
     * 张三
     */
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCandidateByPhoneNumberResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetCandidateByPhoneNumberResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFileUploadInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFileUploadInfoRequest extends $tea.Model {
    /**
     * @example
     * ddats
     */
    bizCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 张三的简历
     */
    fileName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1024
     */
    fileSize?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxx
     */
    md5?: string;
    /**
     * @example
     * manager5875
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFileUploadInfoResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxx
     */
    accessKeyId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxx
     */
    accessKeySecret?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxx
     */
    accessToken?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1626923829000
     */
    accessTokenExpirationMillis?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * lippi-space-zjk
     */
    bucket?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * oss-cn-zhangjiakou.aliyuncs.com
     */
    endPoint?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxx
     */
    mediaId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFileUploadInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetFileUploadInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFlowIdByRelationEntityIdHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFlowIdByRelationEntityIdRequest extends $tea.Model {
    /**
     * @example
     * ddats
     */
    bizCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * interview
     */
    relationEntity?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxx
     */
    relationEntityId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFlowIdByRelationEntityIdResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxx
     */
    flowId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFlowIdByRelationEntityIdResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetFlowIdByRelationEntityIdResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetJobAuthHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetJobAuthRequest extends $tea.Model {
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetJobAuthResponseBody extends $tea.Model {
    jobId?: string;
    jobOwners?: GetJobAuthResponseBodyJobOwners[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetJobAuthResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetJobAuthResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ImportJobDataHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ImportJobDataRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    body?: ImportJobDataRequestBody[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ImportJobDataResponseBody extends $tea.Model {
    result?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ImportJobDataResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ImportJobDataResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCandidatesHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCandidatesRequest extends $tea.Model {
    /**
     * @example
     * 20
     */
    maxResults?: number;
    /**
     * @example
     * 154XXX
     */
    nextToken?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * entry
     */
    statId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 013224566462XXXXXXXXXX
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCandidatesResponseBody extends $tea.Model {
    hasMore?: boolean;
    list?: QueryCandidatesResponseBodyList[];
    /**
     * @example
     * xxxxxx
     */
    nextToken?: number;
    /**
     * @example
     * 100
     */
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCandidatesResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryCandidatesResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInterviewsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInterviewsRequest extends $tea.Model {
    /**
     * @example
     * ddats
     */
    bizCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxx
     */
    candidateId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1626796800000
     */
    startTimeBeginMillis?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1626883199000
     */
    startTimeEndMillis?: number;
    /**
     * @example
     * xxx
     */
    nextToken?: string;
    /**
     * @example
     * 10
     */
    size?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInterviewsResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    hasMore?: boolean;
    list?: QueryInterviewsResponseBodyList[];
    /**
     * @example
     * xxx
     */
    nextToken?: string;
    /**
     * @example
     * 总数量
     */
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInterviewsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryInterviewsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReportMessageStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReportMessageStatusRequest extends $tea.Model {
    /**
     * @example
     * ddats
     */
    bizCode?: string;
    /**
     * @example
     * corp-ABC-prd
     */
    channel?: string;
    /**
     * @example
     * INVALID_USER
     */
    errorCode?: string;
    /**
     * @example
     * 无效用户
     */
    errorMsg?: string;
    /**
     * @example
     * 594c5b30-57bd-4001-8903-4dc64cdc6739
     */
    messageId?: string;
    /**
     * @example
     * AppUid@Channel
     */
    receiverUserId?: string;
    /**
     * @example
     * AppUid@Channel
     */
    senderUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReportMessageStatusResponseBody extends $tea.Model {
    result?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReportMessageStatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ReportMessageStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncChannelMessageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncChannelMessageRequest extends $tea.Model {
    /**
     * @example
     * ddats
     */
    bizCode?: string;
    /**
     * @example
     * Corp-ABC-prd
     */
    channel?: string;
    /**
     * @example
     * {"msgtype":"text","text":{"content":"月会通知"}}
     */
    content?: string;
    /**
     * @example
     * 1667964772048
     */
    createTime?: number;
    /**
     * @example
     * AppUid@Channel
     */
    receiverUserId?: string;
    /**
     * @example
     * AppUid@Channel
     */
    senderUserId?: string;
    /**
     * @example
     * 594c5b30-57bd-4001-8903-4dc64cdc6739
     */
    uuid?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncChannelMessageResponseBody extends $tea.Model {
    result?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncChannelMessageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SyncChannelMessageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplicationRegFormHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplicationRegFormRequest extends $tea.Model {
    /**
     * @example
     * ddats
     */
    bizCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * {"key":"value"}
     */
    content?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    dingPanFile?: UpdateApplicationRegFormRequestDingPanFile;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplicationRegFormResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager5875
     */
    creatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * formXXX
     */
    formId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1626775016427
     */
    gmtCreateMillis?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1626775016427
     */
    gmtModifiedMillis?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    status?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * templateXXX
     */
    templateId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    templateVersion?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplicationRegFormResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateApplicationRegFormResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInterviewSignInInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInterviewSignInInfoRequest extends $tea.Model {
    /**
     * @example
     * ddats
     */
    bizCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1626796800000
     */
    signInTimeMillis?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInterviewSignInInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateJobDeliverHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateJobDeliverRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ddats
     */
    bizCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * channelOuterId
     */
    channelOuterId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 27016066248xxxxx
     */
    deliverUserId?: string;
    /**
     * @example
     * ATS001
     */
    errorCode?: string;
    /**
     * @example
     * 职位审核不通过
     */
    errorMsg?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1666780239981
     */
    opTime?: number;
    /**
     * @example
     * 27016066248xxxxx
     */
    opUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    status?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * jobId23ed0d46548f4e88a7b808d3f3057xxx
     */
    jobId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateJobDeliverResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateJobDeliverResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateJobDeliverResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectRecruitJobDetailRequestJobInfoAddress extends $tea.Model {
    /**
     * @example
     * 310000
     */
    cityCode?: string;
    /**
     * @example
     * 文一西路999号
     */
    detail?: string;
    /**
     * @example
     * 311000
     */
    districtCode?: string;
    /**
     * @example
     * 89.54613
     */
    latitude?: string;
    /**
     * @example
     * 128.45613
     */
    longitude?: string;
    /**
     * @example
     * 总部大楼
     */
    name?: string;
    /**
     * @example
     * 300000
     */
    provinceCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectRecruitJobDetailRequestJobInfoFullTimeInfo extends $tea.Model {
    /**
     * @example
     * 20
     */
    maxJobExperience?: string;
    /**
     * @example
     * 2
     */
    minJobExperience?: string;
    /**
     * @example
     * 12
     */
    salaryMonth?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectRecruitJobDetailRequestJobInfoPartTimeInfo extends $tea.Model {
    /**
     * @example
     * 158****8718
     */
    contactNumber?: string;
    /**
     * @example
     * MONTH
     */
    salaryPeriod?: string;
    /**
     * @example
     * MONTH
     */
    settleType?: string;
    /**
     * @example
     * N
     */
    specifyWorkDate?: string;
    /**
     * @example
     * N
     */
    specifyWorkTime?: string;
    /**
     * @example
     * 480
     */
    workBeginTimeMin?: string;
    /**
     * @example
     * WORKDAY
     */
    workDateType?: string;
    /**
     * @example
     * 2024-02-18
     */
    workEndDate?: string;
    /**
     * @example
     * 1080
     */
    workEndTimeMin?: string;
    /**
     * @example
     * 2023-02-18
     */
    workStartDate?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectRecruitJobDetailRequestJobInfo extends $tea.Model {
    address?: CollectRecruitJobDetailRequestJobInfoAddress;
    /**
     * @example
     * C10001
     */
    category?: string;
    /**
     * @example
     * 园艺师职位描述
     */
    description?: string;
    extInfo?: string;
    fullTimeInfo?: CollectRecruitJobDetailRequestJobInfoFullTimeInfo;
    /**
     * @example
     * 20
     */
    headCount?: string;
    /**
     * @example
     * FULL-TIME
     */
    jobNature?: string;
    jobTags?: string[];
    /**
     * @example
     * 8000
     */
    maxSalary?: string;
    /**
     * @example
     * 3000
     */
    minSalary?: string;
    /**
     * @example
     * 园艺师
     */
    name?: string;
    /**
     * @example
     * jobIdxxxxxxx
     */
    outJobId?: string;
    partTimeInfo?: CollectRecruitJobDetailRequestJobInfoPartTimeInfo;
    /**
     * @example
     * 高中
     */
    requiredEdu?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectRecruitJobDetailRequestRecruitUserInfo extends $tea.Model {
    /**
     * @example
     * {"sex":"male"}
     */
    extInfo?: string;
    /**
     * @example
     * userxxxxx
     */
    outUserId?: string;
    /**
     * @example
     * 158****8717
     */
    userMobile?: string;
    /**
     * @example
     * 陈*
     */
    userName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectResumeDetailRequestResumeDataBaseInfo extends $tea.Model {
    /**
     * @example
     * 18
     */
    age?: number;
    /**
     * @example
     * http://www.xxxx.com
     */
    avatar?: string;
    /**
     * @example
     * yyyy-MM-dd
     */
    beginWorkTime?: string;
    /**
     * @example
     * yyyy-MM-dd
     */
    birthday?: string;
    /**
     * @example
     * xxxxxxx@alibaba-inc.com
     */
    email?: string;
    /**
     * @example
     * Jason
     */
    englishName?: string;
    /**
     * @example
     * yyyy-MM-dd
     */
    graduateTime?: string;
    /**
     * @example
     * 1
     */
    highestEducation?: number;
    /**
     * @example
     * java开发工程师
     */
    jobTitle?: string;
    /**
     * @example
     * 清华大学
     */
    lastSchoolName?: string;
    /**
     * @example
     * 1
     */
    married?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 孙先生
     */
    name?: string;
    /**
     * @example
     * 浙江省杭州市余杭区仓前街道
     */
    nativePlace?: string;
    /**
     * @example
     * 浙江省杭州市余杭区仓前街道欧美金融城
     */
    nowLocation?: string;
    /**
     * @example
     * 曾获得xxx比赛xxx奖项
     */
    personalHonor?: string;
    /**
     * @example
     * 187xxxxxxxx
     */
    phoneNum?: string;
    /**
     * @example
     * 1
     */
    politicalStatus?: number;
    /**
     * @example
     * 沟通能力强......
     */
    selfEvaluation?: string;
    /**
     * @example
     * 1
     */
    sex?: number;
    /**
     * @example
     * 187xxxxxxxx
     */
    virtualPhoneNum?: string;
    /**
     * @example
     * 3
     */
    workingYears?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectResumeDetailRequestResumeDataCertificates extends $tea.Model {
    /**
     * @example
     * 高级技工证书
     */
    certificateName?: string;
    /**
     * @example
     * yyyy-MM-dd
     */
    grantTime?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectResumeDetailRequestResumeDataEducationExperiences extends $tea.Model {
    /**
     * @example
     * 1
     */
    degree?: number;
    /**
     * @example
     * 计算机学院
     */
    department?: string;
    /**
     * @example
     * 在校期间.......
     */
    description?: string;
    /**
     * @example
     * yyyy-MM-dd
     */
    endDate?: string;
    /**
     * @example
     * 计算机科学与技术
     */
    major?: string;
    /**
     * @example
     * 清华大学
     */
    schoolName?: string;
    /**
     * @example
     * yyyy-MM-dd
     */
    startDate?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectResumeDetailRequestResumeDataJobExpect extends $tea.Model {
    /**
     * @example
     * Java开发工程师
     */
    jobName?: string;
    locations?: string[];
    /**
     * @example
     * 8000
     */
    maxSalary?: string;
    /**
     * @example
     * 3000
     */
    minSalary?: string;
    /**
     * @example
     * yyyy-MM-dd
     */
    onboardTime?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectResumeDetailRequestResumeDataLanguageSkill extends $tea.Model {
    /**
     * @example
     * 大学英语六级
     */
    certificateName?: string;
    /**
     * @example
     * 英语
     */
    languageName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectResumeDetailRequestResumeDataTrainingExperiences extends $tea.Model {
    /**
     * @example
     * 培训期间，学习了xxxx技能，获取xxxx证书。
     */
    description?: string;
    /**
     * @example
     * yyyy-MM-dd
     */
    endDate?: string;
    /**
     * @example
     * 新东方挖掘机学校
     */
    institutionName?: string;
    /**
     * @example
     * 浙江省杭州市余杭区
     */
    location?: string;
    /**
     * @example
     * 挖掘机专业技能培训
     */
    name?: string;
    /**
     * @example
     * yyyy-MM-dd
     */
    startDate?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectResumeDetailRequestResumeDataWorkExperiences extends $tea.Model {
    /**
     * @example
     * 钉钉（中国）信息技术有限公司
     */
    companyName?: string;
    /**
     * @example
     * 智能人事
     */
    department?: string;
    /**
     * @example
     * 工作期间负责......取得了......成果
     */
    description?: string;
    /**
     * @example
     * yyyy-MM-dd
     */
    endDate?: string;
    /**
     * @example
     * Java开发工程师
     */
    jobTitle?: string;
    /**
     * @example
     * 杭州
     */
    location?: string;
    /**
     * @example
     * 负责......
     */
    responsibility?: string;
    /**
     * @example
     * yyyy-MM-dd
     */
    startDate?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectResumeDetailRequestResumeData extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    baseInfo?: CollectResumeDetailRequestResumeDataBaseInfo;
    certificates?: CollectResumeDetailRequestResumeDataCertificates[];
    educationExperiences?: CollectResumeDetailRequestResumeDataEducationExperiences[];
    jobExpect?: CollectResumeDetailRequestResumeDataJobExpect;
    languageSkill?: CollectResumeDetailRequestResumeDataLanguageSkill[];
    trainingExperiences?: CollectResumeDetailRequestResumeDataTrainingExperiences[];
    workExperiences?: CollectResumeDetailRequestResumeDataWorkExperiences[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectResumeDetailRequestResumeFile extends $tea.Model {
    /**
     * @example
     * http:www.xxx.com
     */
    downloadUrl?: string;
    /**
     * @example
     * xxx.pdf
     */
    fileName?: string;
    /**
     * @example
     * pdf
     */
    fileType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CollectResumeMailRequestResumeFile extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * http:www.xxx.com
     */
    downloadUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxxx的简历.pdf
     */
    fileName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * pdf
     */
    fileType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetJobAuthResponseBodyJobOwners extends $tea.Model {
    name?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ImportJobDataRequestBodyAddress extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    cityCode?: string;
    customName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    districtCode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    latitude?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    longitude?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    provinceCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ImportJobDataRequestBodyFullTimeExt extends $tea.Model {
    salaryMonth?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ImportJobDataRequestBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    address?: ImportJobDataRequestBodyAddress;
    /**
     * @remarks
     * This parameter is required.
     */
    category?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    description?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    experience?: string;
    fullTimeExt?: ImportJobDataRequestBodyFullTimeExt;
    /**
     * @remarks
     * This parameter is required.
     */
    jobNature?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    maxSalary?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    minSalary?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    requiredEdu?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCandidatesResponseBodyList extends $tea.Model {
    /**
     * @example
     * 64167133e3394c6b9959eexxxxxxxxxx
     */
    candidateId?: string;
    /**
     * @example
     * ding2c0158xxxxxxxxxx
     */
    corpId?: string;
    /**
     * @example
     * 1701014400000
     */
    entryDate?: number;
    /**
     * @example
     * 013224566462xxxxxxxxxx
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInterviewsResponseBodyListInterviewers extends $tea.Model {
    /**
     * @example
     * xxx
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryInterviewsResponseBodyList extends $tea.Model {
    /**
     * @example
     * false
     */
    cancelled?: boolean;
    /**
     * @example
     * xxx
     */
    creatorUserId?: string;
    /**
     * @example
     * 1626861600000
     */
    endTimeMillis?: number;
    /**
     * @example
     * xxx
     */
    interviewId?: string;
    interviewers?: QueryInterviewsResponseBodyListInterviewers[];
    /**
     * @example
     * xxx
     */
    jobId?: string;
    /**
     * @example
     * 1626858000000
     */
    startTimeMillis?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApplicationRegFormRequestDingPanFile extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * "123456"
     */
    fileId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * "张三的应聘登记表（开发工程师）"
     */
    fileName?: string;
    /**
     * @example
     * 1024
     */
    fileSize?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * pdf
     */
    fileType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 223344
     */
    spaceId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 添加应聘登记表模板
     *
     * @param request - AddApplicationRegFormTemplateRequest
     * @param headers - AddApplicationRegFormTemplateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddApplicationRegFormTemplateResponse
     */
    addApplicationRegFormTemplateWithOptions(request: AddApplicationRegFormTemplateRequest, headers: AddApplicationRegFormTemplateHeaders, runtime: $Util.RuntimeOptions): Promise<AddApplicationRegFormTemplateResponse>;
    /**
     * 添加应聘登记表模板
     *
     * @param request - AddApplicationRegFormTemplateRequest
     * @returns AddApplicationRegFormTemplateResponse
     */
    addApplicationRegFormTemplate(request: AddApplicationRegFormTemplateRequest): Promise<AddApplicationRegFormTemplateResponse>;
    /**
     * 添加钉盘文件
     *
     * @param request - AddFileRequest
     * @param headers - AddFileHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddFileResponse
     */
    addFileWithOptions(request: AddFileRequest, headers: AddFileHeaders, runtime: $Util.RuntimeOptions): Promise<AddFileResponse>;
    /**
     * 添加钉盘文件
     *
     * @param request - AddFileRequest
     * @returns AddFileResponse
     */
    addFile(request: AddFileRequest): Promise<AddFileResponse>;
    /**
     * 添加渠道个人账号
     *
     * @param request - AddUserAccountRequest
     * @param headers - AddUserAccountHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddUserAccountResponse
     */
    addUserAccountWithOptions(request: AddUserAccountRequest, headers: AddUserAccountHeaders, runtime: $Util.RuntimeOptions): Promise<AddUserAccountResponse>;
    /**
     * 添加渠道个人账号
     *
     * @param request - AddUserAccountRequest
     * @returns AddUserAccountResponse
     */
    addUserAccount(request: AddUserAccountRequest): Promise<AddUserAccountResponse>;
    /**
     * 渠道招聘职位需求导入
     *
     * @param request - CollectRecruitJobDetailRequest
     * @param headers - CollectRecruitJobDetailHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CollectRecruitJobDetailResponse
     */
    collectRecruitJobDetailWithOptions(request: CollectRecruitJobDetailRequest, headers: CollectRecruitJobDetailHeaders, runtime: $Util.RuntimeOptions): Promise<CollectRecruitJobDetailResponse>;
    /**
     * 渠道招聘职位需求导入
     *
     * @param request - CollectRecruitJobDetailRequest
     * @returns CollectRecruitJobDetailResponse
     */
    collectRecruitJobDetail(request: CollectRecruitJobDetailRequest): Promise<CollectRecruitJobDetailResponse>;
    /**
     * 结构化简历信息回流
     *
     * @param request - CollectResumeDetailRequest
     * @param headers - CollectResumeDetailHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CollectResumeDetailResponse
     */
    collectResumeDetailWithOptions(request: CollectResumeDetailRequest, headers: CollectResumeDetailHeaders, runtime: $Util.RuntimeOptions): Promise<CollectResumeDetailResponse>;
    /**
     * 结构化简历信息回流
     *
     * @param request - CollectResumeDetailRequest
     * @returns CollectResumeDetailResponse
     */
    collectResumeDetail(request: CollectResumeDetailRequest): Promise<CollectResumeDetailResponse>;
    /**
     * 邮箱简历回流
     *
     * @param request - CollectResumeMailRequest
     * @param headers - CollectResumeMailHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CollectResumeMailResponse
     */
    collectResumeMailWithOptions(request: CollectResumeMailRequest, headers: CollectResumeMailHeaders, runtime: $Util.RuntimeOptions): Promise<CollectResumeMailResponse>;
    /**
     * 邮箱简历回流
     *
     * @param request - CollectResumeMailRequest
     * @returns CollectResumeMailResponse
     */
    collectResumeMail(request: CollectResumeMailRequest): Promise<CollectResumeMailResponse>;
    /**
     * 确认权益
     *
     * @param request - ConfirmRightsRequest
     * @param headers - ConfirmRightsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ConfirmRightsResponse
     */
    confirmRightsWithOptions(rightsCode: string, request: ConfirmRightsRequest, headers: ConfirmRightsHeaders, runtime: $Util.RuntimeOptions): Promise<ConfirmRightsResponse>;
    /**
     * 确认权益
     *
     * @param request - ConfirmRightsRequest
     * @returns ConfirmRightsResponse
     */
    confirmRights(rightsCode: string, request: ConfirmRightsRequest): Promise<ConfirmRightsResponse>;
    /**
     * 完成指定的新手任务
     *
     * @param request - FinishBeginnerTaskRequest
     * @param headers - FinishBeginnerTaskHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns FinishBeginnerTaskResponse
     */
    finishBeginnerTaskWithOptions(taskCode: string, request: FinishBeginnerTaskRequest, headers: FinishBeginnerTaskHeaders, runtime: $Util.RuntimeOptions): Promise<FinishBeginnerTaskResponse>;
    /**
     * 完成指定的新手任务
     *
     * @param request - FinishBeginnerTaskRequest
     * @returns FinishBeginnerTaskResponse
     */
    finishBeginnerTask(taskCode: string, request: FinishBeginnerTaskRequest): Promise<FinishBeginnerTaskResponse>;
    /**
     * 获取招聘流程关联的应聘登记表信息
     *
     * @param request - GetApplicationRegFormByFlowIdRequest
     * @param headers - GetApplicationRegFormByFlowIdHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetApplicationRegFormByFlowIdResponse
     */
    getApplicationRegFormByFlowIdWithOptions(flowId: string, request: GetApplicationRegFormByFlowIdRequest, headers: GetApplicationRegFormByFlowIdHeaders, runtime: $Util.RuntimeOptions): Promise<GetApplicationRegFormByFlowIdResponse>;
    /**
     * 获取招聘流程关联的应聘登记表信息
     *
     * @param request - GetApplicationRegFormByFlowIdRequest
     * @returns GetApplicationRegFormByFlowIdResponse
     */
    getApplicationRegFormByFlowId(flowId: string, request: GetApplicationRegFormByFlowIdRequest): Promise<GetApplicationRegFormByFlowIdResponse>;
    /**
     * 根据手机号获取候选人信息
     *
     * @param request - GetCandidateByPhoneNumberRequest
     * @param headers - GetCandidateByPhoneNumberHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetCandidateByPhoneNumberResponse
     */
    getCandidateByPhoneNumberWithOptions(request: GetCandidateByPhoneNumberRequest, headers: GetCandidateByPhoneNumberHeaders, runtime: $Util.RuntimeOptions): Promise<GetCandidateByPhoneNumberResponse>;
    /**
     * 根据手机号获取候选人信息
     *
     * @param request - GetCandidateByPhoneNumberRequest
     * @returns GetCandidateByPhoneNumberResponse
     */
    getCandidateByPhoneNumber(request: GetCandidateByPhoneNumberRequest): Promise<GetCandidateByPhoneNumberResponse>;
    /**
     * 获取钉盘上传文件信息
     *
     * @param request - GetFileUploadInfoRequest
     * @param headers - GetFileUploadInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetFileUploadInfoResponse
     */
    getFileUploadInfoWithOptions(request: GetFileUploadInfoRequest, headers: GetFileUploadInfoHeaders, runtime: $Util.RuntimeOptions): Promise<GetFileUploadInfoResponse>;
    /**
     * 获取钉盘上传文件信息
     *
     * @param request - GetFileUploadInfoRequest
     * @returns GetFileUploadInfoResponse
     */
    getFileUploadInfo(request: GetFileUploadInfoRequest): Promise<GetFileUploadInfoResponse>;
    /**
     * 根据招聘流程关联的实体标识获取招聘流程标识
     *
     * @param request - GetFlowIdByRelationEntityIdRequest
     * @param headers - GetFlowIdByRelationEntityIdHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetFlowIdByRelationEntityIdResponse
     */
    getFlowIdByRelationEntityIdWithOptions(request: GetFlowIdByRelationEntityIdRequest, headers: GetFlowIdByRelationEntityIdHeaders, runtime: $Util.RuntimeOptions): Promise<GetFlowIdByRelationEntityIdResponse>;
    /**
     * 根据招聘流程关联的实体标识获取招聘流程标识
     *
     * @param request - GetFlowIdByRelationEntityIdRequest
     * @returns GetFlowIdByRelationEntityIdResponse
     */
    getFlowIdByRelationEntityId(request: GetFlowIdByRelationEntityIdRequest): Promise<GetFlowIdByRelationEntityIdResponse>;
    /**
     * 获取职位信息
     *
     * @param request - GetJobAuthRequest
     * @param headers - GetJobAuthHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetJobAuthResponse
     */
    getJobAuthWithOptions(jobId: string, request: GetJobAuthRequest, headers: GetJobAuthHeaders, runtime: $Util.RuntimeOptions): Promise<GetJobAuthResponse>;
    /**
     * 获取职位信息
     *
     * @param request - GetJobAuthRequest
     * @returns GetJobAuthResponse
     */
    getJobAuth(jobId: string, request: GetJobAuthRequest): Promise<GetJobAuthResponse>;
    /**
     * 导入外部渠道发布的职位数据
     *
     * @param request - ImportJobDataRequest
     * @param headers - ImportJobDataHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ImportJobDataResponse
     */
    importJobDataWithOptions(request: ImportJobDataRequest, headers: ImportJobDataHeaders, runtime: $Util.RuntimeOptions): Promise<ImportJobDataResponse>;
    /**
     * 导入外部渠道发布的职位数据
     *
     * @param request - ImportJobDataRequest
     * @returns ImportJobDataResponse
     */
    importJobData(request: ImportJobDataRequest): Promise<ImportJobDataResponse>;
    /**
     * 查询候选人详情列表
     *
     * @param request - QueryCandidatesRequest
     * @param headers - QueryCandidatesHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryCandidatesResponse
     */
    queryCandidatesWithOptions(request: QueryCandidatesRequest, headers: QueryCandidatesHeaders, runtime: $Util.RuntimeOptions): Promise<QueryCandidatesResponse>;
    /**
     * 查询候选人详情列表
     *
     * @param request - QueryCandidatesRequest
     * @returns QueryCandidatesResponse
     */
    queryCandidates(request: QueryCandidatesRequest): Promise<QueryCandidatesResponse>;
    /**
     * 查询面试列表
     *
     * @param request - QueryInterviewsRequest
     * @param headers - QueryInterviewsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryInterviewsResponse
     */
    queryInterviewsWithOptions(request: QueryInterviewsRequest, headers: QueryInterviewsHeaders, runtime: $Util.RuntimeOptions): Promise<QueryInterviewsResponse>;
    /**
     * 查询面试列表
     *
     * @param request - QueryInterviewsRequest
     * @returns QueryInterviewsResponse
     */
    queryInterviews(request: QueryInterviewsRequest): Promise<QueryInterviewsResponse>;
    /**
     * 反馈渠道消息状态
     *
     * @param request - ReportMessageStatusRequest
     * @param headers - ReportMessageStatusHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ReportMessageStatusResponse
     */
    reportMessageStatusWithOptions(request: ReportMessageStatusRequest, headers: ReportMessageStatusHeaders, runtime: $Util.RuntimeOptions): Promise<ReportMessageStatusResponse>;
    /**
     * 反馈渠道消息状态
     *
     * @param request - ReportMessageStatusRequest
     * @returns ReportMessageStatusResponse
     */
    reportMessageStatus(request: ReportMessageStatusRequest): Promise<ReportMessageStatusResponse>;
    /**
     * 同步渠道IM消息
     *
     * @param request - SyncChannelMessageRequest
     * @param headers - SyncChannelMessageHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SyncChannelMessageResponse
     */
    syncChannelMessageWithOptions(request: SyncChannelMessageRequest, headers: SyncChannelMessageHeaders, runtime: $Util.RuntimeOptions): Promise<SyncChannelMessageResponse>;
    /**
     * 同步渠道IM消息
     *
     * @param request - SyncChannelMessageRequest
     * @returns SyncChannelMessageResponse
     */
    syncChannelMessage(request: SyncChannelMessageRequest): Promise<SyncChannelMessageResponse>;
    /**
     * 更新应聘登记表内容
     *
     * @param request - UpdateApplicationRegFormRequest
     * @param headers - UpdateApplicationRegFormHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateApplicationRegFormResponse
     */
    updateApplicationRegFormWithOptions(flowId: string, request: UpdateApplicationRegFormRequest, headers: UpdateApplicationRegFormHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateApplicationRegFormResponse>;
    /**
     * 更新应聘登记表内容
     *
     * @param request - UpdateApplicationRegFormRequest
     * @returns UpdateApplicationRegFormResponse
     */
    updateApplicationRegForm(flowId: string, request: UpdateApplicationRegFormRequest): Promise<UpdateApplicationRegFormResponse>;
    /**
     * 更新面试签到信息
     *
     * @param request - UpdateInterviewSignInInfoRequest
     * @param headers - UpdateInterviewSignInInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateInterviewSignInInfoResponse
     */
    updateInterviewSignInInfoWithOptions(interviewId: string, request: UpdateInterviewSignInInfoRequest, headers: UpdateInterviewSignInInfoHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateInterviewSignInInfoResponse>;
    /**
     * 更新面试签到信息
     *
     * @param request - UpdateInterviewSignInInfoRequest
     * @returns UpdateInterviewSignInInfoResponse
     */
    updateInterviewSignInInfo(interviewId: string, request: UpdateInterviewSignInInfoRequest): Promise<UpdateInterviewSignInInfoResponse>;
    /**
     * 渠道侧职位发布状态变更回调
     *
     * @param request - UpdateJobDeliverRequest
     * @param headers - UpdateJobDeliverHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateJobDeliverResponse
     */
    updateJobDeliverWithOptions(request: UpdateJobDeliverRequest, headers: UpdateJobDeliverHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateJobDeliverResponse>;
    /**
     * 渠道侧职位发布状态变更回调
     *
     * @param request - UpdateJobDeliverRequest
     * @returns UpdateJobDeliverResponse
     */
    updateJobDeliver(request: UpdateJobDeliverRequest): Promise<UpdateJobDeliverResponse>;
}
