/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class CreatePackageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreatePackageRequest extends $tea.Model {
    /**
     * @example
     * 1234
     */
    agentId?: number;
    /**
     * @example
     * 1234
     */
    appId?: number;
    /**
     * @example
     * https://example.com/myapp/index.html
     */
    homeUrl?: string;
    /**
     * @example
     * aaaaaa/bbbbbb
     */
    ossObjectKey?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreatePackageResponseBody extends $tea.Model {
    /**
     * @example
     * 1663748308644pjpF
     */
    taskId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreatePackageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreatePackageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAccessTokenHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAccessTokenRequest extends $tea.Model {
    agentId?: number;
    appId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAccessTokenResponseBody extends $tea.Model {
    /**
     * @example
     * STS.NUPjgnMhCVWvo1HSxfftf
     */
    accessKeyId?: string;
    /**
     * @example
     * ASviryNDy9tTuS5KiYMA6fCYf81vHg4KdoX7CVHz4CSx
     */
    accessKeySecret?: string;
    /**
     * @example
     * dingtalk-bucket
     */
    bucket?: string;
    /**
     * @example
     * oss-cn-shanghai.aliyuncs.com
     */
    endpoint?: string;
    /**
     * @example
     * 2022-09-21T09:32:16Z
     */
    expiration?: string;
    /**
     * @example
     * 5000000002761167/1663751835956
     */
    name?: string;
    /**
     * @example
     * oss-cn-shanghai
     */
    region?: string;
    /**
     * @example
     * CAIS0QJ1q6Ft5B2yfSjIr5blId3aoLdi4ZWdbRf5t3gzavt...
     */
    stsToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAccessTokenResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetAccessTokenResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCreateStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCreateStatusRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1663748308644pjpF
     */
    taskId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCreateStatusResponseBody extends $tea.Model {
    /**
     * @example
     * 1663743241146
     */
    buildTime?: number;
    finished?: boolean;
    /**
     * @example
     * 0
     */
    packageSize?: number;
    /**
     * @example
     * 2
     */
    status?: string;
    /**
     * @example
     * 1663748308644pjpF
     */
    taskId?: string;
    /**
     * @example
     * 0.0.1
     */
    version?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCreateStatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetCreateStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PublishPackageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PublishPackageRequest extends $tea.Model {
    /**
     * @example
     * 1234
     */
    agentId?: number;
    /**
     * @example
     * 1234
     */
    appId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0.0.1
     */
    version?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PublishPackageResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PublishPackageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: PublishPackageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 上传H5离线包
     *
     * @param request - CreatePackageRequest
     * @param headers - CreatePackageHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreatePackageResponse
     */
    createPackageWithOptions(request: CreatePackageRequest, headers: CreatePackageHeaders, runtime: $Util.RuntimeOptions): Promise<CreatePackageResponse>;
    /**
     * 上传H5离线包
     *
     * @param request - CreatePackageRequest
     * @returns CreatePackageResponse
     */
    createPackage(request: CreatePackageRequest): Promise<CreatePackageResponse>;
    /**
     * 获取包上传一次性AccessToken
     *
     * @param request - GetAccessTokenRequest
     * @param headers - GetAccessTokenHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetAccessTokenResponse
     */
    getAccessTokenWithOptions(request: GetAccessTokenRequest, headers: GetAccessTokenHeaders, runtime: $Util.RuntimeOptions): Promise<GetAccessTokenResponse>;
    /**
     * 获取包上传一次性AccessToken
     *
     * @param request - GetAccessTokenRequest
     * @returns GetAccessTokenResponse
     */
    getAccessToken(request: GetAccessTokenRequest): Promise<GetAccessTokenResponse>;
    /**
     * 获取H5离线包版本创建状态
     *
     * @param request - GetCreateStatusRequest
     * @param headers - GetCreateStatusHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetCreateStatusResponse
     */
    getCreateStatusWithOptions(request: GetCreateStatusRequest, headers: GetCreateStatusHeaders, runtime: $Util.RuntimeOptions): Promise<GetCreateStatusResponse>;
    /**
     * 获取H5离线包版本创建状态
     *
     * @param request - GetCreateStatusRequest
     * @returns GetCreateStatusResponse
     */
    getCreateStatus(request: GetCreateStatusRequest): Promise<GetCreateStatusResponse>;
    /**
     * 发布离线包
     *
     * @param request - PublishPackageRequest
     * @param headers - PublishPackageHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns PublishPackageResponse
     */
    publishPackageWithOptions(request: PublishPackageRequest, headers: PublishPackageHeaders, runtime: $Util.RuntimeOptions): Promise<PublishPackageResponse>;
    /**
     * 发布离线包
     *
     * @param request - PublishPackageRequest
     * @returns PublishPackageResponse
     */
    publishPackage(request: PublishPackageRequest): Promise<PublishPackageResponse>;
}
