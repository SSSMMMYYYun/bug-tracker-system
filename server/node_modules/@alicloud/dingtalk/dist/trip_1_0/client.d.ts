/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class GetTravelProcessDetailHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTravelProcessDetailRequest extends $tea.Model {
    /**
     * @example
     * dingLamaXHExxxxxx
     */
    processCorpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1fbmtOweRdqLamaXHExxxxxx
     */
    processInstanceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTravelProcessDetailResponseBody extends $tea.Model {
    result?: GetTravelProcessDetailResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTravelProcessDetailResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetTravelProcessDetailResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PreCheckTemplateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PreCheckTemplateRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding60f2b247ac1cb24024f2f5cc6abecb85
     */
    customerCorpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PreCheckTemplateResponseBody extends $tea.Model {
    result?: PreCheckTemplateResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PreCheckTemplateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: PreCheckTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTripProcessTemplatesHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTripProcessTemplatesRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * dingcd2016f425331dc1acaaa37764f94726
     */
    customerCorpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTripProcessTemplatesResponseBody extends $tea.Model {
    result?: QueryTripProcessTemplatesResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTripProcessTemplatesResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryTripProcessTemplatesResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncBusinessSignInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncBusinessSignInfoRequest extends $tea.Model {
    bizTypeList?: string[];
    /**
     * @example
     * 1661927020219
     */
    gmtOrgPay?: string;
    /**
     * @example
     * 1661927020219
     */
    gmtSign?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ORG_PAY
     */
    orgPayStatus?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SIGN
     */
    signStatus?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding89233847892ndkas
     */
    targetCorpId?: string;
    tmcProductDetailList?: SyncBusinessSignInfoRequestTmcProductDetailList[];
    tmcProductList?: SyncBusinessSignInfoRequestTmcProductList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncBusinessSignInfoResponseBody extends $tea.Model {
    requestId?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncBusinessSignInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SyncBusinessSignInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncCostCenterHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncCostCenterRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding89233847892ndkas
     */
    channelCorpId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    costCenterId?: string;
    /**
     * **if can be null:**
     * false
     */
    deleteFlag?: boolean;
    /**
     * **if can be null:**
     * true
     */
    extension?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2022-02-21 11:11:11
     */
    gmtAction?: string;
    /**
     * @example
     * 123456
     */
    number?: string;
    /**
     * @example
     * 1
     */
    scope?: number;
    /**
     * @example
     * 阿里商旅
     */
    source?: string;
    thirdPartId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 默认成本中心
     */
    title?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20881001829000
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncCostCenterResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncCostCenterResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SyncCostCenterResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncCostCenterEntityHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncCostCenterEntityRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding89233847892ndkas
     */
    channelCorpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123456
     */
    costCenterId?: string;
    /**
     * **if can be null:**
     * true
     */
    delAll?: boolean;
    entityList?: SyncCostCenterEntityRequestEntityList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20881001829000
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncCostCenterEntityResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncCostCenterEntityResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SyncCostCenterEntityResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncInvoiceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncInvoiceRequest extends $tea.Model {
    address?: string;
    /**
     * @example
     * xxx银行
     */
    bankName?: string;
    bankNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding89233847892ndkas
     */
    channelCorpId?: string;
    deleteFlag?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2022-02-21 11:11:11
     */
    gmtAction?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123456
     */
    invoiceId?: string;
    projectIds?: string[];
    /**
     * @example
     * 1
     */
    scope?: number;
    source?: string;
    taxNo?: string;
    tel?: string;
    /**
     * @example
     * 123456
     */
    thirdPartId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 默认发票抬头
     */
    title?: string;
    type?: number;
    unitType?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20881001829000
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncInvoiceResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncInvoiceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SyncInvoiceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncInvoiceEntityHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncInvoiceEntityRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding89233847892ndkas
     */
    channelCorpId?: string;
    /**
     * **if can be null:**
     * true
     */
    delAll?: boolean;
    entityList?: SyncInvoiceEntityRequestEntityList[];
    /**
     * @remarks
     * This parameter is required.
     */
    invoiceId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20881001829000
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncInvoiceEntityResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncInvoiceEntityResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SyncInvoiceEntityResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncProjectHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncProjectRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding89233847892ndkas
     */
    channelCorpId?: string;
    code?: string;
    costCenterId?: string;
    deleteFlag?: boolean;
    /**
     * **if can be null:**
     * true
     */
    extension?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2022-02-21 11:11:11
     */
    gmtAction?: string;
    invoiceId?: string;
    managerIds?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123456
     */
    projectId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 默认项目
     */
    projectName?: string;
    /**
     * @example
     * 1
     */
    scope?: number;
    source?: string;
    thirdPartId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20881001829000
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncProjectResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncProjectResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SyncProjectResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncProjectEntityHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncProjectEntityRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding89233847892ndkas
     */
    channelCorpId?: string;
    /**
     * **if can be null:**
     * true
     */
    delAll?: boolean;
    entityList?: SyncProjectEntityRequestEntityList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123456
     */
    projectId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20881001829000
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncProjectEntityResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncProjectEntityResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SyncProjectEntityResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncSecretKeyHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncSecretKeyRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ADD
     */
    actionType?: string;
    /**
     * @example
     * dnsuuiwenudsjid
     */
    secretString?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding001
     */
    targetCorpId?: string;
    /**
     * @example
     * dingduisdvfd
     */
    tripAppKey?: string;
    /**
     * @example
     * dhsuibdusijue
     */
    tripAppSecurity?: string;
    /**
     * @example
     * isv001
     */
    tripCorpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncSecretKeyResponseBody extends $tea.Model {
    result?: SyncSecretKeyResponseBodyResult;
    /**
     * @example
     * true
     */
    success?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncSecretKeyResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SyncSecretKeyResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTripOrderHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTripOrderRequest extends $tea.Model {
    /**
     * **if can be null:**
     * true
     */
    bizExtension?: string;
    /**
     * @example
     * BUSSINESS
     */
    channelType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * CNY
     */
    currency?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20881001829000
     */
    dingUserId?: string;
    /**
     * @example
     * 0
     */
    discountAmount?: string;
    endorseFlag?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    event?: SyncTripOrderRequestEvent;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2022-05-15 10:10:10
     */
    gmtOrder?: string;
    /**
     * @example
     * 2022-05-15 10:10:10
     */
    gmtPay?: string;
    /**
     * @example
     * 2022-05-15 10:10:10
     */
    gmtRefund?: string;
    invoiceApplyUrl?: string;
    /**
     * @example
     * 20220510170058192311
     */
    journeyBizNo?: string;
    orderDetails?: SyncTripOrderRequestOrderDetails[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20881001829000
     */
    orderNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * https:dingtalk.com/tripOrder/20220510170058192311
     */
    orderUrl?: string;
    processId?: string;
    /**
     * @example
     * 100.00
     */
    realAmount?: string;
    /**
     * @example
     * 0
     */
    refundAmount?: string;
    /**
     * @example
     * 20881001829000
     */
    relativeOrderNo?: string;
    source?: string;
    supplyLogo?: string;
    supplyName?: string;
    /**
     * @example
     * ding32fff839a3e0105d
     */
    targetCorpId?: string;
    tmcCorpId?: string;
    /**
     * @example
     * 100.00
     */
    totalAmount?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * FLIGHT
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTripOrderResponseBody extends $tea.Model {
    requestId?: string;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTripOrderResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SyncTripOrderResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTripProductConfigHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTripProductConfigRequest extends $tea.Model {
    targetCorpId?: string;
    tripProductConfigList?: SyncTripProductConfigRequestTripProductConfigList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTripProductConfigResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTripProductConfigResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SyncTripProductConfigResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class TripPlatformUnifiedEntryHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class TripPlatformUnifiedEntryRequest extends $tea.Model {
    /**
     * @example
     * {"projects":[{"thirdId":"00001","number":"00001","scope":1,"action":0,"name":"总务01项目"}]}
     */
    messages?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * partner_syncProject
     */
    method?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class TripPlatformUnifiedEntryResponseBody extends $tea.Model {
    requestId?: string;
    result?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class TripPlatformUnifiedEntryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: TripPlatformUnifiedEntryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpgradeTemplateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpgradeTemplateRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * dingcd2016f425331dc1acaaa37764f94726
     */
    channelCorpId?: string;
    forceUpgrade?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * dingcd2016f425331dc1acaaa37764f94726
     */
    tmcCorpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpgradeTemplateResponseBody extends $tea.Model {
    result?: UpgradeTemplateResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpgradeTemplateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpgradeTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTravelProcessDetailResponseBodyResultExtFormComponent extends $tea.Model {
    /**
     * @example
     * ""
     */
    bizAlias?: string;
    /**
     * @example
     * MoneyField
     */
    componentType?: string;
    /**
     * @example
     * "{\"upper\":\"玖元玖角玖分\",\"componentName\":\"MoneyField\"}"
     */
    extValue?: string;
    /**
     * @example
     * MoneyField_18PDM5K773FK0
     */
    id?: string;
    /**
     * @example
     * 预估金额
     */
    name?: string;
    /**
     * @example
     * 9.99
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTravelProcessDetailResponseBodyResultJourneysArrival extends $tea.Model {
    /**
     * @example
     * TSN
     */
    code?: string;
    /**
     * @example
     * CN
     */
    countryCode?: string;
    /**
     * @example
     * 中国
     */
    countryName?: string;
    /**
     * @example
     * 天津市
     */
    name?: string;
    /**
     * @example
     * 120000
     */
    nationalCityCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTravelProcessDetailResponseBodyResultJourneysDeparture extends $tea.Model {
    /**
     * @example
     * BJK
     */
    code?: string;
    /**
     * @example
     * CN
     */
    countryCode?: string;
    /**
     * @example
     * 中国
     */
    countryName?: string;
    /**
     * @example
     * 北京市
     */
    name?: string;
    /**
     * @example
     * 110000
     */
    nationalCityCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTravelProcessDetailResponseBodyResultJourneys extends $tea.Model {
    arrival?: GetTravelProcessDetailResponseBodyResultJourneysArrival;
    /**
     * @example
     * 成本中心一
     */
    costCenter?: string;
    /**
     * @example
     * 123
     */
    costCenterId?: string;
    /**
     * @example
     * c00001
     */
    costCenterThirdPartyId?: string;
    departure?: GetTravelProcessDetailResponseBodyResultJourneysDeparture;
    /**
     * @example
     * 2023-10-25
     */
    endTime?: string;
    /**
     * @example
     * 2024-03-12 10:54:00
     */
    endTimeAcc?: string;
    /**
     * @example
     * 发票抬头一
     */
    invoiceTitle?: string;
    /**
     * @example
     * 123
     */
    invoiceTitleId?: string;
    /**
     * @example
     * i0001
     */
    invoiceTitleThirdPartyId?: string;
    /**
     * @example
     * 费用归属项目一
     */
    itineraryProject?: string;
    /**
     * @example
     * 123
     */
    itineraryProjectId?: string;
    /**
     * @example
     * y00001
     */
    itineraryProjectThirdPartyId?: string;
    /**
     * @example
     * 123455xxxxxxxx
     */
    journeyBizNo?: string;
    /**
     * @example
     * 2023-10-20
     */
    startTime?: string;
    /**
     * @example
     * 2024-03-12 10:54:00
     */
    startTimeAcc?: string;
    /**
     * @example
     * 天
     */
    timeUnit?: string;
    /**
     * @example
     * 飞机
     */
    travelType?: string;
    /**
     * @example
     * 单程
     */
    tripWay?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTravelProcessDetailResponseBodyResultTasks extends $tea.Model {
    /**
     * @example
     * 1918_5cd3
     */
    activityId?: string;
    /**
     * @example
     * 2024-07-01 00:00:00
     */
    createTime?: string;
    /**
     * @example
     * 2024-07-01 01:00:00
     */
    finishTime?: string;
    /**
     * @example
     * 12374
     */
    originUserId?: string;
    /**
     * @example
     * e7fh112WTTawy6dLtiIlqQ10051721014983
     */
    processInstanceId?: string;
    /**
     * @example
     * AGREE
     */
    result?: string;
    /**
     * @example
     * COMPLETED
     */
    status?: string;
    /**
     * @example
     * 87882310449
     */
    taskId?: number;
    /**
     * @example
     * aflow.dingtalk.com?procInsId=xxx&taskId=yyy&businessId=zzz
     */
    url?: string;
    /**
     * @example
     * 2220314
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTravelProcessDetailResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2024-07-18 00:00:00
     */
    archiveTime?: string;
    /**
     * @example
     * alitrip.business
     */
    bizCategoryId?: string;
    /**
     * @example
     * 202310231720000276784
     */
    businessId?: string;
    /**
     * @example
     * ding123456xxxx
     */
    corpId?: string;
    /**
     * @example
     * it成本中心
     */
    costCenter?: string;
    /**
     * @example
     * 成本中心id
     */
    costCenterId?: string;
    /**
     * @example
     * c00001
     */
    costCenterThirdPartyId?: string;
    /**
     * @example
     * 2024-03-18 17:07:00
     */
    createTime?: string;
    extFormComponent?: GetTravelProcessDetailResponseBodyResultExtFormComponent[];
    /**
     * @example
     * 部门费用
     */
    feeType?: string;
    /**
     * @example
     * 发票抬头
     */
    invoiceTitle?: string;
    /**
     * @example
     * 发票抬头id
     */
    invoiceTitleId?: string;
    /**
     * @example
     * i0001
     */
    invoiceTitleThirdPartyId?: string;
    /**
     * @example
     * 电商对接项目
     */
    itineraryProject?: string;
    /**
     * @example
     * y00001
     */
    itineraryProjectThirdPartyId?: string;
    journeys?: GetTravelProcessDetailResponseBodyResultJourneys[];
    /**
     * @example
     * AG3WERxWRFex63xxxxx
     */
    mainProcessInstanceId?: string;
    /**
     * @example
     * 坐飞机出差
     */
    memo?: string;
    /**
     * @example
     * staffidxxxxx
     */
    originatorId?: string;
    /**
     * @example
     * staffIdxyy
     */
    originatorIdOnBehalf?: string;
    /**
     * @example
     * AG3U12xWRFex63hxxxxx
     */
    processInstanceId?: string;
    /**
     * @example
     * agree
     */
    processResult?: string;
    /**
     * @example
     * COMPLETED
     */
    processStatus?: string;
    /**
     * @example
     * 因公出差
     */
    remark?: string;
    tasks?: GetTravelProcessDetailResponseBodyResultTasks[];
    /**
     * @example
     * 费用归属部门
     */
    travelCategory?: string;
    travelers?: string[];
    /**
     * @example
     * 2
     */
    tripDays?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PreCheckTemplateResponseBodyResultBlockRecords extends $tea.Model {
    blockType?: string;
    reason?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PreCheckTemplateResponseBodyResult extends $tea.Model {
    blockRecords?: PreCheckTemplateResponseBodyResultBlockRecords[];
    pass?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTripProcessTemplatesResponseBodyResultSchemas extends $tea.Model {
    processCode?: string;
    processName?: string;
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTripProcessTemplatesResponseBodyResult extends $tea.Model {
    schemas?: QueryTripProcessTemplatesResponseBodyResultSchemas[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncBusinessSignInfoRequestTmcProductDetailList extends $tea.Model {
    /**
     * @example
     * 1661927020219
     */
    gmtOrgPay?: string;
    payType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    product?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncBusinessSignInfoRequestTmcProductListProductDetailList extends $tea.Model {
    categoryType?: string;
    /**
     * @example
     * 1661927020219
     */
    gmtOrgPay?: string;
    openStatus?: boolean;
    payType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    product?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncBusinessSignInfoRequestTmcProductList extends $tea.Model {
    productDetailList?: SyncBusinessSignInfoRequestTmcProductListProductDetailList[];
    /**
     * @remarks
     * This parameter is required.
     */
    tmcCorpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncCostCenterEntityRequestEntityList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    entityId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    entityType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncInvoiceEntityRequestEntityList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    entityId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    entityType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncProjectEntityRequestEntityList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    entityId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    entityType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncSecretKeyResponseBodyResult extends $tea.Model {
    /**
     * @example
     * dsiuuuuiasudnuai
     */
    secretString?: string;
    /**
     * @example
     * ding001
     */
    targetCorpId?: string;
    /**
     * @example
     * dingwieudsiu
     */
    tripAppKey?: string;
    /**
     * @example
     * dusuduiidvs
     */
    tripAppSecurity?: string;
    /**
     * @example
     * isv001
     */
    tripCorpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTripOrderRequestEvent extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * INIT
     */
    action?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2022-05-15 10:10:10
     */
    gmtAction?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTripOrderRequestOrderDetailsHotelLocation extends $tea.Model {
    /**
     * @example
     * 30.278569
     */
    lat?: string;
    /**
     * @example
     * 120.023458
     */
    lon?: string;
    /**
     * @example
     * GCJ02
     */
    source?: string;
    /**
     * @example
     * https://ditu.amap.com/place/B0FFIYYAIA
     */
    url?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTripOrderRequestOrderDetailsOpenConsumerInfo extends $tea.Model {
    corpId?: string;
    name?: string;
    staffFlag?: boolean;
    status?: string;
    ticketAmount?: string;
    ticketNo?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTripOrderRequestOrderDetails extends $tea.Model {
    /**
     * @example
     * 2022-05-20 12:20:00
     */
    arrivalTime?: string;
    /**
     * @example
     * 红色
     */
    carColor?: string;
    /**
     * @example
     * 帕萨特
     */
    carModel?: string;
    /**
     * @example
     * 浙A0Z***7
     */
    carNumber?: string;
    /**
     * @example
     * 单早
     */
    cateringType?: string;
    /**
     * @example
     * 2022-05-20 14:00:00
     */
    checkInTime?: string;
    /**
     * @example
     * 2022-05-21 12:00:00
     */
    checkOutTime?: string;
    /**
     * @example
     * 2022-05-20 10:00:00
     */
    departTime?: string;
    /**
     * @example
     * 杭州
     */
    destinationCity?: string;
    /**
     * @example
     * 151
     */
    destinationCityCode?: string;
    /**
     * @example
     * 杭州
     */
    destinationStation?: string;
    /**
     * @example
     * T3
     */
    destinationTerminalBuilding?: string;
    detailAmount?: string;
    /**
     * @example
     * 浙江省杭州市余杭区聚橙路文昌路
     */
    hotelAddress?: string;
    /**
     * @example
     * 杭州
     */
    hotelCity?: string;
    hotelLocation?: SyncTripOrderRequestOrderDetailsHotelLocation;
    /**
     * @example
     * 亲橙客栈
     */
    hotelName?: string;
    openConsumerInfo?: SyncTripOrderRequestOrderDetailsOpenConsumerInfo[];
    /**
     * @example
     * 北京
     */
    originCity?: string;
    /**
     * @example
     * 150
     */
    originCityCode?: string;
    /**
     * @example
     * 北京
     */
    originStation?: string;
    /**
     * @example
     * T3
     */
    originTerminalBuilding?: string;
    roomCount?: number;
    /**
     * @example
     * 经济舱/7车12A
     */
    seatInfo?: string;
    /**
     * @example
     * REALTIME
     */
    serviceType?: string;
    /**
     * @example
     * http://dingtalk.com/static/logo.png
     */
    subSupplyLogo?: string;
    /**
     * @example
     * 国航
     */
    subSupplyName?: string;
    /**
     * @example
     * 专车
     */
    taxiType?: string;
    /**
     * @example
     * 2022-05-20 14:00:00
     */
    telephone?: string;
    /**
     * @example
     * CA1762
     */
    transportNumber?: string;
    /**
     * @example
     * 商务标准间
     */
    typeDescription?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTripProductConfigRequestTripProductConfigListTmcInfos extends $tea.Model {
    categoryType?: string;
    gmtOrgPay?: string;
    payType?: string;
    tmcCorpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTripProductConfigRequestTripProductConfigList extends $tea.Model {
    allVisible?: boolean;
    deptVisibleScopes?: string[];
    openStatus?: boolean;
    productType?: string;
    roleVisibleScopes?: string[];
    staffVisibleScopes?: string[];
    tmcInfos?: SyncTripProductConfigRequestTripProductConfigListTmcInfos[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpgradeTemplateResponseBodyResult extends $tea.Model {
    upgradeResult?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 获取差旅审批实例详情
     *
     * @param request - GetTravelProcessDetailRequest
     * @param headers - GetTravelProcessDetailHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetTravelProcessDetailResponse
     */
    getTravelProcessDetailWithOptions(request: GetTravelProcessDetailRequest, headers: GetTravelProcessDetailHeaders, runtime: $Util.RuntimeOptions): Promise<GetTravelProcessDetailResponse>;
    /**
     * 获取差旅审批实例详情
     *
     * @param request - GetTravelProcessDetailRequest
     * @returns GetTravelProcessDetailResponse
     */
    getTravelProcessDetail(request: GetTravelProcessDetailRequest): Promise<GetTravelProcessDetailResponse>;
    /**
     * 表单升级预校验
     *
     * @param request - PreCheckTemplateRequest
     * @param headers - PreCheckTemplateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns PreCheckTemplateResponse
     */
    preCheckTemplateWithOptions(request: PreCheckTemplateRequest, headers: PreCheckTemplateHeaders, runtime: $Util.RuntimeOptions): Promise<PreCheckTemplateResponse>;
    /**
     * 表单升级预校验
     *
     * @param request - PreCheckTemplateRequest
     * @returns PreCheckTemplateResponse
     */
    preCheckTemplate(request: PreCheckTemplateRequest): Promise<PreCheckTemplateResponse>;
    /**
     * 查询审批套件详情
     *
     * @param request - QueryTripProcessTemplatesRequest
     * @param headers - QueryTripProcessTemplatesHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryTripProcessTemplatesResponse
     */
    queryTripProcessTemplatesWithOptions(request: QueryTripProcessTemplatesRequest, headers: QueryTripProcessTemplatesHeaders, runtime: $Util.RuntimeOptions): Promise<QueryTripProcessTemplatesResponse>;
    /**
     * 查询审批套件详情
     *
     * @param request - QueryTripProcessTemplatesRequest
     * @returns QueryTripProcessTemplatesResponse
     */
    queryTripProcessTemplates(request: QueryTripProcessTemplatesRequest): Promise<QueryTripProcessTemplatesResponse>;
    /**
     * 同步服务商企业签约变更事件
     *
     * @param request - SyncBusinessSignInfoRequest
     * @param headers - SyncBusinessSignInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SyncBusinessSignInfoResponse
     */
    syncBusinessSignInfoWithOptions(request: SyncBusinessSignInfoRequest, headers: SyncBusinessSignInfoHeaders, runtime: $Util.RuntimeOptions): Promise<SyncBusinessSignInfoResponse>;
    /**
     * 同步服务商企业签约变更事件
     *
     * @param request - SyncBusinessSignInfoRequest
     * @returns SyncBusinessSignInfoResponse
     */
    syncBusinessSignInfo(request: SyncBusinessSignInfoRequest): Promise<SyncBusinessSignInfoResponse>;
    /**
     * 出差表单成本中心同步
     *
     * @param request - SyncCostCenterRequest
     * @param headers - SyncCostCenterHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SyncCostCenterResponse
     */
    syncCostCenterWithOptions(request: SyncCostCenterRequest, headers: SyncCostCenterHeaders, runtime: $Util.RuntimeOptions): Promise<SyncCostCenterResponse>;
    /**
     * 出差表单成本中心同步
     *
     * @param request - SyncCostCenterRequest
     * @returns SyncCostCenterResponse
     */
    syncCostCenter(request: SyncCostCenterRequest): Promise<SyncCostCenterResponse>;
    /**
     * 出差表单成本中心可用范围
     *
     * @param request - SyncCostCenterEntityRequest
     * @param headers - SyncCostCenterEntityHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SyncCostCenterEntityResponse
     */
    syncCostCenterEntityWithOptions(request: SyncCostCenterEntityRequest, headers: SyncCostCenterEntityHeaders, runtime: $Util.RuntimeOptions): Promise<SyncCostCenterEntityResponse>;
    /**
     * 出差表单成本中心可用范围
     *
     * @param request - SyncCostCenterEntityRequest
     * @returns SyncCostCenterEntityResponse
     */
    syncCostCenterEntity(request: SyncCostCenterEntityRequest): Promise<SyncCostCenterEntityResponse>;
    /**
     * 出差表单发票抬头
     *
     * @param request - SyncInvoiceRequest
     * @param headers - SyncInvoiceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SyncInvoiceResponse
     */
    syncInvoiceWithOptions(request: SyncInvoiceRequest, headers: SyncInvoiceHeaders, runtime: $Util.RuntimeOptions): Promise<SyncInvoiceResponse>;
    /**
     * 出差表单发票抬头
     *
     * @param request - SyncInvoiceRequest
     * @returns SyncInvoiceResponse
     */
    syncInvoice(request: SyncInvoiceRequest): Promise<SyncInvoiceResponse>;
    /**
     * 出差表单发票抬头可用范围
     *
     * @param request - SyncInvoiceEntityRequest
     * @param headers - SyncInvoiceEntityHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SyncInvoiceEntityResponse
     */
    syncInvoiceEntityWithOptions(request: SyncInvoiceEntityRequest, headers: SyncInvoiceEntityHeaders, runtime: $Util.RuntimeOptions): Promise<SyncInvoiceEntityResponse>;
    /**
     * 出差表单发票抬头可用范围
     *
     * @param request - SyncInvoiceEntityRequest
     * @returns SyncInvoiceEntityResponse
     */
    syncInvoiceEntity(request: SyncInvoiceEntityRequest): Promise<SyncInvoiceEntityResponse>;
    /**
     * 出差表单项目
     *
     * @param request - SyncProjectRequest
     * @param headers - SyncProjectHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SyncProjectResponse
     */
    syncProjectWithOptions(request: SyncProjectRequest, headers: SyncProjectHeaders, runtime: $Util.RuntimeOptions): Promise<SyncProjectResponse>;
    /**
     * 出差表单项目
     *
     * @param request - SyncProjectRequest
     * @returns SyncProjectResponse
     */
    syncProject(request: SyncProjectRequest): Promise<SyncProjectResponse>;
    /**
     * 出差表单项目可用范围
     *
     * @param request - SyncProjectEntityRequest
     * @param headers - SyncProjectEntityHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SyncProjectEntityResponse
     */
    syncProjectEntityWithOptions(request: SyncProjectEntityRequest, headers: SyncProjectEntityHeaders, runtime: $Util.RuntimeOptions): Promise<SyncProjectEntityResponse>;
    /**
     * 出差表单项目可用范围
     *
     * @param request - SyncProjectEntityRequest
     * @returns SyncProjectEntityResponse
     */
    syncProjectEntity(request: SyncProjectEntityRequest): Promise<SyncProjectEntityResponse>;
    /**
     * 调用本接口同步公司密钥信息。
     *
     * @param request - SyncSecretKeyRequest
     * @param headers - SyncSecretKeyHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SyncSecretKeyResponse
     */
    syncSecretKeyWithOptions(request: SyncSecretKeyRequest, headers: SyncSecretKeyHeaders, runtime: $Util.RuntimeOptions): Promise<SyncSecretKeyResponse>;
    /**
     * 调用本接口同步公司密钥信息。
     *
     * @param request - SyncSecretKeyRequest
     * @returns SyncSecretKeyResponse
     */
    syncSecretKey(request: SyncSecretKeyRequest): Promise<SyncSecretKeyResponse>;
    /**
     * 同步出行订单变更事件
     *
     * @param request - SyncTripOrderRequest
     * @param headers - SyncTripOrderHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SyncTripOrderResponse
     */
    syncTripOrderWithOptions(request: SyncTripOrderRequest, headers: SyncTripOrderHeaders, runtime: $Util.RuntimeOptions): Promise<SyncTripOrderResponse>;
    /**
     * 同步出行订单变更事件
     *
     * @param request - SyncTripOrderRequest
     * @returns SyncTripOrderResponse
     */
    syncTripOrder(request: SyncTripOrderRequest): Promise<SyncTripOrderResponse>;
    /**
     * 预订管理产品线配置同步
     *
     * @param request - SyncTripProductConfigRequest
     * @param headers - SyncTripProductConfigHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SyncTripProductConfigResponse
     */
    syncTripProductConfigWithOptions(request: SyncTripProductConfigRequest, headers: SyncTripProductConfigHeaders, runtime: $Util.RuntimeOptions): Promise<SyncTripProductConfigResponse>;
    /**
     * 预订管理产品线配置同步
     *
     * @param request - SyncTripProductConfigRequest
     * @returns SyncTripProductConfigResponse
     */
    syncTripProductConfig(request: SyncTripProductConfigRequest): Promise<SyncTripProductConfigResponse>;
    /**
     * 智能差旅平台数据互通统一入口
     *
     * @param request - TripPlatformUnifiedEntryRequest
     * @param headers - TripPlatformUnifiedEntryHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns TripPlatformUnifiedEntryResponse
     */
    tripPlatformUnifiedEntryWithOptions(request: TripPlatformUnifiedEntryRequest, headers: TripPlatformUnifiedEntryHeaders, runtime: $Util.RuntimeOptions): Promise<TripPlatformUnifiedEntryResponse>;
    /**
     * 智能差旅平台数据互通统一入口
     *
     * @param request - TripPlatformUnifiedEntryRequest
     * @returns TripPlatformUnifiedEntryResponse
     */
    tripPlatformUnifiedEntry(request: TripPlatformUnifiedEntryRequest): Promise<TripPlatformUnifiedEntryResponse>;
    /**
     * 升级套件
     *
     * @param request - UpgradeTemplateRequest
     * @param headers - UpgradeTemplateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpgradeTemplateResponse
     */
    upgradeTemplateWithOptions(request: UpgradeTemplateRequest, headers: UpgradeTemplateHeaders, runtime: $Util.RuntimeOptions): Promise<UpgradeTemplateResponse>;
    /**
     * 升级套件
     *
     * @param request - UpgradeTemplateRequest
     * @returns UpgradeTemplateResponse
     */
    upgradeTemplate(request: UpgradeTemplateRequest): Promise<UpgradeTemplateResponse>;
}
