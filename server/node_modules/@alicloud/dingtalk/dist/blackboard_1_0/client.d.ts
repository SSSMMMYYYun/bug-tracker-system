/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class QueryBlackboardReadUnReadHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryBlackboardReadUnReadRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 49dc87dc1b30cd099b13a
     */
    blackboardId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 200
     */
    maxResults?: number;
    /**
     * @example
     * xb1dc
     */
    nextToken?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager01
     */
    operationUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryBlackboardReadUnReadResponseBody extends $tea.Model {
    nextToken?: string;
    users?: QueryBlackboardReadUnReadResponseBodyUsers[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryBlackboardReadUnReadResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryBlackboardReadUnReadResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryBlackboardSpaceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryBlackboardSpaceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager01
     */
    operationUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryBlackboardSpaceResponseBody extends $tea.Model {
    spaceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryBlackboardSpaceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryBlackboardSpaceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryBlackboardReadUnReadResponseBodyUsers extends $tea.Model {
    /**
     * @example
     * true
     */
    read?: string;
    readTimestamp?: number;
    /**
     * @example
     * 12039
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 查询公告已读未读人员列表
     *
     * @param request - QueryBlackboardReadUnReadRequest
     * @param headers - QueryBlackboardReadUnReadHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryBlackboardReadUnReadResponse
     */
    queryBlackboardReadUnReadWithOptions(request: QueryBlackboardReadUnReadRequest, headers: QueryBlackboardReadUnReadHeaders, runtime: $Util.RuntimeOptions): Promise<QueryBlackboardReadUnReadResponse>;
    /**
     * 查询公告已读未读人员列表
     *
     * @param request - QueryBlackboardReadUnReadRequest
     * @returns QueryBlackboardReadUnReadResponse
     */
    queryBlackboardReadUnRead(request: QueryBlackboardReadUnReadRequest): Promise<QueryBlackboardReadUnReadResponse>;
    /**
     * 获取公告钉盘空间信息
     *
     * @param request - QueryBlackboardSpaceRequest
     * @param headers - QueryBlackboardSpaceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryBlackboardSpaceResponse
     */
    queryBlackboardSpaceWithOptions(request: QueryBlackboardSpaceRequest, headers: QueryBlackboardSpaceHeaders, runtime: $Util.RuntimeOptions): Promise<QueryBlackboardSpaceResponse>;
    /**
     * 获取公告钉盘空间信息
     *
     * @param request - QueryBlackboardSpaceRequest
     * @returns QueryBlackboardSpaceResponse
     */
    queryBlackboardSpace(request: QueryBlackboardSpaceRequest): Promise<QueryBlackboardSpaceResponse>;
}
