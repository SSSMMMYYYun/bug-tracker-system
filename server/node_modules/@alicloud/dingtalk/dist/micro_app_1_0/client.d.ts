/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class AddAppRolesToMemberHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddAppRolesToMemberRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    memberId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    memberType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    opUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    roleList?: AddAppRolesToMemberRequestRoleList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddAppRolesToMemberResponseBody extends $tea.Model {
    result?: AddAppRolesToMemberResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddAppRolesToMemberResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddAppRolesToMemberResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddAppToWorkBenchGroupHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddAppToWorkBenchGroupRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * namexx
     */
    componentId?: string;
    /**
     * @example
     * corpxxxx
     */
    ecologicalCorpId?: string;
    /**
     * @example
     * xxxx
     */
    opUnionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddAppToWorkBenchGroupResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddAppToWorkBenchGroupResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddAppToWorkBenchGroupResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddMemberToAppRoleHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddMemberToAppRoleRequest extends $tea.Model {
    deptIdList?: number[];
    /**
     * @remarks
     * This parameter is required.
     */
    opUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    scopeVersion?: number;
    userIdList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddMemberToAppRoleResponseBody extends $tea.Model {
    /**
     * @example
     * 123
     */
    latestScopeVersion?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddMemberToAppRoleResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddMemberToAppRoleResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AnheiPResponseBody extends $tea.Model {
    result?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AnheiPResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AnheiPResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AnheiTest888ResponseBody extends $tea.Model {
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AnheiTest888Response extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AnheiTest888ResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AnheiTestBResponseBody extends $tea.Model {
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AnheiTestBResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AnheiTestBResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AnheiTestNineResponseBody extends $tea.Model {
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AnheiTestNineResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AnheiTestNineResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppStatusManagerTestRequest extends $tea.Model {
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppStatusManagerTestResponseBody extends $tea.Model {
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppStatusManagerTestResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AppStatusManagerTestResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AyunTestResponseBody extends $tea.Model {
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AyunTestResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AyunTestResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AyunTestOnlineResponseBody extends $tea.Model {
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AyunTestOnlineResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AyunTestOnlineResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateApaasAppHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateApaasAppRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    appDesc?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    appIcon?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    appName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    bizAppId?: string;
    homepageEditLink?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    homepageLink?: string;
    isShortCut?: number;
    ompLink?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    opUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    pcHomepageEditLink?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    pcHomepageLink?: string;
    templateKey?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateApaasAppResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    agentId?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    bizAppId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateApaasAppResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateApaasAppResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateInnerAppHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateInnerAppRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * descxxx
     */
    desc?: string;
    developType?: number;
    /**
     * @example
     * https://www.dingtalk.com
     */
    homepageLink?: string;
    /**
     * @example
     * mediaxxx
     */
    icon?: string;
    ipWhiteList?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * namexx
     */
    name?: string;
    /**
     * @example
     * https://www.dingtalk.com
     */
    ompLink?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxxx
     */
    opUnionId?: string;
    /**
     * @example
     * https://www.dingtalk.com
     */
    pcHomepageLink?: string;
    /**
     * @example
     * BASE
     */
    scopeType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateInnerAppResponseBody extends $tea.Model {
    /**
     * @example
     * 111
     */
    agentId?: number;
    appKey?: string;
    appSecret?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateInnerAppResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateInnerAppResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteAppRoleHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteAppRoleRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteAppRoleResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteAppRoleResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteAppRoleResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteInnerAppHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteInnerAppRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxxx
     */
    opUnionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteInnerAppResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteInnerAppResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteInnerAppResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetApaasAppHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetApaasAppResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    agentId?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    bizAppId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    publishStatus?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetApaasAppResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetApaasAppResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAppResourceUseInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAppResourceUseInfoRequest extends $tea.Model {
    /**
     * @example
     * api_count
     */
    benefitCode?: string;
    /**
     * @example
     * 202302
     */
    endTime?: string;
    /**
     * @example
     * month
     */
    periodType?: string;
    /**
     * @example
     * 202301
     */
    startTime?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAppResourceUseInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetAppResourceUseInfoResponseBody[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAppRoleScopeByRoleIdHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAppRoleScopeByRoleIdResponseBody extends $tea.Model {
    /**
     * @example
     * false
     */
    canManageRole?: boolean;
    deptIdList?: number[];
    /**
     * @example
     * 123
     */
    roleId?: number;
    /**
     * @example
     * 财务
     */
    roleName?: string;
    /**
     * @example
     * PART_VISIBLE
     */
    scopeType?: string;
    /**
     * @example
     * 123
     */
    scopeVersion?: string;
    userIdList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAppRoleScopeByRoleIdResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetAppRoleScopeByRoleIdResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInnerAppHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInnerAppRequest extends $tea.Model {
    /**
     * @example
     * corpxxxx
     */
    ecologicalCorpId?: string;
    /**
     * @example
     * xxxx
     */
    opUnionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInnerAppResponseBody extends $tea.Model {
    /**
     * @example
     * 1
     */
    agentId?: number;
    /**
     * @example
     * aooxxx
     */
    appKey?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * aaaxxxxx
     */
    appSecret?: string;
    /**
     * @example
     * desc
     */
    desc?: string;
    /**
     * @example
     * https://www.dingtalk.com
     */
    homepageLink?: string;
    /**
     * @example
     * icon
     */
    icon?: string;
    ipWhiteList?: string[];
    /**
     * @example
     * name
     */
    name?: string;
    /**
     * @example
     * https://www.dingtalk.com
     */
    ompLink?: string;
    /**
     * @example
     * https://www.dingtalk.com
     */
    pcHomepageLink?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInnerAppResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetInnerAppResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMicroAppScopeHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMicroAppScopeResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: GetMicroAppScopeResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMicroAppScopeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetMicroAppScopeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMicroAppUserAccessHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMicroAppUserAccessResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMicroAppUserAccessResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetMicroAppUserAccessResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserAppDevAccessHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserAppDevAccessResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserAppDevAccessResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetUserAppDevAccessResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListAllAppHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListAllAppResponseBody extends $tea.Model {
    appList?: ListAllAppResponseBodyAppList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListAllAppResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListAllAppResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListAllInnerAppsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListAllInnerAppsResponseBody extends $tea.Model {
    appList?: ListAllInnerAppsResponseBodyAppList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListAllInnerAppsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListAllInnerAppsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListAppRoleScopesHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListAppRoleScopesRequest extends $tea.Model {
    nextToken?: number;
    size?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListAppRoleScopesResponseBody extends $tea.Model {
    dataList?: ListAppRoleScopesResponseBodyDataList[];
    /**
     * @example
     * true
     */
    hasMore?: boolean;
    /**
     * @example
     * 0
     */
    nextToken?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListAppRoleScopesResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListAppRoleScopesResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListInnerAppHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListInnerAppRequest extends $tea.Model {
    /**
     * @example
     * xxxx
     */
    ecologicalCorpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListInnerAppResponseBody extends $tea.Model {
    appList?: ListInnerAppResponseBodyAppList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListInnerAppResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListInnerAppResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListInnerAppVersionHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListInnerAppVersionResponseBody extends $tea.Model {
    appVersionList?: ListInnerAppVersionResponseBodyAppVersionList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListInnerAppVersionResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListInnerAppVersionResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListRoleInfoByUserHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListRoleInfoByUserResponseBody extends $tea.Model {
    result?: ListRoleInfoByUserResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListRoleInfoByUserResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListRoleInfoByUserResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListUserVilebleAppHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListUserVilebleAppResponseBody extends $tea.Model {
    appList?: ListUserVilebleAppResponseBodyAppList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListUserVilebleAppResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListUserVilebleAppResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PageInnerAppHistoryVersionHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PageInnerAppHistoryVersionRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PageInnerAppHistoryVersionResponseBody extends $tea.Model {
    miniAppVersionList?: PageInnerAppHistoryVersionResponseBodyMiniAppVersionList[];
    /**
     * @example
     * 1
     */
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PageInnerAppHistoryVersionResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: PageInnerAppHistoryVersionResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PublishInnerAppVersionHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PublishInnerAppVersionRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    appVersionId?: number;
    miniAppOnPc?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxx
     */
    opUnionId?: string;
    /**
     * @example
     * online
     */
    publishType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PublishInnerAppVersionResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PublishInnerAppVersionResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: PublishInnerAppVersionResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RebuildRoleScopeForAppRoleHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RebuildRoleScopeForAppRoleRequest extends $tea.Model {
    deptIdList?: number[];
    /**
     * @remarks
     * This parameter is required.
     */
    opUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    scopeType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    scopeVersion?: number;
    userIdList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RebuildRoleScopeForAppRoleResponseBody extends $tea.Model {
    /**
     * @example
     * 123
     */
    latestScopeVersion?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RebuildRoleScopeForAppRoleResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: RebuildRoleScopeForAppRoleResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RegisterCustomAppRoleHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RegisterCustomAppRoleRequest extends $tea.Model {
    /**
     * @example
     * false
     */
    canManageRole?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    opUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    roleName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RegisterCustomAppRoleResponseBody extends $tea.Model {
    /**
     * @example
     * 123
     */
    roleId?: number;
    /**
     * @example
     * 123123123
     */
    scopeVersion?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RegisterCustomAppRoleResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: RegisterCustomAppRoleResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RemoveApaasAppHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RemoveApaasAppRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    bizAppId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RemoveApaasAppResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RemoveApaasAppResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: RemoveApaasAppResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RemoveMemberForAppRoleHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RemoveMemberForAppRoleRequest extends $tea.Model {
    deptIdList?: number[];
    /**
     * @remarks
     * This parameter is required.
     */
    opUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    scopeVersion?: number;
    userIdList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RemoveMemberForAppRoleResponseBody extends $tea.Model {
    /**
     * @example
     * 123
     */
    latestScopeVersion?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RemoveMemberForAppRoleResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: RemoveMemberForAppRoleResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RollbackInnerAppVersionHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RollbackInnerAppVersionRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    appVersionId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxx
     */
    opUnionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RollbackInnerAppVersionResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RollbackInnerAppVersionResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: RollbackInnerAppVersionResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SetMicroAppScopeHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SetMicroAppScopeRequest extends $tea.Model {
    addDeptIds?: number[];
    addRoleIds?: number[];
    addUserIds?: string[];
    delDeptIds?: number[];
    delRoleIds?: number[];
    delUserIds?: string[];
    onlyAdminVisible?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SetMicroAppScopeResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SetMicroAppScopeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SetMicroAppScopeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApaasAppHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApaasAppRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    appIcon?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    appName?: string;
    appStatus?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    bizAppId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApaasAppResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    agentId?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    bizAppId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateApaasAppResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateApaasAppResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateAppRoleInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateAppRoleInfoRequest extends $tea.Model {
    canManageRole?: boolean;
    newRoleName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateAppRoleInfoResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateAppRoleInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateAppRoleInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInnerAppHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInnerAppRequest extends $tea.Model {
    /**
     * @example
     * descxxx
     */
    desc?: string;
    /**
     * @example
     * https://www.dingtalk.com
     */
    homepageLink?: string;
    /**
     * @example
     * mediaxxx
     */
    icon?: string;
    ipWhiteList?: string[];
    /**
     * @example
     * namexx
     */
    name?: string;
    /**
     * @example
     * https://www.dingtalk.com
     */
    ompLink?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxxx
     */
    opUnionId?: string;
    /**
     * @example
     * https://www.dingtalk.com
     */
    pcHomepageLink?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInnerAppResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInnerAppResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateInnerAppResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddAppRolesToMemberRequestRoleList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    roleId?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    scopeVersion?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddAppRolesToMemberResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 123
     */
    latestScopeVersion?: number;
    /**
     * @example
     * 123
     */
    roleId?: number;
    /**
     * @example
     * userNoPrivilegeToManageApp
     */
    subErrorCode?: string;
    /**
     * @example
     * 传入的角色范围数据版本号不合法
     */
    subErrorMsg?: string;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAppResourceUseInfoResponseBody extends $tea.Model {
    /**
     * @example
     * 202301
     */
    period?: string;
    /**
     * @example
     * 8511
     */
    usedNum?: number;
    /**
     * @example
     * 10000
     */
    quotaNum?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMicroAppScopeResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    deptIds?: number[];
    /**
     * @remarks
     * This parameter is required.
     */
    onlyAdminVisible?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    roleIds?: number[];
    /**
     * @remarks
     * This parameter is required.
     */
    userIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListAllAppResponseBodyAppList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    agentId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 111
     */
    appId?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    appStatus?: number;
    /**
     * @example
     * desc
     */
    desc?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    developType?: number;
    /**
     * @example
     * https://www.dingtalk.com
     */
    homepageLink?: string;
    /**
     * @example
     * icon
     */
    icon?: string;
    /**
     * @example
     * name
     */
    name?: string;
    /**
     * @example
     * https://www.dingtalk.com
     */
    ompLink?: string;
    /**
     * @example
     * https://www.dingtalk.com
     */
    pcHomepageLink?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListAllInnerAppsResponseBodyAppList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    agentId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 111
     */
    appId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    appStatus?: number;
    /**
     * @example
     * desc
     */
    desc?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    developType?: number;
    /**
     * @example
     * https://www.dingtalk.com
     */
    homepageLink?: string;
    /**
     * @example
     * icon
     */
    icon?: string;
    /**
     * @example
     * name
     */
    name?: string;
    /**
     * @example
     * https://www.dingtalk.com
     */
    ompLink?: string;
    /**
     * @example
     * https://www.dingtalk.com
     */
    pcHomepageLink?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListAppRoleScopesResponseBodyDataList extends $tea.Model {
    /**
     * @example
     * false
     */
    canManageRole?: boolean;
    deptIdList?: number[];
    /**
     * @example
     * 123
     */
    roleId?: number;
    /**
     * @example
     * 财务
     */
    roleName?: string;
    /**
     * @example
     * PART_VISIBLE
     */
    scopeType?: string;
    /**
     * @example
     * 123
     */
    scopeVersion?: number;
    userIdList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListInnerAppResponseBodyAppList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    agentId?: number;
    /**
     * @example
     * desc
     */
    desc?: string;
    /**
     * @example
     * https://www.dingtalk.com
     */
    homepageLink?: string;
    /**
     * @example
     * icon
     */
    icon?: string;
    /**
     * @example
     * name
     */
    name?: string;
    /**
     * @example
     * https://www.dingtalk.com
     */
    ompLink?: string;
    /**
     * @example
     * https://www.dingtalk.com
     */
    pcHomepageLink?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListInnerAppVersionResponseBodyAppVersionList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0.0.1
     */
    appVersion?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    appVersionId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    appVersionType?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2023-01-01 00:00:00
     */
    createTime?: string;
    entranceLink?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    miniAppId?: string;
    miniAppOnPc?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2023-01-01 00:00:00
     */
    modifyTime?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListRoleInfoByUserResponseBodyResult extends $tea.Model {
    /**
     * @example
     * false
     */
    canManageRole?: boolean;
    /**
     * @example
     * 123
     */
    roleId?: number;
    /**
     * @example
     * 财务
     */
    roleName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListUserVilebleAppResponseBodyAppList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    agentId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 111
     */
    appId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    appStatus?: number;
    /**
     * @example
     * desc
     */
    desc?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    developType?: number;
    /**
     * @example
     * https://www.dingtalk.com
     */
    homepageLink?: string;
    /**
     * @example
     * icon
     */
    icon?: string;
    /**
     * @example
     * name
     */
    name?: string;
    /**
     * @example
     * https://www.dingtalk.com
     */
    ompLink?: string;
    /**
     * @example
     * https://www.dingtalk.com
     */
    pcHomepageLink?: string;
    /**
     * @example
     * unifiedAppId
     */
    unifiedAppId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PageInnerAppHistoryVersionResponseBodyMiniAppVersionList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0.0.1
     */
    appVersion?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    appVersionId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    appVersionType?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2023-01-01 00:00:00
     */
    createTime?: string;
    /**
     * @example
     * 1
     */
    miniAppId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    miniAppOnPc?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2023-01-01 00:00:00
     */
    modifyTime?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 给指定成员添加角色
     *
     * @param request - AddAppRolesToMemberRequest
     * @param headers - AddAppRolesToMemberHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddAppRolesToMemberResponse
     */
    addAppRolesToMemberWithOptions(agentId: string, request: AddAppRolesToMemberRequest, headers: AddAppRolesToMemberHeaders, runtime: $Util.RuntimeOptions): Promise<AddAppRolesToMemberResponse>;
    /**
     * 给指定成员添加角色
     *
     * @param request - AddAppRolesToMemberRequest
     * @returns AddAppRolesToMemberResponse
     */
    addAppRolesToMember(agentId: string, request: AddAppRolesToMemberRequest): Promise<AddAppRolesToMemberResponse>;
    /**
     * 添加应用到工作台分组
     *
     * @param request - AddAppToWorkBenchGroupRequest
     * @param headers - AddAppToWorkBenchGroupHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddAppToWorkBenchGroupResponse
     */
    addAppToWorkBenchGroupWithOptions(agentId: string, request: AddAppToWorkBenchGroupRequest, headers: AddAppToWorkBenchGroupHeaders, runtime: $Util.RuntimeOptions): Promise<AddAppToWorkBenchGroupResponse>;
    /**
     * 添加应用到工作台分组
     *
     * @param request - AddAppToWorkBenchGroupRequest
     * @returns AddAppToWorkBenchGroupResponse
     */
    addAppToWorkBenchGroup(agentId: string, request: AddAppToWorkBenchGroupRequest): Promise<AddAppToWorkBenchGroupResponse>;
    /**
     * 给指定角色添加人员
     *
     * @param request - AddMemberToAppRoleRequest
     * @param headers - AddMemberToAppRoleHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddMemberToAppRoleResponse
     */
    addMemberToAppRoleWithOptions(agentId: string, roleId: string, request: AddMemberToAppRoleRequest, headers: AddMemberToAppRoleHeaders, runtime: $Util.RuntimeOptions): Promise<AddMemberToAppRoleResponse>;
    /**
     * 给指定角色添加人员
     *
     * @param request - AddMemberToAppRoleRequest
     * @returns AddMemberToAppRoleResponse
     */
    addMemberToAppRole(agentId: string, roleId: string, request: AddMemberToAppRoleRequest): Promise<AddMemberToAppRoleResponse>;
    /**
     * AnheiP
     *
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AnheiPResponse
     */
    anheiPWithOptions(headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<AnheiPResponse>;
    /**
     * AnheiP
     * @returns AnheiPResponse
     */
    anheiP(): Promise<AnheiPResponse>;
    /**
     * AnheiTest888
     *
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AnheiTest888Response
     */
    anheiTest888WithOptions(headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<AnheiTest888Response>;
    /**
     * AnheiTest888
     * @returns AnheiTest888Response
     */
    anheiTest888(): Promise<AnheiTest888Response>;
    /**
     * AnheiTestB
     *
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AnheiTestBResponse
     */
    anheiTestBWithOptions(headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<AnheiTestBResponse>;
    /**
     * AnheiTestB
     * @returns AnheiTestBResponse
     */
    anheiTestB(): Promise<AnheiTestBResponse>;
    /**
     * 暗黑测试
     *
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AnheiTestNineResponse
     */
    anheiTestNineWithOptions(headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<AnheiTestNineResponse>;
    /**
     * 暗黑测试
     * @returns AnheiTestNineResponse
     */
    anheiTestNine(): Promise<AnheiTestNineResponse>;
    /**
     * 应用状态管理测试
     *
     * @param request - AppStatusManagerTestRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AppStatusManagerTestResponse
     */
    appStatusManagerTestWithOptions(request: AppStatusManagerTestRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<AppStatusManagerTestResponse>;
    /**
     * 应用状态管理测试
     *
     * @param request - AppStatusManagerTestRequest
     * @returns AppStatusManagerTestResponse
     */
    appStatusManagerTest(request: AppStatusManagerTestRequest): Promise<AppStatusManagerTestResponse>;
    /**
     * 能力开放中心录入测试数据
     *
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AyunTestResponse
     */
    ayunTestWithOptions(headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<AyunTestResponse>;
    /**
     * 能力开放中心录入测试数据
     * @returns AyunTestResponse
     */
    ayunTest(): Promise<AyunTestResponse>;
    /**
     * openAPI录入上线后的测试
     *
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AyunTestOnlineResponse
     */
    ayunTestOnlineWithOptions(headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<AyunTestOnlineResponse>;
    /**
     * openAPI录入上线后的测试
     * @returns AyunTestOnlineResponse
     */
    ayunTestOnline(): Promise<AyunTestOnlineResponse>;
    /**
     * 创建Apaas应用
     *
     * @param request - CreateApaasAppRequest
     * @param headers - CreateApaasAppHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateApaasAppResponse
     */
    createApaasAppWithOptions(request: CreateApaasAppRequest, headers: CreateApaasAppHeaders, runtime: $Util.RuntimeOptions): Promise<CreateApaasAppResponse>;
    /**
     * 创建Apaas应用
     *
     * @param request - CreateApaasAppRequest
     * @returns CreateApaasAppResponse
     */
    createApaasApp(request: CreateApaasAppRequest): Promise<CreateApaasAppResponse>;
    /**
     * 创建企业内部应用
     *
     * @param request - CreateInnerAppRequest
     * @param headers - CreateInnerAppHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateInnerAppResponse
     */
    createInnerAppWithOptions(request: CreateInnerAppRequest, headers: CreateInnerAppHeaders, runtime: $Util.RuntimeOptions): Promise<CreateInnerAppResponse>;
    /**
     * 创建企业内部应用
     *
     * @param request - CreateInnerAppRequest
     * @returns CreateInnerAppResponse
     */
    createInnerApp(request: CreateInnerAppRequest): Promise<CreateInnerAppResponse>;
    /**
     * 删除应用角色
     *
     * @param request - DeleteAppRoleRequest
     * @param headers - DeleteAppRoleHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteAppRoleResponse
     */
    deleteAppRoleWithOptions(agentId: string, roleId: string, request: DeleteAppRoleRequest, headers: DeleteAppRoleHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteAppRoleResponse>;
    /**
     * 删除应用角色
     *
     * @param request - DeleteAppRoleRequest
     * @returns DeleteAppRoleResponse
     */
    deleteAppRole(agentId: string, roleId: string, request: DeleteAppRoleRequest): Promise<DeleteAppRoleResponse>;
    /**
     * 删除企业内部应用
     *
     * @param request - DeleteInnerAppRequest
     * @param headers - DeleteInnerAppHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteInnerAppResponse
     */
    deleteInnerAppWithOptions(agentId: string, request: DeleteInnerAppRequest, headers: DeleteInnerAppHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteInnerAppResponse>;
    /**
     * 删除企业内部应用
     *
     * @param request - DeleteInnerAppRequest
     * @returns DeleteInnerAppResponse
     */
    deleteInnerApp(agentId: string, request: DeleteInnerAppRequest): Promise<DeleteInnerAppResponse>;
    /**
     * 查询Apaas应用
     *
     * @param headers - GetApaasAppHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetApaasAppResponse
     */
    getApaasAppWithOptions(bizAppId: string, headers: GetApaasAppHeaders, runtime: $Util.RuntimeOptions): Promise<GetApaasAppResponse>;
    /**
     * 查询Apaas应用
     * @returns GetApaasAppResponse
     */
    getApaasApp(bizAppId: string): Promise<GetApaasAppResponse>;
    /**
     * 获取应用资源用量信息
     *
     * @param request - GetAppResourceUseInfoRequest
     * @param headers - GetAppResourceUseInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetAppResourceUseInfoResponse
     */
    getAppResourceUseInfoWithOptions(request: GetAppResourceUseInfoRequest, headers: GetAppResourceUseInfoHeaders, runtime: $Util.RuntimeOptions): Promise<GetAppResourceUseInfoResponse>;
    /**
     * 获取应用资源用量信息
     *
     * @param request - GetAppResourceUseInfoRequest
     * @returns GetAppResourceUseInfoResponse
     */
    getAppResourceUseInfo(request: GetAppResourceUseInfoRequest): Promise<GetAppResourceUseInfoResponse>;
    /**
     * 查询指定角色的角色范围
     *
     * @param headers - GetAppRoleScopeByRoleIdHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetAppRoleScopeByRoleIdResponse
     */
    getAppRoleScopeByRoleIdWithOptions(agentId: string, roleId: string, headers: GetAppRoleScopeByRoleIdHeaders, runtime: $Util.RuntimeOptions): Promise<GetAppRoleScopeByRoleIdResponse>;
    /**
     * 查询指定角色的角色范围
     * @returns GetAppRoleScopeByRoleIdResponse
     */
    getAppRoleScopeByRoleId(agentId: string, roleId: string): Promise<GetAppRoleScopeByRoleIdResponse>;
    /**
     * 获取企业内部H5应用
     *
     * @param request - GetInnerAppRequest
     * @param headers - GetInnerAppHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetInnerAppResponse
     */
    getInnerAppWithOptions(agentId: string, request: GetInnerAppRequest, headers: GetInnerAppHeaders, runtime: $Util.RuntimeOptions): Promise<GetInnerAppResponse>;
    /**
     * 获取企业内部H5应用
     *
     * @param request - GetInnerAppRequest
     * @returns GetInnerAppResponse
     */
    getInnerApp(agentId: string, request: GetInnerAppRequest): Promise<GetInnerAppResponse>;
    /**
     * 获取应用可见范围
     *
     * @param headers - GetMicroAppScopeHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetMicroAppScopeResponse
     */
    getMicroAppScopeWithOptions(agentId: string, headers: GetMicroAppScopeHeaders, runtime: $Util.RuntimeOptions): Promise<GetMicroAppScopeResponse>;
    /**
     * 获取应用可见范围
     * @returns GetMicroAppScopeResponse
     */
    getMicroAppScope(agentId: string): Promise<GetMicroAppScopeResponse>;
    /**
     * 获取用户对应用的管理权限
     *
     * @param headers - GetMicroAppUserAccessHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetMicroAppUserAccessResponse
     */
    getMicroAppUserAccessWithOptions(agentId: string, userId: string, headers: GetMicroAppUserAccessHeaders, runtime: $Util.RuntimeOptions): Promise<GetMicroAppUserAccessResponse>;
    /**
     * 获取用户对应用的管理权限
     * @returns GetMicroAppUserAccessResponse
     */
    getMicroAppUserAccess(agentId: string, userId: string): Promise<GetMicroAppUserAccessResponse>;
    /**
     * 用户是否拥有开发者权限
     *
     * @param headers - GetUserAppDevAccessHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetUserAppDevAccessResponse
     */
    getUserAppDevAccessWithOptions(userId: string, headers: GetUserAppDevAccessHeaders, runtime: $Util.RuntimeOptions): Promise<GetUserAppDevAccessResponse>;
    /**
     * 用户是否拥有开发者权限
     * @returns GetUserAppDevAccessResponse
     */
    getUserAppDevAccess(userId: string): Promise<GetUserAppDevAccessResponse>;
    /**
     * 获取企业所有应用列表
     *
     * @param headers - ListAllAppHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListAllAppResponse
     */
    listAllAppWithOptions(headers: ListAllAppHeaders, runtime: $Util.RuntimeOptions): Promise<ListAllAppResponse>;
    /**
     * 获取企业所有应用列表
     * @returns ListAllAppResponse
     */
    listAllApp(): Promise<ListAllAppResponse>;
    /**
     * 获取企业所有内部应用列表
     *
     * @param headers - ListAllInnerAppsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListAllInnerAppsResponse
     */
    listAllInnerAppsWithOptions(headers: ListAllInnerAppsHeaders, runtime: $Util.RuntimeOptions): Promise<ListAllInnerAppsResponse>;
    /**
     * 获取企业所有内部应用列表
     * @returns ListAllInnerAppsResponse
     */
    listAllInnerApps(): Promise<ListAllInnerAppsResponse>;
    /**
     * 获取企业应用的角色完整信息
     *
     * @param request - ListAppRoleScopesRequest
     * @param headers - ListAppRoleScopesHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListAppRoleScopesResponse
     */
    listAppRoleScopesWithOptions(agentId: string, request: ListAppRoleScopesRequest, headers: ListAppRoleScopesHeaders, runtime: $Util.RuntimeOptions): Promise<ListAppRoleScopesResponse>;
    /**
     * 获取企业应用的角色完整信息
     *
     * @param request - ListAppRoleScopesRequest
     * @returns ListAppRoleScopesResponse
     */
    listAppRoleScopes(agentId: string, request: ListAppRoleScopesRequest): Promise<ListAppRoleScopesResponse>;
    /**
     * 列出企业内部H5应用
     *
     * @param request - ListInnerAppRequest
     * @param headers - ListInnerAppHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListInnerAppResponse
     */
    listInnerAppWithOptions(request: ListInnerAppRequest, headers: ListInnerAppHeaders, runtime: $Util.RuntimeOptions): Promise<ListInnerAppResponse>;
    /**
     * 列出企业内部H5应用
     *
     * @param request - ListInnerAppRequest
     * @returns ListInnerAppResponse
     */
    listInnerApp(request: ListInnerAppRequest): Promise<ListInnerAppResponse>;
    /**
     * 获取企业内部小程序的版本列表
     *
     * @param headers - ListInnerAppVersionHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListInnerAppVersionResponse
     */
    listInnerAppVersionWithOptions(agentId: string, headers: ListInnerAppVersionHeaders, runtime: $Util.RuntimeOptions): Promise<ListInnerAppVersionResponse>;
    /**
     * 获取企业内部小程序的版本列表
     * @returns ListInnerAppVersionResponse
     */
    listInnerAppVersion(agentId: string): Promise<ListInnerAppVersionResponse>;
    /**
     * 获取用户在应用中的角色信息列表
     *
     * @param headers - ListRoleInfoByUserHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListRoleInfoByUserResponse
     */
    listRoleInfoByUserWithOptions(agentId: string, userId: string, headers: ListRoleInfoByUserHeaders, runtime: $Util.RuntimeOptions): Promise<ListRoleInfoByUserResponse>;
    /**
     * 获取用户在应用中的角色信息列表
     * @returns ListRoleInfoByUserResponse
     */
    listRoleInfoByUser(agentId: string, userId: string): Promise<ListRoleInfoByUserResponse>;
    /**
     * 列出用户可见的企业应用
     *
     * @param headers - ListUserVilebleAppHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListUserVilebleAppResponse
     */
    listUserVilebleAppWithOptions(userId: string, headers: ListUserVilebleAppHeaders, runtime: $Util.RuntimeOptions): Promise<ListUserVilebleAppResponse>;
    /**
     * 列出用户可见的企业应用
     * @returns ListUserVilebleAppResponse
     */
    listUserVilebleApp(userId: string): Promise<ListUserVilebleAppResponse>;
    /**
     * 获取企业内部小程序历史版本列表
     *
     * @param request - PageInnerAppHistoryVersionRequest
     * @param headers - PageInnerAppHistoryVersionHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns PageInnerAppHistoryVersionResponse
     */
    pageInnerAppHistoryVersionWithOptions(agentId: string, request: PageInnerAppHistoryVersionRequest, headers: PageInnerAppHistoryVersionHeaders, runtime: $Util.RuntimeOptions): Promise<PageInnerAppHistoryVersionResponse>;
    /**
     * 获取企业内部小程序历史版本列表
     *
     * @param request - PageInnerAppHistoryVersionRequest
     * @returns PageInnerAppHistoryVersionResponse
     */
    pageInnerAppHistoryVersion(agentId: string, request: PageInnerAppHistoryVersionRequest): Promise<PageInnerAppHistoryVersionResponse>;
    /**
     * 发布企业内部小程序版本
     *
     * @param request - PublishInnerAppVersionRequest
     * @param headers - PublishInnerAppVersionHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns PublishInnerAppVersionResponse
     */
    publishInnerAppVersionWithOptions(agentId: string, request: PublishInnerAppVersionRequest, headers: PublishInnerAppVersionHeaders, runtime: $Util.RuntimeOptions): Promise<PublishInnerAppVersionResponse>;
    /**
     * 发布企业内部小程序版本
     *
     * @param request - PublishInnerAppVersionRequest
     * @returns PublishInnerAppVersionResponse
     */
    publishInnerAppVersion(agentId: string, request: PublishInnerAppVersionRequest): Promise<PublishInnerAppVersionResponse>;
    /**
     * 重设角色范围
     *
     * @param request - RebuildRoleScopeForAppRoleRequest
     * @param headers - RebuildRoleScopeForAppRoleHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns RebuildRoleScopeForAppRoleResponse
     */
    rebuildRoleScopeForAppRoleWithOptions(agentId: string, roleId: string, request: RebuildRoleScopeForAppRoleRequest, headers: RebuildRoleScopeForAppRoleHeaders, runtime: $Util.RuntimeOptions): Promise<RebuildRoleScopeForAppRoleResponse>;
    /**
     * 重设角色范围
     *
     * @param request - RebuildRoleScopeForAppRoleRequest
     * @returns RebuildRoleScopeForAppRoleResponse
     */
    rebuildRoleScopeForAppRole(agentId: string, roleId: string, request: RebuildRoleScopeForAppRoleRequest): Promise<RebuildRoleScopeForAppRoleResponse>;
    /**
     * 注册自定义应用角色
     *
     * @param request - RegisterCustomAppRoleRequest
     * @param headers - RegisterCustomAppRoleHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns RegisterCustomAppRoleResponse
     */
    registerCustomAppRoleWithOptions(agentId: string, request: RegisterCustomAppRoleRequest, headers: RegisterCustomAppRoleHeaders, runtime: $Util.RuntimeOptions): Promise<RegisterCustomAppRoleResponse>;
    /**
     * 注册自定义应用角色
     *
     * @param request - RegisterCustomAppRoleRequest
     * @returns RegisterCustomAppRoleResponse
     */
    registerCustomAppRole(agentId: string, request: RegisterCustomAppRoleRequest): Promise<RegisterCustomAppRoleResponse>;
    /**
     * 删除apaas应用
     *
     * @param request - RemoveApaasAppRequest
     * @param headers - RemoveApaasAppHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns RemoveApaasAppResponse
     */
    removeApaasAppWithOptions(request: RemoveApaasAppRequest, headers: RemoveApaasAppHeaders, runtime: $Util.RuntimeOptions): Promise<RemoveApaasAppResponse>;
    /**
     * 删除apaas应用
     *
     * @param request - RemoveApaasAppRequest
     * @returns RemoveApaasAppResponse
     */
    removeApaasApp(request: RemoveApaasAppRequest): Promise<RemoveApaasAppResponse>;
    /**
     * 删除指定角色下的成员
     *
     * @param request - RemoveMemberForAppRoleRequest
     * @param headers - RemoveMemberForAppRoleHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns RemoveMemberForAppRoleResponse
     */
    removeMemberForAppRoleWithOptions(agentId: string, roleId: string, request: RemoveMemberForAppRoleRequest, headers: RemoveMemberForAppRoleHeaders, runtime: $Util.RuntimeOptions): Promise<RemoveMemberForAppRoleResponse>;
    /**
     * 删除指定角色下的成员
     *
     * @param request - RemoveMemberForAppRoleRequest
     * @returns RemoveMemberForAppRoleResponse
     */
    removeMemberForAppRole(agentId: string, roleId: string, request: RemoveMemberForAppRoleRequest): Promise<RemoveMemberForAppRoleResponse>;
    /**
     * 回滚企业内部小程序版本
     *
     * @param request - RollbackInnerAppVersionRequest
     * @param headers - RollbackInnerAppVersionHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns RollbackInnerAppVersionResponse
     */
    rollbackInnerAppVersionWithOptions(agentId: string, request: RollbackInnerAppVersionRequest, headers: RollbackInnerAppVersionHeaders, runtime: $Util.RuntimeOptions): Promise<RollbackInnerAppVersionResponse>;
    /**
     * 回滚企业内部小程序版本
     *
     * @param request - RollbackInnerAppVersionRequest
     * @returns RollbackInnerAppVersionResponse
     */
    rollbackInnerAppVersion(agentId: string, request: RollbackInnerAppVersionRequest): Promise<RollbackInnerAppVersionResponse>;
    /**
     * 设置应用可见范围
     *
     * @param request - SetMicroAppScopeRequest
     * @param headers - SetMicroAppScopeHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SetMicroAppScopeResponse
     */
    setMicroAppScopeWithOptions(agentId: string, request: SetMicroAppScopeRequest, headers: SetMicroAppScopeHeaders, runtime: $Util.RuntimeOptions): Promise<SetMicroAppScopeResponse>;
    /**
     * 设置应用可见范围
     *
     * @param request - SetMicroAppScopeRequest
     * @returns SetMicroAppScopeResponse
     */
    setMicroAppScope(agentId: string, request: SetMicroAppScopeRequest): Promise<SetMicroAppScopeResponse>;
    /**
     * 更新apaas应用
     *
     * @param request - UpdateApaasAppRequest
     * @param headers - UpdateApaasAppHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateApaasAppResponse
     */
    updateApaasAppWithOptions(request: UpdateApaasAppRequest, headers: UpdateApaasAppHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateApaasAppResponse>;
    /**
     * 更新apaas应用
     *
     * @param request - UpdateApaasAppRequest
     * @returns UpdateApaasAppResponse
     */
    updateApaasApp(request: UpdateApaasAppRequest): Promise<UpdateApaasAppResponse>;
    /**
     * 更新应用角色信息
     *
     * @param request - UpdateAppRoleInfoRequest
     * @param headers - UpdateAppRoleInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateAppRoleInfoResponse
     */
    updateAppRoleInfoWithOptions(agentId: string, roleId: string, request: UpdateAppRoleInfoRequest, headers: UpdateAppRoleInfoHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateAppRoleInfoResponse>;
    /**
     * 更新应用角色信息
     *
     * @param request - UpdateAppRoleInfoRequest
     * @returns UpdateAppRoleInfoResponse
     */
    updateAppRoleInfo(agentId: string, roleId: string, request: UpdateAppRoleInfoRequest): Promise<UpdateAppRoleInfoResponse>;
    /**
     * 更新企业内部应用
     *
     * @param request - UpdateInnerAppRequest
     * @param headers - UpdateInnerAppHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateInnerAppResponse
     */
    updateInnerAppWithOptions(agentId: string, request: UpdateInnerAppRequest, headers: UpdateInnerAppHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateInnerAppResponse>;
    /**
     * 更新企业内部应用
     *
     * @param request - UpdateInnerAppRequest
     * @returns UpdateInnerAppResponse
     */
    updateInnerApp(agentId: string, request: UpdateInnerAppRequest): Promise<UpdateInnerAppResponse>;
}
