/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class CreateResumeHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateResumeRequest extends $tea.Model {
    bizCode?: string;
    ext?: string;
    resumeDataVO?: CreateResumeRequestResumeDataVO;
    scene?: string;
    types?: string[];
    /**
     * **if can be null:**
     * false
     */
    userIdentify?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateResumeResponseBody extends $tea.Model {
    result?: CreateResumeResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateResumeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateResumeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PostResumeHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PostResumeRequest extends $tea.Model {
    jobId?: number;
    userIdentify?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PostResumeResponseBody extends $tea.Model {
    jobId?: number;
    userIdentify?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PostResumeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: PostResumeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateResumeRequestResumeDataVOBaseInfo extends $tea.Model {
    age?: number;
    avatar?: string;
    beginWorkTime?: string;
    birthday?: string;
    candidateBackground?: number;
    dingTalk?: string;
    email?: string;
    englishName?: string;
    ethnicity?: string;
    gaduateTime?: string;
    highestAcademic?: string;
    highestEducation?: number;
    identify?: string;
    industry?: string;
    industryCode?: string;
    jobTitle?: string;
    lastSchoolName?: string;
    married?: number;
    mbtiType?: number;
    name?: string;
    nationality?: string;
    nativePlace?: string;
    nativePlaceCode?: string;
    nowLocation?: string;
    nowLocationCode?: string;
    parentIndustry?: string;
    parentIndustryCode?: string;
    personalHonor?: string;
    personalUrls?: string[];
    phoneNum?: string;
    politicalStatus?: number;
    qq?: string;
    realAvatar?: number;
    selfEvaluation?: string;
    sex?: number;
    skillSummary?: string;
    stateCode?: string;
    status?: string;
    virtualPhoneNum?: string;
    weChat?: string;
    weibo?: string;
    workingYears?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateResumeRequestResumeDataVOCertificates extends $tea.Model {
    certificateId?: string;
    certificateName?: string;
    crantTime?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateResumeRequestResumeDataVOJobExpectsCityList extends $tea.Model {
    code?: string;
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateResumeRequestResumeDataVOJobExpectsIndustryList extends $tea.Model {
    code?: string;
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateResumeRequestResumeDataVOJobExpectsJobList extends $tea.Model {
    code?: string;
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateResumeRequestResumeDataVOJobExpectsOtherCityList extends $tea.Model {
    code?: string;
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateResumeRequestResumeDataVOJobExpects extends $tea.Model {
    cityList?: CreateResumeRequestResumeDataVOJobExpectsCityList[];
    gmtCreate?: number;
    gmtModified?: number;
    industryList?: CreateResumeRequestResumeDataVOJobExpectsIndustryList[];
    jobList?: CreateResumeRequestResumeDataVOJobExpectsJobList[];
    jobNature?: string;
    maxSalary?: string;
    minSalary?: string;
    otherCityList?: CreateResumeRequestResumeDataVOJobExpectsOtherCityList[];
    salaryDesc?: string;
    salarySettleType?: string;
    salaryType?: string;
    salaryYear?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateResumeRequestResumeDataVOPersonalHonors extends $tea.Model {
    description?: string;
    grantTime?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateResumeRequestResumeDataVOProjectExperiences extends $tea.Model {
    achievement?: string;
    description?: string;
    endDate?: string;
    name?: string;
    projectUrl?: string;
    responsibility?: string;
    startDate?: string;
    technology?: string;
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateResumeRequestResumeDataVOTags extends $tea.Model {
    tag?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateResumeRequestResumeDataVOWorkExperiencesResumePrivacy extends $tea.Model {
    shieldedCompany?: boolean;
    shieldedRelatedCompany?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateResumeRequestResumeDataVOWorkExperiences extends $tea.Model {
    achievement?: string;
    companyCode?: string;
    companyName?: string;
    description?: string;
    endDate?: string;
    industry?: string;
    industryCode?: string;
    internship?: boolean;
    jobCode?: string;
    jobNature?: string;
    jobTitle?: string;
    leader?: string;
    location?: string;
    locationCode?: string;
    parentIndustry?: string;
    parentIndustryCode?: string;
    reasonOfLeaving?: string;
    responsibility?: string;
    resumePrivacy?: CreateResumeRequestResumeDataVOWorkExperiencesResumePrivacy;
    salary?: string;
    selectedSkillOptions?: string[];
    startDate?: string;
    underlingNumber?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateResumeRequestResumeDataVO extends $tea.Model {
    baseInfo?: CreateResumeRequestResumeDataVOBaseInfo;
    certificates?: CreateResumeRequestResumeDataVOCertificates[];
    jobExpects?: CreateResumeRequestResumeDataVOJobExpects[];
    personalHonors?: CreateResumeRequestResumeDataVOPersonalHonors[];
    projectExperiences?: CreateResumeRequestResumeDataVOProjectExperiences[];
    tags?: CreateResumeRequestResumeDataVOTags[];
    workExperiences?: CreateResumeRequestResumeDataVOWorkExperiences[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateResumeResponseBodyResult extends $tea.Model {
    resumeId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 创建简历
     *
     * @param request - CreateResumeRequest
     * @param headers - CreateResumeHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateResumeResponse
     */
    createResumeWithOptions(request: CreateResumeRequest, headers: CreateResumeHeaders, runtime: $Util.RuntimeOptions): Promise<CreateResumeResponse>;
    /**
     * 创建简历
     *
     * @param request - CreateResumeRequest
     * @returns CreateResumeResponse
     */
    createResume(request: CreateResumeRequest): Promise<CreateResumeResponse>;
    /**
     * 投递简历
     *
     * @param request - PostResumeRequest
     * @param headers - PostResumeHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns PostResumeResponse
     */
    postResumeWithOptions(request: PostResumeRequest, headers: PostResumeHeaders, runtime: $Util.RuntimeOptions): Promise<PostResumeResponse>;
    /**
     * 投递简历
     *
     * @param request - PostResumeRequest
     * @returns PostResumeResponse
     */
    postResume(request: PostResumeRequest): Promise<PostResumeResponse>;
}
