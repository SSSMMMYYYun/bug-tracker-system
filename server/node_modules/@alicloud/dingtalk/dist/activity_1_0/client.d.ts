/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class CreateActivityHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateActivityRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    detail?: CreateActivityRequestDetail;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateActivityResponseBody extends $tea.Model {
    activityId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateActivityResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateActivityResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListActivityHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListActivityRequest extends $tea.Model {
    /**
     * @example
     * 20
     */
    maxResults?: number;
    /**
     * @example
     * Rp3Rqcts7BE08y49Jr6iu6xW4iQ
     */
    nextToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListActivityResponseBody extends $tea.Model {
    list?: ListActivityResponseBodyList[];
    /**
     * @example
     * 10
     */
    maxResults?: string;
    /**
     * @example
     * 1686633306552
     */
    nextToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListActivityResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListActivityResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateActivityRequestDetailAddress extends $tea.Model {
    /**
     * @example
     * 重庆市重庆市
     */
    district?: string;
    /**
     * @example
     * 29.533939
     */
    lat?: string;
    /**
     * @example
     * 106.561853
     */
    lng?: string;
    /**
     * @example
     * 国际会议展览中心
     */
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateActivityRequestDetail extends $tea.Model {
    address?: CreateActivityRequestDetailAddress;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * @mediaId
     */
    bannerMediaId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    endTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2OGnTRTcoH6OQ0209168
     */
    foreignId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * IT
     */
    industry?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * CTO
     */
    roleName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * hdx
     */
    source?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    startTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 钉峰会
     */
    title?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    type?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * https://www.dingtalk.com/
     */
    url?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListActivityResponseBodyList extends $tea.Model {
    /**
     * @example
     * 5tL2HIQiQiOARCZ6xWAPHA02091683513
     */
    activityId?: string;
    /**
     * @example
     * @mediaId
     */
    bannerMediaId?: string;
    /**
     * @example
     * 1683515695000
     */
    endTime?: number;
    /**
     * @example
     * 20230613_001
     */
    foreignId?: string;
    /**
     * @example
     * 1683514695000
     */
    startTime?: number;
    /**
     * @example
     * 3
     */
    status?: string;
    /**
     * @example
     * AIGC研讨会
     */
    title?: string;
    /**
     * @example
     * 0
     */
    type?: string;
    /**
     * @example
     * https://www.dingtalk.com
     */
    url?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 创建活动
     *
     * @param request - CreateActivityRequest
     * @param headers - CreateActivityHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateActivityResponse
     */
    createActivityWithOptions(request: CreateActivityRequest, headers: CreateActivityHeaders, runtime: $Util.RuntimeOptions): Promise<CreateActivityResponse>;
    /**
     * 创建活动
     *
     * @param request - CreateActivityRequest
     * @returns CreateActivityResponse
     */
    createActivity(request: CreateActivityRequest): Promise<CreateActivityResponse>;
    /**
     * 查询活动列表
     *
     * @param request - ListActivityRequest
     * @param headers - ListActivityHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListActivityResponse
     */
    listActivityWithOptions(request: ListActivityRequest, headers: ListActivityHeaders, runtime: $Util.RuntimeOptions): Promise<ListActivityResponse>;
    /**
     * 查询活动列表
     *
     * @param request - ListActivityRequest
     * @returns ListActivityResponse
     */
    listActivity(request: ListActivityRequest): Promise<ListActivityResponse>;
}
