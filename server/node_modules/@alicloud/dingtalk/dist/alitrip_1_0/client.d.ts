/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class AddCityCarApplyHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCityCarApplyRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 杭州出差
     */
    cause?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 杭州
     */
    city?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * corpx
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-03-18 20:26:56
     */
    date?: string;
    /**
     * @example
     * 2021-03-30 20:26:56
     */
    finishedDate?: string;
    /**
     * @example
     * projectx
     */
    projectCode?: string;
    /**
     * @example
     * 项目x
     */
    projectName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    status?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * apply1
     */
    thirdPartApplyId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * costcenter1
     */
    thirdPartCostCenterId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * invoice1
     */
    thirdPartInvoiceId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    timesTotal?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 3
     */
    timesType?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    timesUsed?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 杭州出差
     */
    title?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * user1
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCityCarApplyResponseBody extends $tea.Model {
    /**
     * @example
     * 1
     */
    applyId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCityCarApplyResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddCityCarApplyResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ApproveCityCarApplyHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ApproveCityCarApplyRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * corpx
     */
    corpId?: string;
    /**
     * @example
     * 2021-03-18 20:26:56
     */
    operateTime?: string;
    /**
     * @example
     * 同意
     */
    remark?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    status?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * apply1
     */
    thirdPartApplyId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * user1
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ApproveCityCarApplyResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    approveResult?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ApproveCityCarApplyResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ApproveCityCarApplyResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BillSettementBtripTrainHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BillSettementBtripTrainRequest extends $tea.Model {
    category?: number;
    corpId?: string;
    pageNumber?: number;
    pageSize?: number;
    periodEnd?: string;
    periodStart?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BillSettementBtripTrainResponseBody extends $tea.Model {
    module?: BillSettementBtripTrainResponseBodyModule;
    resultCode?: number;
    resultMsg?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BillSettementBtripTrainResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BillSettementBtripTrainResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BillSettementCarHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BillSettementCarRequest extends $tea.Model {
    category?: number;
    corpId?: string;
    pageNumber?: number;
    pageSize?: number;
    periodEnd?: string;
    periodStart?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BillSettementCarResponseBody extends $tea.Model {
    module?: BillSettementCarResponseBodyModule;
    resultCode?: number;
    resultMsg?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BillSettementCarResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BillSettementCarResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BillSettementFlightHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BillSettementFlightRequest extends $tea.Model {
    /**
     * @example
     * 1
     */
    category?: number;
    /**
     * @example
     * corpx
     */
    corpId?: string;
    /**
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @example
     * 100
     */
    pageSize?: number;
    /**
     * @example
     * 2021-10-01
     */
    periodEnd?: string;
    /**
     * @example
     * 2021-10-01
     */
    periodStart?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BillSettementFlightResponseBody extends $tea.Model {
    module?: BillSettementFlightResponseBodyModule;
    resultCode?: number;
    resultMsg?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BillSettementFlightResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BillSettementFlightResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BillSettementHotelHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BillSettementHotelRequest extends $tea.Model {
    /**
     * @example
     * 1
     */
    category?: number;
    /**
     * @example
     * corpx
     */
    corpId?: string;
    /**
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @example
     * 100
     */
    pageSize?: number;
    /**
     * @example
     * 2021-10-01
     */
    periodEnd?: string;
    /**
     * @example
     * 2021-10-01
     */
    periodStart?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BillSettementHotelResponseBody extends $tea.Model {
    module?: BillSettementHotelResponseBodyModule;
    resultCode?: number;
    resultMsg?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BillSettementHotelResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BillSettementHotelResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFlightExceedApplyHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFlightExceedApplyRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1234
     */
    applyId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding1234
     */
    corpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFlightExceedApplyResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1234
     */
    applyId?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    applyIntentionInfoDO?: GetFlightExceedApplyResponseBodyApplyIntentionInfoDO;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 出差
     */
    btripCause?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding1234
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 出差
     */
    exceedReason?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    exceedType?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 经济舱（2折及以下）
     */
    originStandard?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    status?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-07-08 15:23:56
     */
    submitTime?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0001A1100000007EX08O
     */
    thirdpartApplyId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * weifeng
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFlightExceedApplyResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetFlightExceedApplyResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetHotelExceedApplyHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetHotelExceedApplyRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123456
     */
    applyId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding1234
     */
    corpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetHotelExceedApplyResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 12345
     */
    applyId?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    applyIntentionInfoDO?: GetHotelExceedApplyResponseBodyApplyIntentionInfoDO;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 出差
     */
    btripCause?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding12345
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 出差
     */
    exceedReason?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 16
     */
    exceedType?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 210000
     */
    originStandard?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    status?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-07-08 15:23:56
     */
    submitTime?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0001A1100000007EX08O
     */
    thirdpartApplyId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * weifeng
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetHotelExceedApplyResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetHotelExceedApplyResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTrainExceedApplyHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTrainExceedApplyRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 12345
     */
    applyId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding1234
     */
    corpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTrainExceedApplyResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1234567
     */
    applyId?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    applyIntentionInfoDO?: GetTrainExceedApplyResponseBodyApplyIntentionInfoDO;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 出差
     */
    btripCause?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding12345
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 出差
     */
    exceedReason?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 32
     */
    exceedType?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 二等座
     */
    originStandard?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    status?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-07-08 15:23:56
     */
    submitTime?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0001A1100000007EX08O
     */
    thirdpartApplyId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * weifeng
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTrainExceedApplyResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetTrainExceedApplyResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCityCarApplyHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCityCarApplyRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * corpx
     */
    corpId?: string;
    /**
     * @example
     * 2021-03-18 20:26:56
     */
    createdEndAt?: string;
    /**
     * @example
     * 2021-03-18 20:26:56
     */
    createdStartAt?: string;
    /**
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @example
     * 20
     */
    pageSize?: number;
    /**
     * @example
     * apply1
     */
    thirdPartApplyId?: string;
    /**
     * @example
     * user1
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCityCarApplyResponseBody extends $tea.Model {
    applyList?: QueryCityCarApplyResponseBodyApplyList[];
    /**
     * @example
     * 10
     */
    total?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCityCarApplyResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryCityCarApplyResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUnionOrderHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUnionOrderRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * tenant1231
     */
    corpId?: string;
    /**
     * @example
     * 第三方审批单号，关联单号和申请单号必选其一
     */
    thirdPartApplyId?: string;
    /**
     * @example
     * 关联单号，关联单号和申请单号必选其一
     */
    unionNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUnionOrderResponseBody extends $tea.Model {
    /**
     * @example
     * tanant1231
     */
    corpId?: string;
    flightList?: QueryUnionOrderResponseBodyFlightList[];
    hotelList?: QueryUnionOrderResponseBodyHotelList[];
    trainList?: QueryUnionOrderResponseBodyTrainList[];
    vehicleList?: QueryUnionOrderResponseBodyVehicleList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUnionOrderResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryUnionOrderResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncExceedApplyHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncExceedApplyRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 12345
     */
    applyId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding12345
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 同意
     */
    remark?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    status?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * asdfg
     */
    thirdpartyFlowId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * asdfgh
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncExceedApplyResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    module?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncExceedApplyResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SyncExceedApplyResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BillSettementBtripTrainResponseBodyModuleDataList extends $tea.Model {
    alipayTradeNo?: string;
    applyId?: string;
    arrDate?: string;
    arrStation?: string;
    arrTime?: string;
    billRecordTime?: string;
    bookTime?: string;
    bookerId?: string;
    bookerJobNo?: string;
    bookerName?: string;
    capitalDirection?: string;
    cascadeDepartment?: string;
    changeFee?: number;
    coachNo?: string;
    costCenter?: string;
    costCenterNumber?: string;
    coupon?: number;
    department?: string;
    departmentId?: string;
    deptDate?: string;
    deptStation?: string;
    deptTime?: string;
    feeType?: string;
    index?: string;
    invoiceTitle?: string;
    orderId?: string;
    orderPrice?: number;
    overApplyId?: string;
    primaryId?: number;
    projectCode?: string;
    projectName?: string;
    refundFee?: number;
    remark?: string;
    runTime?: string;
    seatNo?: string;
    seatType?: string;
    serviceFee?: number;
    settlementFee?: number;
    settlementGrantFee?: number;
    settlementTime?: string;
    settlementType?: string;
    shortTicketNo?: string;
    status?: number;
    ticketNo?: string;
    ticketPrice?: number;
    trainNo?: string;
    trainType?: string;
    travelerId?: string;
    travelerJobNo?: string;
    travelerName?: string;
    voucherType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BillSettementBtripTrainResponseBodyModule extends $tea.Model {
    category?: number;
    corpId?: string;
    dataList?: BillSettementBtripTrainResponseBodyModuleDataList[];
    periodEnd?: string;
    periodStart?: string;
    totalNum?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BillSettementCarResponseBodyModuleDataList extends $tea.Model {
    alipayTradeNo?: string;
    applyId?: string;
    arrCity?: string;
    arrDate?: string;
    arrLocation?: string;
    arrTime?: string;
    billRecordTime?: string;
    bookTime?: string;
    bookerId?: string;
    bookerJobNo?: string;
    bookerName?: string;
    businessCategory?: string;
    capitalDirection?: string;
    carLevel?: string;
    cascadeDepartment?: string;
    costCenter?: string;
    costCenterNumber?: string;
    coupon?: number;
    couponPrice?: number;
    department?: string;
    departmentId?: string;
    deptCity?: string;
    deptDate?: string;
    deptLocation?: string;
    deptTime?: string;
    estimateDriveDistance?: string;
    estimatePrice?: number;
    feeType?: string;
    index?: string;
    invoiceTitle?: string;
    memo?: string;
    orderId?: string;
    orderPrice?: number;
    overApplyId?: string;
    personSettleFee?: number;
    primaryId?: string;
    projectCode?: string;
    projectName?: string;
    providerName?: string;
    realDriveDistance?: string;
    realFromAddr?: string;
    realToAddr?: string;
    remark?: string;
    serviceFee?: string;
    settlementFee?: number;
    settlementGrantFee?: number;
    settlementTime?: string;
    settlementType?: string;
    specialOrder?: string;
    specialReason?: string;
    status?: number;
    subOrderId?: string;
    travelerId?: string;
    travelerJobNo?: string;
    travelerName?: string;
    userConfirmDesc?: string;
    voucherType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BillSettementCarResponseBodyModule extends $tea.Model {
    category?: number;
    corpId?: string;
    dataList?: BillSettementCarResponseBodyModuleDataList[];
    periodEnd?: string;
    periodStart?: string;
    totalNum?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BillSettementFlightResponseBodyModuleDataList extends $tea.Model {
    advanceDay?: number;
    airlineCorpCode?: string;
    airlineCorpName?: string;
    alipayTradeNo?: string;
    applyId?: string;
    arrAirportCode?: string;
    arrCity?: string;
    arrDate?: string;
    arrStation?: string;
    arrTime?: string;
    billRecordTime?: string;
    bookTime?: string;
    bookerId?: string;
    bookerJobNo?: string;
    bookerName?: string;
    btripCouponFee?: number;
    buildFee?: number;
    cabin?: string;
    cabinClass?: string;
    capitalDirection?: string;
    cascadeDepartment?: string;
    changeFee?: number;
    corpPayOrderFee?: number;
    costCenter?: string;
    costCenterNumber?: string;
    coupon?: number;
    depAirportCode?: string;
    department?: string;
    departmentId?: string;
    deptCity?: string;
    deptDate?: string;
    deptStation?: string;
    deptTime?: string;
    discount?: string;
    feeType?: string;
    flightNo?: string;
    index?: string;
    insuranceFee?: number;
    invoiceTitle?: string;
    itineraryNum?: string;
    itineraryPrice?: number;
    mostDifferenceDeptTime?: string;
    mostDifferenceDiscount?: string;
    mostDifferenceFlightNo?: string;
    mostDifferencePrice?: number;
    mostDifferenceReason?: string;
    mostPrice?: number;
    negotiationCouponFee?: number;
    oilFee?: number;
    orderId?: string;
    overApplyId?: string;
    primaryId?: number;
    projectCode?: string;
    projectName?: string;
    refundFee?: number;
    refundUpgradeCost?: number;
    remark?: string;
    repeatRefund?: string;
    sealPrice?: number;
    serviceFee?: number;
    settlementFee?: number;
    settlementGrantFee?: number;
    settlementTime?: string;
    settlementType?: string;
    status?: number;
    ticketId?: string;
    travelerId?: string;
    travelerJobNo?: string;
    travelerName?: string;
    upgradeCost?: number;
    voucherType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BillSettementFlightResponseBodyModule extends $tea.Model {
    category?: number;
    corpId?: string;
    dataList?: BillSettementFlightResponseBodyModuleDataList[];
    periodEnd?: string;
    periodStart?: string;
    totalNum?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BillSettementHotelResponseBodyModuleDataList extends $tea.Model {
    alipayTradeNo?: string;
    applyId?: string;
    billRecordTime?: string;
    bookTime?: string;
    bookerId?: string;
    bookerJobNo?: string;
    bookerName?: string;
    capitalDirection?: string;
    cascadeDepartment?: string;
    checkInDate?: string;
    checkoutDate?: string;
    city?: string;
    cityCode?: string;
    corpRefundFee?: number;
    corpTotalFee?: number;
    costCenter?: string;
    costCenterNumber?: string;
    department?: string;
    departmentId?: string;
    feeType?: string;
    fees?: number;
    fuPointFee?: number;
    hotelName?: string;
    index?: string;
    invoiceTitle?: string;
    isNegotiation?: boolean;
    isShareStr?: string;
    nights?: number;
    orderId?: string;
    orderPrice?: number;
    orderType?: string;
    overApplyId?: string;
    personRefundFee?: number;
    personSettlePrice?: number;
    primaryId?: number;
    projectCode?: string;
    projectName?: string;
    promotionFee?: number;
    remark?: string;
    roomNumber?: number;
    roomPrice?: number;
    roomType?: string;
    serviceFee?: number;
    settlementFee?: number;
    settlementGrantFee?: number;
    settlementTime?: string;
    settlementType?: string;
    status?: number;
    totalNights?: number;
    travelerId?: string;
    travelerJobNo?: string;
    travelerName?: string;
    voucherType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BillSettementHotelResponseBodyModule extends $tea.Model {
    category?: number;
    corpId?: string;
    dataList?: BillSettementHotelResponseBodyModuleDataList[];
    periodEnd?: string;
    periodStart?: string;
    totalNum?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFlightExceedApplyResponseBodyApplyIntentionInfoDO extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * HGH
     */
    arrCity?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 杭州
     */
    arrCityName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-07-08 15:23:56
     */
    arrTime?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * F
     */
    cabin?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    cabinClass?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 经济舱
     */
    cabinClassStr?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SHA
     */
    depCity?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 上海
     */
    depCityName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-07-08 15:23:56
     */
    depTime?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 4.1
     */
    discount?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * MU2759
     */
    flightNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1000
     */
    price?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    type?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetHotelExceedApplyResponseBodyApplyIntentionInfoDO extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-07-08
     */
    checkIn?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-07-08
     */
    checkOut?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SHA
     */
    cityCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 上海
     */
    cityName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10000
     */
    price?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    together?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 16
     */
    type?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTrainExceedApplyResponseBodyApplyIntentionInfoDO extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * BJS
     */
    arrCity?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 北京
     */
    arrCityName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 上海南
     */
    arrStation?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-07-13 15:06:13
     */
    arrTime?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SHA
     */
    depCity?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 上海
     */
    depCityName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 北京南
     */
    depStation?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-07-13 15:06:13
     */
    depTime?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1000
     */
    price?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 一等座
     */
    seatName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * G39
     */
    trainNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 高铁
     */
    trainTypeDesc?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCityCarApplyResponseBodyApplyListApproverList extends $tea.Model {
    /**
     * @example
     * 同意
     */
    note?: string;
    /**
     * @example
     * 2021-03-18 20:26:56
     */
    operateTime?: string;
    /**
     * @example
     * 1
     */
    order?: number;
    /**
     * @example
     * 1
     */
    status?: number;
    /**
     * @example
     * 同意
     */
    statusDesc?: string;
    /**
     * @example
     * user1
     */
    userId?: string;
    /**
     * @example
     * 员工1
     */
    userName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCityCarApplyResponseBodyApplyListItineraryList extends $tea.Model {
    /**
     * @example
     * 杭州
     */
    arrCity?: string;
    /**
     * @example
     * HGH
     */
    arrCityCode?: string;
    /**
     * @example
     * 2021-03-18 20:26:56
     */
    arrDate?: string;
    /**
     * @example
     * 1
     */
    costCenterId?: number;
    /**
     * @example
     * 成本中心1
     */
    costCenterName?: string;
    /**
     * @example
     * 杭州
     */
    depCity?: string;
    /**
     * @example
     * HGH
     */
    depCityCode?: string;
    /**
     * @example
     * 2021-03-18 20:26:56
     */
    depDate?: string;
    /**
     * @example
     * 1
     */
    invoiceId?: number;
    /**
     * @example
     * 发票抬头1
     */
    invoiceName?: string;
    /**
     * @example
     * 1
     */
    itineraryId?: string;
    /**
     * @example
     * projectx
     */
    projectCode?: string;
    /**
     * @example
     * 项目x
     */
    projectTitle?: string;
    /**
     * @example
     * 4
     */
    trafficType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCityCarApplyResponseBodyApplyList extends $tea.Model {
    approverList?: QueryCityCarApplyResponseBodyApplyListApproverList[];
    /**
     * @example
     * 1
     */
    departId?: string;
    /**
     * @example
     * 部门1
     */
    departName?: string;
    /**
     * @example
     * 2021-03-18 20:26:56
     */
    gmtCreate?: string;
    /**
     * @example
     * 2021-03-18 20:26:56
     */
    gmtModified?: string;
    itineraryList?: QueryCityCarApplyResponseBodyApplyListItineraryList[];
    /**
     * @example
     * 申请
     */
    status?: number;
    /**
     * @example
     * 0
     */
    statusDesc?: string;
    /**
     * @example
     * apply1
     */
    thirdPartApplyId?: string;
    /**
     * @example
     * 杭州出差
     */
    tripCause?: string;
    /**
     * @example
     * 杭州出差
     */
    tripTitle?: string;
    /**
     * @example
     * user1
     */
    userId?: string;
    /**
     * @example
     * 员工1
     */
    userName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUnionOrderResponseBodyFlightList extends $tea.Model {
    /**
     * @example
     * 1231
     */
    flightOrderId?: number;
    /**
     * @example
     * 1
     */
    flightOrderStatus?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUnionOrderResponseBodyHotelList extends $tea.Model {
    /**
     * @example
     * 12312
     */
    hotelOrderId?: number;
    /**
     * @example
     * 1
     */
    hotelOrderStatus?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUnionOrderResponseBodyTrainList extends $tea.Model {
    /**
     * @example
     * 231231
     */
    trainOrderId?: number;
    /**
     * @example
     * 1
     */
    trainOrderstatus?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUnionOrderResponseBodyVehicleList extends $tea.Model {
    /**
     * @example
     * 1231
     */
    vehicleOrderId?: number;
    /**
     * @example
     * 1
     */
    vehicleOrderStatus?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 同步第三方市内用车申请单
     *
     * @param request - AddCityCarApplyRequest
     * @param headers - AddCityCarApplyHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddCityCarApplyResponse
     */
    addCityCarApplyWithOptions(request: AddCityCarApplyRequest, headers: AddCityCarApplyHeaders, runtime: $Util.RuntimeOptions): Promise<AddCityCarApplyResponse>;
    /**
     * 同步第三方市内用车申请单
     *
     * @param request - AddCityCarApplyRequest
     * @returns AddCityCarApplyResponse
     */
    addCityCarApply(request: AddCityCarApplyRequest): Promise<AddCityCarApplyResponse>;
    /**
     * 三方市内用车申请单审批
     *
     * @param request - ApproveCityCarApplyRequest
     * @param headers - ApproveCityCarApplyHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ApproveCityCarApplyResponse
     */
    approveCityCarApplyWithOptions(request: ApproveCityCarApplyRequest, headers: ApproveCityCarApplyHeaders, runtime: $Util.RuntimeOptions): Promise<ApproveCityCarApplyResponse>;
    /**
     * 三方市内用车申请单审批
     *
     * @param request - ApproveCityCarApplyRequest
     * @returns ApproveCityCarApplyResponse
     */
    approveCityCarApply(request: ApproveCityCarApplyRequest): Promise<ApproveCityCarApplyResponse>;
    /**
     * 商旅火车票结算记账查询接口
     *
     * @param request - BillSettementBtripTrainRequest
     * @param headers - BillSettementBtripTrainHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BillSettementBtripTrainResponse
     */
    billSettementBtripTrainWithOptions(request: BillSettementBtripTrainRequest, headers: BillSettementBtripTrainHeaders, runtime: $Util.RuntimeOptions): Promise<BillSettementBtripTrainResponse>;
    /**
     * 商旅火车票结算记账查询接口
     *
     * @param request - BillSettementBtripTrainRequest
     * @returns BillSettementBtripTrainResponse
     */
    billSettementBtripTrain(request: BillSettementBtripTrainRequest): Promise<BillSettementBtripTrainResponse>;
    /**
     * 用车结算记账查询接口
     *
     * @param request - BillSettementCarRequest
     * @param headers - BillSettementCarHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BillSettementCarResponse
     */
    billSettementCarWithOptions(request: BillSettementCarRequest, headers: BillSettementCarHeaders, runtime: $Util.RuntimeOptions): Promise<BillSettementCarResponse>;
    /**
     * 用车结算记账查询接口
     *
     * @param request - BillSettementCarRequest
     * @returns BillSettementCarResponse
     */
    billSettementCar(request: BillSettementCarRequest): Promise<BillSettementCarResponse>;
    /**
     * 机票结算记账查询接口
     *
     * @param request - BillSettementFlightRequest
     * @param headers - BillSettementFlightHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BillSettementFlightResponse
     */
    billSettementFlightWithOptions(request: BillSettementFlightRequest, headers: BillSettementFlightHeaders, runtime: $Util.RuntimeOptions): Promise<BillSettementFlightResponse>;
    /**
     * 机票结算记账查询接口
     *
     * @param request - BillSettementFlightRequest
     * @returns BillSettementFlightResponse
     */
    billSettementFlight(request: BillSettementFlightRequest): Promise<BillSettementFlightResponse>;
    /**
     * 酒店结算记账查询接口
     *
     * @param request - BillSettementHotelRequest
     * @param headers - BillSettementHotelHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BillSettementHotelResponse
     */
    billSettementHotelWithOptions(request: BillSettementHotelRequest, headers: BillSettementHotelHeaders, runtime: $Util.RuntimeOptions): Promise<BillSettementHotelResponse>;
    /**
     * 酒店结算记账查询接口
     *
     * @param request - BillSettementHotelRequest
     * @returns BillSettementHotelResponse
     */
    billSettementHotel(request: BillSettementHotelRequest): Promise<BillSettementHotelResponse>;
    /**
     * 商旅机票第三方超标审批单搜索接口
     *
     * @param request - GetFlightExceedApplyRequest
     * @param headers - GetFlightExceedApplyHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetFlightExceedApplyResponse
     */
    getFlightExceedApplyWithOptions(request: GetFlightExceedApplyRequest, headers: GetFlightExceedApplyHeaders, runtime: $Util.RuntimeOptions): Promise<GetFlightExceedApplyResponse>;
    /**
     * 商旅机票第三方超标审批单搜索接口
     *
     * @param request - GetFlightExceedApplyRequest
     * @returns GetFlightExceedApplyResponse
     */
    getFlightExceedApply(request: GetFlightExceedApplyRequest): Promise<GetFlightExceedApplyResponse>;
    /**
     * 搜索酒店超标审批单
     *
     * @param request - GetHotelExceedApplyRequest
     * @param headers - GetHotelExceedApplyHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetHotelExceedApplyResponse
     */
    getHotelExceedApplyWithOptions(request: GetHotelExceedApplyRequest, headers: GetHotelExceedApplyHeaders, runtime: $Util.RuntimeOptions): Promise<GetHotelExceedApplyResponse>;
    /**
     * 搜索酒店超标审批单
     *
     * @param request - GetHotelExceedApplyRequest
     * @returns GetHotelExceedApplyResponse
     */
    getHotelExceedApply(request: GetHotelExceedApplyRequest): Promise<GetHotelExceedApplyResponse>;
    /**
     * 商旅火车票第三方超标审批单搜索接口
     *
     * @param request - GetTrainExceedApplyRequest
     * @param headers - GetTrainExceedApplyHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetTrainExceedApplyResponse
     */
    getTrainExceedApplyWithOptions(request: GetTrainExceedApplyRequest, headers: GetTrainExceedApplyHeaders, runtime: $Util.RuntimeOptions): Promise<GetTrainExceedApplyResponse>;
    /**
     * 商旅火车票第三方超标审批单搜索接口
     *
     * @param request - GetTrainExceedApplyRequest
     * @returns GetTrainExceedApplyResponse
     */
    getTrainExceedApply(request: GetTrainExceedApplyRequest): Promise<GetTrainExceedApplyResponse>;
    /**
     * 三方市内用车申请单查询
     *
     * @param request - QueryCityCarApplyRequest
     * @param headers - QueryCityCarApplyHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryCityCarApplyResponse
     */
    queryCityCarApplyWithOptions(request: QueryCityCarApplyRequest, headers: QueryCityCarApplyHeaders, runtime: $Util.RuntimeOptions): Promise<QueryCityCarApplyResponse>;
    /**
     * 三方市内用车申请单查询
     *
     * @param request - QueryCityCarApplyRequest
     * @returns QueryCityCarApplyResponse
     */
    queryCityCarApply(request: QueryCityCarApplyRequest): Promise<QueryCityCarApplyResponse>;
    /**
     * 申请单关联单号查询相关订单信息
     *
     * @param request - QueryUnionOrderRequest
     * @param headers - QueryUnionOrderHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryUnionOrderResponse
     */
    queryUnionOrderWithOptions(request: QueryUnionOrderRequest, headers: QueryUnionOrderHeaders, runtime: $Util.RuntimeOptions): Promise<QueryUnionOrderResponse>;
    /**
     * 申请单关联单号查询相关订单信息
     *
     * @param request - QueryUnionOrderRequest
     * @returns QueryUnionOrderResponse
     */
    queryUnionOrder(request: QueryUnionOrderRequest): Promise<QueryUnionOrderResponse>;
    /**
     * 同步超标审批结果
     *
     * @param request - SyncExceedApplyRequest
     * @param headers - SyncExceedApplyHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SyncExceedApplyResponse
     */
    syncExceedApplyWithOptions(request: SyncExceedApplyRequest, headers: SyncExceedApplyHeaders, runtime: $Util.RuntimeOptions): Promise<SyncExceedApplyResponse>;
    /**
     * 同步超标审批结果
     *
     * @param request - SyncExceedApplyRequest
     * @returns SyncExceedApplyResponse
     */
    syncExceedApply(request: SyncExceedApplyRequest): Promise<SyncExceedApplyResponse>;
}
