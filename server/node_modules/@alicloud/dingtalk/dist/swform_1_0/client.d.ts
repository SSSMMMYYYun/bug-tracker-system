/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class GetFormInstanceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFormInstanceRequest extends $tea.Model {
    /**
     * @example
     * 0
     */
    bizType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFormInstanceResponseBody extends $tea.Model {
    result?: GetFormInstanceResponseBodyResult;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFormInstanceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetFormInstanceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListFormInstancesHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListFormInstancesRequest extends $tea.Model {
    /**
     * @example
     * 2019-01-01
     */
    actionDate?: string;
    /**
     * @example
     * 0
     */
    bizType?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 15
     */
    maxResults?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    nextToken?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListFormInstancesResponseBody extends $tea.Model {
    result?: ListFormInstancesResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListFormInstancesResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListFormInstancesResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListFormSchemasByCreatorHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListFormSchemasByCreatorRequest extends $tea.Model {
    /**
     * @example
     * 0
     */
    bizType?: number;
    /**
     * @example
     * user123
     */
    creator?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    maxResults?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    nextToken?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListFormSchemasByCreatorResponseBody extends $tea.Model {
    result?: ListFormSchemasByCreatorResponseBodyResult;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListFormSchemasByCreatorResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListFormSchemasByCreatorResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFormInstanceResponseBodyResultForms extends $tea.Model {
    /**
     * @example
     * TextareaField_KGAW58AQ
     */
    key?: string;
    /**
     * @example
     * 你希望的主题
     */
    label?: string;
    /**
     * @example
     * 操作演示
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFormInstanceResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * Use the UTC time format: yyyy-MM-ddTHH:mmZ
     *
     * @example
     * 2022-07-27T18:53Z
     */
    createTime?: string;
    /**
     * @example
     * manager4220
     */
    creator?: string;
    /**
     * @example
     * PROC-E5BD2166-B6F4-xxxx
     */
    formCode?: string;
    forms?: GetFormInstanceResponseBodyResultForms[];
    /**
     * @remarks
     * Use the UTC time format: yyyy-MM-ddTHH:mmZ
     *
     * @example
     * 2022-07-27T18:53Z
     */
    modifyTime?: string;
    /**
     * @example
     * 智能填表测试
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListFormInstancesResponseBodyResultListForms extends $tea.Model {
    /**
     * @example
     * TextareaField_KGAW58AQ
     */
    key?: string;
    /**
     * @example
     * 你希望的主题
     */
    label?: string;
    /**
     * @example
     * 操作演示
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListFormInstancesResponseBodyResultList extends $tea.Model {
    /**
     * @remarks
     * Use the UTC time format: yyyy-MM-ddTHH:mmZ
     *
     * @example
     * 2022-07-27T18:53Z
     */
    createTime?: string;
    /**
     * @example
     * PROC-E5BD2166-B6F4-xxxx
     */
    formCode?: string;
    /**
     * @example
     * 11125769-fxxxx
     */
    formInstanceId?: string;
    forms?: ListFormInstancesResponseBodyResultListForms[];
    /**
     * @remarks
     * Use the UTC time format: yyyy-MM-ddTHH:mmZ
     *
     * @example
     * 2022-07-27T18:53Z
     */
    modifyTime?: string;
    /**
     * @example
     * 1
     */
    studentClassId?: string;
    /**
     * @example
     * 三年二班
     */
    studentClassName?: string;
    /**
     * @example
     * 钉三多
     */
    studentName?: string;
    /**
     * @example
     * 1
     */
    studentUserId?: string;
    /**
     * @example
     * user123
     */
    submitterUserId?: string;
    /**
     * @example
     * 钉三多
     */
    submitterUserName?: string;
    /**
     * @example
     * 智能填表测试
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListFormInstancesResponseBodyResult extends $tea.Model {
    /**
     * @example
     * true
     */
    hasMore?: boolean;
    list?: ListFormInstancesResponseBodyResultList[];
    /**
     * @example
     * 10
     */
    nextToken?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListFormSchemasByCreatorResponseBodyResultListSetting extends $tea.Model {
    /**
     * @example
     * 0
     */
    bizType?: number;
    /**
     * @remarks
     * Use the UTC time format: yyyy-MM-ddTHH:mmZ
     *
     * @example
     * 2022-07-27T18:53Z
     */
    createTime?: string;
    /**
     * @remarks
     * Use the UTC time format: yyyy-MM-ddTHH:mmZ
     *
     * @example
     * 2022-07-27T18:53Z
     */
    endTime?: string;
    /**
     * @example
     * 0
     */
    formType?: number;
    loopDays?: number[];
    /**
     * @example
     * 18:00
     */
    loopTime?: string;
    /**
     * @example
     * true
     */
    stop?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListFormSchemasByCreatorResponseBodyResultList extends $tea.Model {
    /**
     * @example
     * user123
     */
    creator?: string;
    /**
     * @example
     * PROC-E5BD2166-B6F4-xxxx
     */
    formCode?: string;
    /**
     * @example
     * 请大家仔细填写，谢谢合作
     */
    memo?: string;
    /**
     * @example
     * 智能填表测试
     */
    name?: string;
    setting?: ListFormSchemasByCreatorResponseBodyResultListSetting;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListFormSchemasByCreatorResponseBodyResult extends $tea.Model {
    /**
     * @example
     * true
     */
    hasMore?: boolean;
    list?: ListFormSchemasByCreatorResponseBodyResultList[];
    /**
     * @example
     * 10
     */
    nextToken?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 获取单个填表实例详情接口
     *
     * @param request - GetFormInstanceRequest
     * @param headers - GetFormInstanceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetFormInstanceResponse
     */
    getFormInstanceWithOptions(formInstanceId: string, request: GetFormInstanceRequest, headers: GetFormInstanceHeaders, runtime: $Util.RuntimeOptions): Promise<GetFormInstanceResponse>;
    /**
     * 获取单个填表实例详情接口
     *
     * @param request - GetFormInstanceRequest
     * @returns GetFormInstanceResponse
     */
    getFormInstance(formInstanceId: string, request: GetFormInstanceRequest): Promise<GetFormInstanceResponse>;
    /**
     * 获取填表模版下的填表实例列表接口
     *
     * @param request - ListFormInstancesRequest
     * @param headers - ListFormInstancesHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListFormInstancesResponse
     */
    listFormInstancesWithOptions(formCode: string, request: ListFormInstancesRequest, headers: ListFormInstancesHeaders, runtime: $Util.RuntimeOptions): Promise<ListFormInstancesResponse>;
    /**
     * 获取填表模版下的填表实例列表接口
     *
     * @param request - ListFormInstancesRequest
     * @returns ListFormInstancesResponse
     */
    listFormInstances(formCode: string, request: ListFormInstancesRequest): Promise<ListFormInstancesResponse>;
    /**
     * 获取用户创建的填表模板列表接口
     *
     * @param request - ListFormSchemasByCreatorRequest
     * @param headers - ListFormSchemasByCreatorHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListFormSchemasByCreatorResponse
     */
    listFormSchemasByCreatorWithOptions(request: ListFormSchemasByCreatorRequest, headers: ListFormSchemasByCreatorHeaders, runtime: $Util.RuntimeOptions): Promise<ListFormSchemasByCreatorResponse>;
    /**
     * 获取用户创建的填表模板列表接口
     *
     * @param request - ListFormSchemasByCreatorRequest
     * @returns ListFormSchemasByCreatorResponse
     */
    listFormSchemasByCreator(request: ListFormSchemasByCreatorRequest): Promise<ListFormSchemasByCreatorResponse>;
}
