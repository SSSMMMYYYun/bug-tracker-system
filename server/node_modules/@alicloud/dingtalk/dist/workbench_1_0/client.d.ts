/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class AddRecentUserAppListHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddRecentUserAppListRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding48143d56cd15327624f2f5cc6abecb85
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    usedAppDetailList?: AddRecentUserAppListRequestUsedAppDetailList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 642325391030949
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddRecentUserAppListResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddRecentUserAppListResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddRecentUserAppListResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetDingPortalDetailHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetDingPortalDetailResponseBody extends $tea.Model {
    /**
     * @example
     * SWAPP-XXX
     */
    appUuid?: string;
    /**
     * @example
     * 我的自定义工作台
     */
    dingPortalName?: string;
    pages?: GetDingPortalDetailResponseBodyPages[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetDingPortalDetailResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetDingPortalDetailResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPluginPermissionPointHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPluginPermissionPointRequest extends $tea.Model {
    miniAppId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPluginPermissionPointResponseBody extends $tea.Model {
    permissionPointList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPluginPermissionPointResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetPluginPermissionPointResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPluginRuleCheckInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPluginRuleCheckInfoRequest extends $tea.Model {
    miniAppId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPluginRuleCheckInfoResponseBody extends $tea.Model {
    packCode?: string;
    pluginRuleCheckDetail?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPluginRuleCheckInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetPluginRuleCheckInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListWorkBenchGroupHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListWorkBenchGroupRequest extends $tea.Model {
    /**
     * @example
     * corpId
     */
    ecologicalCorpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 首页 = WORK_HOME 全部页 = WORK_ALL_APP
     */
    groupType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxx
     */
    opUnionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListWorkBenchGroupResponseBody extends $tea.Model {
    groupList?: ListWorkBenchGroupResponseBodyGroupList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListWorkBenchGroupResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListWorkBenchGroupResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifyWorkbenchBadgeHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifyWorkbenchBadgeRequest extends $tea.Model {
    /**
     * **if can be null:**
     * false
     */
    bizIdList?: string[];
    isAdded?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * full
     */
    modifyMode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5000000004278081/test
     */
    redDotRelationId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * workbench_component
     */
    redDotType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0123465
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifyWorkbenchBadgeResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifyWorkbenchBadgeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ModifyWorkbenchBadgeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryComponentScopesHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryComponentScopesResponseBody extends $tea.Model {
    deptVisibleScopes?: number[];
    userVisibleScopes?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryComponentScopesResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryComponentScopesResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryShortcutScopesHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryShortcutScopesResponseBody extends $tea.Model {
    deptVisibleScopes?: number[];
    userVisibleScopes?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryShortcutScopesResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryShortcutScopesResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UndoDeletionHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UndoDeletionRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    bizIdList?: string[];
    /**
     * @remarks
     * This parameter is required.
     */
    redDotRelationId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * workbench_component
     */
    redDotType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UndoDeletionResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UndoDeletionResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UndoDeletionResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateDingPortalPageScopeHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateDingPortalPageScopeRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * false
     */
    allVisible?: boolean;
    deptIds?: number[];
    roleIds?: number[];
    userids?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateDingPortalPageScopeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddRecentUserAppListRequestUsedAppDetailList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2636835622
     */
    agentId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetDingPortalDetailResponseBodyPages extends $tea.Model {
    /**
     * @example
     * false
     */
    allVisible?: boolean;
    deptIds?: number[];
    /**
     * @example
     * 我的工作台页面
     */
    pageName?: string;
    /**
     * @example
     * XX-XX-XX
     */
    pageUuid?: string;
    roleIds?: number[];
    userids?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListWorkBenchGroupResponseBodyGroupList extends $tea.Model {
    /**
     * @example
     * desc
     */
    componentId?: string;
    /**
     * @example
     * name
     */
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 批量添加最近使用记录
     *
     * @param request - AddRecentUserAppListRequest
     * @param headers - AddRecentUserAppListHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddRecentUserAppListResponse
     */
    addRecentUserAppListWithOptions(request: AddRecentUserAppListRequest, headers: AddRecentUserAppListHeaders, runtime: $Util.RuntimeOptions): Promise<AddRecentUserAppListResponse>;
    /**
     * 批量添加最近使用记录
     *
     * @param request - AddRecentUserAppListRequest
     * @returns AddRecentUserAppListResponse
     */
    addRecentUserAppList(request: AddRecentUserAppListRequest): Promise<AddRecentUserAppListResponse>;
    /**
     * 查询自定义工作台
     *
     * @param headers - GetDingPortalDetailHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetDingPortalDetailResponse
     */
    getDingPortalDetailWithOptions(appUuid: string, headers: GetDingPortalDetailHeaders, runtime: $Util.RuntimeOptions): Promise<GetDingPortalDetailResponse>;
    /**
     * 查询自定义工作台
     * @returns GetDingPortalDetailResponse
     */
    getDingPortalDetail(appUuid: string): Promise<GetDingPortalDetailResponse>;
    /**
     * 获取工作台插件的权限点
     *
     * @param request - GetPluginPermissionPointRequest
     * @param headers - GetPluginPermissionPointHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetPluginPermissionPointResponse
     */
    getPluginPermissionPointWithOptions(request: GetPluginPermissionPointRequest, headers: GetPluginPermissionPointHeaders, runtime: $Util.RuntimeOptions): Promise<GetPluginPermissionPointResponse>;
    /**
     * 获取工作台插件的权限点
     *
     * @param request - GetPluginPermissionPointRequest
     * @returns GetPluginPermissionPointResponse
     */
    getPluginPermissionPoint(request: GetPluginPermissionPointRequest): Promise<GetPluginPermissionPointResponse>;
    /**
     * 获取插件的校验规则
     *
     * @param request - GetPluginRuleCheckInfoRequest
     * @param headers - GetPluginRuleCheckInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetPluginRuleCheckInfoResponse
     */
    getPluginRuleCheckInfoWithOptions(request: GetPluginRuleCheckInfoRequest, headers: GetPluginRuleCheckInfoHeaders, runtime: $Util.RuntimeOptions): Promise<GetPluginRuleCheckInfoResponse>;
    /**
     * 获取插件的校验规则
     *
     * @param request - GetPluginRuleCheckInfoRequest
     * @returns GetPluginRuleCheckInfoResponse
     */
    getPluginRuleCheckInfo(request: GetPluginRuleCheckInfoRequest): Promise<GetPluginRuleCheckInfoResponse>;
    /**
     * 获取工作台分组列表
     *
     * @param request - ListWorkBenchGroupRequest
     * @param headers - ListWorkBenchGroupHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListWorkBenchGroupResponse
     */
    listWorkBenchGroupWithOptions(request: ListWorkBenchGroupRequest, headers: ListWorkBenchGroupHeaders, runtime: $Util.RuntimeOptions): Promise<ListWorkBenchGroupResponse>;
    /**
     * 获取工作台分组列表
     *
     * @param request - ListWorkBenchGroupRequest
     * @returns ListWorkBenchGroupResponse
     */
    listWorkBenchGroup(request: ListWorkBenchGroupRequest): Promise<ListWorkBenchGroupResponse>;
    /**
     * 工作台支持数字红点
     *
     * @param request - ModifyWorkbenchBadgeRequest
     * @param headers - ModifyWorkbenchBadgeHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ModifyWorkbenchBadgeResponse
     */
    modifyWorkbenchBadgeWithOptions(request: ModifyWorkbenchBadgeRequest, headers: ModifyWorkbenchBadgeHeaders, runtime: $Util.RuntimeOptions): Promise<ModifyWorkbenchBadgeResponse>;
    /**
     * 工作台支持数字红点
     *
     * @param request - ModifyWorkbenchBadgeRequest
     * @returns ModifyWorkbenchBadgeResponse
     */
    modifyWorkbenchBadge(request: ModifyWorkbenchBadgeRequest): Promise<ModifyWorkbenchBadgeResponse>;
    /**
     * 工作台组件授权范围查询
     *
     * @param headers - QueryComponentScopesHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryComponentScopesResponse
     */
    queryComponentScopesWithOptions(componentId: string, headers: QueryComponentScopesHeaders, runtime: $Util.RuntimeOptions): Promise<QueryComponentScopesResponse>;
    /**
     * 工作台组件授权范围查询
     * @returns QueryComponentScopesResponse
     */
    queryComponentScopes(componentId: string): Promise<QueryComponentScopesResponse>;
    /**
     * 查询快捷方式可见范围
     *
     * @param headers - QueryShortcutScopesHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryShortcutScopesResponse
     */
    queryShortcutScopesWithOptions(shortcutKey: string, headers: QueryShortcutScopesHeaders, runtime: $Util.RuntimeOptions): Promise<QueryShortcutScopesResponse>;
    /**
     * 查询快捷方式可见范围
     * @returns QueryShortcutScopesResponse
     */
    queryShortcutScopes(shortcutKey: string): Promise<QueryShortcutScopesResponse>;
    /**
     * 工作台数字红点支持撤销已被删除的资源
     *
     * @param request - UndoDeletionRequest
     * @param headers - UndoDeletionHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UndoDeletionResponse
     */
    undoDeletionWithOptions(request: UndoDeletionRequest, headers: UndoDeletionHeaders, runtime: $Util.RuntimeOptions): Promise<UndoDeletionResponse>;
    /**
     * 工作台数字红点支持撤销已被删除的资源
     *
     * @param request - UndoDeletionRequest
     * @returns UndoDeletionResponse
     */
    undoDeletion(request: UndoDeletionRequest): Promise<UndoDeletionResponse>;
    /**
     * 更新自定义工作台页面可见性
     *
     * @param request - UpdateDingPortalPageScopeRequest
     * @param headers - UpdateDingPortalPageScopeHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateDingPortalPageScopeResponse
     */
    updateDingPortalPageScopeWithOptions(pageUuid: string, appUuid: string, request: UpdateDingPortalPageScopeRequest, headers: UpdateDingPortalPageScopeHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateDingPortalPageScopeResponse>;
    /**
     * 更新自定义工作台页面可见性
     *
     * @param request - UpdateDingPortalPageScopeRequest
     * @returns UpdateDingPortalPageScopeResponse
     */
    updateDingPortalPageScope(pageUuid: string, appUuid: string, request: UpdateDingPortalPageScopeRequest): Promise<UpdateDingPortalPageScopeResponse>;
}
