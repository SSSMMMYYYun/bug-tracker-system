/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class AbandonCustomerHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AbandonCustomerRequest extends $tea.Model {
    customTrackDesc?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    instanceIdList?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123123123
     */
    operatorUserId?: string;
    optType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AbandonCustomerResponseBody extends $tea.Model {
    instanceIdList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AbandonCustomerResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AbandonCustomerResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCrmPersonalCustomerHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCrmPersonalCustomerRequest extends $tea.Model {
    /**
     * @example
     * publicDraw
     */
    action?: string;
    creatorNick?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    creatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    data?: {
        [key: string]: any;
    };
    extendData?: {
        [key: string]: any;
    };
    permission?: AddCrmPersonalCustomerRequestPermission;
    /**
     * @example
     * crm_customer_personal
     */
    relationType?: string;
    /**
     * @example
     * false
     */
    skipDuplicateCheck?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCrmPersonalCustomerResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    instanceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCrmPersonalCustomerResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddCrmPersonalCustomerResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCustomerTrackHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCustomerTrackRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * [华佗](http://******)创建了合同：**今日合同**
     */
    content?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * fb037d68-c1bd-4be2-8c3b-6739261d1332
     */
    customerId?: string;
    /**
     * @example
     * {"bizId":"1"}
     *
     * **if can be null:**
     * true
     */
    extraBizInfo?: string;
    /**
     * @example
     * fb037d68-c1bd-4be2-8c3b-6739261d1332-1
     *
     * **if can be null:**
     * true
     */
    idempotentKey?: string;
    /**
     * @example
     * [华佗](http://******)创建了合同：**今日合同**
     */
    maskedContent?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager1120
     */
    operatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * crm_customer
     */
    relationType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 创建合同
     */
    title?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 212
     */
    type?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCustomerTrackResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCustomerTrackResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddCustomerTrackResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddLeadsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddLeadsRequest extends $tea.Model {
    /**
     * @example
     * 1669360918000
     */
    assignTimestamp?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager1234
     */
    assignUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager1234
     */
    assignedUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    leads?: AddLeadsRequestLeads[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * t123123123
     */
    outTaskId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddLeadsResponseBody extends $tea.Model {
    outTaskId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddLeadsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddLeadsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddMetaModelFieldHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddMetaModelFieldRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    bizType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fieldDTOList?: AddMetaModelFieldRequestFieldDTOList[];
    /**
     * @remarks
     * This parameter is required.
     */
    operatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    tenant?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddMetaModelFieldResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    bizType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddMetaModelFieldResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddMetaModelFieldResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddRelationMetaFieldHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddRelationMetaFieldRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fieldDTOList?: AddRelationMetaFieldRequestFieldDTOList[];
    /**
     * @remarks
     * This parameter is required.
     */
    operatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relationType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    tenant?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddRelationMetaFieldResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    relationType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddRelationMetaFieldResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddRelationMetaFieldResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendCustomerDataAuthHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendCustomerDataAuthRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    customerIds?: string[];
    /**
     * @remarks
     * This parameter is required.
     */
    dataAuthUserIds?: string[];
    /**
     * @example
     * PROC-98187D45-EFC0-4FC4-887E-45BD24209D69
     */
    formCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * staffId2
     */
    operateUserId?: string;
    /**
     * @example
     * crm_customer
     */
    relationType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * owner
     */
    roleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendCustomerDataAuthResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendCustomerDataAuthResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AppendCustomerDataAuthResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddContactsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddContactsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager021a
     */
    operatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relationList?: BatchAddContactsRequestRelationList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddContactsResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    results?: BatchAddContactsResponseBodyResults[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddContactsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchAddContactsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddFollowRecordsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddFollowRecordsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    instanceList?: BatchAddFollowRecordsRequestInstanceList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager021a
     */
    operatorUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddFollowRecordsResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    results?: BatchAddFollowRecordsResponseBodyResults[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddFollowRecordsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchAddFollowRecordsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddRelationDatasHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddRelationDatasRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager021a
     */
    operatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relationList?: BatchAddRelationDatasRequestRelationList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * crm_customer
     */
    relationType?: string;
    /**
     * @example
     * false
     */
    skipDuplicateCheck?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddRelationDatasResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    results?: BatchAddRelationDatasResponseBodyResults[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddRelationDatasResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchAddRelationDatasResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateClueDataHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateClueDataRequest extends $tea.Model {
    dataList?: BatchCreateClueDataRequestDataList[];
    privateSeas?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * d124
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateClueDataResponseBody extends $tea.Model {
    requestId?: string;
    result?: BatchCreateClueDataResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateClueDataResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchCreateClueDataResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchRemoveFollowRecordsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchRemoveFollowRecordsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    instanceIds?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager021a
     */
    operatorUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchRemoveFollowRecordsResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    results?: BatchRemoveFollowRecordsResponseBodyResults[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchRemoveFollowRecordsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchRemoveFollowRecordsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchSendOfficialAccountOTOMessageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchSendOfficialAccountOTOMessageRequest extends $tea.Model {
    accountId?: string;
    /**
     * **if can be null:**
     * true
     */
    bizId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    detail?: BatchSendOfficialAccountOTOMessageRequestDetail;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchSendOfficialAccountOTOMessageResponseBody extends $tea.Model {
    /**
     * @example
     * acs1234
     */
    requestId?: string;
    result?: BatchSendOfficialAccountOTOMessageResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchSendOfficialAccountOTOMessageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchSendOfficialAccountOTOMessageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchUpdateContactsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchUpdateContactsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager021a
     */
    operatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relationList?: BatchUpdateContactsRequestRelationList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchUpdateContactsResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    results?: BatchUpdateContactsResponseBodyResults[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchUpdateContactsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchUpdateContactsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchUpdateFollowRecordsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchUpdateFollowRecordsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    instanceList?: BatchUpdateFollowRecordsRequestInstanceList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager021a
     */
    operatorUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchUpdateFollowRecordsResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    results?: BatchUpdateFollowRecordsResponseBodyResults[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchUpdateFollowRecordsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchUpdateFollowRecordsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchUpdateRelationDatasHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchUpdateRelationDatasRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager021a
     */
    operatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relationList?: BatchUpdateRelationDatasRequestRelationList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * crm_customer
     */
    relationType?: string;
    /**
     * @example
     * false
     */
    skipDuplicateCheck?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchUpdateRelationDatasResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    results?: BatchUpdateRelationDatasResponseBodyResults[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchUpdateRelationDatasResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchUpdateRelationDatasResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsumeBenefitInventoryHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsumeBenefitInventoryRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * B_ACCOUNT_NUMBER
     */
    benefitCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * bizId
     */
    bizRequestId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    consumeQuota?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * optStaffId
     */
    optUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsumeBenefitInventoryResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsumeBenefitInventoryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ConsumeBenefitInventoryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomerHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomerRequest extends $tea.Model {
    contacts?: CreateCustomerRequestContacts[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager123
     */
    creatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    data?: {
        [key: string]: any;
    };
    extendData?: {
        [key: string]: any;
    };
    /**
     * @example
     * xxxx-xxxx-xxxx-xxxx
     *
     * **if can be null:**
     * true
     */
    instanceId?: string;
    /**
     * @example
     * crm_customer
     *
     * **if can be null:**
     * true
     */
    objectType?: string;
    permission?: CreateCustomerRequestPermission;
    /**
     * @remarks
     * This parameter is required.
     */
    saveOption?: CreateCustomerRequestSaveOption;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomerResponseBody extends $tea.Model {
    contacts?: CreateCustomerResponseBodyContacts[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * customer_id
     */
    customerInstanceId?: string;
    /**
     * @example
     * crm_customer
     */
    objectType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomerResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateCustomerResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateGroupHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateGroupRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * abc
     */
    groupName?: string;
    /**
     * @example
     * a,b,c
     */
    memberUserIds?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * abc123
     */
    ownerUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * abc
     */
    relationType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateGroupResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    openConversationId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateGroupResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateGroupResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateGroupSetHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateGroupSetRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    creatorUserId?: string;
    managerUserIds?: string;
    memberQuota?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    notice?: string;
    noticeToped?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    ownerUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relationType?: string;
    templateId?: string;
    welcome?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateGroupSetResponseBody extends $tea.Model {
    gmtCreate?: string;
    gmtModified?: string;
    inviteLink?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    lastOpenConversationId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    manager?: CreateGroupSetResponseBodyManager[];
    managerUserIds?: string;
    memberCount?: number;
    memberQuota?: number;
    name?: string;
    notice?: string;
    noticeToped?: number;
    openGroupSetId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    owner?: CreateGroupSetResponseBodyOwner;
    ownerUserId?: string;
    relationType?: string;
    templateId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateGroupSetResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateGroupSetResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRelationMetaHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRelationMetaRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    operatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relationMetaDTO?: CreateRelationMetaRequestRelationMetaDTO;
    /**
     * @remarks
     * This parameter is required.
     */
    tenant?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRelationMetaResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    relationType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRelationMetaResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateRelationMetaResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCrmCustomObjectDataHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCrmCustomObjectDataRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * PROC_xx
     */
    formCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCrmCustomObjectDataResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * INST_xx
     */
    instanceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCrmCustomObjectDataResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteCrmCustomObjectDataResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCrmFormInstanceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCrmFormInstanceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager123
     */
    currentOperatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * PROC-123
     */
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCrmFormInstanceResponseBody extends $tea.Model {
    /**
     * @example
     * intanceId1
     */
    instanceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCrmFormInstanceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteCrmFormInstanceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCrmPersonalCustomerHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCrmPersonalCustomerRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    currentOperatorUserId?: string;
    relationType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCrmPersonalCustomerResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    instanceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCrmPersonalCustomerResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteCrmPersonalCustomerResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteLeadsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteLeadsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    outLeadsIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteLeadsResponseBody extends $tea.Model {
    outLeadsIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteLeadsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteLeadsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteRelationMetaFieldHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteRelationMetaFieldRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fieldIdList?: string[];
    /**
     * @remarks
     * This parameter is required.
     */
    operatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relationType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    tenant?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteRelationMetaFieldResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    relationType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteRelationMetaFieldResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteRelationMetaFieldResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeCrmPersonalCustomerObjectMetaHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeCrmPersonalCustomerObjectMetaRequest extends $tea.Model {
    relationType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeCrmPersonalCustomerObjectMetaResponseBody extends $tea.Model {
    /**
     * @example
     * PROC-XXXX
     */
    code?: string;
    customized?: boolean;
    fields?: DescribeCrmPersonalCustomerObjectMetaResponseBodyFields[];
    name?: string;
    /**
     * @example
     * PUBLISHED
     */
    status?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeCrmPersonalCustomerObjectMetaResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DescribeCrmPersonalCustomerObjectMetaResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    bizTypes?: string[];
    /**
     * @remarks
     * This parameter is required.
     */
    operatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    tenant?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    metaModelDTOList?: DescribeMetaModelResponseBodyMetaModelDTOList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DescribeMetaModelResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    operatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relationTypes?: string[];
    /**
     * @remarks
     * This parameter is required.
     */
    tenant?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    relationMetaDTOList?: DescribeRelationMetaResponseBodyRelationMetaDTOList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DescribeRelationMetaResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class FindTargetRelatedFollowRecordsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class FindTargetRelatedFollowRecordsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * customerId
     */
    followTargetDataId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * customer
     */
    followTargetType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100
     */
    maxResults?: number;
    /**
     * @example
     * 1
     */
    nextToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class FindTargetRelatedFollowRecordsResponseBody extends $tea.Model {
    result?: FindTargetRelatedFollowRecordsResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class FindTargetRelatedFollowRecordsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: FindTargetRelatedFollowRecordsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAllCustomerRecyclesHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAllCustomerRecyclesRequest extends $tea.Model {
    /**
     * @example
     * 10
     */
    maxResults?: number;
    nextToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAllCustomerRecyclesResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    hasMore?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    nextToken?: string;
    /**
     * @example
     * true
     */
    resultList?: GetAllCustomerRecyclesResponseBodyResultList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAllCustomerRecyclesResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetAllCustomerRecyclesResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetContactsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetContactsRequest extends $tea.Model {
    /**
     * @example
     * user01
     */
    currentOperatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    maxResults?: number;
    /**
     * @example
     * 0
     */
    nextToken?: string;
    /**
     * @example
     * crm_contact
     */
    objectType?: string;
    /**
     * @example
     * dingxxx
     */
    providerCorpId?: string;
    /**
     * @example
     * {"queryGroupList":[{"logicType":"AND","queryObjectList":[{"fieldId":"contact_phone","value":"18000000000"},{"fieldId":"contact_related_customer","value":"INST-XXX"}]}]}
     */
    queryDsl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetContactsResponseBody extends $tea.Model {
    result?: GetContactsResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetContactsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetContactsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCrmGroupChatHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCrmGroupChatResponseBody extends $tea.Model {
    chatId?: string;
    gmtCreate?: number;
    /**
     * @example
     * https://static/xx.com/xx.jpg
     */
    iconUrl?: string;
    memberCount?: number;
    name?: string;
    openConversationId?: string;
    openGroupSetId?: string;
    ownerUserId?: string;
    ownerUserName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCrmGroupChatResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetCrmGroupChatResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCrmGroupChatMultiHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCrmGroupChatMultiRequest extends $tea.Model {
    openConversationIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCrmGroupChatMultiResponseBody extends $tea.Model {
    result?: GetCrmGroupChatMultiResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCrmGroupChatMultiResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetCrmGroupChatMultiResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCrmGroupChatSingleHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCrmGroupChatSingleRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    openConversationId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCrmGroupChatSingleResponseBody extends $tea.Model {
    gmtCreate?: number;
    /**
     * @example
     * https://static/xx.com/xx.jpg
     */
    iconUrl?: string;
    memberCount?: number;
    name?: string;
    openConversationId?: string;
    openGroupSetId?: string;
    ownerUserId?: string;
    ownerUserName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCrmGroupChatSingleResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetCrmGroupChatSingleResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCrmRolePermissionHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCrmRolePermissionRequest extends $tea.Model {
    /**
     * @example
     * crm_customer
     */
    bizType?: string;
    /**
     * @example
     * PROC-9EC85C45-E404-4E26-9300-E67455F0FF8F
     */
    resourceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCrmRolePermissionResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    permissions?: GetCrmRolePermissionResponseBodyPermissions[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCrmRolePermissionResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetCrmRolePermissionResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCustomerTracksByRelationIdHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCustomerTracksByRelationIdRequest extends $tea.Model {
    /**
     * @example
     * 10
     */
    maxResults?: number;
    nextToken?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * fasd-afsd1-21312-faaa
     */
    relationId?: string;
    /**
     * @example
     * 0
     */
    typeGroup?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCustomerTracksByRelationIdResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    hasMore?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    nextToken?: string;
    /**
     * @example
     * true
     */
    resultList?: GetCustomerTracksByRelationIdResponseBodyResultList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCustomerTracksByRelationIdResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetCustomerTracksByRelationIdResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetGroupSetHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetGroupSetRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    openGroupSetId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetGroupSetResponseBody extends $tea.Model {
    gmtCreate?: string;
    gmtModified?: string;
    /**
     * @example
     * 5
     */
    groupChatCount?: number;
    inviteLink?: string;
    lastOpenConversationId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    manager?: GetGroupSetResponseBodyManager[];
    managerUserIds?: string;
    memberCount?: number;
    memberQuota?: number;
    name?: string;
    notice?: string;
    noticeToped?: number;
    openGroupSetId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    owner?: GetGroupSetResponseBodyOwner;
    ownerUserId?: string;
    relationType?: string;
    templateId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetGroupSetResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetGroupSetResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInAppPurchaseGoodsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInAppPurchaseGoodsRequest extends $tea.Model {
    /**
     * @example
     * uhdhjsabdfhjb
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInAppPurchaseGoodsResponseBody extends $tea.Model {
    result?: GetInAppPurchaseGoodsResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInAppPurchaseGoodsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetInAppPurchaseGoodsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetNavigationCatalogHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetNavigationCatalogRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 6360a371-4ffa-464b-a935-39817c3ccbe8
     */
    bizTraceId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * sale
     */
    module?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 16044739461008808747
     */
    operatorUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetNavigationCatalogResponseBody extends $tea.Model {
    result?: GetNavigationCatalogResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetNavigationCatalogResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetNavigationCatalogResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetObjectDataHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetObjectDataRequest extends $tea.Model {
    /**
     * @example
     * ding_userid
     */
    currentOperatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100
     */
    maxResults?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * PROC-EF199CCA-8AB6-482A-AE10-85EDE5E391D9
     */
    name?: string;
    /**
     * @example
     * 0
     */
    nextToken?: string;
    /**
     * @example
     * {"queryGroupList":[{"logicType":"AND","queryObjectList":[{"fieldId":"contact_phone","value":"18000000000"},{"fieldId":"contact_related_customer","value":"INST-XXX"}]}]}
     */
    queryDsl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetObjectDataResponseBody extends $tea.Model {
    result?: GetObjectDataResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetObjectDataResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetObjectDataResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOfficialAccountContactInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOfficialAccountContactInfoResponseBody extends $tea.Model {
    authItems?: string[];
    /**
     * @example
     * 阿里巴巴钉钉
     */
    corpName?: string;
    /**
     * @example
     * 18812341234
     */
    mobile?: string;
    /**
     * @example
     * +86
     */
    stateCode?: string;
    /**
     * @example
     * unionId
     */
    unionId?: string;
    userInfos?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOfficialAccountContactInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetOfficialAccountContactInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOfficialAccountContactsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOfficialAccountContactsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    maxResults?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123567
     */
    nextToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOfficialAccountContactsResponseBody extends $tea.Model {
    /**
     * @example
     * 10
     */
    maxResults?: number;
    /**
     * @example
     * 10010
     */
    nextToken?: string;
    values?: GetOfficialAccountContactsResponseBodyValues[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOfficialAccountContactsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetOfficialAccountContactsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOfficialAccountOTOMessageResultHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOfficialAccountOTOMessageResultRequest extends $tea.Model {
    accountId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    openPushId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOfficialAccountOTOMessageResultResponseBody extends $tea.Model {
    requestId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    result?: GetOfficialAccountOTOMessageResultResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOfficialAccountOTOMessageResultResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetOfficialAccountOTOMessageResultResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRelatedViewTabDataHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRelatedViewTabDataRequest extends $tea.Model {
    /**
     * @example
     * PROC-62829702-A377-42A9-9CB3-E1C691A0CEDB
     */
    formCode?: string;
    /**
     * @example
     * 10
     */
    maxResults?: number;
    /**
     * @example
     * 0
     */
    nextToken?: number;
    /**
     * @example
     * OpenDataField_OV2K4SOW2ZGG
     */
    relatedField?: string;
    /**
     * @example
     * u_dxcugzT0aPQvcK2PIkzQ00841721291058
     */
    relatedInstId?: string;
    /**
     * @example
     * manager6034
     */
    viewUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRelatedViewTabDataResponseBody extends $tea.Model {
    result?: GetRelatedViewTabDataResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRelatedViewTabDataResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetRelatedViewTabDataResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRelatedViewTabMetaHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRelatedViewTabMetaRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * PROC-2DB0FF86-CE29-41FF-B0FE-BFDE5BD9A0C1
     */
    formCode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    viewUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRelatedViewTabMetaResponseBody extends $tea.Model {
    results?: GetRelatedViewTabMetaResponseBodyResults[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRelatedViewTabMetaResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetRelatedViewTabMetaResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRelationUkSettingHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRelationUkSettingRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * crm_customer
     */
    relationType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRelationUkSettingResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: GetRelationUkSettingResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRelationUkSettingResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetRelationUkSettingResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class JoinGroupSetHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class JoinGroupSetRequest extends $tea.Model {
    bizDataList?: JoinGroupSetRequestBizDataList[];
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * abc123
     */
    openGroupSetId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * abc123
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class JoinGroupSetResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * abc123
     */
    chatId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * abc123
     */
    openConversationId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class JoinGroupSetResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: JoinGroupSetResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListAvailableBenefitHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListAvailableBenefitRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    benefitCodeList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListAvailableBenefitResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: ListAvailableBenefitResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListAvailableBenefitResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListAvailableBenefitResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListBenefitLicenseHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListBenefitLicenseRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    domains?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListBenefitLicenseResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: ListBenefitLicenseResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListBenefitLicenseResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListBenefitLicenseResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListClueTagHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListClueTagResponseBody extends $tea.Model {
    result?: ListClueTagResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListClueTagResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListClueTagResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCrmPersonalCustomersHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCrmPersonalCustomersRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    body?: string[];
    currentOperatorUserId?: string;
    relationType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCrmPersonalCustomersResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: ListCrmPersonalCustomersResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCrmPersonalCustomersResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListCrmPersonalCustomersResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListGroupSetHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListGroupSetRequest extends $tea.Model {
    maxResults?: number;
    nextToken?: string;
    queryDsl?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relationType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListGroupSetResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    hasMore?: boolean;
    /**
     * @example
     * fasfasd
     */
    nextToken?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    resultList?: ListGroupSetResponseBodyResultList[];
    /**
     * @example
     * 100
     */
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListGroupSetResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListGroupSetResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OverrideUpdateCustomerDataAuthHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OverrideUpdateCustomerDataAuthRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    customerIds?: string[];
    /**
     * @remarks
     * This parameter is required.
     */
    dataAuthUserIds?: string[];
    /**
     * @example
     * PROC-98187D45-EFC0-4FC4-887E-45BD24209D69
     */
    formCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * staffId2
     */
    operateUserId?: string;
    /**
     * @example
     * crm_customer
     */
    relationType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * owner
     */
    roleType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OverrideUpdateCustomerDataAuthResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OverrideUpdateCustomerDataAuthResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: OverrideUpdateCustomerDataAuthResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAllCustomerHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAllCustomerRequest extends $tea.Model {
    /**
     * @example
     * 100
     */
    maxResults?: number;
    /**
     * @example
     * 100010
     *
     * **if can be null:**
     * true
     */
    nextToken?: string;
    /**
     * @example
     * crm_customer
     *
     * **if can be null:**
     * true
     */
    objectType?: string;
    /**
     * @example
     * ding_userid
     *
     * **if can be null:**
     * true
     */
    operatorUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAllCustomerResponseBody extends $tea.Model {
    result?: QueryAllCustomerResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAllCustomerResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryAllCustomerResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAllTracksHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAllTracksRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20
     */
    maxResults?: number;
    /**
     * @example
     * 10000
     */
    nextToken?: string;
    /**
     * @example
     * asc
     *
     * **if can be null:**
     * true
     */
    order?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAllTracksResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    hasMore?: boolean;
    /**
     * @example
     * 20
     */
    maxResults?: number;
    /**
     * @example
     * 10001
     */
    nextToken?: string;
    values?: QueryAllTracksResponseBodyValues[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAllTracksResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryAllTracksResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAppManagerHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAppManagerRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 34234dfdfddd
     */
    operatorUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAppManagerResponseBody extends $tea.Model {
    result?: QueryAppManagerResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAppManagerResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryAppManagerResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryBenefitInventoryHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryBenefitInventoryRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * B_CUSTOMER_CAPACITY
     */
    benefitCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryBenefitInventoryResponseBody extends $tea.Model {
    result?: QueryBenefitInventoryResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryBenefitInventoryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryBenefitInventoryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClueFollowStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClueFollowStatusRequest extends $tea.Model {
    clueId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClueFollowStatusResponseBody extends $tea.Model {
    result?: QueryClueFollowStatusResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClueFollowStatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryClueFollowStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCrmGroupChatsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCrmGroupChatsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    maxResults?: number;
    nextToken?: string;
    queryDsl?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relationType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCrmGroupChatsResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    hasMore?: boolean;
    /**
     * @example
     * agds12
     */
    nextToken?: string;
    resultList?: QueryCrmGroupChatsResponseBodyResultList[];
    /**
     * @example
     * 1000
     */
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCrmGroupChatsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryCrmGroupChatsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCrmPersonalCustomerHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCrmPersonalCustomerRequest extends $tea.Model {
    currentOperatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    maxResults?: number;
    nextToken?: string;
    queryDsl?: string;
    /**
     * **if can be null:**
     * false
     */
    relationType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCrmPersonalCustomerResponseBody extends $tea.Model {
    hasMore?: boolean;
    /**
     * @example
     * 10
     */
    maxResults?: number;
    nextToken?: string;
    /**
     * @example
     * 1000
     */
    totalCount?: number;
    values?: QueryCrmPersonalCustomerResponseBodyValues[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCrmPersonalCustomerResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryCrmPersonalCustomerResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerBizTypeHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerBizTypeRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1343dfd1233
     */
    operatorUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerBizTypeResponseBody extends $tea.Model {
    result?: QueryCustomerBizTypeResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerBizTypeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryCustomerBizTypeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryGlobalInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryGlobalInfoRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 301227837938
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryGlobalInfoResponseBody extends $tea.Model {
    result?: QueryGlobalInfoResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryGlobalInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryGlobalInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryHasAppPermissionHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryHasAppPermissionRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 34234dfdfddd
     */
    operatorUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryHasAppPermissionResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryHasAppPermissionResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryHasAppPermissionResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOfficialAccountUserBasicInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOfficialAccountUserBasicInfoRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    bindingToken?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOfficialAccountUserBasicInfoResponseBody extends $tea.Model {
    requestId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    result?: QueryOfficialAccountUserBasicInfoResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOfficialAccountUserBasicInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryOfficialAccountUserBasicInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRelationDatasByTargetIdHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRelationDatasByTargetIdRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * abc123
     */
    relationType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRelationDatasByTargetIdResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    relations?: QueryRelationDatasByTargetIdResponseBodyRelations[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRelationDatasByTargetIdResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryRelationDatasByTargetIdResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RecallOfficialAccountOTOMessageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RecallOfficialAccountOTOMessageRequest extends $tea.Model {
    /**
     * @example
     * ding123
     */
    accountId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SWXXX
     */
    openPushId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RecallOfficialAccountOTOMessageResponseBody extends $tea.Model {
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RecallOfficialAccountOTOMessageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: RecallOfficialAccountOTOMessageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveBenefitLicenseHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveBenefitLicenseRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * B_ACCOUNT_NUMBER
     */
    domain?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    licenses?: SaveBenefitLicenseRequestLicenses[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * staffId
     */
    saveUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveBenefitLicenseResponseBody extends $tea.Model {
    result?: SaveBenefitLicenseResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveBenefitLicenseResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SaveBenefitLicenseResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountOTOMessageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountOTOMessageRequest extends $tea.Model {
    accountId?: string;
    bizId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    detail?: SendOfficialAccountOTOMessageRequestDetail;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountOTOMessageResponseBody extends $tea.Model {
    requestId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    result?: SendOfficialAccountOTOMessageResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountOTOMessageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SendOfficialAccountOTOMessageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountSNSMessageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountSNSMessageRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    bindingToken?: string;
    bizId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    detail?: SendOfficialAccountSNSMessageRequestDetail;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountSNSMessageResponseBody extends $tea.Model {
    requestId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    result?: SendOfficialAccountSNSMessageResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountSNSMessageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SendOfficialAccountSNSMessageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ServiceWindowMessageBatchPushHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ServiceWindowMessageBatchPushRequest extends $tea.Model {
    /**
     * **if can be null:**
     * true
     */
    bizId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    detail?: ServiceWindowMessageBatchPushRequestDetail;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ServiceWindowMessageBatchPushResponseBody extends $tea.Model {
    requestId?: string;
    result?: ServiceWindowMessageBatchPushResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ServiceWindowMessageBatchPushResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ServiceWindowMessageBatchPushResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class TwoPhaseCommitInventoryHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class TwoPhaseCommitInventoryRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * B_ACCOUNT_NUMBER
     */
    benefitCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * bizId
     */
    bizRequestId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    executeResult?: boolean;
    /**
     * @example
     * 10
     */
    quota?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class TwoPhaseCommitInventoryResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class TwoPhaseCommitInventoryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: TwoPhaseCommitInventoryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCrmPersonalCustomerHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCrmPersonalCustomerRequest extends $tea.Model {
    action?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    data?: {
        [key: string]: any;
    };
    extendData?: {
        [key: string]: any;
    };
    /**
     * @remarks
     * This parameter is required.
     */
    instanceId?: string;
    modifierNick?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    modifierUserId?: string;
    permission?: UpdateCrmPersonalCustomerRequestPermission;
    relationType?: string;
    /**
     * @example
     * false
     */
    skipDuplicateCheck?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCrmPersonalCustomerResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    instanceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCrmPersonalCustomerResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateCrmPersonalCustomerResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCustomerBizTypeHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCustomerBizTypeRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * crm_customer
     */
    customerBizType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 34234234ddddad
     */
    operatorUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCustomerBizTypeResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCustomerBizTypeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateCustomerBizTypeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateGroupSetHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateGroupSetRequest extends $tea.Model {
    managerUserIds?: string;
    memberQuota?: number;
    name?: string;
    notice?: string;
    noticeToped?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    openGroupSetId?: string;
    ownerUserId?: string;
    templateId?: string;
    welcome?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateGroupSetResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateMenuDataHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateMenuDataRequest extends $tea.Model {
    attr?: {
        [key: string]: any;
    };
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 89ez9DwVWQVgkhwndJNt1ZY
     */
    bizTraceId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * sale
     */
    module?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    navData?: UpdateMenuDataRequestNavData;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * add
     */
    operateType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 16044739461008808646
     */
    operatorUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateMenuDataResponseBody extends $tea.Model {
    result?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateMenuDataResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateMenuDataResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateMetaModelFieldHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateMetaModelFieldRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    bizType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fieldDTOList?: UpdateMetaModelFieldRequestFieldDTOList[];
    /**
     * @remarks
     * This parameter is required.
     */
    operatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    tenant?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateMetaModelFieldResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    bizType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateMetaModelFieldResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateMetaModelFieldResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateRelationMetaFieldHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateRelationMetaFieldRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fieldDTOList?: UpdateRelationMetaFieldRequestFieldDTOList[];
    /**
     * @remarks
     * This parameter is required.
     */
    operatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relationType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    tenant?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateRelationMetaFieldResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    relationType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateRelationMetaFieldResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateRelationMetaFieldResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCrmPersonalCustomerRequestPermission extends $tea.Model {
    ownerStaffIds?: string[];
    participantStaffIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddLeadsRequestLeads extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * XX公司
     */
    leadsName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * fasd123125
     */
    outLeadsId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddMetaModelFieldRequestFieldDTOListPropsOptions extends $tea.Model {
    key?: string;
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddMetaModelFieldRequestFieldDTOListProps extends $tea.Model {
    align?: string;
    bizAlias?: string;
    choice?: number;
    content?: string;
    disabled?: boolean;
    duration?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    format?: string;
    invisible?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    labelEditableFreeze?: boolean;
    link?: string;
    needDetail?: string;
    notPrint?: string;
    notUpper?: string;
    options?: AddMetaModelFieldRequestFieldDTOListPropsOptions[];
    payEnable?: boolean;
    placeholder?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    required?: boolean;
    requiredEditableFreeze?: boolean;
    sortable?: boolean;
    unit?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddMetaModelFieldRequestFieldDTOList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    componentName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    props?: AddMetaModelFieldRequestFieldDTOListProps;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddRelationMetaFieldRequestFieldDTOListPropsOptions extends $tea.Model {
    key?: string;
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddRelationMetaFieldRequestFieldDTOListProps extends $tea.Model {
    align?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    bizAlias?: string;
    choice?: number;
    content?: string;
    disabled?: boolean;
    duration?: boolean;
    fieldId?: string;
    format?: string;
    invisible?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    labelEditableFreeze?: boolean;
    link?: string;
    needDetail?: string;
    notPrint?: string;
    notUpper?: string;
    options?: AddRelationMetaFieldRequestFieldDTOListPropsOptions[];
    payEnable?: boolean;
    placeholder?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    required?: boolean;
    requiredEditableFreeze?: boolean;
    sortable?: boolean;
    unit?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddRelationMetaFieldRequestFieldDTOList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    componentName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    props?: AddRelationMetaFieldRequestFieldDTOListProps;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddContactsRequestRelationListBizDataList extends $tea.Model {
    /**
     * @example
     * {}
     */
    extendValue?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * TextField_71U51A
     */
    key?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * XX有限公司
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddContactsRequestRelationList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    bizDataList?: BatchAddContactsRequestRelationListBizDataList[];
    /**
     * **if can be null:**
     * true
     */
    bizExtMap?: {
        [key: string]: string;
    };
    /**
     * @example
     * 1343434dd
     */
    sourceDataId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddContactsResponseBodyResults extends $tea.Model {
    /**
     * @example
     * 1002
     */
    errorCode?: string;
    /**
     * @example
     * 查重失败
     */
    errorMsg?: string;
    /**
     * @example
     * gads1ag-sfgasdfxcvxb
     */
    relationId?: string;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddFollowRecordsRequestInstanceListDataArray extends $tea.Model {
    /**
     * @example
     * {}
     */
    extendValue?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * TextField_71U51A
     */
    key?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * XX有限公司
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddFollowRecordsRequestInstanceList extends $tea.Model {
    bizExtMap?: {
        [key: string]: string;
    };
    /**
     * @remarks
     * This parameter is required.
     */
    dataArray?: BatchAddFollowRecordsRequestInstanceListDataArray[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddFollowRecordsResponseBodyResults extends $tea.Model {
    /**
     * @example
     * 1002
     */
    errorCode?: string;
    /**
     * @example
     * 查重失败
     */
    errorMsg?: string;
    /**
     * @example
     * yU9TbER1TDazjPq1rRCzwg04841675924041
     */
    instanceId?: string;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddRelationDatasRequestRelationListBizDataList extends $tea.Model {
    /**
     * @example
     * {}
     */
    extendValue?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * TextField_71U51A
     */
    key?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * XX有限公司
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddRelationDatasRequestRelationListRelationPermissionDTO extends $tea.Model {
    participantUserIds?: string[];
    principalUserIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddRelationDatasRequestRelationList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    bizDataList?: BatchAddRelationDatasRequestRelationListBizDataList[];
    /**
     * **if can be null:**
     * true
     */
    bizExtMap?: {
        [key: string]: string;
    };
    relationPermissionDTO?: BatchAddRelationDatasRequestRelationListRelationPermissionDTO;
    /**
     * @example
     * ddsf3234234
     */
    sourceDataId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddRelationDatasResponseBodyResults extends $tea.Model {
    duplicatedRelationIds?: string[];
    /**
     * @example
     * 1002
     */
    errorCode?: string;
    /**
     * @example
     * 查重失败
     */
    errorMsg?: string;
    /**
     * @example
     * gads1ag-sfgasdfxcvxb
     */
    relationId?: string;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateClueDataRequestDataListContactList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    mobile?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    phone?: string;
    qq?: string;
    wangWang?: string;
    weChat?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateClueDataRequestDataListEnterprise extends $tea.Model {
    address?: string;
    industryCode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    region?: string;
    unifiedSocialCreditCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateClueDataRequestDataListTagIdList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    tagId?: string;
    tagName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateClueDataRequestDataList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    contactList?: BatchCreateClueDataRequestDataListContactList[];
    enterprise?: BatchCreateClueDataRequestDataListEnterprise;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 钉钉中国
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    sourceId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * demo
     */
    sourceType?: string;
    tagIdList?: BatchCreateClueDataRequestDataListTagIdList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateClueDataResponseBodyResult extends $tea.Model {
    clueId?: string;
    dataId?: string;
    resultCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchRemoveFollowRecordsResponseBodyResults extends $tea.Model {
    /**
     * @example
     * 1002
     */
    errorCode?: string;
    /**
     * @example
     * 查重失败
     */
    errorMsg?: string;
    /**
     * @example
     * yU9TbER1TDazjPq1rRCzwg04841675924041
     */
    instanceId?: string;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchSendOfficialAccountOTOMessageRequestDetailMessageBodyActionCardButtonList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    actionUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchSendOfficialAccountOTOMessageRequestDetailMessageBodyActionCard extends $tea.Model {
    buttonList?: BatchSendOfficialAccountOTOMessageRequestDetailMessageBodyActionCardButtonList[];
    buttonOrientation?: string;
    markdown?: string;
    singleTitle?: string;
    singleUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchSendOfficialAccountOTOMessageRequestDetailMessageBodyLink extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    messageUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    picUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    text?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchSendOfficialAccountOTOMessageRequestDetailMessageBodyMarkdown extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    text?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchSendOfficialAccountOTOMessageRequestDetailMessageBodyText extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    content?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchSendOfficialAccountOTOMessageRequestDetailMessageBody extends $tea.Model {
    actionCard?: BatchSendOfficialAccountOTOMessageRequestDetailMessageBodyActionCard;
    link?: BatchSendOfficialAccountOTOMessageRequestDetailMessageBodyLink;
    markdown?: BatchSendOfficialAccountOTOMessageRequestDetailMessageBodyMarkdown;
    text?: BatchSendOfficialAccountOTOMessageRequestDetailMessageBodyText;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchSendOfficialAccountOTOMessageRequestDetail extends $tea.Model {
    /**
     * **if can be null:**
     * false
     */
    bizRequestId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    messageBody?: BatchSendOfficialAccountOTOMessageRequestDetailMessageBody;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * text
     */
    msgType?: string;
    sendToAll?: boolean;
    userIdList?: string[];
    /**
     * @remarks
     * This parameter is required.
     */
    uuid?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchSendOfficialAccountOTOMessageResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    openPushId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchUpdateContactsRequestRelationListBizDataList extends $tea.Model {
    /**
     * @example
     * {}
     */
    extendValue?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * TextField_71U51A
     */
    key?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * XX有限公司
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchUpdateContactsRequestRelationList extends $tea.Model {
    bizDataList?: BatchUpdateContactsRequestRelationListBizDataList[];
    /**
     * **if can be null:**
     * true
     */
    bizExtMap?: {
        [key: string]: string;
    };
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * fasdg8i814-0afsd
     */
    relationId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchUpdateContactsResponseBodyResults extends $tea.Model {
    /**
     * @example
     * 1002
     */
    errorCode?: string;
    /**
     * @example
     * 查重失败
     */
    errorMsg?: string;
    /**
     * @example
     * gads1ag-sfgasdfxcvxb
     */
    relationId?: string;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchUpdateFollowRecordsRequestInstanceListDataArray extends $tea.Model {
    /**
     * @example
     * {}
     */
    extendValue?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * TextField_71U51A
     */
    key?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * XX有限公司
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchUpdateFollowRecordsRequestInstanceList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    dataArray?: BatchUpdateFollowRecordsRequestInstanceListDataArray[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * yU9TbER1TDazjPq1rRCzwg04841675924041
     */
    instanceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchUpdateFollowRecordsResponseBodyResults extends $tea.Model {
    /**
     * @example
     * 1002
     */
    errorCode?: string;
    /**
     * @example
     * 查重失败
     */
    errorMsg?: string;
    /**
     * @example
     * yU9TbER1TDazjPq1rRCzwg04841675924041
     */
    instanceId?: string;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchUpdateRelationDatasRequestRelationListBizDataList extends $tea.Model {
    /**
     * @example
     * {}
     */
    extendValue?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * TextField_71U51A
     */
    key?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * XX有限公司
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchUpdateRelationDatasRequestRelationList extends $tea.Model {
    bizDataList?: BatchUpdateRelationDatasRequestRelationListBizDataList[];
    /**
     * **if can be null:**
     * true
     */
    bizExtMap?: {
        [key: string]: string;
    };
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * fasdg8i814-0afsd
     */
    relationId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchUpdateRelationDatasResponseBodyResults extends $tea.Model {
    duplicatedRelationIds?: string[];
    /**
     * @example
     * 1002
     */
    errorCode?: string;
    /**
     * @example
     * 查重失败
     */
    errorMsg?: string;
    /**
     * @example
     * gads1ag-sfgasdfxcvxb
     */
    relationId?: string;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomerRequestContacts extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    data?: {
        [key: string]: any;
    };
    extendData?: {
        [key: string]: any;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomerRequestPermission extends $tea.Model {
    ownerStaffIds?: string[];
    participantStaffIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomerRequestSaveOption extends $tea.Model {
    /**
     * @example
     * APPEND_CONTACT_FORCE
     */
    customerExistedPolicy?: string;
    /**
     * @example
     * false
     */
    skipDuplicateCheck?: boolean;
    /**
     * @example
     * 0
     */
    subscribePolicy?: number;
    /**
     * @example
     * true
     */
    throwExceptionWhileSavingContactFailed?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomerResponseBodyContacts extends $tea.Model {
    /**
     * @example
     * contact_id
     */
    contactInstanceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateGroupSetResponseBodyManager extends $tea.Model {
    name?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateGroupSetResponseBodyOwner extends $tea.Model {
    name?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRelationMetaRequestRelationMetaDTOItemsPropsOptions extends $tea.Model {
    key?: string;
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRelationMetaRequestRelationMetaDTOItemsProps extends $tea.Model {
    align?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    bizAlias?: string;
    choice?: number;
    content?: string;
    disabled?: boolean;
    duration?: boolean;
    fieldId?: string;
    format?: string;
    invisible?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    labelEditableFreeze?: boolean;
    link?: string;
    needDetail?: string;
    notPrint?: string;
    notUpper?: string;
    options?: CreateRelationMetaRequestRelationMetaDTOItemsPropsOptions[];
    payEnable?: boolean;
    placeholder?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    required?: boolean;
    requiredEditableFreeze?: boolean;
    sortable?: boolean;
    unit?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRelationMetaRequestRelationMetaDTOItems extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    componentName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    props?: CreateRelationMetaRequestRelationMetaDTOItemsProps;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRelationMetaRequestRelationMetaDTO extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    desc?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    items?: CreateRelationMetaRequestRelationMetaDTOItems[];
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relationType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeCrmPersonalCustomerObjectMetaResponseBodyFieldsReferenceFieldsSelectOptions extends $tea.Model {
    key?: string;
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeCrmPersonalCustomerObjectMetaResponseBodyFieldsReferenceFields extends $tea.Model {
    format?: string;
    label?: string;
    name?: string;
    nillable?: boolean;
    selectOptions?: DescribeCrmPersonalCustomerObjectMetaResponseBodyFieldsReferenceFieldsSelectOptions[];
    type?: string;
    unit?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeCrmPersonalCustomerObjectMetaResponseBodyFieldsRollUpSummaryFields extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    aggregator?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeCrmPersonalCustomerObjectMetaResponseBodyFieldsSelectOptions extends $tea.Model {
    key?: string;
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeCrmPersonalCustomerObjectMetaResponseBodyFields extends $tea.Model {
    customized?: boolean;
    format?: string;
    label?: string;
    name?: string;
    nillable?: boolean;
    quote?: boolean;
    referenceFields?: DescribeCrmPersonalCustomerObjectMetaResponseBodyFieldsReferenceFields[];
    referenceTo?: string;
    rollUpSummaryFields?: DescribeCrmPersonalCustomerObjectMetaResponseBodyFieldsRollUpSummaryFields[];
    selectOptions?: DescribeCrmPersonalCustomerObjectMetaResponseBodyFieldsSelectOptions[];
    type?: string;
    unit?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsAvailableTemplates extends $tea.Model {
    /**
     * @example
     * 审批模板id
     */
    id?: string;
    /**
     * @example
     * 审批模板名称
     */
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsDataSourceParamsFilters extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    filterType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    valueType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsDataSourceParams extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    filters?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsDataSourceParamsFilters[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsDataSourceTarget extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    appType?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    appUuid?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    bizType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    formCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsDataSource extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    params?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsDataSourceParams;
    /**
     * @remarks
     * This parameter is required.
     */
    target?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsDataSourceTarget;
    /**
     * @remarks
     * This parameter is required.
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsFieldsRelatePropsOptionsExtension extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    editFreeze?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsFieldsRelatePropsOptions extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    extension?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsFieldsRelatePropsOptionsExtension;
    /**
     * @remarks
     * This parameter is required.
     */
    key?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsFieldsRelatePropsStatField extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    unit?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    upper?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsFieldsRelateProps extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    align?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    bizAlias?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    choice?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    content?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    disabled?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    duration?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    durationLabel?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    format?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    formula?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    invisible?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    labelEditableFreeze?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    limit?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    link?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    mode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    notUpper?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    options?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsFieldsRelatePropsOptions[];
    /**
     * @remarks
     * This parameter is required.
     */
    payEnable?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    placeholder?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    ratio?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    required?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    requiredEditableFreeze?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    spread?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    statField?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsFieldsRelatePropsStatField[];
    /**
     * @remarks
     * This parameter is required.
     */
    unit?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    verticalPrint?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    watermark?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsFields extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    componentName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relateProps?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsFieldsRelateProps;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsOptionsExtension extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    editFreeze?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsOptions extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    extension?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsOptionsExtension;
    /**
     * @remarks
     * This parameter is required.
     */
    key?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsRelateSourceDataSourceParamsFilters extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    filterType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    valueType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsRelateSourceDataSourceParams extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    filters?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsRelateSourceDataSourceParamsFilters[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsRelateSourceDataSourceTarget extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    appType?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    appUuid?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    bizType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    formCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsRelateSourceDataSource extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    params?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsRelateSourceDataSourceParams;
    /**
     * @remarks
     * This parameter is required.
     */
    target?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsRelateSourceDataSourceTarget;
    /**
     * @remarks
     * This parameter is required.
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsRelateSourceFieldsRelatePropsOptions extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    key?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsRelateSourceFieldsRelatePropsStatField extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    unit?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    upper?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsRelateSourceFieldsRelateProps extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    align?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    bizAlias?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1：多选，0：单选
     */
    choice?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    content?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：可编辑
     */
    disabled?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：自动
     */
    duration?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * DDDateField和DDDateRangeField
     */
    format?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    formula?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：隐藏
     */
    invisible?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    labelEditableFreeze?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    link?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    multi?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1:不需要大写, 空或者0:需要大写
     */
    notUpper?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    options?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsRelateSourceFieldsRelatePropsOptions[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：是
     */
    payEnable?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    placeholder?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    quote?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：必填
     */
    required?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    requiredEditableFreeze?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    statField?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsRelateSourceFieldsRelatePropsStatField[];
    /**
     * @remarks
     * This parameter is required.
     */
    unit?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：纵向，false：横向
     */
    verticalPrint?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsRelateSourceFields extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    componentName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relateProps?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsRelateSourceFieldsRelateProps;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsRelateSource extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    bizType?: string;
    dataSource?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsRelateSourceDataSource;
    /**
     * @remarks
     * This parameter is required.
     */
    fields?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsRelateSourceFields[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsRule extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    type?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsStatField extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    unit?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    upper?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenProps extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    actionName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    align?: string;
    availableTemplates?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsAvailableTemplates[];
    /**
     * @remarks
     * This parameter is required.
     */
    bizAlias?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    choice?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    content?: string;
    dataSource?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsDataSource;
    /**
     * @example
     * 标签字段 颜色属性，格式：#0089FF
     */
    defaultColor?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    disabled?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    duration?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    durationLabel?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fields?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsFields[];
    /**
     * @remarks
     * This parameter is required.
     */
    format?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    formula?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    invisible?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    labelEditableFreeze?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    limit?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    link?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    mode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：支持多选，false：单选
     */
    multiple?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    notPrint?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    notUpper?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    options?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsOptions[];
    /**
     * @remarks
     * This parameter is required.
     */
    payEnable?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    placeholder?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    quote?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    ratio?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    relateSource?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsRelateSource[];
    /**
     * @remarks
     * This parameter is required.
     */
    required?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    requiredEditableFreeze?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    rule?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsRule[];
    /**
     * @remarks
     * This parameter is required.
     */
    sortable?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    spread?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    statField?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenPropsStatField[];
    /**
     * @remarks
     * This parameter is required.
     */
    tableViewMode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    unit?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    verticalPrint?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    watermark?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsChildren extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    componentName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    props?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildrenProps;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsAvailableTemplates extends $tea.Model {
    /**
     * @example
     * 审批模板id
     */
    id?: string;
    /**
     * @example
     * 审批模板名称
     */
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsBehaviorLinkageTargets extends $tea.Model {
    /**
     * @example
     * NORMAL
     */
    behavior?: string;
    /**
     * @example
     * TextField_1LTIYOR4XIF40
     */
    fieldId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsBehaviorLinkage extends $tea.Model {
    /**
     * @example
     * option_0
     */
    optionKey?: string;
    targets?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsBehaviorLinkageTargets[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsDataSourceParamsFilters extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    filterType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    valueType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsDataSourceParams extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    filters?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsDataSourceParamsFilters[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsDataSourceTarget extends $tea.Model {
    /**
     * @example
     * 0：流程表单，1：纯表单
     */
    appType?: number;
    appUuid?: string;
    bizType?: string;
    formCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsDataSource extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    params?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsDataSourceParams;
    target?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsDataSourceTarget;
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsFieldsRelatePropsOptionsExtension extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    editFreeze?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsFieldsRelatePropsOptions extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    extension?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsFieldsRelatePropsOptionsExtension;
    /**
     * @remarks
     * This parameter is required.
     */
    key?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsFieldsRelatePropsStatField extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    unit?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    upper?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsFieldsRelateProps extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    align?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    bizAlias?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1：多选，0：单选
     */
    choice?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    content?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：可编辑
     */
    disabled?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：自动
     */
    duration?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    durationLabel?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * DDDateField和DDDateRangeField
     */
    format?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    formula?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：隐藏
     */
    invisible?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    labelEditableFreeze?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    limit?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    link?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    mode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1:不需要大写, 空或者0:需要大写
     */
    notUpper?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    options?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsFieldsRelatePropsOptions[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：是
     */
    payEnable?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    placeholder?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    ratio?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：必填
     */
    required?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    requiredEditableFreeze?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    spread?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    statField?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsFieldsRelatePropsStatField[];
    /**
     * @remarks
     * This parameter is required.
     */
    unit?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：纵向，false：横向
     */
    verticalPrint?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    watermark?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsFields extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    componentName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relateProps?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsFieldsRelateProps;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsOptionsExtension extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    editFreeze?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsOptions extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    extension?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsOptionsExtension;
    /**
     * @remarks
     * This parameter is required.
     */
    key?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    warn?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsRelateSourceDataSourceParamsFilters extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    filterType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    valueType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsRelateSourceDataSourceParams extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    filters?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsRelateSourceDataSourceParamsFilters[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsRelateSourceDataSourceTarget extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    appType?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    appUuid?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    bizType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    formCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsRelateSourceDataSource extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    params?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsRelateSourceDataSourceParams;
    /**
     * @remarks
     * This parameter is required.
     */
    target?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsRelateSourceDataSourceTarget;
    /**
     * @remarks
     * This parameter is required.
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsRelateSourceFieldsRelatePropsOptionsExtension extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    editFreeze?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsRelateSourceFieldsRelatePropsOptions extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    extension?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsRelateSourceFieldsRelatePropsOptionsExtension;
    /**
     * @remarks
     * This parameter is required.
     */
    key?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsRelateSourceFieldsRelatePropsStatField extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    unit?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    upper?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsRelateSourceFieldsRelateProps extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    align?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    bizAlias?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1：多选，0：单选
     */
    choice?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    content?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：可编辑
     */
    disabled?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：自动
     */
    duration?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * DDDateField和DDDateRangeField
     */
    format?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    formula?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：隐藏
     */
    invisible?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    labelEditableFreeze?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    link?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    multi?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1:不需要大写, 空或者0:需要大写
     */
    notUpper?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    options?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsRelateSourceFieldsRelatePropsOptions[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：是
     */
    payEnable?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    placeholder?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    quote?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：必填
     */
    required?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    requiredEditableFreeze?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    statField?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsRelateSourceFieldsRelatePropsStatField[];
    /**
     * @remarks
     * This parameter is required.
     */
    unit?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：纵向，false：横向
     */
    verticalPrint?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsRelateSourceFields extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    componentName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relateProps?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsRelateSourceFieldsRelateProps;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsRelateSource extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    bizType?: string;
    dataSource?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsRelateSourceDataSource;
    /**
     * @remarks
     * This parameter is required.
     */
    fields?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsRelateSourceFields[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsRule extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    type?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsStatField extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    unit?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    upper?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItemsProps extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 明细动作名称
     */
    actionName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * top|middle|bottom
     */
    align?: string;
    availableTemplates?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsAvailableTemplates[];
    behaviorLinkage?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsBehaviorLinkage[];
    /**
     * @remarks
     * This parameter is required.
     */
    bizAlias?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1：多选，0：单选
     */
    choice?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    content?: string;
    dataSource?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsDataSource;
    /**
     * @example
     * 标签字段 颜色属性，格式：#0089FF
     */
    defaultColor?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：可编辑
     */
    disabled?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：自动
     */
    duration?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 日期区间控件，自动计算时长的标题
     */
    durationLabel?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fields?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsFields[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * DDDateField和DDDateRangeField
     */
    format?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    formula?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：隐藏
     */
    invisible?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：不可修改
     */
    labelEditableFreeze?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 评分组件限制
     */
    limit?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    link?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 电话控件模式 phone：仅手机，phone_tel： 手机和固话，tel：仅固话
     */
    mode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    multi?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：支持多选，false：单选
     */
    multiple?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    needDetail?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1：不打印，0：打印
     */
    notPrint?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1:不需要大写, 空或者0:需要大写
     */
    notUpper?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    options?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsOptions[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：是
     */
    payEnable?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    placeholder?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 关联表单 1：引用，0：拷贝
     */
    quote?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 文本控件、选项控件等限制文本字数ratio
     */
    ratio?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    relateSource?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsRelateSource[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：必填
     */
    required?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：不可修改
     */
    requiredEditableFreeze?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    rule?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsRule[];
    /**
     * @remarks
     * This parameter is required.
     */
    sortable?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 选项控件spread
     */
    spread?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    statField?: DescribeMetaModelResponseBodyMetaModelDTOListItemsPropsStatField[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 明细填写方式 table：表格，list：列表
     */
    tableViewMode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    unit?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：纵向，false：横向
     */
    verticalPrint?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 是否水印照片 true：是，false：否
     */
    watermark?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOListItems extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    children?: DescribeMetaModelResponseBodyMetaModelDTOListItemsChildren[];
    /**
     * @remarks
     * This parameter is required.
     */
    componentName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    props?: DescribeMetaModelResponseBodyMetaModelDTOListItemsProps;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeMetaModelResponseBodyMetaModelDTOList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    creatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 企业客户表
     */
    desc?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    gmtCreate?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    gmtModified?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    items?: DescribeMetaModelResponseBodyMetaModelDTOListItems[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 企业客户
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relationMetaCode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relationMetaStatus?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * crm_customer
     */
    relationType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsAvailableTemplates extends $tea.Model {
    /**
     * @example
     * 审批模板id
     */
    id?: string;
    /**
     * @example
     * 审批模板名称
     */
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsDataSourceParamsFilters extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    filterType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    valueType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsDataSourceParams extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    filters?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsDataSourceParamsFilters[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsDataSourceTarget extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    appType?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    appUuid?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    bizType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    formCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsDataSource extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    params?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsDataSourceParams;
    /**
     * @remarks
     * This parameter is required.
     */
    target?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsDataSourceTarget;
    /**
     * @remarks
     * This parameter is required.
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsFieldsRelatePropsOptionsExtension extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    editFreeze?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsFieldsRelatePropsOptions extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    extension?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsFieldsRelatePropsOptionsExtension;
    /**
     * @remarks
     * This parameter is required.
     */
    key?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsFieldsRelatePropsStatField extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    unit?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    upper?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsFieldsRelateProps extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    align?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    bizAlias?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    choice?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    content?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    disabled?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    duration?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    durationLabel?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    format?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    formula?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    invisible?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    labelEditableFreeze?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    limit?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    link?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    mode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    notUpper?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    options?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsFieldsRelatePropsOptions[];
    /**
     * @remarks
     * This parameter is required.
     */
    payEnable?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    placeholder?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    ratio?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    required?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    requiredEditableFreeze?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    spread?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    statField?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsFieldsRelatePropsStatField[];
    /**
     * @remarks
     * This parameter is required.
     */
    unit?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    verticalPrint?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    watermark?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsFields extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    componentName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relateProps?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsFieldsRelateProps;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsOptionsExtension extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    editFreeze?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsOptions extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    extension?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsOptionsExtension;
    /**
     * @remarks
     * This parameter is required.
     */
    key?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsRelateSourceDataSourceParamsFilters extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    filterType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    valueType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsRelateSourceDataSourceParams extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    filters?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsRelateSourceDataSourceParamsFilters[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsRelateSourceDataSourceTarget extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    appType?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    appUuid?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    bizType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    formCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsRelateSourceDataSource extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    params?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsRelateSourceDataSourceParams;
    /**
     * @remarks
     * This parameter is required.
     */
    target?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsRelateSourceDataSourceTarget;
    /**
     * @remarks
     * This parameter is required.
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsRelateSourceFieldsRelatePropsOptions extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    key?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsRelateSourceFieldsRelatePropsStatField extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    unit?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    upper?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsRelateSourceFieldsRelateProps extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    align?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    bizAlias?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1：多选，0：单选
     */
    choice?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    content?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：可编辑
     */
    disabled?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：自动
     */
    duration?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * DDDateField和DDDateRangeField
     */
    format?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    formula?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：隐藏
     */
    invisible?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    labelEditableFreeze?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    link?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    multi?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1:不需要大写, 空或者0:需要大写
     */
    notUpper?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    options?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsRelateSourceFieldsRelatePropsOptions[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：是
     */
    payEnable?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    placeholder?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    quote?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：必填
     */
    required?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    requiredEditableFreeze?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    statField?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsRelateSourceFieldsRelatePropsStatField[];
    /**
     * @remarks
     * This parameter is required.
     */
    unit?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：纵向，false：横向
     */
    verticalPrint?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsRelateSourceFields extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    componentName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relateProps?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsRelateSourceFieldsRelateProps;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsRelateSource extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    bizType?: string;
    dataSource?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsRelateSourceDataSource;
    /**
     * @remarks
     * This parameter is required.
     */
    fields?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsRelateSourceFields[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsRule extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    type?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsStatField extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    unit?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    upper?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenProps extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    actionName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    align?: string;
    availableTemplates?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsAvailableTemplates[];
    /**
     * @remarks
     * This parameter is required.
     */
    bizAlias?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    choice?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    content?: string;
    dataSource?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsDataSource;
    /**
     * @example
     * 标签字段 颜色属性，格式：#0089FF
     */
    defaultColor?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    disabled?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    duration?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    durationLabel?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fields?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsFields[];
    /**
     * @remarks
     * This parameter is required.
     */
    format?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    formula?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    invisible?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    labelEditableFreeze?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    limit?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    link?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    mode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：支持多选，false：单选
     */
    multiple?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    notPrint?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    notUpper?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    options?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsOptions[];
    /**
     * @remarks
     * This parameter is required.
     */
    payEnable?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    placeholder?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    quote?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    ratio?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    relateSource?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsRelateSource[];
    /**
     * @remarks
     * This parameter is required.
     */
    required?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    requiredEditableFreeze?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    rule?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsRule[];
    /**
     * @remarks
     * This parameter is required.
     */
    sortable?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    spread?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    statField?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenPropsStatField[];
    /**
     * @remarks
     * This parameter is required.
     */
    tableViewMode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    unit?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    verticalPrint?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    watermark?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildren extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    componentName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    props?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildrenProps;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsAvailableTemplates extends $tea.Model {
    /**
     * @example
     * 审批模板id
     */
    id?: string;
    /**
     * @example
     * 审批模板名称
     */
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsBehaviorLinkageTargets extends $tea.Model {
    /**
     * @example
     * NORMAL
     */
    behavior?: string;
    /**
     * @example
     * TextField_1LTIYOR4XIF40
     */
    fieldId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsBehaviorLinkage extends $tea.Model {
    /**
     * @example
     * option_0
     */
    optionKey?: string;
    targets?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsBehaviorLinkageTargets[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsDataSourceParamsFilters extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    filterType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    valueType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsDataSourceParams extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    filters?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsDataSourceParamsFilters[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsDataSourceTarget extends $tea.Model {
    /**
     * @example
     * 0：流程表单，1：纯表单
     */
    appType?: number;
    appUuid?: string;
    bizType?: string;
    formCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsDataSource extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    params?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsDataSourceParams;
    target?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsDataSourceTarget;
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsFieldsRelatePropsOptionsExtension extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    editFreeze?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsFieldsRelatePropsOptions extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    extension?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsFieldsRelatePropsOptionsExtension;
    /**
     * @remarks
     * This parameter is required.
     */
    key?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsFieldsRelatePropsStatField extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    unit?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    upper?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsFieldsRelateProps extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    align?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    bizAlias?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1：多选，0：单选
     */
    choice?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    content?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：可编辑
     */
    disabled?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：自动
     */
    duration?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    durationLabel?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * DDDateField和DDDateRangeField
     */
    format?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    formula?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：隐藏
     */
    invisible?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    labelEditableFreeze?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    limit?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    link?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    mode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1:不需要大写, 空或者0:需要大写
     */
    notUpper?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    options?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsFieldsRelatePropsOptions[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：是
     */
    payEnable?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    placeholder?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    ratio?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：必填
     */
    required?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    requiredEditableFreeze?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    spread?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    statField?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsFieldsRelatePropsStatField[];
    /**
     * @remarks
     * This parameter is required.
     */
    unit?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：纵向，false：横向
     */
    verticalPrint?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    watermark?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsFields extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    componentName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relateProps?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsFieldsRelateProps;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsOptionsExtension extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    editFreeze?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsOptions extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    extension?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsOptionsExtension;
    /**
     * @remarks
     * This parameter is required.
     */
    key?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    warn?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsRelateSourceDataSourceParamsFilters extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    filterType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    valueType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsRelateSourceDataSourceParams extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    filters?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsRelateSourceDataSourceParamsFilters[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsRelateSourceDataSourceTarget extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    appType?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    appUuid?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    bizType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    formCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsRelateSourceDataSource extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    params?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsRelateSourceDataSourceParams;
    /**
     * @remarks
     * This parameter is required.
     */
    target?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsRelateSourceDataSourceTarget;
    /**
     * @remarks
     * This parameter is required.
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsRelateSourceFieldsRelatePropsOptionsExtension extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    editFreeze?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsRelateSourceFieldsRelatePropsOptions extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    extension?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsRelateSourceFieldsRelatePropsOptionsExtension;
    /**
     * @remarks
     * This parameter is required.
     */
    key?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsRelateSourceFieldsRelatePropsStatField extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    unit?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    upper?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsRelateSourceFieldsRelateProps extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    align?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    bizAlias?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1：多选，0：单选
     */
    choice?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    content?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：可编辑
     */
    disabled?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：自动
     */
    duration?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * DDDateField和DDDateRangeField
     */
    format?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    formula?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：隐藏
     */
    invisible?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    labelEditableFreeze?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    link?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    multi?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1:不需要大写, 空或者0:需要大写
     */
    notUpper?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    options?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsRelateSourceFieldsRelatePropsOptions[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：是
     */
    payEnable?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    placeholder?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    quote?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：必填
     */
    required?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    requiredEditableFreeze?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    statField?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsRelateSourceFieldsRelatePropsStatField[];
    /**
     * @remarks
     * This parameter is required.
     */
    unit?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：纵向，false：横向
     */
    verticalPrint?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsRelateSourceFields extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    componentName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relateProps?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsRelateSourceFieldsRelateProps;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsRelateSource extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    bizType?: string;
    dataSource?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsRelateSourceDataSource;
    /**
     * @remarks
     * This parameter is required.
     */
    fields?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsRelateSourceFields[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsRule extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    type?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsStatField extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    unit?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    upper?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItemsProps extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 明细动作名称
     */
    actionName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * top|middle|bottom
     */
    align?: string;
    availableTemplates?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsAvailableTemplates[];
    behaviorLinkage?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsBehaviorLinkage[];
    /**
     * @remarks
     * This parameter is required.
     */
    bizAlias?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1：多选，0：单选
     */
    choice?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    content?: string;
    dataSource?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsDataSource;
    /**
     * @example
     * 标签字段 颜色属性，格式：#0089FF
     */
    defaultColor?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：可编辑
     */
    disabled?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：自动
     */
    duration?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 日期区间控件，自动计算时长的标题
     */
    durationLabel?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fields?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsFields[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * DDDateField和DDDateRangeField
     */
    format?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    formula?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：隐藏
     */
    invisible?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：不可修改
     */
    labelEditableFreeze?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 评分组件限制
     */
    limit?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    link?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 电话控件模式 phone：仅手机，phone_tel： 手机和固话，tel：仅固话
     */
    mode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    multi?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：支持多选，false：单选
     */
    multiple?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    needDetail?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1：不打印，0：打印
     */
    notPrint?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1:不需要大写, 空或者0:需要大写
     */
    notUpper?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    options?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsOptions[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：是
     */
    payEnable?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    placeholder?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 关联表单 1：引用，0：拷贝
     */
    quote?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 文本控件、选项控件等限制文本字数ratio
     */
    ratio?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    relateSource?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsRelateSource[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：必填
     */
    required?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：不可修改
     */
    requiredEditableFreeze?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    rule?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsRule[];
    /**
     * @remarks
     * This parameter is required.
     */
    sortable?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 选项控件spread
     */
    spread?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    statField?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsPropsStatField[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 明细填写方式 table：表格，list：列表
     */
    tableViewMode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    unit?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true：纵向，false：横向
     */
    verticalPrint?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 是否水印照片 true：是，false：否
     */
    watermark?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOListItems extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    children?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsChildren[];
    /**
     * @remarks
     * This parameter is required.
     */
    componentName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    props?: DescribeRelationMetaResponseBodyRelationMetaDTOListItemsProps;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeRelationMetaResponseBodyRelationMetaDTOList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    creatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 企业客户表
     */
    desc?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    gmtCreate?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    gmtModified?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    items?: DescribeRelationMetaResponseBodyRelationMetaDTOListItems[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 企业客户
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relationMetaCode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    relationMetaStatus?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * crm_customer
     */
    relationType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class FindTargetRelatedFollowRecordsResponseBodyResultResultListFollowContent extends $tea.Model {
    /**
     * @example
     * follow_record_related_content
     */
    bizAlias?: string;
    /**
     * @example
     * 扩展value
     */
    extendValue?: string;
    /**
     * @example
     * TextareaField-K2U5UJAF
     */
    key?: string;
    /**
     * @example
     * 重点跟进
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class FindTargetRelatedFollowRecordsResponseBodyResultResultList extends $tea.Model {
    /**
     * @example
     * manager7617
     */
    creatorUserId?: string;
    followContent?: FindTargetRelatedFollowRecordsResponseBodyResultResultListFollowContent[];
    /**
     * @example
     * customerId
     */
    followTargetDataId?: string;
    /**
     * @example
     * customer
     */
    followTargetType?: string;
    /**
     * @example
     * 1712629910168
     */
    gmtCreateMilliseconds?: string;
    /**
     * @example
     * 1712629910168
     */
    gmtModifiedMilliseconds?: string;
    /**
     * @example
     * manager7617
     */
    modifierUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * _aFFogIuRrWlL3hLdvbb5w09951712629910
     */
    recordInstId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class FindTargetRelatedFollowRecordsResponseBodyResult extends $tea.Model {
    /**
     * @example
     * true
     */
    hasMore?: boolean;
    /**
     * @example
     * 1000
     */
    nextToken?: string;
    resultList?: FindTargetRelatedFollowRecordsResponseBodyResultResultList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAllCustomerRecyclesResponseBodyResultList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    customerId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2022-03-24T09:30Z
     */
    followUpActionTime?: string;
    isDeleted?: boolean;
    /**
     * @example
     * 2022-03-24T09:30Z
     */
    notifyTime?: string;
    recycleRuleId?: number;
    /**
     * @example
     * 2022-03-24T09:30Z
     */
    recycleTime?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetContactsResponseBodyResultValuesPermission extends $tea.Model {
    ownerUserIds?: string[];
    participantUserIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetContactsResponseBodyResultValues extends $tea.Model {
    /**
     * @example
     * user01
     */
    creatorUserId?: string;
    data?: {
        [key: string]: any;
    };
    extendData?: {
        [key: string]: any;
    };
    /**
     * @example
     * 2023-11-25 15:33:12
     */
    gmtCreate?: string;
    /**
     * @example
     * 20123-12-25 15:33:12
     */
    gmtModified?: string;
    /**
     * @example
     * INST_XX
     */
    instanceId?: string;
    /**
     * @example
     * crm_contact
     */
    objectType?: string;
    permission?: GetContactsResponseBodyResultValuesPermission;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetContactsResponseBodyResult extends $tea.Model {
    hasMore?: boolean;
    /**
     * @example
     * 100
     */
    maxResults?: number;
    /**
     * @example
     * 0
     */
    nextToken?: string;
    values?: GetContactsResponseBodyResultValues[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCrmGroupChatMultiResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 1642078998377
     */
    gmtCreate?: number;
    /**
     * @example
     * https://static/xx.com/xx.jpg
     */
    iconUrl?: string;
    /**
     * @example
     * 12
     */
    memberCount?: number;
    /**
     * @example
     * 营销1群
     */
    name?: string;
    /**
     * @example
     * xx==
     */
    openConversationId?: string;
    /**
     * @example
     * xxa==
     */
    openGroupSetId?: string;
    /**
     * @example
     * axaf12
     */
    ownerUserId?: string;
    /**
     * @example
     * XX
     */
    ownerUserName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCrmRolePermissionResponseBodyPermissionsFieldScopes extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fieldActions?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * "DDSelectField-KI5S975E"
     */
    fieldId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCrmRolePermissionResponseBodyPermissionsManagingScopeListExt extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    deptIdList?: number[];
    /**
     * @remarks
     * This parameter is required.
     */
    userIdList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCrmRolePermissionResponseBodyPermissionsManagingScopeList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    ext?: GetCrmRolePermissionResponseBodyPermissionsManagingScopeListExt;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * false 如果是主管，要做逻辑的单独处理。比如如果设置了管理下属或当前部门，只管理他是主管的部门
     */
    manager?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10_own 自己负责的 15_all_org 全公司 20_selfDept 同层级 30_selfSubDept 下属的 40_customized 自定义的
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCrmRolePermissionResponseBodyPermissionsOperateScopes extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    hasAuth?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * * 操作类型      * 发起：OPERATE_CREATE      * 查看：OPERATE_VIEW      * 编辑：OPERATE_EDIT      * 删除：OPERATE_DELETE      * 打印：OPERATE_PRINT      * 分配：ASSIGN      * 转交：TRANS      * 导入：IMPORT      * 导出：EXPORT
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCrmRolePermissionResponseBodyPermissionsRoleMemberList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 可以是员工 uid，可以是部门 ID 等，根据 type 确定
     */
    memberId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 张三
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * user：组织成员   dept：部门   tag：标签  org：组织     org_res_admin：组织管理员
     */
    type?: string;
    /**
     * @example
     * manager1234
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCrmRolePermissionResponseBodyPermissions extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    defaultRole?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    fieldScopes?: GetCrmRolePermissionResponseBodyPermissionsFieldScopes[];
    /**
     * @remarks
     * This parameter is required.
     */
    managingScopeList?: GetCrmRolePermissionResponseBodyPermissionsManagingScopeList[];
    /**
     * @remarks
     * This parameter is required.
     */
    operateScopes?: GetCrmRolePermissionResponseBodyPermissionsOperateScopes[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * PROC-478E50CA-856C-4C08-B806-E664D4CEC8C4
     */
    resourceId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 12821738
     */
    roleId?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    roleMemberList?: GetCrmRolePermissionResponseBodyPermissionsRoleMemberList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 销售权限组
     */
    roleName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCustomerTracksByRelationIdResponseBodyResultListIsvInfo extends $tea.Model {
    appName?: string;
    orgName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCustomerTracksByRelationIdResponseBodyResultList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    content?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 华佗
     */
    creatorName?: string;
    detail?: {
        [key: string]: string;
    };
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * markdown
     */
    format?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2022-03-24T09:30Z
     */
    gmtCreate?: string;
    /**
     * @example
     * dadf134234
     */
    id?: string;
    isvInfo?: GetCustomerTracksByRelationIdResponseBodyResultListIsvInfo;
    title?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 201
     */
    type?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    typeGroup?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetGroupSetResponseBodyManager extends $tea.Model {
    name?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetGroupSetResponseBodyOwner extends $tea.Model {
    name?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInAppPurchaseGoodsResponseBodyResultPurchaseGoodsListMainOperationInfo extends $tea.Model {
    /**
     * @example
     * GOODS-002
     */
    goodsCode?: string;
    /**
     * @example
     * https://yyy
     */
    originalUrl?: string;
    /**
     * @example
     * https://xxx
     */
    url?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInAppPurchaseGoodsResponseBodyResultPurchaseGoodsListMedia extends $tea.Model {
    /**
     * @example
     * image
     */
    mediaType?: string;
    /**
     * @example
     * https://tungee-ali-crm.oss-cn-hangzhou.aliyuncs.com/app-center/banner/进销存封面.png
     */
    url?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInAppPurchaseGoodsResponseBodyResultPurchaseGoodsListSubOperationInfo extends $tea.Model {
    /**
     * @example
     * GOODS-2120
     */
    goodsCode?: string;
    /**
     * @example
     * https://yyy
     */
    originalUrl?: string;
    /**
     * @example
     * https://xxx
     */
    url?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInAppPurchaseGoodsResponseBodyResultPurchaseGoodsList extends $tea.Model {
    applicableVersion?: string[];
    applyNum?: number;
    belongIndustry?: string[];
    /**
     * @example
     * psi
     */
    goodsId?: string;
    /**
     * @example
     * app_function
     */
    goodsType?: string;
    /**
     * @example
     * https://tungee-ali-crm.oss-cn-hangzhou.aliyuncs.com/app-center/icon/进销存.png
     */
    icon?: string;
    mainOperationInfo?: GetInAppPurchaseGoodsResponseBodyResultPurchaseGoodsListMainOperationInfo;
    media?: GetInAppPurchaseGoodsResponseBodyResultPurchaseGoodsListMedia[];
    /**
     * @example
     * 10000
     */
    price?: string;
    subOperationInfo?: GetInAppPurchaseGoodsResponseBodyResultPurchaseGoodsListSubOperationInfo;
    /**
     * @example
     * 通过进销存管理，连接企业人、财、物，一站式解决进销存仓库管理难题。让货品成本有据可依，避免盲目采购；合理控制库存，防止滞销/脱销；通过往来对账确保资金安全。
     */
    subTitle?: string;
    tag?: string[];
    /**
     * @example
     * 进销存
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetInAppPurchaseGoodsResponseBodyResult extends $tea.Model {
    /**
     * @example
     * free
     */
    orderVersion?: string;
    purchaseGoodsList?: GetInAppPurchaseGoodsResponseBodyResultPurchaseGoodsList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetNavigationCatalogResponseBodyResultNavCatalog extends $tea.Model {
    children?: any;
    navCode?: string;
    navId?: string;
    navName?: string;
    navType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetNavigationCatalogResponseBodyResult extends $tea.Model {
    bizTraceId?: string;
    module?: string;
    navCatalog?: GetNavigationCatalogResponseBodyResultNavCatalog[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetObjectDataResponseBodyResultValuesPermission extends $tea.Model {
    ownerUserIds?: string[];
    participantUserIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetObjectDataResponseBodyResultValues extends $tea.Model {
    /**
     * @example
     * 张xx
     */
    creatorNick?: string;
    /**
     * @example
     * user01
     */
    creatorUserId?: string;
    data?: {
        [key: string]: any;
    };
    extendData?: {
        [key: string]: any;
    };
    /**
     * @example
     * 2023-11-25 15:33:12
     */
    gmtCreate?: string;
    /**
     * @example
     * 2023-12-25 15:33:12
     */
    gmtModified?: string;
    /**
     * @example
     * INST_XX
     */
    instanceId?: string;
    /**
     * @example
     * crm_contact
     */
    objectType?: string;
    permission?: GetObjectDataResponseBodyResultValuesPermission;
    /**
     * @example
     * COMPLETE
     */
    procInstStatus?: string;
    /**
     * @example
     * agree
     */
    procOutResult?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetObjectDataResponseBodyResult extends $tea.Model {
    hasMore?: boolean;
    /**
     * @example
     * 100
     */
    maxResults?: number;
    /**
     * @example
     * 0
     */
    nextToken?: string;
    values?: GetObjectDataResponseBodyResultValues[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOfficialAccountContactsResponseBodyValuesContactsPermission extends $tea.Model {
    ownerStaffIds?: string[];
    participantStaffIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOfficialAccountContactsResponseBodyValuesContacts extends $tea.Model {
    /**
     * @example
     * 2019-12-25 15:33:12
     */
    createTime?: string;
    /**
     * @example
     * 张三
     */
    creatorNick?: string;
    /**
     * @example
     * ding_userid
     */
    creatorUserId?: string;
    data?: {
        [key: string]: any;
    };
    extendData?: {
        [key: string]: any;
    };
    /**
     * @example
     * instance_id
     */
    instanceId?: string;
    /**
     * @example
     * 2019-12-25 15:33:12
     */
    modifyTime?: string;
    permission?: GetOfficialAccountContactsResponseBodyValuesContactsPermission;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOfficialAccountContactsResponseBodyValues extends $tea.Model {
    contacts?: GetOfficialAccountContactsResponseBodyValuesContacts[];
    /**
     * @example
     * user_id
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOfficialAccountOTOMessageResultResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    readUserIdList?: string[];
    /**
     * @remarks
     * This parameter is required.
     */
    status?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRelatedViewTabDataResponseBodyResultPageList extends $tea.Model {
    /**
     * @example
     * 西游四人组:孙悟空
     */
    abstractMessage?: string;
    createTime?: number;
    /**
     * @example
     * 王凯提交的楚衣的流程表单2
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRelatedViewTabDataResponseBodyResultPage extends $tea.Model {
    hasMore?: boolean;
    list?: GetRelatedViewTabDataResponseBodyResultPageList[];
    /**
     * @example
     * 10
     */
    nextToken?: number;
    /**
     * @example
     * 5
     */
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRelatedViewTabDataResponseBodyResult extends $tea.Model {
    page?: GetRelatedViewTabDataResponseBodyResultPage;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRelatedViewTabMetaResponseBodyResults extends $tea.Model {
    /**
     * @example
     * PROC-4EFE895D-A291-4A65-9FD6-99431604DF67
     */
    formCode?: string;
    /**
     * @example
     * OpenDataField_K99RPMMRGJ40
     */
    relateComponentId?: string;
    /**
     * @example
     * 212
     */
    tabTitle?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRelationUkSettingResponseBodyResult extends $tea.Model {
    /**
     * @example
     * customer_name
     */
    bizAlias?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * TextField_U2K5A122
     */
    fieldId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class JoinGroupSetRequestBizDataList extends $tea.Model {
    /**
     * @example
     * {}
     */
    extendValue?: string;
    /**
     * @example
     * customer_name
     */
    key?: string;
    /**
     * @example
     * abc123
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListAvailableBenefitResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * B_ACCOUNT_NUMBER
     */
    benefitCode?: string;
    /**
     * @example
     * 1718696461851
     */
    endTime?: number;
    /**
     * @example
     * 200
     */
    quota?: number;
    /**
     * @example
     * 1718696461851
     */
    startTime?: number;
    /**
     * @example
     * 10
     */
    usedQuota?: number;
    /**
     * @example
     * tryout
     */
    version?: string;
    /**
     * @example
     * 试用版
     */
    versionName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListBenefitLicenseResponseBodyResultLicenses extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * staffId
     */
    licenseUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListBenefitLicenseResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * B_ACCOUNT_NUMBER
     */
    domain?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    licenses?: ListBenefitLicenseResponseBodyResultLicenses[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListClueTagResponseBodyResult extends $tea.Model {
    name?: string;
    tagId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCrmPersonalCustomersResponseBodyResultPermission extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    ownerStaffIds?: string[];
    /**
     * @remarks
     * This parameter is required.
     */
    participantStaffIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCrmPersonalCustomersResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    appUuid?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    creatorNick?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    creatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    data?: {
        [key: string]: any;
    };
    /**
     * @remarks
     * This parameter is required.
     */
    extendData?: {
        [key: string]: any;
    };
    /**
     * @remarks
     * This parameter is required.
     */
    formCode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    gmtCreate?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    gmtModified?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    instanceId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    objectType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    permission?: ListCrmPersonalCustomersResponseBodyResultPermission;
    /**
     * @remarks
     * This parameter is required.
     */
    procInstStatus?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    procOutResult?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListGroupSetResponseBodyResultListManager extends $tea.Model {
    /**
     * @example
     * XX
     */
    name?: string;
    /**
     * @example
     * afs1
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListGroupSetResponseBodyResultListOwner extends $tea.Model {
    /**
     * @example
     * XX
     */
    name?: string;
    /**
     * @example
     * afsd12
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListGroupSetResponseBodyResultList extends $tea.Model {
    /**
     * @example
     * 2021-12-23T13:00Z
     */
    gmtCreate?: string;
    /**
     * @example
     * 2021-12-23T13:00Z
     */
    gmtModified?: string;
    /**
     * @example
     * 10
     */
    groupChatCount?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123agsg
     */
    lastOpenConversationId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    manager?: ListGroupSetResponseBodyResultListManager[];
    /**
     * @example
     * afsd12,afsd13
     */
    managerUserIds?: string;
    /**
     * @example
     * 10
     */
    memberCount?: number;
    /**
     * @example
     * 100
     */
    memberQuota?: number;
    /**
     * @example
     * 营销群
     */
    name?: string;
    /**
     * @example
     * 群公告
     */
    notice?: string;
    /**
     * @example
     * 0
     */
    noticeToped?: number;
    /**
     * @example
     * adfads
     */
    openGroupSetId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    owner?: ListGroupSetResponseBodyResultListOwner;
    /**
     * @example
     * afsd12
     */
    ownerUserId?: string;
    /**
     * @example
     * crm_customer_personal
     */
    relationType?: string;
    /**
     * @example
     * sfasgsab
     */
    templateId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAllCustomerResponseBodyResultValuesPermission extends $tea.Model {
    ownerStaffIds?: string[];
    participantStaffIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAllCustomerResponseBodyResultValues extends $tea.Model {
    /**
     * @example
     * 2019-12-25 15:33:12
     */
    createTime?: string;
    /**
     * @example
     * 张三
     */
    creatorNick?: string;
    /**
     * @example
     * ding_userid
     */
    creatorUserId?: string;
    data?: {
        [key: string]: any;
    };
    extendData?: {
        [key: string]: any;
    };
    /**
     * @example
     * instance_id
     */
    instanceId?: string;
    /**
     * @example
     * 2019-12-25 15:33:12
     */
    modifyTime?: string;
    /**
     * @example
     * crm_customer
     */
    objectType?: string;
    permission?: QueryAllCustomerResponseBodyResultValuesPermission;
    /**
     * @example
     * COMPLATE
     */
    processInstanceStatus?: string;
    /**
     * @example
     * agree
     */
    processOutResult?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAllCustomerResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 100
     */
    maxResults?: number;
    /**
     * @example
     * 100
     */
    nextToken?: string;
    values?: QueryAllCustomerResponseBodyResultValues[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAllTracksResponseBodyValues extends $tea.Model {
    /**
     * @example
     * 1234
     */
    bizId?: string;
    /**
     * @example
     * manager1234
     */
    creator?: string;
    /**
     * @example
     * customer_id
     */
    customerId?: string;
    /**
     * @example
     * 1237126786127
     */
    gmtCreate?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * asjkdh189127836
     */
    id?: string;
    /**
     * @example
     * 4
     */
    subType?: number;
    /**
     * @example
     * 80
     */
    type?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAppManagerResponseBodyResult extends $tea.Model {
    avatarUrl?: string;
    name?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryBenefitInventoryResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2000
     */
    totalQuota?: number;
    /**
     * @example
     * 10
     */
    usedQuota?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClueFollowStatusResponseBodyResult extends $tea.Model {
    clueId?: string;
    scope?: string;
    status?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCrmGroupChatsResponseBodyResultList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1640239655539
     */
    gmtCreate?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100
     */
    memberCount?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 营销1群
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * afsad21
     */
    openConversationId?: string;
    /**
     * @example
     * afsdba23
     */
    openGroupSetId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * afds12
     */
    ownerUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * XX
     */
    ownerUserName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCrmPersonalCustomerResponseBodyValuesPermission extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    ownerStaffIds?: string[];
    /**
     * @remarks
     * This parameter is required.
     */
    participantStaffIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCrmPersonalCustomerResponseBodyValues extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    creatorNick?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    creatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    data?: {
        [key: string]: any;
    };
    /**
     * @remarks
     * This parameter is required.
     */
    extendData?: {
        [key: string]: any;
    };
    /**
     * @remarks
     * This parameter is required.
     */
    gmtCreate?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    gmtModified?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    instanceId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    objectType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    permission?: QueryCrmPersonalCustomerResponseBodyValuesPermission;
    /**
     * @remarks
     * This parameter is required.
     */
    procInstStatus?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    procOutResult?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomerBizTypeResponseBodyResult extends $tea.Model {
    /**
     * @example
     * crm_customer
     */
    customerBizType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryGlobalInfoResponseBodyResult extends $tea.Model {
    oemEnable?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOfficialAccountUserBasicInfoResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * FOLLOWED
     */
    status?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRelationDatasByTargetIdResponseBodyRelationsBizDataList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * {}
     */
    extendValue?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * customer_name
     */
    key?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * abc123
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRelationDatasByTargetIdResponseBodyRelations extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    bizDataList?: QueryRelationDatasByTargetIdResponseBodyRelationsBizDataList[];
    /**
     * @remarks
     * This parameter is required.
     */
    openConversationIds?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * abc123
     */
    relationId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * abc123
     */
    relationType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveBenefitLicenseRequestLicenses extends $tea.Model {
    /**
     * @example
     * licenseStaffId
     */
    licenseUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveBenefitLicenseResponseBodyResultLicenses extends $tea.Model {
    /**
     * @example
     * license账号信息
     */
    licenseUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveBenefitLicenseResponseBodyResult extends $tea.Model {
    /**
     * @example
     * B_ACCOUNT_NUMBER
     */
    domain?: string;
    licenses?: SaveBenefitLicenseResponseBodyResultLicenses[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountOTOMessageRequestDetailMessageBodyActionCardButtonList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    actionUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountOTOMessageRequestDetailMessageBodyActionCard extends $tea.Model {
    buttonList?: SendOfficialAccountOTOMessageRequestDetailMessageBodyActionCardButtonList[];
    buttonOrientation?: string;
    markdown?: string;
    singleTitle?: string;
    singleUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountOTOMessageRequestDetailMessageBodyImage extends $tea.Model {
    /**
     * @example
     * @lALPBbCc1XuaP_rNAljNAl
     */
    mediaId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountOTOMessageRequestDetailMessageBodyLink extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    messageUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    picUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    text?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountOTOMessageRequestDetailMessageBodyMarkdown extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    text?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountOTOMessageRequestDetailMessageBodyText extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    content?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountOTOMessageRequestDetailMessageBody extends $tea.Model {
    actionCard?: SendOfficialAccountOTOMessageRequestDetailMessageBodyActionCard;
    image?: SendOfficialAccountOTOMessageRequestDetailMessageBodyImage;
    link?: SendOfficialAccountOTOMessageRequestDetailMessageBodyLink;
    markdown?: SendOfficialAccountOTOMessageRequestDetailMessageBodyMarkdown;
    text?: SendOfficialAccountOTOMessageRequestDetailMessageBodyText;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountOTOMessageRequestDetail extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    messageBody?: SendOfficialAccountOTOMessageRequestDetailMessageBody;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * text
     */
    msgType?: string;
    unionId?: string;
    userId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    uuid?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountOTOMessageResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    openPushId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountSNSMessageRequestDetailMessageBodyActionCardButtonList extends $tea.Model {
    actionUrl?: string;
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountSNSMessageRequestDetailMessageBodyActionCard extends $tea.Model {
    buttonList?: SendOfficialAccountSNSMessageRequestDetailMessageBodyActionCardButtonList[];
    buttonOrientation?: string;
    markdown?: string;
    singleTitle?: string;
    singleUrl?: string;
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountSNSMessageRequestDetailMessageBodyLink extends $tea.Model {
    messageUrl?: string;
    picUrl?: string;
    text?: string;
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountSNSMessageRequestDetailMessageBodyMarkdown extends $tea.Model {
    text?: string;
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountSNSMessageRequestDetailMessageBodyText extends $tea.Model {
    content?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountSNSMessageRequestDetailMessageBody extends $tea.Model {
    actionCard?: SendOfficialAccountSNSMessageRequestDetailMessageBodyActionCard;
    link?: SendOfficialAccountSNSMessageRequestDetailMessageBodyLink;
    markdown?: SendOfficialAccountSNSMessageRequestDetailMessageBodyMarkdown;
    text?: SendOfficialAccountSNSMessageRequestDetailMessageBodyText;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountSNSMessageRequestDetail extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    messageBody?: SendOfficialAccountSNSMessageRequestDetailMessageBody;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * text
     */
    msgType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    uuid?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendOfficialAccountSNSMessageResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    openPushId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ServiceWindowMessageBatchPushRequestDetailMessageBodyActionCardButtonList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    actionUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ServiceWindowMessageBatchPushRequestDetailMessageBodyActionCard extends $tea.Model {
    buttonList?: ServiceWindowMessageBatchPushRequestDetailMessageBodyActionCardButtonList[];
    buttonOrientation?: string;
    markdown?: string;
    singleTitle?: string;
    singleUrl?: string;
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ServiceWindowMessageBatchPushRequestDetailMessageBodyLink extends $tea.Model {
    messageUrl?: string;
    picUrl?: string;
    text?: string;
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ServiceWindowMessageBatchPushRequestDetailMessageBodyMarkdown extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    text?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ServiceWindowMessageBatchPushRequestDetailMessageBodyText extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    content?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ServiceWindowMessageBatchPushRequestDetailMessageBody extends $tea.Model {
    actionCard?: ServiceWindowMessageBatchPushRequestDetailMessageBodyActionCard;
    link?: ServiceWindowMessageBatchPushRequestDetailMessageBodyLink;
    markdown?: ServiceWindowMessageBatchPushRequestDetailMessageBodyMarkdown;
    text?: ServiceWindowMessageBatchPushRequestDetailMessageBodyText;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ServiceWindowMessageBatchPushRequestDetail extends $tea.Model {
    /**
     * **if can be null:**
     * false
     */
    bizRequestId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    messageBody?: ServiceWindowMessageBatchPushRequestDetailMessageBody;
    /**
     * @remarks
     * This parameter is required.
     *
     * **if can be null:**
     * true
     */
    msgType?: string;
    sendToAll?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    userIdList?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * **if can be null:**
     * true
     */
    uuid?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ServiceWindowMessageBatchPushResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    openPushId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCrmPersonalCustomerRequestPermission extends $tea.Model {
    ownerStaffIds?: string[];
    participantStaffIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateMenuDataRequestNavDataNavExtInfo extends $tea.Model {
    /**
     * @example
     * oem
     */
    productMode?: string;
    /**
     * @example
     * tj
     */
    provider?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateMenuDataRequestNavData extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    displayStatus?: string;
    /**
     * @example
     * icon-biaodan_baogao
     */
    icon?: string;
    /**
     * @example
     * #CCEEFF
     */
    iconBgColor?: string;
    /**
     * @example
     * #007FFF
     */
    iconColor?: string;
    /**
     * @example
     * same_page
     */
    integrationProtocol?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 库存账单
     */
    mobileNavName?: string;
    /**
     * @example
     * https://tj-ali-crm-test.tangees.com/tungee/crm/mobile/?corpid=dinge18b222ec5637b04ffe93478753d9884#/form/PROC-ECC13160-7AFF-4D5B-8E73-E5B98BB9A59B?库存流水&psi_stock_flow&fromPage=home
     */
    mobileUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * lowcode_customize_form
     */
    navCode?: string;
    navExtInfo?: UpdateMenuDataRequestNavDataNavExtInfo;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * lowcode_customize_form:PROC-0279E824-ED47-4E75-86F2-11B665F3704D
     */
    navId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 库存流水
     */
    navName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * PUBLISHED
     */
    navStatus?: string;
    /**
     * @example
     * item
     */
    navType?: string;
    /**
     * @example
     * crm_product
     */
    parentNavId?: string;
    /**
     * @example
     * tj
     */
    provider?: string;
    sortNum?: number;
    /**
     * @example
     * /form/PROC-ECC13160-7AFF-4D5B-8E73-E5B98BB9A59B?bizType=psi_stock_flow&formName=库存流水
     */
    url?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateMetaModelFieldRequestFieldDTOListPropsOptions extends $tea.Model {
    key?: string;
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateMetaModelFieldRequestFieldDTOListProps extends $tea.Model {
    align?: string;
    bizAlias?: string;
    choice?: number;
    content?: string;
    disabled?: boolean;
    duration?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    format?: string;
    invisible?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    labelEditableFreeze?: boolean;
    link?: string;
    needDetail?: string;
    notPrint?: string;
    notUpper?: string;
    options?: UpdateMetaModelFieldRequestFieldDTOListPropsOptions[];
    payEnable?: boolean;
    placeholder?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    required?: boolean;
    requiredEditableFreeze?: boolean;
    sortable?: boolean;
    unit?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateMetaModelFieldRequestFieldDTOList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    componentName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    props?: UpdateMetaModelFieldRequestFieldDTOListProps;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateRelationMetaFieldRequestFieldDTOListPropsOptions extends $tea.Model {
    key?: string;
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateRelationMetaFieldRequestFieldDTOListProps extends $tea.Model {
    align?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    bizAlias?: string;
    choice?: number;
    content?: string;
    disabled?: boolean;
    duration?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    fieldId?: string;
    format?: string;
    invisible?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    label?: string;
    labelEditableFreeze?: boolean;
    link?: string;
    needDetail?: string;
    notPrint?: string;
    notUpper?: string;
    options?: UpdateRelationMetaFieldRequestFieldDTOListPropsOptions[];
    payEnable?: boolean;
    placeholder?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    required?: boolean;
    requiredEditableFreeze?: boolean;
    sortable?: boolean;
    unit?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateRelationMetaFieldRequestFieldDTOList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    componentName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    props?: UpdateRelationMetaFieldRequestFieldDTOListProps;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 从私海放弃客户（退回公海）
     *
     * @param request - AbandonCustomerRequest
     * @param headers - AbandonCustomerHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AbandonCustomerResponse
     */
    abandonCustomerWithOptions(request: AbandonCustomerRequest, headers: AbandonCustomerHeaders, runtime: $Util.RuntimeOptions): Promise<AbandonCustomerResponse>;
    /**
     * 从私海放弃客户（退回公海）
     *
     * @param request - AbandonCustomerRequest
     * @returns AbandonCustomerResponse
     */
    abandonCustomer(request: AbandonCustomerRequest): Promise<AbandonCustomerResponse>;
    /**
     * 添加crm个人客户（或企业客户）
     *
     * @param request - AddCrmPersonalCustomerRequest
     * @param headers - AddCrmPersonalCustomerHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddCrmPersonalCustomerResponse
     */
    addCrmPersonalCustomerWithOptions(request: AddCrmPersonalCustomerRequest, headers: AddCrmPersonalCustomerHeaders, runtime: $Util.RuntimeOptions): Promise<AddCrmPersonalCustomerResponse>;
    /**
     * 添加crm个人客户（或企业客户）
     *
     * @param request - AddCrmPersonalCustomerRequest
     * @returns AddCrmPersonalCustomerResponse
     */
    addCrmPersonalCustomer(request: AddCrmPersonalCustomerRequest): Promise<AddCrmPersonalCustomerResponse>;
    /**
     * 新增动态
     *
     * @param request - AddCustomerTrackRequest
     * @param headers - AddCustomerTrackHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddCustomerTrackResponse
     */
    addCustomerTrackWithOptions(request: AddCustomerTrackRequest, headers: AddCustomerTrackHeaders, runtime: $Util.RuntimeOptions): Promise<AddCustomerTrackResponse>;
    /**
     * 新增动态
     *
     * @param request - AddCustomerTrackRequest
     * @returns AddCustomerTrackResponse
     */
    addCustomerTrack(request: AddCustomerTrackRequest): Promise<AddCustomerTrackResponse>;
    /**
     * 添加线索
     *
     * @param request - AddLeadsRequest
     * @param headers - AddLeadsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddLeadsResponse
     */
    addLeadsWithOptions(request: AddLeadsRequest, headers: AddLeadsHeaders, runtime: $Util.RuntimeOptions): Promise<AddLeadsResponse>;
    /**
     * 添加线索
     *
     * @param request - AddLeadsRequest
     * @returns AddLeadsResponse
     */
    addLeads(request: AddLeadsRequest): Promise<AddLeadsResponse>;
    /**
     * 模型表结构增加字段
     *
     * @param request - AddMetaModelFieldRequest
     * @param headers - AddMetaModelFieldHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddMetaModelFieldResponse
     */
    addMetaModelFieldWithOptions(request: AddMetaModelFieldRequest, headers: AddMetaModelFieldHeaders, runtime: $Util.RuntimeOptions): Promise<AddMetaModelFieldResponse>;
    /**
     * 模型表结构增加字段
     *
     * @param request - AddMetaModelFieldRequest
     * @returns AddMetaModelFieldResponse
     */
    addMetaModelField(request: AddMetaModelFieldRequest): Promise<AddMetaModelFieldResponse>;
    /**
     * 关系模型表结构增加字段
     *
     * @param request - AddRelationMetaFieldRequest
     * @param headers - AddRelationMetaFieldHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddRelationMetaFieldResponse
     */
    addRelationMetaFieldWithOptions(request: AddRelationMetaFieldRequest, headers: AddRelationMetaFieldHeaders, runtime: $Util.RuntimeOptions): Promise<AddRelationMetaFieldResponse>;
    /**
     * 关系模型表结构增加字段
     *
     * @param request - AddRelationMetaFieldRequest
     * @returns AddRelationMetaFieldResponse
     */
    addRelationMetaField(request: AddRelationMetaFieldRequest): Promise<AddRelationMetaFieldResponse>;
    /**
     * 追加客户数据权限
     *
     * @param request - AppendCustomerDataAuthRequest
     * @param headers - AppendCustomerDataAuthHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AppendCustomerDataAuthResponse
     */
    appendCustomerDataAuthWithOptions(request: AppendCustomerDataAuthRequest, headers: AppendCustomerDataAuthHeaders, runtime: $Util.RuntimeOptions): Promise<AppendCustomerDataAuthResponse>;
    /**
     * 追加客户数据权限
     *
     * @param request - AppendCustomerDataAuthRequest
     * @returns AppendCustomerDataAuthResponse
     */
    appendCustomerDataAuth(request: AppendCustomerDataAuthRequest): Promise<AppendCustomerDataAuthResponse>;
    /**
     * 批量新增联系人
     *
     * @param request - BatchAddContactsRequest
     * @param headers - BatchAddContactsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BatchAddContactsResponse
     */
    batchAddContactsWithOptions(request: BatchAddContactsRequest, headers: BatchAddContactsHeaders, runtime: $Util.RuntimeOptions): Promise<BatchAddContactsResponse>;
    /**
     * 批量新增联系人
     *
     * @param request - BatchAddContactsRequest
     * @returns BatchAddContactsResponse
     */
    batchAddContacts(request: BatchAddContactsRequest): Promise<BatchAddContactsResponse>;
    /**
     * 批量新增跟进记录
     *
     * @param request - BatchAddFollowRecordsRequest
     * @param headers - BatchAddFollowRecordsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BatchAddFollowRecordsResponse
     */
    batchAddFollowRecordsWithOptions(request: BatchAddFollowRecordsRequest, headers: BatchAddFollowRecordsHeaders, runtime: $Util.RuntimeOptions): Promise<BatchAddFollowRecordsResponse>;
    /**
     * 批量新增跟进记录
     *
     * @param request - BatchAddFollowRecordsRequest
     * @returns BatchAddFollowRecordsResponse
     */
    batchAddFollowRecords(request: BatchAddFollowRecordsRequest): Promise<BatchAddFollowRecordsResponse>;
    /**
     * 批量新增关系数据
     *
     * @param request - BatchAddRelationDatasRequest
     * @param headers - BatchAddRelationDatasHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BatchAddRelationDatasResponse
     */
    batchAddRelationDatasWithOptions(request: BatchAddRelationDatasRequest, headers: BatchAddRelationDatasHeaders, runtime: $Util.RuntimeOptions): Promise<BatchAddRelationDatasResponse>;
    /**
     * 批量新增关系数据
     *
     * @param request - BatchAddRelationDatasRequest
     * @returns BatchAddRelationDatasResponse
     */
    batchAddRelationDatas(request: BatchAddRelationDatasRequest): Promise<BatchAddRelationDatasResponse>;
    /**
     * 批量创建线索数据
     *
     * @param request - BatchCreateClueDataRequest
     * @param headers - BatchCreateClueDataHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BatchCreateClueDataResponse
     */
    batchCreateClueDataWithOptions(request: BatchCreateClueDataRequest, headers: BatchCreateClueDataHeaders, runtime: $Util.RuntimeOptions): Promise<BatchCreateClueDataResponse>;
    /**
     * 批量创建线索数据
     *
     * @param request - BatchCreateClueDataRequest
     * @returns BatchCreateClueDataResponse
     */
    batchCreateClueData(request: BatchCreateClueDataRequest): Promise<BatchCreateClueDataResponse>;
    /**
     * 批量删除跟进记录
     *
     * @param request - BatchRemoveFollowRecordsRequest
     * @param headers - BatchRemoveFollowRecordsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BatchRemoveFollowRecordsResponse
     */
    batchRemoveFollowRecordsWithOptions(request: BatchRemoveFollowRecordsRequest, headers: BatchRemoveFollowRecordsHeaders, runtime: $Util.RuntimeOptions): Promise<BatchRemoveFollowRecordsResponse>;
    /**
     * 批量删除跟进记录
     *
     * @param request - BatchRemoveFollowRecordsRequest
     * @returns BatchRemoveFollowRecordsResponse
     */
    batchRemoveFollowRecords(request: BatchRemoveFollowRecordsRequest): Promise<BatchRemoveFollowRecordsResponse>;
    /**
     * 服务窗消息群发
     *
     * @param request - BatchSendOfficialAccountOTOMessageRequest
     * @param headers - BatchSendOfficialAccountOTOMessageHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BatchSendOfficialAccountOTOMessageResponse
     */
    batchSendOfficialAccountOTOMessageWithOptions(request: BatchSendOfficialAccountOTOMessageRequest, headers: BatchSendOfficialAccountOTOMessageHeaders, runtime: $Util.RuntimeOptions): Promise<BatchSendOfficialAccountOTOMessageResponse>;
    /**
     * 服务窗消息群发
     *
     * @param request - BatchSendOfficialAccountOTOMessageRequest
     * @returns BatchSendOfficialAccountOTOMessageResponse
     */
    batchSendOfficialAccountOTOMessage(request: BatchSendOfficialAccountOTOMessageRequest): Promise<BatchSendOfficialAccountOTOMessageResponse>;
    /**
     * 批量修改联系人
     *
     * @param request - BatchUpdateContactsRequest
     * @param headers - BatchUpdateContactsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BatchUpdateContactsResponse
     */
    batchUpdateContactsWithOptions(request: BatchUpdateContactsRequest, headers: BatchUpdateContactsHeaders, runtime: $Util.RuntimeOptions): Promise<BatchUpdateContactsResponse>;
    /**
     * 批量修改联系人
     *
     * @param request - BatchUpdateContactsRequest
     * @returns BatchUpdateContactsResponse
     */
    batchUpdateContacts(request: BatchUpdateContactsRequest): Promise<BatchUpdateContactsResponse>;
    /**
     * 批量修改跟进记录
     *
     * @param request - BatchUpdateFollowRecordsRequest
     * @param headers - BatchUpdateFollowRecordsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BatchUpdateFollowRecordsResponse
     */
    batchUpdateFollowRecordsWithOptions(request: BatchUpdateFollowRecordsRequest, headers: BatchUpdateFollowRecordsHeaders, runtime: $Util.RuntimeOptions): Promise<BatchUpdateFollowRecordsResponse>;
    /**
     * 批量修改跟进记录
     *
     * @param request - BatchUpdateFollowRecordsRequest
     * @returns BatchUpdateFollowRecordsResponse
     */
    batchUpdateFollowRecords(request: BatchUpdateFollowRecordsRequest): Promise<BatchUpdateFollowRecordsResponse>;
    /**
     * 批量修改关系数据
     *
     * @param request - BatchUpdateRelationDatasRequest
     * @param headers - BatchUpdateRelationDatasHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BatchUpdateRelationDatasResponse
     */
    batchUpdateRelationDatasWithOptions(request: BatchUpdateRelationDatasRequest, headers: BatchUpdateRelationDatasHeaders, runtime: $Util.RuntimeOptions): Promise<BatchUpdateRelationDatasResponse>;
    /**
     * 批量修改关系数据
     *
     * @param request - BatchUpdateRelationDatasRequest
     * @returns BatchUpdateRelationDatasResponse
     */
    batchUpdateRelationDatas(request: BatchUpdateRelationDatasRequest): Promise<BatchUpdateRelationDatasResponse>;
    /**
     * 核销权益库存
     *
     * @param request - ConsumeBenefitInventoryRequest
     * @param headers - ConsumeBenefitInventoryHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ConsumeBenefitInventoryResponse
     */
    consumeBenefitInventoryWithOptions(request: ConsumeBenefitInventoryRequest, headers: ConsumeBenefitInventoryHeaders, runtime: $Util.RuntimeOptions): Promise<ConsumeBenefitInventoryResponse>;
    /**
     * 核销权益库存
     *
     * @param request - ConsumeBenefitInventoryRequest
     * @returns ConsumeBenefitInventoryResponse
     */
    consumeBenefitInventory(request: ConsumeBenefitInventoryRequest): Promise<ConsumeBenefitInventoryResponse>;
    /**
     * CRM客户通讯录数据写入接口，支持客户&联系人数据合并写入
     *
     * @param request - CreateCustomerRequest
     * @param headers - CreateCustomerHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateCustomerResponse
     */
    createCustomerWithOptions(request: CreateCustomerRequest, headers: CreateCustomerHeaders, runtime: $Util.RuntimeOptions): Promise<CreateCustomerResponse>;
    /**
     * CRM客户通讯录数据写入接口，支持客户&联系人数据合并写入
     *
     * @param request - CreateCustomerRequest
     * @returns CreateCustomerResponse
     */
    createCustomer(request: CreateCustomerRequest): Promise<CreateCustomerResponse>;
    /**
     * 创建客户群
     *
     * @param request - CreateGroupRequest
     * @param headers - CreateGroupHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateGroupResponse
     */
    createGroupWithOptions(request: CreateGroupRequest, headers: CreateGroupHeaders, runtime: $Util.RuntimeOptions): Promise<CreateGroupResponse>;
    /**
     * 创建客户群
     *
     * @param request - CreateGroupRequest
     * @returns CreateGroupResponse
     */
    createGroup(request: CreateGroupRequest): Promise<CreateGroupResponse>;
    /**
     * 创建群组
     *
     * @param request - CreateGroupSetRequest
     * @param headers - CreateGroupSetHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateGroupSetResponse
     */
    createGroupSetWithOptions(request: CreateGroupSetRequest, headers: CreateGroupSetHeaders, runtime: $Util.RuntimeOptions): Promise<CreateGroupSetResponse>;
    /**
     * 创建群组
     *
     * @param request - CreateGroupSetRequest
     * @returns CreateGroupSetResponse
     */
    createGroupSet(request: CreateGroupSetRequest): Promise<CreateGroupSetResponse>;
    /**
     * 创建关系模型表结构
     *
     * @param request - CreateRelationMetaRequest
     * @param headers - CreateRelationMetaHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateRelationMetaResponse
     */
    createRelationMetaWithOptions(request: CreateRelationMetaRequest, headers: CreateRelationMetaHeaders, runtime: $Util.RuntimeOptions): Promise<CreateRelationMetaResponse>;
    /**
     * 创建关系模型表结构
     *
     * @param request - CreateRelationMetaRequest
     * @returns CreateRelationMetaResponse
     */
    createRelationMeta(request: CreateRelationMetaRequest): Promise<CreateRelationMetaResponse>;
    /**
     * 删除CRM自定义对象数据
     *
     * @param request - DeleteCrmCustomObjectDataRequest
     * @param headers - DeleteCrmCustomObjectDataHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteCrmCustomObjectDataResponse
     */
    deleteCrmCustomObjectDataWithOptions(instanceId: string, request: DeleteCrmCustomObjectDataRequest, headers: DeleteCrmCustomObjectDataHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteCrmCustomObjectDataResponse>;
    /**
     * 删除CRM自定义对象数据
     *
     * @param request - DeleteCrmCustomObjectDataRequest
     * @returns DeleteCrmCustomObjectDataResponse
     */
    deleteCrmCustomObjectData(instanceId: string, request: DeleteCrmCustomObjectDataRequest): Promise<DeleteCrmCustomObjectDataResponse>;
    /**
     * crm自定义表单数据删除接口
     *
     * @param request - DeleteCrmFormInstanceRequest
     * @param headers - DeleteCrmFormInstanceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteCrmFormInstanceResponse
     */
    deleteCrmFormInstanceWithOptions(instanceId: string, request: DeleteCrmFormInstanceRequest, headers: DeleteCrmFormInstanceHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteCrmFormInstanceResponse>;
    /**
     * crm自定义表单数据删除接口
     *
     * @param request - DeleteCrmFormInstanceRequest
     * @returns DeleteCrmFormInstanceResponse
     */
    deleteCrmFormInstance(instanceId: string, request: DeleteCrmFormInstanceRequest): Promise<DeleteCrmFormInstanceResponse>;
    /**
     * 删除crm个人客户（或企业客户）
     *
     * @param request - DeleteCrmPersonalCustomerRequest
     * @param headers - DeleteCrmPersonalCustomerHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteCrmPersonalCustomerResponse
     */
    deleteCrmPersonalCustomerWithOptions(dataId: string, request: DeleteCrmPersonalCustomerRequest, headers: DeleteCrmPersonalCustomerHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteCrmPersonalCustomerResponse>;
    /**
     * 删除crm个人客户（或企业客户）
     *
     * @param request - DeleteCrmPersonalCustomerRequest
     * @returns DeleteCrmPersonalCustomerResponse
     */
    deleteCrmPersonalCustomer(dataId: string, request: DeleteCrmPersonalCustomerRequest): Promise<DeleteCrmPersonalCustomerResponse>;
    /**
     * 删除线索
     *
     * @param request - DeleteLeadsRequest
     * @param headers - DeleteLeadsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteLeadsResponse
     */
    deleteLeadsWithOptions(request: DeleteLeadsRequest, headers: DeleteLeadsHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteLeadsResponse>;
    /**
     * 删除线索
     *
     * @param request - DeleteLeadsRequest
     * @returns DeleteLeadsResponse
     */
    deleteLeads(request: DeleteLeadsRequest): Promise<DeleteLeadsResponse>;
    /**
     * 关系模型表结构删除字段
     *
     * @param request - DeleteRelationMetaFieldRequest
     * @param headers - DeleteRelationMetaFieldHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteRelationMetaFieldResponse
     */
    deleteRelationMetaFieldWithOptions(request: DeleteRelationMetaFieldRequest, headers: DeleteRelationMetaFieldHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteRelationMetaFieldResponse>;
    /**
     * 关系模型表结构删除字段
     *
     * @param request - DeleteRelationMetaFieldRequest
     * @returns DeleteRelationMetaFieldResponse
     */
    deleteRelationMetaField(request: DeleteRelationMetaFieldRequest): Promise<DeleteRelationMetaFieldResponse>;
    /**
     * 获取CRM客户对象的元数据描述
     *
     * @param request - DescribeCrmPersonalCustomerObjectMetaRequest
     * @param headers - DescribeCrmPersonalCustomerObjectMetaHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DescribeCrmPersonalCustomerObjectMetaResponse
     */
    describeCrmPersonalCustomerObjectMetaWithOptions(request: DescribeCrmPersonalCustomerObjectMetaRequest, headers: DescribeCrmPersonalCustomerObjectMetaHeaders, runtime: $Util.RuntimeOptions): Promise<DescribeCrmPersonalCustomerObjectMetaResponse>;
    /**
     * 获取CRM客户对象的元数据描述
     *
     * @param request - DescribeCrmPersonalCustomerObjectMetaRequest
     * @returns DescribeCrmPersonalCustomerObjectMetaResponse
     */
    describeCrmPersonalCustomerObjectMeta(request: DescribeCrmPersonalCustomerObjectMetaRequest): Promise<DescribeCrmPersonalCustomerObjectMetaResponse>;
    /**
     * 查询模型表结构
     *
     * @param request - DescribeMetaModelRequest
     * @param headers - DescribeMetaModelHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DescribeMetaModelResponse
     */
    describeMetaModelWithOptions(request: DescribeMetaModelRequest, headers: DescribeMetaModelHeaders, runtime: $Util.RuntimeOptions): Promise<DescribeMetaModelResponse>;
    /**
     * 查询模型表结构
     *
     * @param request - DescribeMetaModelRequest
     * @returns DescribeMetaModelResponse
     */
    describeMetaModel(request: DescribeMetaModelRequest): Promise<DescribeMetaModelResponse>;
    /**
     * 查询关系模型表结构
     *
     * @param request - DescribeRelationMetaRequest
     * @param headers - DescribeRelationMetaHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DescribeRelationMetaResponse
     */
    describeRelationMetaWithOptions(request: DescribeRelationMetaRequest, headers: DescribeRelationMetaHeaders, runtime: $Util.RuntimeOptions): Promise<DescribeRelationMetaResponse>;
    /**
     * 查询关系模型表结构
     *
     * @param request - DescribeRelationMetaRequest
     * @returns DescribeRelationMetaResponse
     */
    describeRelationMeta(request: DescribeRelationMetaRequest): Promise<DescribeRelationMetaResponse>;
    /**
     * 分页获取关联对象的跟进记录列表
     *
     * @param request - FindTargetRelatedFollowRecordsRequest
     * @param headers - FindTargetRelatedFollowRecordsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns FindTargetRelatedFollowRecordsResponse
     */
    findTargetRelatedFollowRecordsWithOptions(request: FindTargetRelatedFollowRecordsRequest, headers: FindTargetRelatedFollowRecordsHeaders, runtime: $Util.RuntimeOptions): Promise<FindTargetRelatedFollowRecordsResponse>;
    /**
     * 分页获取关联对象的跟进记录列表
     *
     * @param request - FindTargetRelatedFollowRecordsRequest
     * @returns FindTargetRelatedFollowRecordsResponse
     */
    findTargetRelatedFollowRecords(request: FindTargetRelatedFollowRecordsRequest): Promise<FindTargetRelatedFollowRecordsResponse>;
    /**
     * 分页获取所有客户的掉保时间数据
     *
     * @param request - GetAllCustomerRecyclesRequest
     * @param headers - GetAllCustomerRecyclesHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetAllCustomerRecyclesResponse
     */
    getAllCustomerRecyclesWithOptions(request: GetAllCustomerRecyclesRequest, headers: GetAllCustomerRecyclesHeaders, runtime: $Util.RuntimeOptions): Promise<GetAllCustomerRecyclesResponse>;
    /**
     * 分页获取所有客户的掉保时间数据
     *
     * @param request - GetAllCustomerRecyclesRequest
     * @returns GetAllCustomerRecyclesResponse
     */
    getAllCustomerRecycles(request: GetAllCustomerRecyclesRequest): Promise<GetAllCustomerRecyclesResponse>;
    /**
     * 根据指定条件查询联系人数据
     *
     * @param request - GetContactsRequest
     * @param headers - GetContactsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetContactsResponse
     */
    getContactsWithOptions(request: GetContactsRequest, headers: GetContactsHeaders, runtime: $Util.RuntimeOptions): Promise<GetContactsResponse>;
    /**
     * 根据指定条件查询联系人数据
     *
     * @param request - GetContactsRequest
     * @returns GetContactsResponse
     */
    getContacts(request: GetContactsRequest): Promise<GetContactsResponse>;
    /**
     * 获取单个客户群
     *
     * @param headers - GetCrmGroupChatHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetCrmGroupChatResponse
     */
    getCrmGroupChatWithOptions(openConversationId: string, headers: GetCrmGroupChatHeaders, runtime: $Util.RuntimeOptions): Promise<GetCrmGroupChatResponse>;
    /**
     * 获取单个客户群
     * @returns GetCrmGroupChatResponse
     */
    getCrmGroupChat(openConversationId: string): Promise<GetCrmGroupChatResponse>;
    /**
     * 批量获取多个客户群
     *
     * @param request - GetCrmGroupChatMultiRequest
     * @param headers - GetCrmGroupChatMultiHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetCrmGroupChatMultiResponse
     */
    getCrmGroupChatMultiWithOptions(request: GetCrmGroupChatMultiRequest, headers: GetCrmGroupChatMultiHeaders, runtime: $Util.RuntimeOptions): Promise<GetCrmGroupChatMultiResponse>;
    /**
     * 批量获取多个客户群
     *
     * @param request - GetCrmGroupChatMultiRequest
     * @returns GetCrmGroupChatMultiResponse
     */
    getCrmGroupChatMulti(request: GetCrmGroupChatMultiRequest): Promise<GetCrmGroupChatMultiResponse>;
    /**
     * 获取单个客户群
     *
     * @param request - GetCrmGroupChatSingleRequest
     * @param headers - GetCrmGroupChatSingleHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetCrmGroupChatSingleResponse
     */
    getCrmGroupChatSingleWithOptions(request: GetCrmGroupChatSingleRequest, headers: GetCrmGroupChatSingleHeaders, runtime: $Util.RuntimeOptions): Promise<GetCrmGroupChatSingleResponse>;
    /**
     * 获取单个客户群
     *
     * @param request - GetCrmGroupChatSingleRequest
     * @returns GetCrmGroupChatSingleResponse
     */
    getCrmGroupChatSingle(request: GetCrmGroupChatSingleRequest): Promise<GetCrmGroupChatSingleResponse>;
    /**
     * 获取CRM表单权限配置
     *
     * @param request - GetCrmRolePermissionRequest
     * @param headers - GetCrmRolePermissionHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetCrmRolePermissionResponse
     */
    getCrmRolePermissionWithOptions(request: GetCrmRolePermissionRequest, headers: GetCrmRolePermissionHeaders, runtime: $Util.RuntimeOptions): Promise<GetCrmRolePermissionResponse>;
    /**
     * 获取CRM表单权限配置
     *
     * @param request - GetCrmRolePermissionRequest
     * @returns GetCrmRolePermissionResponse
     */
    getCrmRolePermission(request: GetCrmRolePermissionRequest): Promise<GetCrmRolePermissionResponse>;
    /**
     * 分页获取某个客户的客户动态
     *
     * @param request - GetCustomerTracksByRelationIdRequest
     * @param headers - GetCustomerTracksByRelationIdHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetCustomerTracksByRelationIdResponse
     */
    getCustomerTracksByRelationIdWithOptions(request: GetCustomerTracksByRelationIdRequest, headers: GetCustomerTracksByRelationIdHeaders, runtime: $Util.RuntimeOptions): Promise<GetCustomerTracksByRelationIdResponse>;
    /**
     * 分页获取某个客户的客户动态
     *
     * @param request - GetCustomerTracksByRelationIdRequest
     * @returns GetCustomerTracksByRelationIdResponse
     */
    getCustomerTracksByRelationId(request: GetCustomerTracksByRelationIdRequest): Promise<GetCustomerTracksByRelationIdResponse>;
    /**
     * 查询群组
     *
     * @param request - GetGroupSetRequest
     * @param headers - GetGroupSetHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetGroupSetResponse
     */
    getGroupSetWithOptions(request: GetGroupSetRequest, headers: GetGroupSetHeaders, runtime: $Util.RuntimeOptions): Promise<GetGroupSetResponse>;
    /**
     * 查询群组
     *
     * @param request - GetGroupSetRequest
     * @returns GetGroupSetResponse
     */
    getGroupSet(request: GetGroupSetRequest): Promise<GetGroupSetResponse>;
    /**
     * 获取内购商品信息
     *
     * @param request - GetInAppPurchaseGoodsRequest
     * @param headers - GetInAppPurchaseGoodsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetInAppPurchaseGoodsResponse
     */
    getInAppPurchaseGoodsWithOptions(request: GetInAppPurchaseGoodsRequest, headers: GetInAppPurchaseGoodsHeaders, runtime: $Util.RuntimeOptions): Promise<GetInAppPurchaseGoodsResponse>;
    /**
     * 获取内购商品信息
     *
     * @param request - GetInAppPurchaseGoodsRequest
     * @returns GetInAppPurchaseGoodsResponse
     */
    getInAppPurchaseGoods(request: GetInAppPurchaseGoodsRequest): Promise<GetInAppPurchaseGoodsResponse>;
    /**
     * 获取自定义导航挂靠节点结构
     *
     * @param request - GetNavigationCatalogRequest
     * @param headers - GetNavigationCatalogHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetNavigationCatalogResponse
     */
    getNavigationCatalogWithOptions(request: GetNavigationCatalogRequest, headers: GetNavigationCatalogHeaders, runtime: $Util.RuntimeOptions): Promise<GetNavigationCatalogResponse>;
    /**
     * 获取自定义导航挂靠节点结构
     *
     * @param request - GetNavigationCatalogRequest
     * @returns GetNavigationCatalogResponse
     */
    getNavigationCatalog(request: GetNavigationCatalogRequest): Promise<GetNavigationCatalogResponse>;
    /**
     * 根据指定条件查询自定义对象数据
     *
     * @param request - GetObjectDataRequest
     * @param headers - GetObjectDataHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetObjectDataResponse
     */
    getObjectDataWithOptions(request: GetObjectDataRequest, headers: GetObjectDataHeaders, runtime: $Util.RuntimeOptions): Promise<GetObjectDataResponse>;
    /**
     * 根据指定条件查询自定义对象数据
     *
     * @param request - GetObjectDataRequest
     * @returns GetObjectDataResponse
     */
    getObjectData(request: GetObjectDataRequest): Promise<GetObjectDataResponse>;
    /**
     * 获取关注服务窗的联系人信息，包括手机号、主企业等字段，调用前先进行用户授权
     *
     * @param headers - GetOfficialAccountContactInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetOfficialAccountContactInfoResponse
     */
    getOfficialAccountContactInfoWithOptions(userId: string, headers: GetOfficialAccountContactInfoHeaders, runtime: $Util.RuntimeOptions): Promise<GetOfficialAccountContactInfoResponse>;
    /**
     * 获取关注服务窗的联系人信息，包括手机号、主企业等字段，调用前先进行用户授权
     * @returns GetOfficialAccountContactInfoResponse
     */
    getOfficialAccountContactInfo(userId: string): Promise<GetOfficialAccountContactInfoResponse>;
    /**
     * 分页获取服务窗联系人信息
     *
     * @param request - GetOfficialAccountContactsRequest
     * @param headers - GetOfficialAccountContactsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetOfficialAccountContactsResponse
     */
    getOfficialAccountContactsWithOptions(request: GetOfficialAccountContactsRequest, headers: GetOfficialAccountContactsHeaders, runtime: $Util.RuntimeOptions): Promise<GetOfficialAccountContactsResponse>;
    /**
     * 分页获取服务窗联系人信息
     *
     * @param request - GetOfficialAccountContactsRequest
     * @returns GetOfficialAccountContactsResponse
     */
    getOfficialAccountContacts(request: GetOfficialAccountContactsRequest): Promise<GetOfficialAccountContactsResponse>;
    /**
     * 获取服务窗消息发送的结果
     *
     * @param request - GetOfficialAccountOTOMessageResultRequest
     * @param headers - GetOfficialAccountOTOMessageResultHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetOfficialAccountOTOMessageResultResponse
     */
    getOfficialAccountOTOMessageResultWithOptions(request: GetOfficialAccountOTOMessageResultRequest, headers: GetOfficialAccountOTOMessageResultHeaders, runtime: $Util.RuntimeOptions): Promise<GetOfficialAccountOTOMessageResultResponse>;
    /**
     * 获取服务窗消息发送的结果
     *
     * @param request - GetOfficialAccountOTOMessageResultRequest
     * @returns GetOfficialAccountOTOMessageResultResponse
     */
    getOfficialAccountOTOMessageResult(request: GetOfficialAccountOTOMessageResultRequest): Promise<GetOfficialAccountOTOMessageResultResponse>;
    /**
     * 获取某个和oa关联的表单的具体数据
     *
     * @param request - GetRelatedViewTabDataRequest
     * @param headers - GetRelatedViewTabDataHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetRelatedViewTabDataResponse
     */
    getRelatedViewTabDataWithOptions(request: GetRelatedViewTabDataRequest, headers: GetRelatedViewTabDataHeaders, runtime: $Util.RuntimeOptions): Promise<GetRelatedViewTabDataResponse>;
    /**
     * 获取某个和oa关联的表单的具体数据
     *
     * @param request - GetRelatedViewTabDataRequest
     * @returns GetRelatedViewTabDataResponse
     */
    getRelatedViewTabData(request: GetRelatedViewTabDataRequest): Promise<GetRelatedViewTabDataResponse>;
    /**
     * 获取和oa关联的表单tab信息
     *
     * @param request - GetRelatedViewTabMetaRequest
     * @param headers - GetRelatedViewTabMetaHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetRelatedViewTabMetaResponse
     */
    getRelatedViewTabMetaWithOptions(request: GetRelatedViewTabMetaRequest, headers: GetRelatedViewTabMetaHeaders, runtime: $Util.RuntimeOptions): Promise<GetRelatedViewTabMetaResponse>;
    /**
     * 获取和oa关联的表单tab信息
     *
     * @param request - GetRelatedViewTabMetaRequest
     * @returns GetRelatedViewTabMetaResponse
     */
    getRelatedViewTabMeta(request: GetRelatedViewTabMetaRequest): Promise<GetRelatedViewTabMetaResponse>;
    /**
     * 获取关系数据查重规则
     *
     * @param request - GetRelationUkSettingRequest
     * @param headers - GetRelationUkSettingHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetRelationUkSettingResponse
     */
    getRelationUkSettingWithOptions(request: GetRelationUkSettingRequest, headers: GetRelationUkSettingHeaders, runtime: $Util.RuntimeOptions): Promise<GetRelationUkSettingResponse>;
    /**
     * 获取关系数据查重规则
     *
     * @param request - GetRelationUkSettingRequest
     * @returns GetRelationUkSettingResponse
     */
    getRelationUkSetting(request: GetRelationUkSettingRequest): Promise<GetRelationUkSettingResponse>;
    /**
     * 加入群组
     *
     * @param request - JoinGroupSetRequest
     * @param headers - JoinGroupSetHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns JoinGroupSetResponse
     */
    joinGroupSetWithOptions(request: JoinGroupSetRequest, headers: JoinGroupSetHeaders, runtime: $Util.RuntimeOptions): Promise<JoinGroupSetResponse>;
    /**
     * 加入群组
     *
     * @param request - JoinGroupSetRequest
     * @returns JoinGroupSetResponse
     */
    joinGroupSet(request: JoinGroupSetRequest): Promise<JoinGroupSetResponse>;
    /**
     * 批量查询可用权益
     *
     * @param request - ListAvailableBenefitRequest
     * @param headers - ListAvailableBenefitHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListAvailableBenefitResponse
     */
    listAvailableBenefitWithOptions(request: ListAvailableBenefitRequest, headers: ListAvailableBenefitHeaders, runtime: $Util.RuntimeOptions): Promise<ListAvailableBenefitResponse>;
    /**
     * 批量查询可用权益
     *
     * @param request - ListAvailableBenefitRequest
     * @returns ListAvailableBenefitResponse
     */
    listAvailableBenefit(request: ListAvailableBenefitRequest): Promise<ListAvailableBenefitResponse>;
    /**
     * 批量查询license
     *
     * @param request - ListBenefitLicenseRequest
     * @param headers - ListBenefitLicenseHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListBenefitLicenseResponse
     */
    listBenefitLicenseWithOptions(request: ListBenefitLicenseRequest, headers: ListBenefitLicenseHeaders, runtime: $Util.RuntimeOptions): Promise<ListBenefitLicenseResponse>;
    /**
     * 批量查询license
     *
     * @param request - ListBenefitLicenseRequest
     * @returns ListBenefitLicenseResponse
     */
    listBenefitLicense(request: ListBenefitLicenseRequest): Promise<ListBenefitLicenseResponse>;
    /**
     * 获取线索标签列表
     *
     * @param headers - ListClueTagHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListClueTagResponse
     */
    listClueTagWithOptions(headers: ListClueTagHeaders, runtime: $Util.RuntimeOptions): Promise<ListClueTagResponse>;
    /**
     * 获取线索标签列表
     * @returns ListClueTagResponse
     */
    listClueTag(): Promise<ListClueTagResponse>;
    /**
     * 批量获取crm个人客户
     *
     * @param request - ListCrmPersonalCustomersRequest
     * @param headers - ListCrmPersonalCustomersHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListCrmPersonalCustomersResponse
     */
    listCrmPersonalCustomersWithOptions(request: ListCrmPersonalCustomersRequest, headers: ListCrmPersonalCustomersHeaders, runtime: $Util.RuntimeOptions): Promise<ListCrmPersonalCustomersResponse>;
    /**
     * 批量获取crm个人客户
     *
     * @param request - ListCrmPersonalCustomersRequest
     * @returns ListCrmPersonalCustomersResponse
     */
    listCrmPersonalCustomers(request: ListCrmPersonalCustomersRequest): Promise<ListCrmPersonalCustomersResponse>;
    /**
     * 查询群组列表
     *
     * @param request - ListGroupSetRequest
     * @param headers - ListGroupSetHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListGroupSetResponse
     */
    listGroupSetWithOptions(request: ListGroupSetRequest, headers: ListGroupSetHeaders, runtime: $Util.RuntimeOptions): Promise<ListGroupSetResponse>;
    /**
     * 查询群组列表
     *
     * @param request - ListGroupSetRequest
     * @returns ListGroupSetResponse
     */
    listGroupSet(request: ListGroupSetRequest): Promise<ListGroupSetResponse>;
    /**
     * 覆盖更新客户数据权限
     *
     * @param request - OverrideUpdateCustomerDataAuthRequest
     * @param headers - OverrideUpdateCustomerDataAuthHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns OverrideUpdateCustomerDataAuthResponse
     */
    overrideUpdateCustomerDataAuthWithOptions(request: OverrideUpdateCustomerDataAuthRequest, headers: OverrideUpdateCustomerDataAuthHeaders, runtime: $Util.RuntimeOptions): Promise<OverrideUpdateCustomerDataAuthResponse>;
    /**
     * 覆盖更新客户数据权限
     *
     * @param request - OverrideUpdateCustomerDataAuthRequest
     * @returns OverrideUpdateCustomerDataAuthResponse
     */
    overrideUpdateCustomerDataAuth(request: OverrideUpdateCustomerDataAuthRequest): Promise<OverrideUpdateCustomerDataAuthResponse>;
    /**
     * 分页获取全量客户数据，根据不同的类型可以获取私海个人客户、企业客户，以及公海个人客户、企业客户，最多一次可获取100条数据
     *
     * @param request - QueryAllCustomerRequest
     * @param headers - QueryAllCustomerHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryAllCustomerResponse
     */
    queryAllCustomerWithOptions(request: QueryAllCustomerRequest, headers: QueryAllCustomerHeaders, runtime: $Util.RuntimeOptions): Promise<QueryAllCustomerResponse>;
    /**
     * 分页获取全量客户数据，根据不同的类型可以获取私海个人客户、企业客户，以及公海个人客户、企业客户，最多一次可获取100条数据
     *
     * @param request - QueryAllCustomerRequest
     * @returns QueryAllCustomerResponse
     */
    queryAllCustomer(request: QueryAllCustomerRequest): Promise<QueryAllCustomerResponse>;
    /**
     * 批量查询企业客户动态
     *
     * @param request - QueryAllTracksRequest
     * @param headers - QueryAllTracksHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryAllTracksResponse
     */
    queryAllTracksWithOptions(request: QueryAllTracksRequest, headers: QueryAllTracksHeaders, runtime: $Util.RuntimeOptions): Promise<QueryAllTracksResponse>;
    /**
     * 批量查询企业客户动态
     *
     * @param request - QueryAllTracksRequest
     * @returns QueryAllTracksResponse
     */
    queryAllTracks(request: QueryAllTracksRequest): Promise<QueryAllTracksResponse>;
    /**
     * 查询客户管理应用管理员
     *
     * @param request - QueryAppManagerRequest
     * @param headers - QueryAppManagerHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryAppManagerResponse
     */
    queryAppManagerWithOptions(request: QueryAppManagerRequest, headers: QueryAppManagerHeaders, runtime: $Util.RuntimeOptions): Promise<QueryAppManagerResponse>;
    /**
     * 查询客户管理应用管理员
     *
     * @param request - QueryAppManagerRequest
     * @returns QueryAppManagerResponse
     */
    queryAppManager(request: QueryAppManagerRequest): Promise<QueryAppManagerResponse>;
    /**
     * 查询权益库存
     *
     * @param request - QueryBenefitInventoryRequest
     * @param headers - QueryBenefitInventoryHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryBenefitInventoryResponse
     */
    queryBenefitInventoryWithOptions(request: QueryBenefitInventoryRequest, headers: QueryBenefitInventoryHeaders, runtime: $Util.RuntimeOptions): Promise<QueryBenefitInventoryResponse>;
    /**
     * 查询权益库存
     *
     * @param request - QueryBenefitInventoryRequest
     * @returns QueryBenefitInventoryResponse
     */
    queryBenefitInventory(request: QueryBenefitInventoryRequest): Promise<QueryBenefitInventoryResponse>;
    /**
     * 查询线索跟进状态
     *
     * @param request - QueryClueFollowStatusRequest
     * @param headers - QueryClueFollowStatusHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryClueFollowStatusResponse
     */
    queryClueFollowStatusWithOptions(request: QueryClueFollowStatusRequest, headers: QueryClueFollowStatusHeaders, runtime: $Util.RuntimeOptions): Promise<QueryClueFollowStatusResponse>;
    /**
     * 查询线索跟进状态
     *
     * @param request - QueryClueFollowStatusRequest
     * @returns QueryClueFollowStatusResponse
     */
    queryClueFollowStatus(request: QueryClueFollowStatusRequest): Promise<QueryClueFollowStatusResponse>;
    /**
     * 查询客户群
     *
     * @param request - QueryCrmGroupChatsRequest
     * @param headers - QueryCrmGroupChatsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryCrmGroupChatsResponse
     */
    queryCrmGroupChatsWithOptions(request: QueryCrmGroupChatsRequest, headers: QueryCrmGroupChatsHeaders, runtime: $Util.RuntimeOptions): Promise<QueryCrmGroupChatsResponse>;
    /**
     * 查询客户群
     *
     * @param request - QueryCrmGroupChatsRequest
     * @returns QueryCrmGroupChatsResponse
     */
    queryCrmGroupChats(request: QueryCrmGroupChatsRequest): Promise<QueryCrmGroupChatsResponse>;
    /**
     * 根据指定查询条件批量获取客户数据
     *
     * @param request - QueryCrmPersonalCustomerRequest
     * @param headers - QueryCrmPersonalCustomerHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryCrmPersonalCustomerResponse
     */
    queryCrmPersonalCustomerWithOptions(request: QueryCrmPersonalCustomerRequest, headers: QueryCrmPersonalCustomerHeaders, runtime: $Util.RuntimeOptions): Promise<QueryCrmPersonalCustomerResponse>;
    /**
     * 根据指定查询条件批量获取客户数据
     *
     * @param request - QueryCrmPersonalCustomerRequest
     * @returns QueryCrmPersonalCustomerResponse
     */
    queryCrmPersonalCustomer(request: QueryCrmPersonalCustomerRequest): Promise<QueryCrmPersonalCustomerResponse>;
    /**
     * 查询客户模板启用类型
     *
     * @param request - QueryCustomerBizTypeRequest
     * @param headers - QueryCustomerBizTypeHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryCustomerBizTypeResponse
     */
    queryCustomerBizTypeWithOptions(request: QueryCustomerBizTypeRequest, headers: QueryCustomerBizTypeHeaders, runtime: $Util.RuntimeOptions): Promise<QueryCustomerBizTypeResponse>;
    /**
     * 查询客户模板启用类型
     *
     * @param request - QueryCustomerBizTypeRequest
     * @returns QueryCustomerBizTypeResponse
     */
    queryCustomerBizType(request: QueryCustomerBizTypeRequest): Promise<QueryCustomerBizTypeResponse>;
    /**
     * 营销服融合三方全局信息
     *
     * @param request - QueryGlobalInfoRequest
     * @param headers - QueryGlobalInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryGlobalInfoResponse
     */
    queryGlobalInfoWithOptions(request: QueryGlobalInfoRequest, headers: QueryGlobalInfoHeaders, runtime: $Util.RuntimeOptions): Promise<QueryGlobalInfoResponse>;
    /**
     * 营销服融合三方全局信息
     *
     * @param request - QueryGlobalInfoRequest
     * @returns QueryGlobalInfoResponse
     */
    queryGlobalInfo(request: QueryGlobalInfoRequest): Promise<QueryGlobalInfoResponse>;
    /**
     * 查询用户是否有应用管理员权限
     *
     * @param request - QueryHasAppPermissionRequest
     * @param headers - QueryHasAppPermissionHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryHasAppPermissionResponse
     */
    queryHasAppPermissionWithOptions(request: QueryHasAppPermissionRequest, headers: QueryHasAppPermissionHeaders, runtime: $Util.RuntimeOptions): Promise<QueryHasAppPermissionResponse>;
    /**
     * 查询用户是否有应用管理员权限
     *
     * @param request - QueryHasAppPermissionRequest
     * @returns QueryHasAppPermissionResponse
     */
    queryHasAppPermission(request: QueryHasAppPermissionRequest): Promise<QueryHasAppPermissionResponse>;
    /**
     * 查询服务窗用户基础信息
     *
     * @param request - QueryOfficialAccountUserBasicInfoRequest
     * @param headers - QueryOfficialAccountUserBasicInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryOfficialAccountUserBasicInfoResponse
     */
    queryOfficialAccountUserBasicInfoWithOptions(request: QueryOfficialAccountUserBasicInfoRequest, headers: QueryOfficialAccountUserBasicInfoHeaders, runtime: $Util.RuntimeOptions): Promise<QueryOfficialAccountUserBasicInfoResponse>;
    /**
     * 查询服务窗用户基础信息
     *
     * @param request - QueryOfficialAccountUserBasicInfoRequest
     * @returns QueryOfficialAccountUserBasicInfoResponse
     */
    queryOfficialAccountUserBasicInfo(request: QueryOfficialAccountUserBasicInfoRequest): Promise<QueryOfficialAccountUserBasicInfoResponse>;
    /**
     * 根据targetId查询关系数据
     *
     * @param request - QueryRelationDatasByTargetIdRequest
     * @param headers - QueryRelationDatasByTargetIdHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryRelationDatasByTargetIdResponse
     */
    queryRelationDatasByTargetIdWithOptions(targetId: string, request: QueryRelationDatasByTargetIdRequest, headers: QueryRelationDatasByTargetIdHeaders, runtime: $Util.RuntimeOptions): Promise<QueryRelationDatasByTargetIdResponse>;
    /**
     * 根据targetId查询关系数据
     *
     * @param request - QueryRelationDatasByTargetIdRequest
     * @returns QueryRelationDatasByTargetIdResponse
     */
    queryRelationDatasByTargetId(targetId: string, request: QueryRelationDatasByTargetIdRequest): Promise<QueryRelationDatasByTargetIdResponse>;
    /**
     * 服务窗消息撤回
     *
     * @param request - RecallOfficialAccountOTOMessageRequest
     * @param headers - RecallOfficialAccountOTOMessageHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns RecallOfficialAccountOTOMessageResponse
     */
    recallOfficialAccountOTOMessageWithOptions(request: RecallOfficialAccountOTOMessageRequest, headers: RecallOfficialAccountOTOMessageHeaders, runtime: $Util.RuntimeOptions): Promise<RecallOfficialAccountOTOMessageResponse>;
    /**
     * 服务窗消息撤回
     *
     * @param request - RecallOfficialAccountOTOMessageRequest
     * @returns RecallOfficialAccountOTOMessageResponse
     */
    recallOfficialAccountOTOMessage(request: RecallOfficialAccountOTOMessageRequest): Promise<RecallOfficialAccountOTOMessageResponse>;
    /**
     * 保存license
     *
     * @param request - SaveBenefitLicenseRequest
     * @param headers - SaveBenefitLicenseHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SaveBenefitLicenseResponse
     */
    saveBenefitLicenseWithOptions(request: SaveBenefitLicenseRequest, headers: SaveBenefitLicenseHeaders, runtime: $Util.RuntimeOptions): Promise<SaveBenefitLicenseResponse>;
    /**
     * 保存license
     *
     * @param request - SaveBenefitLicenseRequest
     * @returns SaveBenefitLicenseResponse
     */
    saveBenefitLicense(request: SaveBenefitLicenseRequest): Promise<SaveBenefitLicenseResponse>;
    /**
     * 服务窗单发接口，指定消息接收人发送
     *
     * @param request - SendOfficialAccountOTOMessageRequest
     * @param headers - SendOfficialAccountOTOMessageHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SendOfficialAccountOTOMessageResponse
     */
    sendOfficialAccountOTOMessageWithOptions(request: SendOfficialAccountOTOMessageRequest, headers: SendOfficialAccountOTOMessageHeaders, runtime: $Util.RuntimeOptions): Promise<SendOfficialAccountOTOMessageResponse>;
    /**
     * 服务窗单发接口，指定消息接收人发送
     *
     * @param request - SendOfficialAccountOTOMessageRequest
     * @returns SendOfficialAccountOTOMessageResponse
     */
    sendOfficialAccountOTOMessage(request: SendOfficialAccountOTOMessageRequest): Promise<SendOfficialAccountOTOMessageResponse>;
    /**
     * 个人应用发送服务窗消息
     *
     * @param request - SendOfficialAccountSNSMessageRequest
     * @param headers - SendOfficialAccountSNSMessageHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SendOfficialAccountSNSMessageResponse
     */
    sendOfficialAccountSNSMessageWithOptions(request: SendOfficialAccountSNSMessageRequest, headers: SendOfficialAccountSNSMessageHeaders, runtime: $Util.RuntimeOptions): Promise<SendOfficialAccountSNSMessageResponse>;
    /**
     * 个人应用发送服务窗消息
     *
     * @param request - SendOfficialAccountSNSMessageRequest
     * @returns SendOfficialAccountSNSMessageResponse
     */
    sendOfficialAccountSNSMessage(request: SendOfficialAccountSNSMessageRequest): Promise<SendOfficialAccountSNSMessageResponse>;
    /**
     * 服务窗消息群发
     *
     * @param request - ServiceWindowMessageBatchPushRequest
     * @param headers - ServiceWindowMessageBatchPushHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ServiceWindowMessageBatchPushResponse
     */
    serviceWindowMessageBatchPushWithOptions(request: ServiceWindowMessageBatchPushRequest, headers: ServiceWindowMessageBatchPushHeaders, runtime: $Util.RuntimeOptions): Promise<ServiceWindowMessageBatchPushResponse>;
    /**
     * 服务窗消息群发
     *
     * @param request - ServiceWindowMessageBatchPushRequest
     * @returns ServiceWindowMessageBatchPushResponse
     */
    serviceWindowMessageBatchPush(request: ServiceWindowMessageBatchPushRequest): Promise<ServiceWindowMessageBatchPushResponse>;
    /**
     * 二阶段提交权益库存结果
     *
     * @param request - TwoPhaseCommitInventoryRequest
     * @param headers - TwoPhaseCommitInventoryHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns TwoPhaseCommitInventoryResponse
     */
    twoPhaseCommitInventoryWithOptions(request: TwoPhaseCommitInventoryRequest, headers: TwoPhaseCommitInventoryHeaders, runtime: $Util.RuntimeOptions): Promise<TwoPhaseCommitInventoryResponse>;
    /**
     * 二阶段提交权益库存结果
     *
     * @param request - TwoPhaseCommitInventoryRequest
     * @returns TwoPhaseCommitInventoryResponse
     */
    twoPhaseCommitInventory(request: TwoPhaseCommitInventoryRequest): Promise<TwoPhaseCommitInventoryResponse>;
    /**
     * 更新crm个人客户（或企业客户）
     *
     * @param request - UpdateCrmPersonalCustomerRequest
     * @param headers - UpdateCrmPersonalCustomerHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateCrmPersonalCustomerResponse
     */
    updateCrmPersonalCustomerWithOptions(request: UpdateCrmPersonalCustomerRequest, headers: UpdateCrmPersonalCustomerHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateCrmPersonalCustomerResponse>;
    /**
     * 更新crm个人客户（或企业客户）
     *
     * @param request - UpdateCrmPersonalCustomerRequest
     * @returns UpdateCrmPersonalCustomerResponse
     */
    updateCrmPersonalCustomer(request: UpdateCrmPersonalCustomerRequest): Promise<UpdateCrmPersonalCustomerResponse>;
    /**
     * 更新客户模板类型
     *
     * @param request - UpdateCustomerBizTypeRequest
     * @param headers - UpdateCustomerBizTypeHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateCustomerBizTypeResponse
     */
    updateCustomerBizTypeWithOptions(request: UpdateCustomerBizTypeRequest, headers: UpdateCustomerBizTypeHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateCustomerBizTypeResponse>;
    /**
     * 更新客户模板类型
     *
     * @param request - UpdateCustomerBizTypeRequest
     * @returns UpdateCustomerBizTypeResponse
     */
    updateCustomerBizType(request: UpdateCustomerBizTypeRequest): Promise<UpdateCustomerBizTypeResponse>;
    /**
     * 更新群组
     *
     * @param request - UpdateGroupSetRequest
     * @param headers - UpdateGroupSetHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateGroupSetResponse
     */
    updateGroupSetWithOptions(request: UpdateGroupSetRequest, headers: UpdateGroupSetHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateGroupSetResponse>;
    /**
     * 更新群组
     *
     * @param request - UpdateGroupSetRequest
     * @returns UpdateGroupSetResponse
     */
    updateGroupSet(request: UpdateGroupSetRequest): Promise<UpdateGroupSetResponse>;
    /**
     * 增量同步导航数据
     *
     * @param request - UpdateMenuDataRequest
     * @param headers - UpdateMenuDataHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateMenuDataResponse
     */
    updateMenuDataWithOptions(request: UpdateMenuDataRequest, headers: UpdateMenuDataHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateMenuDataResponse>;
    /**
     * 增量同步导航数据
     *
     * @param request - UpdateMenuDataRequest
     * @returns UpdateMenuDataResponse
     */
    updateMenuData(request: UpdateMenuDataRequest): Promise<UpdateMenuDataResponse>;
    /**
     * 模型表结构更新字段
     *
     * @param request - UpdateMetaModelFieldRequest
     * @param headers - UpdateMetaModelFieldHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateMetaModelFieldResponse
     */
    updateMetaModelFieldWithOptions(request: UpdateMetaModelFieldRequest, headers: UpdateMetaModelFieldHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateMetaModelFieldResponse>;
    /**
     * 模型表结构更新字段
     *
     * @param request - UpdateMetaModelFieldRequest
     * @returns UpdateMetaModelFieldResponse
     */
    updateMetaModelField(request: UpdateMetaModelFieldRequest): Promise<UpdateMetaModelFieldResponse>;
    /**
     * 关系模型表结构更新字段
     *
     * @param request - UpdateRelationMetaFieldRequest
     * @param headers - UpdateRelationMetaFieldHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateRelationMetaFieldResponse
     */
    updateRelationMetaFieldWithOptions(request: UpdateRelationMetaFieldRequest, headers: UpdateRelationMetaFieldHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateRelationMetaFieldResponse>;
    /**
     * 关系模型表结构更新字段
     *
     * @param request - UpdateRelationMetaFieldRequest
     * @returns UpdateRelationMetaFieldResponse
     */
    updateRelationMetaField(request: UpdateRelationMetaFieldRequest): Promise<UpdateRelationMetaFieldResponse>;
}
