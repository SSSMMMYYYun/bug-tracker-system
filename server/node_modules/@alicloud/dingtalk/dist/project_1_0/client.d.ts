/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class AddProjectMemberHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddProjectMemberRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    userIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddProjectMemberResponseBody extends $tea.Model {
    result?: AddProjectMemberResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddProjectMemberResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddProjectMemberResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ArchiveProjectHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ArchiveProjectResponseBody extends $tea.Model {
    result?: ArchiveProjectResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ArchiveProjectResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ArchiveProjectResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ArchiveTaskHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ArchiveTaskResponseBody extends $tea.Model {
    result?: ArchiveTaskResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ArchiveTaskResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ArchiveTaskResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOrganizationTaskHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOrganizationTaskRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 明天12点前完成周报撰写
     */
    content?: string;
    /**
     * @example
     * 2021-08-13T07:36:50.318Z
     */
    createTime?: string;
    /**
     * @example
     * false
     *
     * **if can be null:**
     * true
     */
    disableActivity?: boolean;
    /**
     * @example
     * false
     *
     * **if can be null:**
     * true
     */
    disableNotification?: boolean;
    /**
     * @example
     * 2021-08-13T07:36:50.318Z
     */
    dueDate?: string;
    /**
     * @example
     * 173xxxx
     */
    executorId?: string;
    involveMembers?: string[];
    /**
     * @example
     * 我是一条任务备注
     */
    note?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * -10
     */
    priority?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * members
     */
    visible?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOrganizationTaskResponseBody extends $tea.Model {
    result?: CreateOrganizationTaskResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOrganizationTaskResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateOrganizationTaskResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreatePlanTimeHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreatePlanTimeRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2022-09-05
     */
    endDate?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123456
     */
    executorId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    includesHolidays?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    isDuration?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 63186e54e07f18003fea6b90
     */
    objectId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * task
     */
    objectType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 3600000
     */
    planTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2022-09-05
     */
    startDate?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123456
     */
    submitterId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * organization
     */
    tenantType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreatePlanTimeResponseBody extends $tea.Model {
    result?: CreatePlanTimeResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreatePlanTimeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreatePlanTimeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateProjectHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateProjectRequest extends $tea.Model {
    /**
     * @example
     * 项目1
     */
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateProjectResponseBody extends $tea.Model {
    result?: CreateProjectResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateProjectResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateProjectResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateProjectByTemplateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateProjectByTemplateRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 项目1
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 578cae9dbf83e5xxxx
     */
    templateId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateProjectByTemplateResponseBody extends $tea.Model {
    result?: CreateProjectByTemplateResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateProjectByTemplateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateProjectByTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateProjectCustomfieldStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateProjectCustomfieldStatusRequest extends $tea.Model {
    /**
     * @example
     * 63a5301e420637003f5dxxxx
     */
    customFieldId?: string;
    /**
     * @example
     * 64a5301e420637003f5dxxxx
     */
    customFieldInstanceId?: string;
    /**
     * @example
     * 项目进度
     */
    customFieldName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: CreateProjectCustomfieldStatusRequestValue[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateProjectCustomfieldStatusResponseBody extends $tea.Model {
    result?: CreateProjectCustomfieldStatusResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateProjectCustomfieldStatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateProjectCustomfieldStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTaskHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTaskRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 任务标题
     */
    content?: string;
    customfields?: CreateTaskRequestCustomfields[];
    /**
     * @example
     * 2022-06-13T07:36:50.318Z
     */
    dueDate?: string;
    /**
     * @example
     * 173xxxx
     */
    executorId?: string;
    /**
     * @example
     * 我是一条任务备注
     */
    note?: string;
    /**
     * @example
     * 62c25e3b376exxxxxx
     */
    parentTaskId?: string;
    /**
     * @example
     * -10
     */
    priority?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 62c25e3b376exxxxxx
     */
    projectId?: string;
    /**
     * @example
     * 62c25e3b376exxxxxx
     */
    scenariofieldconfigId?: string;
    /**
     * @example
     * 62c25e3b376exxxxxx
     */
    stageId?: string;
    /**
     * @example
     * 2022-06-13T07:36:50.318Z
     */
    startDate?: string;
    /**
     * @example
     * members
     */
    visible?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTaskResponseBody extends $tea.Model {
    result?: CreateTaskResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTaskResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateTaskResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTaskObjectLinkHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTaskObjectLinkRequest extends $tea.Model {
    linkedData?: CreateTaskObjectLinkRequestLinkedData;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTaskObjectLinkResponseBody extends $tea.Model {
    result?: CreateTaskObjectLinkResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTaskObjectLinkResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateTaskObjectLinkResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateWorkTimeHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateWorkTimeRequest extends $tea.Model {
    description?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2022-09-05
     */
    endDate?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123456
     */
    executorId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    includesHolidays?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    isDuration?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 63186e54e07f18003fea6b90
     */
    objectId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * task
     */
    objectType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2022-09-05
     */
    startDate?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123456
     */
    submitterId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * organization
     */
    tenantType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateWorkTimeResponseBody extends $tea.Model {
    result?: CreateWorkTimeResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateWorkTimeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateWorkTimeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateWorkTimeApproveHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateWorkTimeApproveRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    workTimeIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateWorkTimeApproveResponseBody extends $tea.Model {
    /**
     * @example
     * 执行成功
     */
    message?: string;
    /**
     * @example
     * 1234
     */
    requestId?: string;
    result?: CreateWorkTimeApproveResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateWorkTimeApproveResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateWorkTimeApproveResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteProjectMemberHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteProjectMemberRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    userIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteProjectMemberResponseBody extends $tea.Model {
    result?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteProjectMemberResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteProjectMemberResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteTaskHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteTaskResponseBody extends $tea.Model {
    result?: {
        [key: string]: string;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteTaskResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteTaskResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetDeptsByOrgIdHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    dingAccessTokenType?: string;
    dingOrgId?: string;
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetDeptsByOrgIdRequest extends $tea.Model {
    maxResults?: number;
    nextToken?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetDeptsByOrgIdResponseBody extends $tea.Model {
    deptList?: GetDeptsByOrgIdResponseBodyDeptList[];
    hasMore?: boolean;
    maxResults?: number;
    nextToken?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetDeptsByOrgIdResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetDeptsByOrgIdResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetEmpsByOrgIdHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    dingAccessTokenType?: string;
    dingIsvOrgId?: string;
    dingOrgId?: string;
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetEmpsByOrgIdRequest extends $tea.Model {
    maxResults?: number;
    needDept?: boolean;
    nextToken?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetEmpsByOrgIdResponseBody extends $tea.Model {
    empList?: GetEmpsByOrgIdResponseBodyEmpList[];
    hasMore?: boolean;
    nextToken?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetEmpsByOrgIdResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetEmpsByOrgIdResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOrganizatioTaskByIdsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOrganizatioTaskByIdsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 62a010c153c2ef5244xxxx, 62a010c153c2ef524xxxxxx
     */
    taskIds?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOrganizatioTaskByIdsResponseBody extends $tea.Model {
    result?: GetOrganizatioTaskByIdsResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOrganizatioTaskByIdsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetOrganizatioTaskByIdsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOrganizationPriorityListHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOrganizationPriorityListResponseBody extends $tea.Model {
    result?: GetOrganizationPriorityListResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOrganizationPriorityListResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetOrganizationPriorityListResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOrganizationTaskHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOrganizationTaskResponseBody extends $tea.Model {
    result?: GetOrganizationTaskResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOrganizationTaskResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetOrganizationTaskResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectGroupHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectGroupRequest extends $tea.Model {
    /**
     * @example
     * 10
     */
    pageSize?: number;
    /**
     * @example
     * 01525006000512579xxx
     */
    viewerId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectGroupResponseBody extends $tea.Model {
    result?: GetProjectGroupResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectGroupResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetProjectGroupResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectMemebersHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectMemebersRequest extends $tea.Model {
    /**
     * @example
     * 10
     */
    maxResults?: number;
    /**
     * @example
     * 60a2187eb72xxxxxxx
     */
    projectRoleId?: string;
    /**
     * @example
     * 55
     */
    skip?: number;
    /**
     * @example
     * 60a2187eb72xxxxxxx,60a2187eb72xxxxxxx
     */
    userIds?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectMemebersResponseBody extends $tea.Model {
    result?: GetProjectMemebersResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectMemebersResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetProjectMemebersResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectStatusListHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectStatusListResponseBody extends $tea.Model {
    result?: GetProjectStatusListResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectStatusListResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetProjectStatusListResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTaskByIdsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTaskByIdsRequest extends $tea.Model {
    /**
     * @example
     * 60a2187eb72xxxxxxx
     */
    parentTaskId?: string;
    /**
     * @example
     * 60a2187eb72xxxxxxx
     */
    taskId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTaskByIdsResponseBody extends $tea.Model {
    result?: GetTaskByIdsResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTaskByIdsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetTaskByIdsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTbOrgIdByDingOrgIdHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTbOrgIdByDingOrgIdRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0175xxxx
     */
    optUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTbOrgIdByDingOrgIdResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: GetTbOrgIdByDingOrgIdResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTbOrgIdByDingOrgIdResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetTbOrgIdByDingOrgIdResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTbProjectGrayHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    dingAccessTokenType?: string;
    dingCorpId?: string;
    dingIsvOrgId?: string;
    dingOrgId?: string;
    dingSuiteKey?: string;
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTbProjectGrayRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * project_teambition
     */
    label?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTbProjectGrayResponseBody extends $tea.Model {
    requestId?: string;
    /**
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTbProjectGrayResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetTbProjectGrayResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTbProjectSourceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    dingAccessTokenType?: string;
    dingCorpId?: string;
    dingIsvOrgId?: string;
    dingOrgId?: string;
    dingSuiteKey?: string;
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTbProjectSourceResponseBody extends $tea.Model {
    /**
     * @example
     * ”0“
     */
    installSource?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTbProjectSourceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetTbProjectSourceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTbUserIdByStaffIdHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTbUserIdByStaffIdRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0175xxxx
     */
    optUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0175xxxx
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTbUserIdByStaffIdResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: GetTbUserIdByStaffIdResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTbUserIdByStaffIdResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetTbUserIdByStaffIdResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserJoinedProjectHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserJoinedProjectRequest extends $tea.Model {
    /**
     * @example
     * 10
     */
    maxResults?: number;
    /**
     * @example
     * f279e812xxxxxx
     */
    nextToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserJoinedProjectResponseBody extends $tea.Model {
    /**
     * @example
     * f279e812xxxxxx
     */
    nextToken?: string;
    result?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserJoinedProjectResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetUserJoinedProjectResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProjectHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProjectRequest extends $tea.Model {
    /**
     * @example
     * 10
     */
    maxResults?: number;
    /**
     * @example
     * 测试项目
     */
    name?: string;
    /**
     * @example
     * f279e812xxxxxx
     */
    nextToken?: string;
    /**
     * @example
     * 60a2187eb72xxxxxxx
     */
    projectIds?: string;
    /**
     * @example
     * 60a2187eb72xxxxxxx
     */
    sourceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProjectResponseBody extends $tea.Model {
    /**
     * @example
     * "10"
     */
    nextToken?: string;
    /**
     * @example
     * c825b82b-a87a-49f3-a8b2-7a948b979975
     */
    requestId?: string;
    result?: QueryProjectResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProjectResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryProjectResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTaskOfProjectHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTaskOfProjectRequest extends $tea.Model {
    /**
     * @example
     * 10
     */
    maxResults?: number;
    /**
     * @example
     * f279e812-e431-428d-846d-cxxxxxx
     */
    nextToken?: string;
    /**
     * @example
     * involveMembers NOT IN ["0612xx"] AND executorId="057xxx" AND content~标题2
     */
    query?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTaskOfProjectResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * f279e812-e431-428d-846d-cxxxxxx
     */
    nextToken?: string;
    result?: QueryTaskOfProjectResponseBodyResult[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 35
     */
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTaskOfProjectResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryTaskOfProjectResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SeachTaskStageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SeachTaskStageRequest extends $tea.Model {
    /**
     * @example
     * 10
     */
    maxResults?: number;
    /**
     * @example
     * f279e812xxxxxx
     */
    nextToken?: string;
    /**
     * @example
     * 自定义列1
     */
    query?: string;
    /**
     * @example
     * 60a2187eb72xxxxxxx
     */
    taskListId?: string;
    /**
     * @example
     * 60a2187eb72xxxxxxx,60a2187eb72xxxxxxx
     */
    taskStageIds?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SeachTaskStageResponseBody extends $tea.Model {
    /**
     * @example
     * f279e812-e431-428d-846d-cxxxxxx
     */
    nextToken?: string;
    result?: SeachTaskStageResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SeachTaskStageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SeachTaskStageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchAllTasksByTqlHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchAllTasksByTqlRequest extends $tea.Model {
    /**
     * @example
     * 50
     */
    maxResults?: number;
    /**
     * @example
     * DXF1ZXJ5QW5kRmV0Y2gBAAAAAAKC9p4WVjNKbUstaldRX3lOOHNBbElzcjA5Zw==
     */
    nextToken?: string;
    /**
     * @example
     * isDone = false
     */
    tql?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchAllTasksByTqlResponseBody extends $tea.Model {
    /**
     * @example
     * f279e812-e431-428d-846d-cxxxxxx
     */
    nextToken?: string;
    /**
     * @example
     * 60BEE277-347B-1D5E-B6A4-E90788531911
     */
    requestId?: string;
    result?: string[];
    /**
     * @example
     * 1
     */
    totalSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchAllTasksByTqlResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SearchAllTasksByTqlResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchOranizationCustomfieldHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchOranizationCustomfieldRequest extends $tea.Model {
    /**
     * @example
     * 60a2187eb72xxxxxxx
     */
    customFieldIds?: string;
    /**
     * @example
     * 60a2187eb72xxxxxxx
     */
    instanceIds?: string;
    /**
     * @example
     * 10
     */
    maxResults?: number;
    /**
     * @example
     * f279e812xxxxxx
     */
    nextToken?: string;
    /**
     * @example
     * 60a2187eb72xxxxxxx,60a2187eb72xxxxxxx
     */
    projectIds?: string;
    /**
     * @example
     * 自定义字段1
     */
    query?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchOranizationCustomfieldResponseBody extends $tea.Model {
    /**
     * @example
     * f279e812-e431-428d-846d-cxxxxxx
     */
    nextToken?: string;
    result?: SearchOranizationCustomfieldResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchOranizationCustomfieldResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SearchOranizationCustomfieldResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchProjectCustomfieldHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchProjectCustomfieldRequest extends $tea.Model {
    /**
     * @example
     * 60a2187eb72xxxxxxx,60a2187eb72xxxxxxx
     */
    customFieldIds?: string;
    /**
     * @example
     * 60a2187eb72xxxxxxx,60a2187eb72xxxxxxx
     */
    instanceIds?: string;
    /**
     * @example
     * 10
     */
    maxResults?: number;
    /**
     * @example
     * f279e812xxxxxx
     */
    nextToken?: string;
    /**
     * @example
     * 自定义字段名1
     */
    query?: string;
    /**
     * @example
     * 60a2187eb72xxxxxxx
     */
    scenarioFieldConfigId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchProjectCustomfieldResponseBody extends $tea.Model {
    /**
     * @example
     * f279e812-e431-428d-846d-cxxxxxx
     */
    nextToken?: string;
    result?: SearchProjectCustomfieldResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchProjectCustomfieldResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SearchProjectCustomfieldResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchProjectTemplateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchProjectTemplateRequest extends $tea.Model {
    /**
     * @example
     * 模板1
     */
    keyword?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchProjectTemplateResponseBody extends $tea.Model {
    result?: SearchProjectTemplateResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchProjectTemplateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SearchProjectTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchTaskFlowHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchTaskFlowRequest extends $tea.Model {
    /**
     * @example
     * 10
     */
    maxResults?: number;
    /**
     * @example
     * f279e812xxxxxx
     */
    nextToken?: string;
    /**
     * @example
     * 工作流1
     */
    query?: string;
    /**
     * @example
     * 60a2187eb72xxxxxxx,60a2187eb72xxxxxxx
     */
    taskflowIds?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchTaskFlowResponseBody extends $tea.Model {
    result?: SearchTaskFlowResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchTaskFlowResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SearchTaskFlowResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchTaskListHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchTaskListRequest extends $tea.Model {
    /**
     * @example
     * 10
     */
    maxResults?: number;
    /**
     * @example
     * f279e812xxxxxx
     */
    nextToken?: string;
    /**
     * @example
     * 自定义分组1
     */
    query?: string;
    /**
     * @example
     * 60a2187eb72xxxxxxx,60a2187eb72xxxxxxx
     */
    taskListIds?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchTaskListResponseBody extends $tea.Model {
    /**
     * @example
     * f279e812-e431-428d-846d-cxxxxxx
     */
    nextToken?: string;
    result?: SearchTaskListResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchTaskListResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SearchTaskListResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchTaskflowStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchTaskflowStatusRequest extends $tea.Model {
    /**
     * @example
     * 10
     */
    maxResults?: number;
    /**
     * @example
     * f279e812xxxxxx
     */
    nextToken?: string;
    /**
     * @example
     * 未开始
     */
    query?: string;
    /**
     * @example
     * 60a2187eb72xxxxxxx,60a2187eb72xxxxxxx
     */
    tfIds?: string;
    /**
     * @example
     * 60a2187eb72xxxxxxx,60a2187eb72xxxxxxx
     */
    tfsIds?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchTaskflowStatusResponseBody extends $tea.Model {
    result?: SearchTaskflowStatusResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchTaskflowStatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SearchTaskflowStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchUserTaskHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchUserTaskRequest extends $tea.Model {
    maxResults?: number;
    nextToken?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    roleTypes?: string;
    tql?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchUserTaskResponseBody extends $tea.Model {
    /**
     * @example
     * DXF1ZXJ5QW5kRmV0Y2gBAAAAAAbMXT4WVjNKbUstaldRX3lOOHNBbElzcjA5Zw==
     */
    nextToken?: string;
    /**
     * @example
     * F86698E9-E4F5-1231-AC99-2ECFC0D37BDE
     */
    requestId?: string;
    result?: SearchUserTaskResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchUserTaskResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SearchUserTaskResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SuspendProjectHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SuspendProjectResponseBody extends $tea.Model {
    result?: SuspendProjectResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SuspendProjectResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SuspendProjectResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UnSuspendProjectHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UnSuspendProjectResponseBody extends $tea.Model {
    result?: UnSuspendProjectResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UnSuspendProjectResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UnSuspendProjectResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCustomfieldValueHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCustomfieldValueRequest extends $tea.Model {
    /**
     * @example
     * 62a010c153c2ef52xxxx
     */
    customFieldId?: string;
    /**
     * @example
     * 自定义字段-文本
     */
    customFieldName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: UpdateCustomfieldValueRequestValue[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCustomfieldValueResponseBody extends $tea.Model {
    result?: UpdateCustomfieldValueResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCustomfieldValueResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateCustomfieldValueResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskContentHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskContentRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 后天交周报
     */
    content?: string;
    /**
     * @example
     * true
     */
    disableActivity?: boolean;
    /**
     * @example
     * true
     */
    disableNotification?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskContentResponseBody extends $tea.Model {
    result?: UpdateOrganizationTaskContentResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskContentResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateOrganizationTaskContentResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskDueDateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskDueDateRequest extends $tea.Model {
    /**
     * @example
     * true
     */
    disableActivity?: boolean;
    /**
     * @example
     * true
     */
    disableNotification?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2022-06-13T03:30:42.830Z
     */
    dueDate?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskDueDateResponseBody extends $tea.Model {
    result?: UpdateOrganizationTaskDueDateResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskDueDateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateOrganizationTaskDueDateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskExecutorHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskExecutorRequest extends $tea.Model {
    disableActivity?: boolean;
    disableNotification?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    executorId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskExecutorResponseBody extends $tea.Model {
    result?: UpdateOrganizationTaskExecutorResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskExecutorResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateOrganizationTaskExecutorResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskInvolveMembersHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskInvolveMembersRequest extends $tea.Model {
    addInvolvers?: string[];
    delInvolvers?: string[];
    /**
     * @example
     * true
     */
    disableActivity?: boolean;
    /**
     * @example
     * true
     */
    disableNotification?: boolean;
    involveMembers?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskInvolveMembersResponseBody extends $tea.Model {
    result?: UpdateOrganizationTaskInvolveMembersResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskInvolveMembersResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateOrganizationTaskInvolveMembersResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskNoteHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskNoteRequest extends $tea.Model {
    /**
     * @example
     * true
     */
    disableActivity?: boolean;
    /**
     * @example
     * true
     */
    disableNotification?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 我是一条备注哦
     */
    note?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskNoteResponseBody extends $tea.Model {
    result?: UpdateOrganizationTaskNoteResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskNoteResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateOrganizationTaskNoteResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskPriorityHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskPriorityRequest extends $tea.Model {
    /**
     * @example
     * true
     */
    disableActivity?: boolean;
    /**
     * @example
     * true
     */
    disableNotification?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * -10
     */
    priority?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskPriorityResponseBody extends $tea.Model {
    result?: UpdateOrganizationTaskPriorityResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskPriorityResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateOrganizationTaskPriorityResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskStatusRequest extends $tea.Model {
    /**
     * @example
     * false
     */
    disableActivity?: boolean;
    /**
     * @example
     * false
     */
    disableNotification?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    isDone?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskStatusResponseBody extends $tea.Model {
    result?: UpdateOrganizationTaskStatusResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskStatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateOrganizationTaskStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateProjectGroupHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateProjectGroupRequest extends $tea.Model {
    addProjectGroupIds?: string[];
    delProjectGroupIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateProjectGroupResponseBody extends $tea.Model {
    result?: UpdateProjectGroupResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateProjectGroupResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateProjectGroupResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskContentHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskContentRequest extends $tea.Model {
    /**
     * @example
     * 更改后的标题
     */
    content?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskContentResponseBody extends $tea.Model {
    result?: UpdateTaskContentResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskContentResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateTaskContentResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskDueDateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskDueDateRequest extends $tea.Model {
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    dueDate?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskDueDateResponseBody extends $tea.Model {
    result?: UpdateTaskDueDateResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskDueDateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateTaskDueDateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskExecutorHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskExecutorRequest extends $tea.Model {
    /**
     * @example
     * 0517xxxxxxx
     */
    executorId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskExecutorResponseBody extends $tea.Model {
    result?: UpdateTaskExecutorResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskExecutorResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateTaskExecutorResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskInvolvemembersHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskInvolvemembersRequest extends $tea.Model {
    addInvolvers?: string[];
    delInvolvers?: string[];
    involveMembers?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskInvolvemembersResponseBody extends $tea.Model {
    result?: UpdateTaskInvolvemembersResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskInvolvemembersResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateTaskInvolvemembersResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskNoteHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskNoteRequest extends $tea.Model {
    /**
     * @example
     * 更改后的备注
     */
    note?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskNoteResponseBody extends $tea.Model {
    result?: UpdateTaskNoteResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskNoteResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateTaskNoteResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskPriorityHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskPriorityRequest extends $tea.Model {
    /**
     * @example
     * 1
     */
    priority?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskPriorityResponseBody extends $tea.Model {
    result?: UpdateTaskPriorityResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskPriorityResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateTaskPriorityResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskStageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskStageRequest extends $tea.Model {
    /**
     * @example
     * 64ba333e4206372f3f5cxxxx
     */
    taskStageId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskStageResponseBody extends $tea.Model {
    result?: UpdateTaskStageResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskStageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateTaskStageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskStartdateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskStartdateRequest extends $tea.Model {
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    startDate?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskStartdateResponseBody extends $tea.Model {
    result?: UpdateTaskStartdateResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskStartdateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateTaskStartdateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskTaskflowstatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskTaskflowstatusRequest extends $tea.Model {
    /**
     * @example
     * 60a2187eb72xxxxxxx
     */
    taskflowStatusId?: string;
    /**
     * @example
     * 说明。
     */
    taskflowStatusUpdateNote?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskTaskflowstatusResponseBody extends $tea.Model {
    result?: UpdateTaskTaskflowstatusResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskTaskflowstatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateTaskTaskflowstatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateWorkTimeApproveHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateWorkTimeApproveRequest extends $tea.Model {
    /**
     * @example
     * 2023-04-04T00:00:00.000Z
     */
    finishTime?: string;
    /**
     * @example
     * 1233
     */
    instanceId?: string;
    /**
     * @example
     * NEW
     */
    status?: string;
    /**
     * @example
     * 2023-04-04T00:00:00.000Z
     */
    submitTime?: string;
    /**
     * @example
     * xxxx 用工申请
     */
    title?: string;
    /**
     * @example
     * https://xxxbpms.xxx/xxxx
     */
    url?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateWorkTimeApproveResponseBody extends $tea.Model {
    /**
     * @example
     * 执行成功
     */
    message?: string;
    /**
     * @example
     * 1234
     */
    requestId?: string;
    result?: UpdateWorkTimeApproveResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateWorkTimeApproveResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateWorkTimeApproveResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddProjectMemberResponseBodyResult extends $tea.Model {
    joined?: string;
    nickname?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ArchiveProjectResponseBodyResult extends $tea.Model {
    /**
     * @example
     * true
     */
    isArchived?: boolean;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    updated?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ArchiveTaskResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    updated?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOrganizationTaskResponseBodyResultCreator extends $tea.Model {
    /**
     * @example
     * https://xxxxxxxxxx
     */
    avatarUrl?: string;
    /**
     * @example
     * 鬼斩
     */
    name?: string;
    /**
     * @example
     * 173xxxx
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOrganizationTaskResponseBodyResultExecutor extends $tea.Model {
    /**
     * @example
     * https://xxxxxxxxxx
     */
    avatarUrl?: string;
    /**
     * @example
     * 鬼斩
     */
    name?: string;
    /**
     * @example
     * 173xxxx
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOrganizationTaskResponseBodyResultInvolvers extends $tea.Model {
    /**
     * @example
     * httpx://xxx
     */
    avatarUrl?: string;
    /**
     * @example
     * 173xxxx
     */
    id?: string;
    /**
     * @example
     * 鬼斩
     */
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOrganizationTaskResponseBodyResult extends $tea.Model {
    ancestorIds?: string[];
    /**
     * @example
     * 0
     */
    attachmentsCount?: number;
    /**
     * @example
     * 明天12点前写好周报
     */
    content?: string;
    /**
     * @example
     * 2021-08-13T07:36:50.318Z
     */
    created?: string;
    creator?: CreateOrganizationTaskResponseBodyResultCreator;
    /**
     * @example
     * 173xxxx
     */
    creatorId?: string;
    /**
     * @example
     * 2021-08-13T07:36:50.318Z
     */
    dueDate?: string;
    executor?: CreateOrganizationTaskResponseBodyResultExecutor;
    /**
     * @example
     * 173xxxx
     */
    executorId?: string;
    /**
     * @example
     * false
     */
    hasReminder?: boolean;
    /**
     * @example
     * 62a697c053c2ef5xxxxxx
     */
    id?: string;
    involveMembers?: string[];
    involvers?: CreateOrganizationTaskResponseBodyResultInvolvers[];
    /**
     * @example
     * false
     */
    isDeleted?: boolean;
    /**
     * @example
     * false
     */
    isDone?: string;
    /**
     * @example
     * 我是一条备注哦
     */
    note?: string;
    /**
     * @example
     * -10
     */
    priority?: number;
    /**
     * @example
     * 2021-08-13T07:36:50.318Z
     */
    updated?: string;
    /**
     * @example
     * members
     */
    visible?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreatePlanTimeResponseBodyResultBody extends $tea.Model {
    /**
     * @example
     * 2022-09-05T00:00:00.000Z
     */
    date?: string;
    /**
     * @example
     * 63186e54e07f18003fea6b90
     */
    objectId?: string;
    /**
     * @example
     * 360000
     */
    planTime?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreatePlanTimeResponseBodyResult extends $tea.Model {
    body?: CreatePlanTimeResponseBodyResultBody[];
    /**
     * @example
     * 创建工时成功
     */
    message?: string;
    ok?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateProjectResponseBodyResultCustomFieldsValue extends $tea.Model {
    customFieldValueId?: string;
    metaString?: string;
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateProjectResponseBodyResultCustomFields extends $tea.Model {
    customFieldId?: string;
    type?: string;
    value?: CreateProjectResponseBodyResultCustomFieldsValue[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateProjectResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    created?: string;
    /**
     * @example
     * 0517xxxxxxx
     */
    creatorId?: string;
    customFields?: CreateProjectResponseBodyResultCustomFields[];
    /**
     * @example
     * 6398042ec98a4e4e33xxxxxx
     */
    defaultCollectionId?: string;
    /**
     * @example
     * false
     */
    isArchived?: boolean;
    /**
     * @example
     * false
     */
    isSuspended?: boolean;
    /**
     * @example
     * false
     */
    isTemplate?: boolean;
    /**
     * @example
     * "https://tcs-ga.teambition.net/thumb/xxxxxxx
     */
    logo?: string;
    /**
     * @example
     * 项目1
     */
    name?: string;
    /**
     * @example
     * taskflow
     */
    normalType?: string;
    /**
     * @example
     * 62c25e3b376ecxxxxxxx
     */
    projectId?: string;
    /**
     * @example
     * 6398042ec98a4e4e33
     */
    rootCollectionId?: string;
    /**
     * @example
     * 62c25e3b376ecxxxxxxx
     */
    sourceId?: string;
    /**
     * @example
     * ""
     */
    uniqueIdPrefix?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    updated?: string;
    /**
     * @example
     * project
     */
    visibility?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateProjectByTemplateResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2022-08-01T09:50:31.275Z
     */
    created?: string;
    /**
     * @example
     * 62e7a1e721d20b5aexxx
     */
    id?: string;
    /**
     * @example
     * https://www.xxx.com/xxxxx
     */
    logo?: string;
    /**
     * @example
     * 项目1
     */
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateProjectCustomfieldStatusRequestValue extends $tea.Model {
    /**
     * @example
     * 63a5301e420637003f5dxxxx
     */
    customFieldValueId?: string;
    /**
     * @example
     * {}
     */
    metaString?: string;
    /**
     * @example
     * 进行中
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateProjectCustomfieldStatusResponseBodyResultValue extends $tea.Model {
    /**
     * @example
     * 63a5301e420637003f5dxxxx
     */
    customFieldValueId?: string;
    metaString?: string;
    /**
     * @example
     * 13
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateProjectCustomfieldStatusResponseBodyResult extends $tea.Model {
    /**
     * @example
     * lookup2
     */
    advancedCustomFieldObjectType?: string;
    /**
     * @example
     * 63a5301e420637003f5dxxxx
     */
    customFieldId?: string;
    /**
     * @example
     * 项目进度
     */
    name?: string;
    /**
     * @example
     * 62a5301e420637003f5dxxxx
     */
    originalId?: string;
    /**
     * @example
     * number
     */
    type?: string;
    value?: CreateProjectCustomfieldStatusResponseBodyResultValue[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTaskRequestCustomfieldsValue extends $tea.Model {
    id?: string;
    thumbUrl?: string;
    /**
     * @example
     * 我是自定义字段显示值
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTaskRequestCustomfields extends $tea.Model {
    /**
     * @example
     * 62fb0bxxxxxxx
     */
    customfieldId?: string;
    /**
     * @example
     * 自定义字段-文本
     */
    customfieldName?: string;
    value?: CreateTaskRequestCustomfieldsValue[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTaskResponseBodyResultCustomfieldsValue extends $tea.Model {
    id?: string;
    thumbUrl?: string;
    /**
     * @example
     * 我是自定义字段显示值
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTaskResponseBodyResultCustomfields extends $tea.Model {
    /**
     * @example
     * 625bcxdxxxxxx
     */
    customfieldId?: string;
    value?: CreateTaskResponseBodyResultCustomfieldsValue[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTaskResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 任务标题
     */
    content?: string;
    /**
     * @example
     * 2021-08-13T07:36:50.318Z
     */
    created?: string;
    /**
     * @example
     * 173xxxxx
     */
    creatorId?: string;
    customfields?: CreateTaskResponseBodyResultCustomfields[];
    /**
     * @example
     * 2022-08-13T07:36:50.318Z
     */
    dueDate?: string;
    /**
     * @example
     * 173xxxx
     */
    executorId?: string;
    involveMembers?: string[];
    /**
     * @example
     * 我是一条备注
     */
    note?: string;
    /**
     * @example
     * -10
     */
    priority?: number;
    /**
     * @example
     * 62c25e3b376ecxxxxxx
     */
    projectId?: string;
    /**
     * @example
     * 62a697c053c2ef5xxxxxx
     */
    taskId?: string;
    /**
     * @example
     * 2021-08-13T07:36:50.318Z
     */
    updated?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTaskObjectLinkRequestLinkedData extends $tea.Model {
    /**
     * @example
     * 我是内容
     */
    content?: string;
    /**
     * @example
     * https://abc.com/url
     */
    thumbnailUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 我是标题
     */
    title?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * https://abcd.com/url
     */
    url?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTaskObjectLinkResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2021-08-13T07:36:50.318Z
     */
    created?: string;
    /**
     * @example
     * xxxx
     */
    objectLinkId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateWorkTimeResponseBodyResultBody extends $tea.Model {
    /**
     * @example
     * 2022-09-05T00:00:00.000Z
     */
    date?: string;
    /**
     * @example
     * 63186e54e07f18003fea6b90
     */
    taskId?: string;
    /**
     * @example
     * 3600000
     */
    workTime?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateWorkTimeResponseBodyResult extends $tea.Model {
    body?: CreateWorkTimeResponseBodyResultBody[];
    /**
     * @example
     * 创建成功
     */
    message?: string;
    ok?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateWorkTimeApproveResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 636c9634b183ac0040ee85b4
     */
    approveOpenId?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    createdAt?: string;
    /**
     * @example
     * 6446626a9fb5a70c05fc3fc3
     */
    creatorId?: string;
    /**
     * @example
     * ding123xxx
     */
    organizationId?: string;
    /**
     * @example
     * NEW
     */
    status?: string;
    /**
     * @example
     * 636c9634b183ac0040ee85b4
     */
    taskId?: string;
    /**
     * @example
     * 100000
     */
    time?: number;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    updatedAt?: string;
    /**
     * @example
     * 6446626a9fb5a70c05fc3fc3
     */
    userId?: string;
    workTimeIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetDeptsByOrgIdResponseBodyDeptList extends $tea.Model {
    deptId?: number;
    name?: string;
    parentId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetEmpsByOrgIdResponseBodyEmpList extends $tea.Model {
    avatar?: string;
    deptIdList?: number[];
    dingId?: string;
    name?: string;
    nick?: string;
    orgId?: number;
    position?: string;
    unionid?: string;
    userid?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOrganizatioTaskByIdsResponseBodyResult extends $tea.Model {
    ancestorIds?: string[];
    /**
     * @example
     * 明天12点前写好周报
     */
    content?: string;
    /**
     * @example
     * 2021-08-13T07:36:50.318Z
     */
    created?: string;
    /**
     * @example
     * 173xxxx
     */
    creatorId?: string;
    /**
     * @example
     * 2021-08-13T07:36:50.318Z
     */
    dueDate?: string;
    /**
     * @example
     * 173xxxx
     */
    executorId?: string;
    involveMembers?: string[];
    /**
     * @example
     * false
     */
    isDeleted?: boolean;
    /**
     * @example
     * false
     */
    isDone?: boolean;
    labels?: string[];
    /**
     * @example
     * 我是一条备注哦
     */
    note?: string;
    /**
     * @example
     * -10
     */
    priority?: number;
    /**
     * @example
     * 2021-08-13T07:36:50.318Z
     */
    startDate?: string;
    /**
     * @example
     * 62a010c153c2efxxxxxxx
     */
    taskId?: string;
    /**
     * @example
     * 2021-08-13T07:36:50.318Z
     */
    updated?: string;
    /**
     * @example
     * members
     */
    visible?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOrganizationPriorityListResponseBodyResult extends $tea.Model {
    /**
     * @example
     * blue
     */
    color?: string;
    /**
     * @example
     * 普通
     */
    name?: string;
    /**
     * @example
     * 1
     */
    priority?: string;
    /**
     * @example
     * 5e870bc35b79b70xxxxx
     */
    priorityId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOrganizationTaskResponseBodyResult extends $tea.Model {
    ancestorIds?: string[];
    /**
     * @example
     * 明天12点前写好周报
     */
    content?: string;
    /**
     * @example
     * 2021-08-13T07:36:50.318Z
     */
    created?: string;
    /**
     * @example
     * 173xxxx
     */
    creatorId?: string;
    /**
     * @example
     * 2021-08-13T07:36:50.318Z
     */
    dueDate?: string;
    /**
     * @example
     * 173xxxx
     */
    executorId?: string;
    involveMembers?: string[];
    /**
     * @example
     * false
     */
    isDeleted?: boolean;
    /**
     * @example
     * false
     */
    isDone?: boolean;
    labels?: string[];
    /**
     * @example
     * 我是一条备注哦
     */
    note?: string;
    /**
     * @example
     * -10
     */
    priority?: number;
    /**
     * @example
     * 2021-08-13T07:36:50.318Z
     */
    startDate?: string;
    /**
     * @example
     * 62a010c153c2exxxxxxxxx
     */
    taskId?: string;
    /**
     * @example
     * 2021-08-13T07:36:50.318Z
     */
    updated?: string;
    /**
     * @example
     * members
     */
    visible?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectGroupResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2022-06-13T07:36:50.318Z
     */
    created?: string;
    /**
     * @example
     * 6215dce28972510xxxxx
     */
    id?: string;
    /**
     * @example
     * 分组1
     */
    name?: string;
    /**
     * @example
     * 2022-06-13T07:36:50.318Z
     */
    updated?: string;
    /**
     * @example
     * organization
     */
    visible?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectMemebersResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 62c25e3b376ec29c45xxxxx
     *
     * @deprecated
     */
    memberId?: string;
    /**
     * @example
     * 0
     */
    role?: number;
    roleIds?: string[];
    /**
     * @example
     * 0715153011125xxxx
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetProjectStatusListResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 进度正常，详细说明
     */
    content?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    created?: string;
    /**
     * @example
     * 0715153011xxxxxx
     */
    creatorId?: string;
    /**
     * @example
     * normal
     */
    degree?: string;
    /**
     * @example
     * 进度正常
     */
    name?: string;
    /**
     * @example
     * 62c25e3b376ecxxxxxxx
     */
    projectId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTaskByIdsResponseBodyResultCustomFieldsValue extends $tea.Model {
    /**
     * @example
     * 6722223xxxxxxxx
     */
    customFieldValueId?: string;
    /**
     * @example
     * 拓展数据
     */
    metaString?: string;
    /**
     * @example
     * 自定义字段1
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTaskByIdsResponseBodyResultCustomFields extends $tea.Model {
    /**
     * @example
     * 61122xxxxxxxx
     */
    customFieldId?: string;
    type?: string;
    value?: GetTaskByIdsResponseBodyResultCustomFieldsValue[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTaskByIdsResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    accomplishTime?: string;
    ancestorIds?: string[];
    /**
     * @example
     * 任务标题
     */
    content?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    created?: string;
    /**
     * @example
     * 0517xxxxxxx
     */
    creatorId?: string;
    customFields?: GetTaskByIdsResponseBodyResultCustomFields[];
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    dueDate?: string;
    /**
     * @example
     * 0517xxxxxxx
     */
    executorId?: string;
    involveMembers?: string[];
    /**
     * @example
     * false
     */
    isArchived?: boolean;
    /**
     * @example
     * true
     */
    isDone?: boolean;
    /**
     * @example
     * 任务备注
     */
    note?: string;
    /**
     * @example
     * 60a2187eb72xxxxxxx
     */
    parentTaskId?: string;
    /**
     * @example
     * 0
     */
    priority?: number;
    /**
     * @example
     * 62c25e3b376ecxxxxxxx
     */
    projectId?: string;
    recurrence?: string[];
    /**
     * @example
     * 6922xxxxxxxx
     */
    scenarioFieldConfigId?: string;
    /**
     * @example
     * 61922xxxxxxxx
     */
    sprintId?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    startDate?: string;
    /**
     * @example
     * 1
     */
    storyPoint?: string;
    tagIds?: string[];
    /**
     * @example
     * 60a2187eb72xxxxxxx
     */
    taskId?: string;
    /**
     * @example
     * 6922xxxxxxxx
     */
    taskListId?: string;
    /**
     * @example
     * 6622134xxxxxx
     */
    taskStageId?: string;
    /**
     * @example
     * 6722xxxxxxxx
     */
    taskflowStatusId?: string;
    /**
     * @example
     * 0
     */
    uniqueId?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    updated?: string;
    /**
     * @example
     * member
     */
    visible?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTbOrgIdByDingOrgIdResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 50c32afae8cf1439xxxx
     */
    tbOrganizationId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTbUserIdByStaffIdResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 601fdeb17f8681c9xxxx
     */
    tbUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProjectResponseBodyResultCustomFieldsValue extends $tea.Model {
    /**
     * @example
     * 64ba333e4206372f3f5cxxxx
     */
    customFieldValueId?: string;
    /**
     * @example
     * 3
     */
    metaString?: string;
    /**
     * @example
     * 自定义字段1
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProjectResponseBodyResultCustomFields extends $tea.Model {
    /**
     * @example
     * 64ba333e4206372f3f5cxxxx
     */
    customFieldId?: string;
    /**
     * @example
     * number
     */
    type?: string;
    value?: QueryProjectResponseBodyResultCustomFieldsValue[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryProjectResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    created?: string;
    /**
     * @example
     * 0715153011125xxxx
     */
    creatorId?: string;
    customFields?: QueryProjectResponseBodyResultCustomFields[];
    /**
     * @example
     * 描述内容
     */
    description?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    endDate?: string;
    /**
     * @example
     * false
     */
    isArchived?: boolean;
    /**
     * @example
     * false
     */
    isSuspended?: boolean;
    /**
     * @example
     * false
     */
    isTemplate?: boolean;
    /**
     * @example
     * http://xxxxx
     */
    logo?: string;
    /**
     * @example
     * 测试项目
     */
    name?: string;
    /**
     * @example
     * dingc23b7b9682b4xxxx
     */
    organizationId?: string;
    /**
     * @example
     * 64ba333e4206372f3f5cxxxx
     */
    projectId?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    startDate?: string;
    /**
     * @example
     * UNI
     */
    uniqueIdPrefix?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    updated?: string;
    /**
     * @example
     * organization
     */
    visibility?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTaskOfProjectResponseBodyResultCustomfields extends $tea.Model {
    /**
     * @example
     * 62c25e3bbxx0xxx
     */
    customfieldId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTaskOfProjectResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    accomplished?: string;
    ancestorIds?: string[];
    /**
     * @example
     * 标题2
     */
    content?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    created?: string;
    /**
     * @example
     * 62c25e3bba7ce40xxx
     */
    creatorId?: string;
    customfields?: QueryTaskOfProjectResponseBodyResultCustomfields[];
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    dueDate?: string;
    /**
     * @example
     * 62cxxxxxxx
     */
    executorId?: string;
    involveMembers?: string[];
    /**
     * @example
     * true
     */
    isArchived?: boolean;
    /**
     * @example
     * true
     */
    isDeleted?: boolean;
    /**
     * @example
     * true
     */
    isDone?: boolean;
    labels?: string[];
    /**
     * @example
     * 备注
     */
    note?: string;
    /**
     * @example
     * 0
     */
    priority?: number;
    /**
     * @example
     * 0
     */
    progress?: number;
    /**
     * @example
     * 62c25e3bbaxxxxx
     */
    projectId?: string;
    /**
     * @example
     * 62c25e3bbxx0xxx
     */
    scenariofieldconfigId?: string;
    /**
     * @example
     * 62c25e3bbxx0xxx
     */
    sprintId?: string;
    /**
     * @example
     * 62c25e3bbxx0xxx
     */
    stageId?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    startDate?: string;
    /**
     * @example
     * 2
     */
    storyPoint?: number;
    /**
     * @example
     * 62c25e3bbxx0xxx
     */
    tagIds?: string[];
    /**
     * @example
     * 62c25e3bbaxxx
     */
    taskId?: string;
    /**
     * @example
     * 62c25e3bbxx0xxx
     */
    taskflowstatusId?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    updated?: string;
    /**
     * @example
     * member
     */
    visible?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SeachTaskStageResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    created?: string;
    /**
     * @example
     * 0715153011125xxxx
     */
    creatorId?: string;
    /**
     * @example
     * 描述...
     */
    description?: string;
    /**
     * @example
     * 自定义列1
     */
    name?: string;
    /**
     * @example
     * 62c25e3b376ecxxxxxxx
     */
    projectId?: string;
    /**
     * @example
     * 60a2187eb72xxxxxxx
     */
    taskListId?: string;
    /**
     * @example
     * 60a2187eb72xxxxxxx
     */
    taskStageId?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    updated?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchOranizationCustomfieldResponseBodyResultAdvancedCustomField extends $tea.Model {
    /**
     * @example
     * 63a5301e420637003f5dxxxx
     */
    advancedCustomFieldId?: string;
    /**
     * @example
     * 所思文档
     */
    name?: string;
    objectType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchOranizationCustomfieldResponseBodyResultChoices extends $tea.Model {
    /**
     * @example
     * 60a2187eb72xxxxxxx
     */
    choiceId?: string;
    /**
     * @example
     * 选项一
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchOranizationCustomfieldResponseBodyResult extends $tea.Model {
    advancedCustomField?: SearchOranizationCustomfieldResponseBodyResultAdvancedCustomField;
    choices?: SearchOranizationCustomfieldResponseBodyResultChoices[];
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    created?: string;
    /**
     * @example
     * 0715153011125xxxx
     */
    creatorId?: string;
    /**
     * @example
     * 60a2187eb72xxxxxxx
     */
    customFieldsId?: string;
    /**
     * @example
     * 自定义字段
     */
    name?: string;
    /**
     * @example
     * {"_appId":"5937b10b83963200444b1ff8","kanbanCardAddCustomfieldDisable":true,"locales":{"name":{"en":"Progress update time","zh":"进展更新时间"}}}
     */
    payload?: {
        [key: string]: any;
    };
    /**
     * @example
     * number
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchProjectCustomfieldResponseBodyResultAdvancedCustomField extends $tea.Model {
    /**
     * @example
     * 63a5301e420637003f5dxxxx
     */
    advancedCustomFieldId?: string;
    /**
     * @example
     * 所思文档
     */
    name?: string;
    /**
     * @example
     * thoughts.document
     */
    objectType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchProjectCustomfieldResponseBodyResultChoices extends $tea.Model {
    /**
     * @example
     * 63a5301e420637003f5dxxxx
     */
    choiceId?: string;
    /**
     * @example
     * 选项一
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchProjectCustomfieldResponseBodyResult extends $tea.Model {
    advancedCustomField?: SearchProjectCustomfieldResponseBodyResultAdvancedCustomField;
    /**
     * @example
     * 63a5301e420637003f5dxxxx
     */
    boundToObjectId?: string;
    choices?: SearchProjectCustomfieldResponseBodyResultChoices[];
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    created?: string;
    /**
     * @example
     * 0715153011125xxxx
     */
    creatorId?: string;
    /**
     * @example
     * 63a5301e420637003f5dxxxx
     */
    customFieldId?: string;
    /**
     * @example
     * 名字1
     */
    name?: string;
    /**
     * @example
     * 63a5301e420637003f5dxxxx
     */
    originalId?: string;
    /**
     * @example
     * {"_appId":"5937b10b83963200444b1ff8","kanbanCardAddCustomfieldDisable":true,"locales":{"name":{"en":"Progress update time","zh":"进展更新时间"}}}
     */
    payload?: {
        [key: string]: any;
    };
    /**
     * @example
     * number
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchProjectTemplateResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2022-06-13T07:36:50.318Z
     */
    created?: string;
    /**
     * @example
     * 我是描述内容
     */
    description?: string;
    /**
     * @example
     * 62e0a88c0axxxx
     */
    id?: string;
    /**
     * @example
     * false
     */
    isDeleted?: boolean;
    /**
     * @example
     * false
     */
    isDemo?: boolean;
    /**
     * @example
     * https://www.xxx.com/xxxx
     */
    logo?: string;
    /**
     * @example
     * 模板1
     */
    name?: string;
    /**
     * @example
     * 2022-06-13T07:36:50.318Z
     */
    updated?: string;
    /**
     * @example
     * organization
     */
    visible?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchTaskFlowResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 62c25e3b376ecxxxxxxx
     */
    boundToObjectId?: string;
    /**
     * @example
     * project
     */
    boundToObjectType?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    created?: string;
    /**
     * @example
     * 07151530111xxxxx
     */
    creatorId?: string;
    /**
     * @example
     * false
     */
    isDeleted?: boolean;
    /**
     * @example
     * 工作流1
     */
    name?: string;
    /**
     * @example
     * 60a2187eb72xxxxxxx
     */
    taskflowId?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    updated?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchTaskListResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    created?: string;
    /**
     * @example
     * 0715153011125xxxx
     */
    creatorId?: string;
    /**
     * @example
     * 描述...
     */
    description?: string;
    /**
     * @example
     * 62c25e3b376ecxxxxxxx
     */
    projectId?: string;
    /**
     * @example
     * 60a2187eb72xxxxxxx
     */
    taskListId?: string;
    /**
     * @example
     * 自定义分组1
     */
    title?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    updated?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchTaskflowStatusResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    created?: string;
    /**
     * @example
     * 601fdeb17f86xxxxxxxx
     */
    creatorId?: string;
    /**
     * @example
     * false
     */
    isDeleted?: boolean;
    /**
     * @example
     * false
     */
    isTaskflowstatusruleexector?: boolean;
    /**
     * @example
     * start
     */
    kind?: string;
    /**
     * @example
     * 未开始
     */
    name?: string;
    /**
     * @example
     * 0
     */
    pos?: number;
    rejectStatusIds?: string[];
    /**
     * @example
     * 60a2187eb72xxxxxxx
     */
    taskflowId?: string;
    /**
     * @example
     * 60a2187eb72xxxxxxx
     */
    taskflowStatusId?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    updated?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchUserTaskResponseBodyResultCustomFieldsValue extends $tea.Model {
    /**
     * @example
     * 642fb16c4a622b2e3184229c
     */
    customFieldValueId?: string;
    /**
     * @example
     * 元数据内容
     */
    metaString?: string;
    /**
     * @example
     * 标题
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchUserTaskResponseBodyResultCustomFields extends $tea.Model {
    customFieldId?: string;
    /**
     * @example
     * number
     */
    type?: string;
    value?: SearchUserTaskResponseBodyResultCustomFieldsValue[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchUserTaskResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2023-04-12T03:39:54.918Z
     */
    accomplishTime?: string;
    ancestorIds?: string[];
    /**
     * @example
     * 任务内容
     */
    content?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    created?: string;
    /**
     * @example
     * 63a9207a042f7c254f60519c
     */
    creatorId?: string;
    customFields?: SearchUserTaskResponseBodyResultCustomFields[];
    /**
     * @example
     * 2022-07-05T03:29:34.770Z
     */
    dueDate?: string;
    /**
     * @example
     * 63a9207a042f7c254f60519c
     */
    executorId?: string;
    involveMembers?: string[];
    isArchived?: boolean;
    isDone?: boolean;
    /**
     * @example
     * 备注内容
     */
    note?: string;
    /**
     * @example
     * 644b6f4cca369863fbc8abbb
     */
    parentTaskId?: string;
    priority?: number;
    /**
     * @example
     * 643394f81502a928dbd5ba37
     */
    projectId?: string;
    recurrence?: string[];
    /**
     * @example
     * 64099d5b2f404400174d7fc1
     */
    scenarioFieldConfigId?: string;
    /**
     * @example
     * 64099d5b2f404400174d7fc1
     */
    sprintId?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    startDate?: string;
    /**
     * @example
     * 0
     */
    storyPoint?: string;
    tagIds?: string[];
    /**
     * @example
     * 642befe827feb683f91bd529
     */
    taskId?: string;
    /**
     * @example
     * 6436278ea14fe435351668a2
     */
    taskListId?: string;
    /**
     * @example
     * 6436278ea14fe435351668a4
     */
    taskStageId?: string;
    /**
     * @example
     * 64099d5b2f404400174d7fbb
     */
    taskflowStatusId?: string;
    /**
     * @example
     * 3
     */
    uniqueId?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    updated?: string;
    /**
     * @example
     * projectMembers
     */
    visible?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SuspendProjectResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2022-06-08T07:32:48.958Z
     */
    updated?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UnSuspendProjectResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2022-06-08T07:32:48.958Z
     */
    updated?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCustomfieldValueRequestValue extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 我是具体显示值
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCustomfieldValueResponseBodyResultCustomFieldsValue extends $tea.Model {
    id?: string;
    thumbUrl?: string;
    /**
     * @example
     * 我是具体显示值
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCustomfieldValueResponseBodyResultCustomFields extends $tea.Model {
    /**
     * @example
     * 62fb0b77xxxxx
     */
    customFieldId?: string;
    value?: UpdateCustomfieldValueResponseBodyResultCustomFieldsValue[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCustomfieldValueResponseBodyResult extends $tea.Model {
    customFields?: UpdateCustomfieldValueResponseBodyResultCustomFields[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskContentResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 后天交周报
     */
    content?: string;
    /**
     * @example
     * 2022-06-08T07:32:48.958Z
     */
    updated?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskDueDateResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2022-06-13T03:30:42.830Z
     */
    dueDate?: string;
    /**
     * @example
     * 2022-06-13T03:30:42.830Z
     */
    updateTime?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskExecutorResponseBodyResultExecutor extends $tea.Model {
    /**
     * @example
     * http://xxxxx
     */
    avatarUrl?: string;
    /**
     * @example
     * 鬼斩
     */
    name?: string;
    /**
     * @example
     * 173xxxx
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskExecutorResponseBodyResultInvolvers extends $tea.Model {
    /**
     * @example
     * http://xxxxx
     */
    avatarUrl?: string;
    /**
     * @example
     * 鬼斩
     */
    name?: string;
    /**
     * @example
     * 173xxxx
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskExecutorResponseBodyResult extends $tea.Model {
    executor?: UpdateOrganizationTaskExecutorResponseBodyResultExecutor;
    /**
     * @example
     * 173xxxx
     */
    executorId?: string;
    involvers?: UpdateOrganizationTaskExecutorResponseBodyResultInvolvers[];
    /**
     * @example
     * 2022-06-08T03:00:17.031Z
     */
    updated?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskInvolveMembersResponseBodyResultInvolvers extends $tea.Model {
    /**
     * @example
     * http://xxxx
     */
    avatarUrl?: string;
    /**
     * @example
     * 鬼斩
     */
    name?: string;
    /**
     * @example
     * 173xxxxx
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskInvolveMembersResponseBodyResult extends $tea.Model {
    involvers?: UpdateOrganizationTaskInvolveMembersResponseBodyResultInvolvers[];
    /**
     * @example
     * 2022-06-13T05:33:42.826Z
     */
    updated?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskNoteResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 我是一条备注哦
     */
    note?: string;
    /**
     * @example
     * 2022-06-13T05:48:45.788Z
     */
    updated?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskPriorityResponseBodyResult extends $tea.Model {
    /**
     * @example
     * -10
     */
    priority?: number;
    /**
     * @example
     * 2022-06-13T06:02:44.835Z
     */
    updated?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateOrganizationTaskStatusResponseBodyResult extends $tea.Model {
    /**
     * @example
     * true
     */
    isDone?: boolean;
    /**
     * @example
     * 2022-06-08T07:32:48.958Z
     */
    updateTime?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateProjectGroupResponseBodyResult extends $tea.Model {
    /**
     * @example
     * true
     */
    ok?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskContentResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 更改后的标题
     */
    content?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    updated?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskDueDateResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    dueDate?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    updated?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskExecutorResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 0517xxxxxxx
     */
    executorId?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    updated?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskInvolvemembersResponseBodyResult extends $tea.Model {
    involveMembers?: string[];
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    updated?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskNoteResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 更改后的备注
     */
    note?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    updated?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskPriorityResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 1
     */
    priority?: number;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    updated?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskStageResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    accomplishTime?: string;
    /**
     * @example
     * false
     */
    isDone?: boolean;
    /**
     * @example
     * 64a5301e420637003f5dxxxx
     */
    projectId?: string;
    /**
     * @example
     * 63a5301e420637003f5dxxxx
     */
    taskId?: string;
    /**
     * @example
     * 66a5301e420637003f5dxxxx
     */
    taskListId?: string;
    /**
     * @example
     * 69a5301e420637003f5dxxxx
     */
    taskStageId?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    updated?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskStartdateResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    startDate?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    updated?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateTaskTaskflowstatusResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    updated?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateWorkTimeApproveResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 6446626a9fb5a70c05fc3fc3
     */
    approveOpenId?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    createdAt?: string;
    /**
     * @example
     * 6446626a9fb5a70c05fc3fc3
     */
    creatorId?: string;
    /**
     * @example
     * 2023-04-04T00:00:00.000Z
     */
    finishTime?: string;
    /**
     * @example
     * 12345
     */
    instanceId?: string;
    /**
     * @example
     * dingxxxx
     */
    organizationId?: string;
    /**
     * @example
     * NEW
     */
    status?: string;
    /**
     * @example
     * 2023-04-04T00:00:00.000Z
     */
    submitTime?: string;
    /**
     * @example
     * 6446626a9fb5a70c05fc3fc3
     */
    taskId?: string;
    /**
     * @example
     * 10000
     */
    time?: number;
    /**
     * @example
     * xxx用工申请
     */
    title?: string;
    /**
     * @example
     * 2022-07-04T03:29:34.770Z
     */
    updatedAt?: string;
    /**
     * @example
     * https://xxxbpms.xxx/xxxx
     */
    url?: string;
    /**
     * @example
     * 6446626a9fb5a70c05fc3fc3
     */
    userId?: string;
    workTimeIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 增加项目成员
     *
     * @param request - AddProjectMemberRequest
     * @param headers - AddProjectMemberHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddProjectMemberResponse
     */
    addProjectMemberWithOptions(userId: string, projectId: string, request: AddProjectMemberRequest, headers: AddProjectMemberHeaders, runtime: $Util.RuntimeOptions): Promise<AddProjectMemberResponse>;
    /**
     * 增加项目成员
     *
     * @param request - AddProjectMemberRequest
     * @returns AddProjectMemberResponse
     */
    addProjectMember(userId: string, projectId: string, request: AddProjectMemberRequest): Promise<AddProjectMemberResponse>;
    /**
     * 项目放入回收站
     *
     * @param headers - ArchiveProjectHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ArchiveProjectResponse
     */
    archiveProjectWithOptions(userId: string, projectId: string, headers: ArchiveProjectHeaders, runtime: $Util.RuntimeOptions): Promise<ArchiveProjectResponse>;
    /**
     * 项目放入回收站
     * @returns ArchiveProjectResponse
     */
    archiveProject(userId: string, projectId: string): Promise<ArchiveProjectResponse>;
    /**
     * 任务迁移至回收站
     *
     * @param headers - ArchiveTaskHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ArchiveTaskResponse
     */
    archiveTaskWithOptions(userId: string, taskId: string, headers: ArchiveTaskHeaders, runtime: $Util.RuntimeOptions): Promise<ArchiveTaskResponse>;
    /**
     * 任务迁移至回收站
     * @returns ArchiveTaskResponse
     */
    archiveTask(userId: string, taskId: string): Promise<ArchiveTaskResponse>;
    /**
     * 创建自由任务
     *
     * @param request - CreateOrganizationTaskRequest
     * @param headers - CreateOrganizationTaskHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateOrganizationTaskResponse
     */
    createOrganizationTaskWithOptions(userId: string, request: CreateOrganizationTaskRequest, headers: CreateOrganizationTaskHeaders, runtime: $Util.RuntimeOptions): Promise<CreateOrganizationTaskResponse>;
    /**
     * 创建自由任务
     *
     * @param request - CreateOrganizationTaskRequest
     * @returns CreateOrganizationTaskResponse
     */
    createOrganizationTask(userId: string, request: CreateOrganizationTaskRequest): Promise<CreateOrganizationTaskResponse>;
    /**
     * 录入计划工时
     *
     * @param request - CreatePlanTimeRequest
     * @param headers - CreatePlanTimeHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreatePlanTimeResponse
     */
    createPlanTimeWithOptions(userId: string, request: CreatePlanTimeRequest, headers: CreatePlanTimeHeaders, runtime: $Util.RuntimeOptions): Promise<CreatePlanTimeResponse>;
    /**
     * 录入计划工时
     *
     * @param request - CreatePlanTimeRequest
     * @returns CreatePlanTimeResponse
     */
    createPlanTime(userId: string, request: CreatePlanTimeRequest): Promise<CreatePlanTimeResponse>;
    /**
     * 创建项目
     *
     * @param request - CreateProjectRequest
     * @param headers - CreateProjectHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateProjectResponse
     */
    createProjectWithOptions(userId: string, request: CreateProjectRequest, headers: CreateProjectHeaders, runtime: $Util.RuntimeOptions): Promise<CreateProjectResponse>;
    /**
     * 创建项目
     *
     * @param request - CreateProjectRequest
     * @returns CreateProjectResponse
     */
    createProject(userId: string, request: CreateProjectRequest): Promise<CreateProjectResponse>;
    /**
     * 根据项目模板创建项目
     *
     * @param request - CreateProjectByTemplateRequest
     * @param headers - CreateProjectByTemplateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateProjectByTemplateResponse
     */
    createProjectByTemplateWithOptions(userId: string, request: CreateProjectByTemplateRequest, headers: CreateProjectByTemplateHeaders, runtime: $Util.RuntimeOptions): Promise<CreateProjectByTemplateResponse>;
    /**
     * 根据项目模板创建项目
     *
     * @param request - CreateProjectByTemplateRequest
     * @returns CreateProjectByTemplateResponse
     */
    createProjectByTemplate(userId: string, request: CreateProjectByTemplateRequest): Promise<CreateProjectByTemplateResponse>;
    /**
     * 创建或更新项目概览中自定义字段值
     *
     * @param request - CreateProjectCustomfieldStatusRequest
     * @param headers - CreateProjectCustomfieldStatusHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateProjectCustomfieldStatusResponse
     */
    createProjectCustomfieldStatusWithOptions(userId: string, projectId: string, request: CreateProjectCustomfieldStatusRequest, headers: CreateProjectCustomfieldStatusHeaders, runtime: $Util.RuntimeOptions): Promise<CreateProjectCustomfieldStatusResponse>;
    /**
     * 创建或更新项目概览中自定义字段值
     *
     * @param request - CreateProjectCustomfieldStatusRequest
     * @returns CreateProjectCustomfieldStatusResponse
     */
    createProjectCustomfieldStatus(userId: string, projectId: string, request: CreateProjectCustomfieldStatusRequest): Promise<CreateProjectCustomfieldStatusResponse>;
    /**
     * 创建项目任务
     *
     * @param request - CreateTaskRequest
     * @param headers - CreateTaskHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateTaskResponse
     */
    createTaskWithOptions(userId: string, request: CreateTaskRequest, headers: CreateTaskHeaders, runtime: $Util.RuntimeOptions): Promise<CreateTaskResponse>;
    /**
     * 创建项目任务
     *
     * @param request - CreateTaskRequest
     * @returns CreateTaskResponse
     */
    createTask(userId: string, request: CreateTaskRequest): Promise<CreateTaskResponse>;
    /**
     * 创建任务关联对象
     *
     * @param request - CreateTaskObjectLinkRequest
     * @param headers - CreateTaskObjectLinkHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateTaskObjectLinkResponse
     */
    createTaskObjectLinkWithOptions(userId: string, taskId: string, request: CreateTaskObjectLinkRequest, headers: CreateTaskObjectLinkHeaders, runtime: $Util.RuntimeOptions): Promise<CreateTaskObjectLinkResponse>;
    /**
     * 创建任务关联对象
     *
     * @param request - CreateTaskObjectLinkRequest
     * @returns CreateTaskObjectLinkResponse
     */
    createTaskObjectLink(userId: string, taskId: string, request: CreateTaskObjectLinkRequest): Promise<CreateTaskObjectLinkResponse>;
    /**
     * 录入实际工时接口
     *
     * @param request - CreateWorkTimeRequest
     * @param headers - CreateWorkTimeHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateWorkTimeResponse
     */
    createWorkTimeWithOptions(userId: string, request: CreateWorkTimeRequest, headers: CreateWorkTimeHeaders, runtime: $Util.RuntimeOptions): Promise<CreateWorkTimeResponse>;
    /**
     * 录入实际工时接口
     *
     * @param request - CreateWorkTimeRequest
     * @returns CreateWorkTimeResponse
     */
    createWorkTime(userId: string, request: CreateWorkTimeRequest): Promise<CreateWorkTimeResponse>;
    /**
     * 创建实际工时审批对象。
     *
     * @param request - CreateWorkTimeApproveRequest
     * @param headers - CreateWorkTimeApproveHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateWorkTimeApproveResponse
     */
    createWorkTimeApproveWithOptions(userId: string, request: CreateWorkTimeApproveRequest, headers: CreateWorkTimeApproveHeaders, runtime: $Util.RuntimeOptions): Promise<CreateWorkTimeApproveResponse>;
    /**
     * 创建实际工时审批对象。
     *
     * @param request - CreateWorkTimeApproveRequest
     * @returns CreateWorkTimeApproveResponse
     */
    createWorkTimeApprove(userId: string, request: CreateWorkTimeApproveRequest): Promise<CreateWorkTimeApproveResponse>;
    /**
     * 删除项目成员
     *
     * @param request - DeleteProjectMemberRequest
     * @param headers - DeleteProjectMemberHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteProjectMemberResponse
     */
    deleteProjectMemberWithOptions(userId: string, projectId: string, request: DeleteProjectMemberRequest, headers: DeleteProjectMemberHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteProjectMemberResponse>;
    /**
     * 删除项目成员
     *
     * @param request - DeleteProjectMemberRequest
     * @returns DeleteProjectMemberResponse
     */
    deleteProjectMember(userId: string, projectId: string, request: DeleteProjectMemberRequest): Promise<DeleteProjectMemberResponse>;
    /**
     * 删除任务
     *
     * @param headers - DeleteTaskHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteTaskResponse
     */
    deleteTaskWithOptions(userId: string, taskId: string, headers: DeleteTaskHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteTaskResponse>;
    /**
     * 删除任务
     * @returns DeleteTaskResponse
     */
    deleteTask(userId: string, taskId: string): Promise<DeleteTaskResponse>;
    /**
     * 根据企业Id获取部门
     *
     * @param request - GetDeptsByOrgIdRequest
     * @param headers - GetDeptsByOrgIdHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetDeptsByOrgIdResponse
     */
    getDeptsByOrgIdWithOptions(request: GetDeptsByOrgIdRequest, headers: GetDeptsByOrgIdHeaders, runtime: $Util.RuntimeOptions): Promise<GetDeptsByOrgIdResponse>;
    /**
     * 根据企业Id获取部门
     *
     * @param request - GetDeptsByOrgIdRequest
     * @returns GetDeptsByOrgIdResponse
     */
    getDeptsByOrgId(request: GetDeptsByOrgIdRequest): Promise<GetDeptsByOrgIdResponse>;
    /**
     * 根据企业Id获取企业内的员工信息
     *
     * @param request - GetEmpsByOrgIdRequest
     * @param headers - GetEmpsByOrgIdHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetEmpsByOrgIdResponse
     */
    getEmpsByOrgIdWithOptions(request: GetEmpsByOrgIdRequest, headers: GetEmpsByOrgIdHeaders, runtime: $Util.RuntimeOptions): Promise<GetEmpsByOrgIdResponse>;
    /**
     * 根据企业Id获取企业内的员工信息
     *
     * @param request - GetEmpsByOrgIdRequest
     * @returns GetEmpsByOrgIdResponse
     */
    getEmpsByOrgId(request: GetEmpsByOrgIdRequest): Promise<GetEmpsByOrgIdResponse>;
    /**
     * 批量获取任务详情
     *
     * @param request - GetOrganizatioTaskByIdsRequest
     * @param headers - GetOrganizatioTaskByIdsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetOrganizatioTaskByIdsResponse
     */
    getOrganizatioTaskByIdsWithOptions(userId: string, request: GetOrganizatioTaskByIdsRequest, headers: GetOrganizatioTaskByIdsHeaders, runtime: $Util.RuntimeOptions): Promise<GetOrganizatioTaskByIdsResponse>;
    /**
     * 批量获取任务详情
     *
     * @param request - GetOrganizatioTaskByIdsRequest
     * @returns GetOrganizatioTaskByIdsResponse
     */
    getOrganizatioTaskByIds(userId: string, request: GetOrganizatioTaskByIdsRequest): Promise<GetOrganizatioTaskByIdsResponse>;
    /**
     * 获取企业优先级列表
     *
     * @param headers - GetOrganizationPriorityListHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetOrganizationPriorityListResponse
     */
    getOrganizationPriorityListWithOptions(userId: string, headers: GetOrganizationPriorityListHeaders, runtime: $Util.RuntimeOptions): Promise<GetOrganizationPriorityListResponse>;
    /**
     * 获取企业优先级列表
     * @returns GetOrganizationPriorityListResponse
     */
    getOrganizationPriorityList(userId: string): Promise<GetOrganizationPriorityListResponse>;
    /**
     * 获取自由任务详情
     *
     * @param headers - GetOrganizationTaskHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetOrganizationTaskResponse
     */
    getOrganizationTaskWithOptions(taskId: string, userId: string, headers: GetOrganizationTaskHeaders, runtime: $Util.RuntimeOptions): Promise<GetOrganizationTaskResponse>;
    /**
     * 获取自由任务详情
     * @returns GetOrganizationTaskResponse
     */
    getOrganizationTask(taskId: string, userId: string): Promise<GetOrganizationTaskResponse>;
    /**
     * 查询可见的项目分组
     *
     * @param request - GetProjectGroupRequest
     * @param headers - GetProjectGroupHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetProjectGroupResponse
     */
    getProjectGroupWithOptions(userId: string, request: GetProjectGroupRequest, headers: GetProjectGroupHeaders, runtime: $Util.RuntimeOptions): Promise<GetProjectGroupResponse>;
    /**
     * 查询可见的项目分组
     *
     * @param request - GetProjectGroupRequest
     * @returns GetProjectGroupResponse
     */
    getProjectGroup(userId: string, request: GetProjectGroupRequest): Promise<GetProjectGroupResponse>;
    /**
     * 获取项目成员
     *
     * @param request - GetProjectMemebersRequest
     * @param headers - GetProjectMemebersHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetProjectMemebersResponse
     */
    getProjectMemebersWithOptions(userId: string, projectId: string, request: GetProjectMemebersRequest, headers: GetProjectMemebersHeaders, runtime: $Util.RuntimeOptions): Promise<GetProjectMemebersResponse>;
    /**
     * 获取项目成员
     *
     * @param request - GetProjectMemebersRequest
     * @returns GetProjectMemebersResponse
     */
    getProjectMemebers(userId: string, projectId: string, request: GetProjectMemebersRequest): Promise<GetProjectMemebersResponse>;
    /**
     * 查询项目状态
     *
     * @param headers - GetProjectStatusListHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetProjectStatusListResponse
     */
    getProjectStatusListWithOptions(userId: string, projectId: string, headers: GetProjectStatusListHeaders, runtime: $Util.RuntimeOptions): Promise<GetProjectStatusListResponse>;
    /**
     * 查询项目状态
     * @returns GetProjectStatusListResponse
     */
    getProjectStatusList(userId: string, projectId: string): Promise<GetProjectStatusListResponse>;
    /**
     * 获取任务详情
     *
     * @param request - GetTaskByIdsRequest
     * @param headers - GetTaskByIdsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetTaskByIdsResponse
     */
    getTaskByIdsWithOptions(userId: string, request: GetTaskByIdsRequest, headers: GetTaskByIdsHeaders, runtime: $Util.RuntimeOptions): Promise<GetTaskByIdsResponse>;
    /**
     * 获取任务详情
     *
     * @param request - GetTaskByIdsRequest
     * @returns GetTaskByIdsResponse
     */
    getTaskByIds(userId: string, request: GetTaskByIdsRequest): Promise<GetTaskByIdsResponse>;
    /**
     * 获取Teambition企业Id
     *
     * @param request - GetTbOrgIdByDingOrgIdRequest
     * @param headers - GetTbOrgIdByDingOrgIdHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetTbOrgIdByDingOrgIdResponse
     */
    getTbOrgIdByDingOrgIdWithOptions(request: GetTbOrgIdByDingOrgIdRequest, headers: GetTbOrgIdByDingOrgIdHeaders, runtime: $Util.RuntimeOptions): Promise<GetTbOrgIdByDingOrgIdResponse>;
    /**
     * 获取Teambition企业Id
     *
     * @param request - GetTbOrgIdByDingOrgIdRequest
     * @returns GetTbOrgIdByDingOrgIdResponse
     */
    getTbOrgIdByDingOrgId(request: GetTbOrgIdByDingOrgIdRequest): Promise<GetTbOrgIdByDingOrgIdResponse>;
    /**
     * 获取项目灰度标
     *
     * @param request - GetTbProjectGrayRequest
     * @param headers - GetTbProjectGrayHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetTbProjectGrayResponse
     */
    getTbProjectGrayWithOptions(request: GetTbProjectGrayRequest, headers: GetTbProjectGrayHeaders, runtime: $Util.RuntimeOptions): Promise<GetTbProjectGrayResponse>;
    /**
     * 获取项目灰度标
     *
     * @param request - GetTbProjectGrayRequest
     * @returns GetTbProjectGrayResponse
     */
    getTbProjectGray(request: GetTbProjectGrayRequest): Promise<GetTbProjectGrayResponse>;
    /**
     * 获取项目来源
     *
     * @param headers - GetTbProjectSourceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetTbProjectSourceResponse
     */
    getTbProjectSourceWithOptions(headers: GetTbProjectSourceHeaders, runtime: $Util.RuntimeOptions): Promise<GetTbProjectSourceResponse>;
    /**
     * 获取项目来源
     * @returns GetTbProjectSourceResponse
     */
    getTbProjectSource(): Promise<GetTbProjectSourceResponse>;
    /**
     * 根据钉钉UserId获取Teambition用户Id
     *
     * @param request - GetTbUserIdByStaffIdRequest
     * @param headers - GetTbUserIdByStaffIdHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetTbUserIdByStaffIdResponse
     */
    getTbUserIdByStaffIdWithOptions(request: GetTbUserIdByStaffIdRequest, headers: GetTbUserIdByStaffIdHeaders, runtime: $Util.RuntimeOptions): Promise<GetTbUserIdByStaffIdResponse>;
    /**
     * 根据钉钉UserId获取Teambition用户Id
     *
     * @param request - GetTbUserIdByStaffIdRequest
     * @returns GetTbUserIdByStaffIdResponse
     */
    getTbUserIdByStaffId(request: GetTbUserIdByStaffIdRequest): Promise<GetTbUserIdByStaffIdResponse>;
    /**
     * 获取用户加入的项目
     *
     * @param request - GetUserJoinedProjectRequest
     * @param headers - GetUserJoinedProjectHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetUserJoinedProjectResponse
     */
    getUserJoinedProjectWithOptions(userId: string, request: GetUserJoinedProjectRequest, headers: GetUserJoinedProjectHeaders, runtime: $Util.RuntimeOptions): Promise<GetUserJoinedProjectResponse>;
    /**
     * 获取用户加入的项目
     *
     * @param request - GetUserJoinedProjectRequest
     * @returns GetUserJoinedProjectResponse
     */
    getUserJoinedProject(userId: string, request: GetUserJoinedProjectRequest): Promise<GetUserJoinedProjectResponse>;
    /**
     * 查询项目
     *
     * @param request - QueryProjectRequest
     * @param headers - QueryProjectHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryProjectResponse
     */
    queryProjectWithOptions(userId: string, request: QueryProjectRequest, headers: QueryProjectHeaders, runtime: $Util.RuntimeOptions): Promise<QueryProjectResponse>;
    /**
     * 查询项目
     *
     * @param request - QueryProjectRequest
     * @returns QueryProjectResponse
     */
    queryProject(userId: string, request: QueryProjectRequest): Promise<QueryProjectResponse>;
    /**
     * 查询项目中的任务
     *
     * @param request - QueryTaskOfProjectRequest
     * @param headers - QueryTaskOfProjectHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryTaskOfProjectResponse
     */
    queryTaskOfProjectWithOptions(userId: string, projectId: string, request: QueryTaskOfProjectRequest, headers: QueryTaskOfProjectHeaders, runtime: $Util.RuntimeOptions): Promise<QueryTaskOfProjectResponse>;
    /**
     * 查询项目中的任务
     *
     * @param request - QueryTaskOfProjectRequest
     * @returns QueryTaskOfProjectResponse
     */
    queryTaskOfProject(userId: string, projectId: string, request: QueryTaskOfProjectRequest): Promise<QueryTaskOfProjectResponse>;
    /**
     * 获取任务列表
     *
     * @param request - SeachTaskStageRequest
     * @param headers - SeachTaskStageHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SeachTaskStageResponse
     */
    seachTaskStageWithOptions(userId: string, projectId: string, request: SeachTaskStageRequest, headers: SeachTaskStageHeaders, runtime: $Util.RuntimeOptions): Promise<SeachTaskStageResponse>;
    /**
     * 获取任务列表
     *
     * @param request - SeachTaskStageRequest
     * @returns SeachTaskStageResponse
     */
    seachTaskStage(userId: string, projectId: string, request: SeachTaskStageRequest): Promise<SeachTaskStageResponse>;
    /**
     * 通过TQL搜索自由任务和项目任务ID。
     *
     * @param request - SearchAllTasksByTqlRequest
     * @param headers - SearchAllTasksByTqlHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SearchAllTasksByTqlResponse
     */
    searchAllTasksByTqlWithOptions(userId: string, request: SearchAllTasksByTqlRequest, headers: SearchAllTasksByTqlHeaders, runtime: $Util.RuntimeOptions): Promise<SearchAllTasksByTqlResponse>;
    /**
     * 通过TQL搜索自由任务和项目任务ID。
     *
     * @param request - SearchAllTasksByTqlRequest
     * @returns SearchAllTasksByTqlResponse
     */
    searchAllTasksByTql(userId: string, request: SearchAllTasksByTqlRequest): Promise<SearchAllTasksByTqlResponse>;
    /**
     * 查询企业自定义字段
     *
     * @param request - SearchOranizationCustomfieldRequest
     * @param headers - SearchOranizationCustomfieldHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SearchOranizationCustomfieldResponse
     */
    searchOranizationCustomfieldWithOptions(userId: string, request: SearchOranizationCustomfieldRequest, headers: SearchOranizationCustomfieldHeaders, runtime: $Util.RuntimeOptions): Promise<SearchOranizationCustomfieldResponse>;
    /**
     * 查询企业自定义字段
     *
     * @param request - SearchOranizationCustomfieldRequest
     * @returns SearchOranizationCustomfieldResponse
     */
    searchOranizationCustomfield(userId: string, request: SearchOranizationCustomfieldRequest): Promise<SearchOranizationCustomfieldResponse>;
    /**
     * 查询项目自定义字段
     *
     * @param request - SearchProjectCustomfieldRequest
     * @param headers - SearchProjectCustomfieldHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SearchProjectCustomfieldResponse
     */
    searchProjectCustomfieldWithOptions(userId: string, projectId: string, request: SearchProjectCustomfieldRequest, headers: SearchProjectCustomfieldHeaders, runtime: $Util.RuntimeOptions): Promise<SearchProjectCustomfieldResponse>;
    /**
     * 查询项目自定义字段
     *
     * @param request - SearchProjectCustomfieldRequest
     * @returns SearchProjectCustomfieldResponse
     */
    searchProjectCustomfield(userId: string, projectId: string, request: SearchProjectCustomfieldRequest): Promise<SearchProjectCustomfieldResponse>;
    /**
     * 按项目模板名字搜索企业自定义模板
     *
     * @param request - SearchProjectTemplateRequest
     * @param headers - SearchProjectTemplateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SearchProjectTemplateResponse
     */
    searchProjectTemplateWithOptions(userId: string, request: SearchProjectTemplateRequest, headers: SearchProjectTemplateHeaders, runtime: $Util.RuntimeOptions): Promise<SearchProjectTemplateResponse>;
    /**
     * 按项目模板名字搜索企业自定义模板
     *
     * @param request - SearchProjectTemplateRequest
     * @returns SearchProjectTemplateResponse
     */
    searchProjectTemplate(userId: string, request: SearchProjectTemplateRequest): Promise<SearchProjectTemplateResponse>;
    /**
     * 查询任务工作流
     *
     * @param request - SearchTaskFlowRequest
     * @param headers - SearchTaskFlowHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SearchTaskFlowResponse
     */
    searchTaskFlowWithOptions(userId: string, projectId: string, request: SearchTaskFlowRequest, headers: SearchTaskFlowHeaders, runtime: $Util.RuntimeOptions): Promise<SearchTaskFlowResponse>;
    /**
     * 查询任务工作流
     *
     * @param request - SearchTaskFlowRequest
     * @returns SearchTaskFlowResponse
     */
    searchTaskFlow(userId: string, projectId: string, request: SearchTaskFlowRequest): Promise<SearchTaskFlowResponse>;
    /**
     * 查询任务分组
     *
     * @param request - SearchTaskListRequest
     * @param headers - SearchTaskListHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SearchTaskListResponse
     */
    searchTaskListWithOptions(userId: string, projectId: string, request: SearchTaskListRequest, headers: SearchTaskListHeaders, runtime: $Util.RuntimeOptions): Promise<SearchTaskListResponse>;
    /**
     * 查询任务分组
     *
     * @param request - SearchTaskListRequest
     * @returns SearchTaskListResponse
     */
    searchTaskList(userId: string, projectId: string, request: SearchTaskListRequest): Promise<SearchTaskListResponse>;
    /**
     * 搜索任务工作流状态
     *
     * @param request - SearchTaskflowStatusRequest
     * @param headers - SearchTaskflowStatusHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SearchTaskflowStatusResponse
     */
    searchTaskflowStatusWithOptions(userId: string, projectId: string, request: SearchTaskflowStatusRequest, headers: SearchTaskflowStatusHeaders, runtime: $Util.RuntimeOptions): Promise<SearchTaskflowStatusResponse>;
    /**
     * 搜索任务工作流状态
     *
     * @param request - SearchTaskflowStatusRequest
     * @returns SearchTaskflowStatusResponse
     */
    searchTaskflowStatus(userId: string, projectId: string, request: SearchTaskflowStatusRequest): Promise<SearchTaskflowStatusResponse>;
    /**
     * 查询用户任务列表
     *
     * @param request - SearchUserTaskRequest
     * @param headers - SearchUserTaskHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SearchUserTaskResponse
     */
    searchUserTaskWithOptions(userId: string, request: SearchUserTaskRequest, headers: SearchUserTaskHeaders, runtime: $Util.RuntimeOptions): Promise<SearchUserTaskResponse>;
    /**
     * 查询用户任务列表
     *
     * @param request - SearchUserTaskRequest
     * @returns SearchUserTaskResponse
     */
    searchUserTask(userId: string, request: SearchUserTaskRequest): Promise<SearchUserTaskResponse>;
    /**
     * 归档项目
     *
     * @param headers - SuspendProjectHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SuspendProjectResponse
     */
    suspendProjectWithOptions(projectId: string, userId: string, headers: SuspendProjectHeaders, runtime: $Util.RuntimeOptions): Promise<SuspendProjectResponse>;
    /**
     * 归档项目
     * @returns SuspendProjectResponse
     */
    suspendProject(projectId: string, userId: string): Promise<SuspendProjectResponse>;
    /**
     * 恢复项目归档
     *
     * @param headers - UnSuspendProjectHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UnSuspendProjectResponse
     */
    unSuspendProjectWithOptions(projectId: string, userId: string, headers: UnSuspendProjectHeaders, runtime: $Util.RuntimeOptions): Promise<UnSuspendProjectResponse>;
    /**
     * 恢复项目归档
     * @returns UnSuspendProjectResponse
     */
    unSuspendProject(projectId: string, userId: string): Promise<UnSuspendProjectResponse>;
    /**
     * 更新任务自定义字段的值
     *
     * @param request - UpdateCustomfieldValueRequest
     * @param headers - UpdateCustomfieldValueHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateCustomfieldValueResponse
     */
    updateCustomfieldValueWithOptions(userId: string, taskId: string, request: UpdateCustomfieldValueRequest, headers: UpdateCustomfieldValueHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateCustomfieldValueResponse>;
    /**
     * 更新任务自定义字段的值
     *
     * @param request - UpdateCustomfieldValueRequest
     * @returns UpdateCustomfieldValueResponse
     */
    updateCustomfieldValue(userId: string, taskId: string, request: UpdateCustomfieldValueRequest): Promise<UpdateCustomfieldValueResponse>;
    /**
     * 更改自由任务标题
     *
     * @param request - UpdateOrganizationTaskContentRequest
     * @param headers - UpdateOrganizationTaskContentHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateOrganizationTaskContentResponse
     */
    updateOrganizationTaskContentWithOptions(taskId: string, userId: string, request: UpdateOrganizationTaskContentRequest, headers: UpdateOrganizationTaskContentHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateOrganizationTaskContentResponse>;
    /**
     * 更改自由任务标题
     *
     * @param request - UpdateOrganizationTaskContentRequest
     * @returns UpdateOrganizationTaskContentResponse
     */
    updateOrganizationTaskContent(taskId: string, userId: string, request: UpdateOrganizationTaskContentRequest): Promise<UpdateOrganizationTaskContentResponse>;
    /**
     * 更新自由任务截止时间
     *
     * @param request - UpdateOrganizationTaskDueDateRequest
     * @param headers - UpdateOrganizationTaskDueDateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateOrganizationTaskDueDateResponse
     */
    updateOrganizationTaskDueDateWithOptions(taskId: string, userId: string, request: UpdateOrganizationTaskDueDateRequest, headers: UpdateOrganizationTaskDueDateHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateOrganizationTaskDueDateResponse>;
    /**
     * 更新自由任务截止时间
     *
     * @param request - UpdateOrganizationTaskDueDateRequest
     * @returns UpdateOrganizationTaskDueDateResponse
     */
    updateOrganizationTaskDueDate(taskId: string, userId: string, request: UpdateOrganizationTaskDueDateRequest): Promise<UpdateOrganizationTaskDueDateResponse>;
    /**
     * 更改自由任务执行者
     *
     * @param request - UpdateOrganizationTaskExecutorRequest
     * @param headers - UpdateOrganizationTaskExecutorHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateOrganizationTaskExecutorResponse
     */
    updateOrganizationTaskExecutorWithOptions(taskId: string, userId: string, request: UpdateOrganizationTaskExecutorRequest, headers: UpdateOrganizationTaskExecutorHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateOrganizationTaskExecutorResponse>;
    /**
     * 更改自由任务执行者
     *
     * @param request - UpdateOrganizationTaskExecutorRequest
     * @returns UpdateOrganizationTaskExecutorResponse
     */
    updateOrganizationTaskExecutor(taskId: string, userId: string, request: UpdateOrganizationTaskExecutorRequest): Promise<UpdateOrganizationTaskExecutorResponse>;
    /**
     * 更新自由任务参与者
     *
     * @param request - UpdateOrganizationTaskInvolveMembersRequest
     * @param headers - UpdateOrganizationTaskInvolveMembersHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateOrganizationTaskInvolveMembersResponse
     */
    updateOrganizationTaskInvolveMembersWithOptions(taskId: string, userId: string, request: UpdateOrganizationTaskInvolveMembersRequest, headers: UpdateOrganizationTaskInvolveMembersHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateOrganizationTaskInvolveMembersResponse>;
    /**
     * 更新自由任务参与者
     *
     * @param request - UpdateOrganizationTaskInvolveMembersRequest
     * @returns UpdateOrganizationTaskInvolveMembersResponse
     */
    updateOrganizationTaskInvolveMembers(taskId: string, userId: string, request: UpdateOrganizationTaskInvolveMembersRequest): Promise<UpdateOrganizationTaskInvolveMembersResponse>;
    /**
     * 更改自由任务备注
     *
     * @param request - UpdateOrganizationTaskNoteRequest
     * @param headers - UpdateOrganizationTaskNoteHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateOrganizationTaskNoteResponse
     */
    updateOrganizationTaskNoteWithOptions(taskId: string, userId: string, request: UpdateOrganizationTaskNoteRequest, headers: UpdateOrganizationTaskNoteHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateOrganizationTaskNoteResponse>;
    /**
     * 更改自由任务备注
     *
     * @param request - UpdateOrganizationTaskNoteRequest
     * @returns UpdateOrganizationTaskNoteResponse
     */
    updateOrganizationTaskNote(taskId: string, userId: string, request: UpdateOrganizationTaskNoteRequest): Promise<UpdateOrganizationTaskNoteResponse>;
    /**
     * 更新自由任务优先级
     *
     * @param request - UpdateOrganizationTaskPriorityRequest
     * @param headers - UpdateOrganizationTaskPriorityHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateOrganizationTaskPriorityResponse
     */
    updateOrganizationTaskPriorityWithOptions(taskId: string, userId: string, request: UpdateOrganizationTaskPriorityRequest, headers: UpdateOrganizationTaskPriorityHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateOrganizationTaskPriorityResponse>;
    /**
     * 更新自由任务优先级
     *
     * @param request - UpdateOrganizationTaskPriorityRequest
     * @returns UpdateOrganizationTaskPriorityResponse
     */
    updateOrganizationTaskPriority(taskId: string, userId: string, request: UpdateOrganizationTaskPriorityRequest): Promise<UpdateOrganizationTaskPriorityResponse>;
    /**
     * 更改自由任务状态
     *
     * @param request - UpdateOrganizationTaskStatusRequest
     * @param headers - UpdateOrganizationTaskStatusHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateOrganizationTaskStatusResponse
     */
    updateOrganizationTaskStatusWithOptions(taskId: string, userId: string, request: UpdateOrganizationTaskStatusRequest, headers: UpdateOrganizationTaskStatusHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateOrganizationTaskStatusResponse>;
    /**
     * 更改自由任务状态
     *
     * @param request - UpdateOrganizationTaskStatusRequest
     * @returns UpdateOrganizationTaskStatusResponse
     */
    updateOrganizationTaskStatus(taskId: string, userId: string, request: UpdateOrganizationTaskStatusRequest): Promise<UpdateOrganizationTaskStatusResponse>;
    /**
     * 更新项目的分组
     *
     * @param request - UpdateProjectGroupRequest
     * @param headers - UpdateProjectGroupHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateProjectGroupResponse
     */
    updateProjectGroupWithOptions(userId: string, projectId: string, request: UpdateProjectGroupRequest, headers: UpdateProjectGroupHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateProjectGroupResponse>;
    /**
     * 更新项目的分组
     *
     * @param request - UpdateProjectGroupRequest
     * @returns UpdateProjectGroupResponse
     */
    updateProjectGroup(userId: string, projectId: string, request: UpdateProjectGroupRequest): Promise<UpdateProjectGroupResponse>;
    /**
     * 更新任务标题
     *
     * @param request - UpdateTaskContentRequest
     * @param headers - UpdateTaskContentHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateTaskContentResponse
     */
    updateTaskContentWithOptions(userId: string, taskId: string, request: UpdateTaskContentRequest, headers: UpdateTaskContentHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateTaskContentResponse>;
    /**
     * 更新任务标题
     *
     * @param request - UpdateTaskContentRequest
     * @returns UpdateTaskContentResponse
     */
    updateTaskContent(userId: string, taskId: string, request: UpdateTaskContentRequest): Promise<UpdateTaskContentResponse>;
    /**
     * 更新任务截止时间
     *
     * @param request - UpdateTaskDueDateRequest
     * @param headers - UpdateTaskDueDateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateTaskDueDateResponse
     */
    updateTaskDueDateWithOptions(userId: string, taskId: string, request: UpdateTaskDueDateRequest, headers: UpdateTaskDueDateHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateTaskDueDateResponse>;
    /**
     * 更新任务截止时间
     *
     * @param request - UpdateTaskDueDateRequest
     * @returns UpdateTaskDueDateResponse
     */
    updateTaskDueDate(userId: string, taskId: string, request: UpdateTaskDueDateRequest): Promise<UpdateTaskDueDateResponse>;
    /**
     * 更新任务执行者
     *
     * @param request - UpdateTaskExecutorRequest
     * @param headers - UpdateTaskExecutorHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateTaskExecutorResponse
     */
    updateTaskExecutorWithOptions(userId: string, taskId: string, request: UpdateTaskExecutorRequest, headers: UpdateTaskExecutorHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateTaskExecutorResponse>;
    /**
     * 更新任务执行者
     *
     * @param request - UpdateTaskExecutorRequest
     * @returns UpdateTaskExecutorResponse
     */
    updateTaskExecutor(userId: string, taskId: string, request: UpdateTaskExecutorRequest): Promise<UpdateTaskExecutorResponse>;
    /**
     * 更新任务参与者
     *
     * @param request - UpdateTaskInvolvemembersRequest
     * @param headers - UpdateTaskInvolvemembersHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateTaskInvolvemembersResponse
     */
    updateTaskInvolvemembersWithOptions(userId: string, taskId: string, request: UpdateTaskInvolvemembersRequest, headers: UpdateTaskInvolvemembersHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateTaskInvolvemembersResponse>;
    /**
     * 更新任务参与者
     *
     * @param request - UpdateTaskInvolvemembersRequest
     * @returns UpdateTaskInvolvemembersResponse
     */
    updateTaskInvolvemembers(userId: string, taskId: string, request: UpdateTaskInvolvemembersRequest): Promise<UpdateTaskInvolvemembersResponse>;
    /**
     * 更新任务备注
     *
     * @param request - UpdateTaskNoteRequest
     * @param headers - UpdateTaskNoteHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateTaskNoteResponse
     */
    updateTaskNoteWithOptions(userId: string, taskId: string, request: UpdateTaskNoteRequest, headers: UpdateTaskNoteHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateTaskNoteResponse>;
    /**
     * 更新任务备注
     *
     * @param request - UpdateTaskNoteRequest
     * @returns UpdateTaskNoteResponse
     */
    updateTaskNote(userId: string, taskId: string, request: UpdateTaskNoteRequest): Promise<UpdateTaskNoteResponse>;
    /**
     * 更新任务优先级
     *
     * @param request - UpdateTaskPriorityRequest
     * @param headers - UpdateTaskPriorityHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateTaskPriorityResponse
     */
    updateTaskPriorityWithOptions(userId: string, taskId: string, request: UpdateTaskPriorityRequest, headers: UpdateTaskPriorityHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateTaskPriorityResponse>;
    /**
     * 更新任务优先级
     *
     * @param request - UpdateTaskPriorityRequest
     * @returns UpdateTaskPriorityResponse
     */
    updateTaskPriority(userId: string, taskId: string, request: UpdateTaskPriorityRequest): Promise<UpdateTaskPriorityResponse>;
    /**
     * 更新任务列表
     *
     * @param request - UpdateTaskStageRequest
     * @param headers - UpdateTaskStageHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateTaskStageResponse
     */
    updateTaskStageWithOptions(userId: string, taskId: string, request: UpdateTaskStageRequest, headers: UpdateTaskStageHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateTaskStageResponse>;
    /**
     * 更新任务列表
     *
     * @param request - UpdateTaskStageRequest
     * @returns UpdateTaskStageResponse
     */
    updateTaskStage(userId: string, taskId: string, request: UpdateTaskStageRequest): Promise<UpdateTaskStageResponse>;
    /**
     * 更新任务开始时间
     *
     * @param request - UpdateTaskStartdateRequest
     * @param headers - UpdateTaskStartdateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateTaskStartdateResponse
     */
    updateTaskStartdateWithOptions(userId: string, taskId: string, request: UpdateTaskStartdateRequest, headers: UpdateTaskStartdateHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateTaskStartdateResponse>;
    /**
     * 更新任务开始时间
     *
     * @param request - UpdateTaskStartdateRequest
     * @returns UpdateTaskStartdateResponse
     */
    updateTaskStartdate(userId: string, taskId: string, request: UpdateTaskStartdateRequest): Promise<UpdateTaskStartdateResponse>;
    /**
     * 更新任务工作流状态
     *
     * @param request - UpdateTaskTaskflowstatusRequest
     * @param headers - UpdateTaskTaskflowstatusHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateTaskTaskflowstatusResponse
     */
    updateTaskTaskflowstatusWithOptions(userId: string, taskId: string, request: UpdateTaskTaskflowstatusRequest, headers: UpdateTaskTaskflowstatusHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateTaskTaskflowstatusResponse>;
    /**
     * 更新任务工作流状态
     *
     * @param request - UpdateTaskTaskflowstatusRequest
     * @returns UpdateTaskTaskflowstatusResponse
     */
    updateTaskTaskflowstatus(userId: string, taskId: string, request: UpdateTaskTaskflowstatusRequest): Promise<UpdateTaskTaskflowstatusResponse>;
    /**
     * 更新工时审批对象
     *
     * @param request - UpdateWorkTimeApproveRequest
     * @param headers - UpdateWorkTimeApproveHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateWorkTimeApproveResponse
     */
    updateWorkTimeApproveWithOptions(userId: string, approveOpenId: string, request: UpdateWorkTimeApproveRequest, headers: UpdateWorkTimeApproveHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateWorkTimeApproveResponse>;
    /**
     * 更新工时审批对象
     *
     * @param request - UpdateWorkTimeApproveRequest
     * @returns UpdateWorkTimeApproveResponse
     */
    updateWorkTimeApprove(userId: string, approveOpenId: string, request: UpdateWorkTimeApproveRequest): Promise<UpdateWorkTimeApproveResponse>;
}
