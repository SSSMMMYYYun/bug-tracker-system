/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class CheckOpportunityResultHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckOpportunityResultRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    belongToPhoneNum?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    contactPhoneNum?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    deptId?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    marketCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckOpportunityResultResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    bizSuccess?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckOpportunityResultResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CheckOpportunityResultResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateClueTempHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateClueTempRequest extends $tea.Model {
    address?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    contactName?: string;
    deptId?: number;
    /**
     * **if can be null:**
     * false
     */
    ext?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    phoneNum?: string;
    position?: string;
    productCode?: string;
    salesId?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    source?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateClueTempResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateClueTempResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateClueTempResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateNoteForIsvHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateNoteForIsvRequest extends $tea.Model {
    contactName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    contactPhoneNum?: string;
    contactTitle?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * **if can be null:**
     * false
     */
    content?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    inputPhoneNum?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateNoteForIsvResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateNoteForIsvResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateNoteForIsvResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOpportunityHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOpportunityRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    belongToPhoneNum?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    contactPhoneNum?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    deptId?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    marketCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOpportunityResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTradeOrderHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTradeOrderRequest extends $tea.Model {
    orderId?: number;
    outerOrderId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTradeOrderResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    articleCode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    articleItemCode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    articleItemName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    articleName?: string;
    closeTime?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    createTime?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    fee?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    isvCropId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    orderId?: number;
    outerOrderId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    payFee?: number;
    payTime?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    quantity?: number;
    refundTime?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    status?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTradeOrderResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryTradeOrderResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * isv检查商机创建是否符合预期
     *
     * @param request - CheckOpportunityResultRequest
     * @param headers - CheckOpportunityResultHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CheckOpportunityResultResponse
     */
    checkOpportunityResultWithOptions(request: CheckOpportunityResultRequest, headers: CheckOpportunityResultHeaders, runtime: $Util.RuntimeOptions): Promise<CheckOpportunityResultResponse>;
    /**
     * isv检查商机创建是否符合预期
     *
     * @param request - CheckOpportunityResultRequest
     * @returns CheckOpportunityResultResponse
     */
    checkOpportunityResult(request: CheckOpportunityResultRequest): Promise<CheckOpportunityResultResponse>;
    /**
     * 用于客户跟进线索创建
     *
     * @param request - CreateClueTempRequest
     * @param headers - CreateClueTempHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateClueTempResponse
     */
    createClueTempWithOptions(request: CreateClueTempRequest, headers: CreateClueTempHeaders, runtime: $Util.RuntimeOptions): Promise<CreateClueTempResponse>;
    /**
     * 用于客户跟进线索创建
     *
     * @param request - CreateClueTempRequest
     * @returns CreateClueTempResponse
     */
    createClueTemp(request: CreateClueTempRequest): Promise<CreateClueTempResponse>;
    /**
     * 创建小记
     *
     * @param request - CreateNoteForIsvRequest
     * @param headers - CreateNoteForIsvHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateNoteForIsvResponse
     */
    createNoteForIsvWithOptions(request: CreateNoteForIsvRequest, headers: CreateNoteForIsvHeaders, runtime: $Util.RuntimeOptions): Promise<CreateNoteForIsvResponse>;
    /**
     * 创建小记
     *
     * @param request - CreateNoteForIsvRequest
     * @returns CreateNoteForIsvResponse
     */
    createNoteForIsv(request: CreateNoteForIsvRequest): Promise<CreateNoteForIsvResponse>;
    /**
     * isv创建商机
     *
     * @param request - CreateOpportunityRequest
     * @param headers - CreateOpportunityHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateOpportunityResponse
     */
    createOpportunityWithOptions(request: CreateOpportunityRequest, headers: CreateOpportunityHeaders, runtime: $Util.RuntimeOptions): Promise<CreateOpportunityResponse>;
    /**
     * isv创建商机
     *
     * @param request - CreateOpportunityRequest
     * @returns CreateOpportunityResponse
     */
    createOpportunity(request: CreateOpportunityRequest): Promise<CreateOpportunityResponse>;
    /**
     * 查询订单信息
     *
     * @param request - QueryTradeOrderRequest
     * @param headers - QueryTradeOrderHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryTradeOrderResponse
     */
    queryTradeOrderWithOptions(request: QueryTradeOrderRequest, headers: QueryTradeOrderHeaders, runtime: $Util.RuntimeOptions): Promise<QueryTradeOrderResponse>;
    /**
     * 查询订单信息
     *
     * @param request - QueryTradeOrderRequest
     * @returns QueryTradeOrderResponse
     */
    queryTradeOrder(request: QueryTradeOrderRequest): Promise<QueryTradeOrderResponse>;
}
