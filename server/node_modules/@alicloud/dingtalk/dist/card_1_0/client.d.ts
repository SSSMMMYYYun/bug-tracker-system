/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class PrivateDataValue extends $tea.Model {
    cardParamMap?: {
        [key: string]: string;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendSpaceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendSpaceRequest extends $tea.Model {
    coFeedOpenSpaceModel?: AppendSpaceRequestCoFeedOpenSpaceModel;
    imGroupOpenSpaceModel?: AppendSpaceRequestImGroupOpenSpaceModel;
    imRobotOpenSpaceModel?: AppendSpaceRequestImRobotOpenSpaceModel;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxx_yyyy_123456
     */
    outTrackId?: string;
    topOpenSpaceModel?: AppendSpaceRequestTopOpenSpaceModel;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendSpaceResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendSpaceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AppendSpaceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendSpaceWithDelegateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendSpaceWithDelegateRequest extends $tea.Model {
    coFeedOpenSpaceModel?: AppendSpaceWithDelegateRequestCoFeedOpenSpaceModel;
    imGroupOpenSpaceModel?: AppendSpaceWithDelegateRequestImGroupOpenSpaceModel;
    imRobotOpenSpaceModel?: AppendSpaceWithDelegateRequestImRobotOpenSpaceModel;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxx_yyyy_123456
     */
    outTrackId?: string;
    topOpenSpaceModel?: AppendSpaceWithDelegateRequestTopOpenSpaceModel;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendSpaceWithDelegateResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendSpaceWithDelegateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AppendSpaceWithDelegateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CloseTopCardHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CloseTopCardRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * example_open_conversation_id
     */
    openConversationId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * example_out_track_id
     */
    outTrackId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CloseTopCardResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CloseTopCardResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CloseTopCardResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CopyTemplateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CopyTemplateRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    templateId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CopyTemplateResponseBody extends $tea.Model {
    data?: CopyTemplateResponseBodyData;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CopyTemplateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CopyTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverRequest extends $tea.Model {
    callbackRouteKey?: string;
    /**
     * @example
     * STREAM
     */
    callbackType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    cardData?: CreateAndDeliverRequestCardData;
    /**
     * @remarks
     * This parameter is required.
     */
    cardTemplateId?: string;
    coFeedOpenDeliverModel?: CreateAndDeliverRequestCoFeedOpenDeliverModel;
    coFeedOpenSpaceModel?: CreateAndDeliverRequestCoFeedOpenSpaceModel;
    docOpenDeliverModel?: CreateAndDeliverRequestDocOpenDeliverModel;
    imGroupOpenDeliverModel?: CreateAndDeliverRequestImGroupOpenDeliverModel;
    imGroupOpenSpaceModel?: CreateAndDeliverRequestImGroupOpenSpaceModel;
    imRobotOpenDeliverModel?: CreateAndDeliverRequestImRobotOpenDeliverModel;
    imRobotOpenSpaceModel?: CreateAndDeliverRequestImRobotOpenSpaceModel;
    imSingleOpenDeliverModel?: CreateAndDeliverRequestImSingleOpenDeliverModel;
    imSingleOpenSpaceModel?: CreateAndDeliverRequestImSingleOpenSpaceModel;
    openDynamicDataConfig?: CreateAndDeliverRequestOpenDynamicDataConfig;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * dtv1.card//im_group.cidp4Gh*******VCQ==;im_robot.manager****67;im_robot.staff****89;co_feed.manager****67;one_box.cidp4Gh*******VCQ==;
     */
    openSpaceId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    outTrackId?: string;
    privateData?: {
        [key: string]: PrivateDataValue;
    };
    topOpenDeliverModel?: CreateAndDeliverRequestTopOpenDeliverModel;
    topOpenSpaceModel?: CreateAndDeliverRequestTopOpenSpaceModel;
    userId?: string;
    userIdType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverResponseBody extends $tea.Model {
    result?: CreateAndDeliverResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateAndDeliverResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateRequest extends $tea.Model {
    callbackRouteKey?: string;
    /**
     * @example
     * STREAM
     */
    callbackType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    cardData?: CreateAndDeliverWithDelegateRequestCardData;
    /**
     * @remarks
     * This parameter is required.
     */
    cardTemplateId?: string;
    coFeedOpenDeliverModel?: CreateAndDeliverWithDelegateRequestCoFeedOpenDeliverModel;
    coFeedOpenSpaceModel?: CreateAndDeliverWithDelegateRequestCoFeedOpenSpaceModel;
    docOpenDeliverModel?: CreateAndDeliverWithDelegateRequestDocOpenDeliverModel;
    imGroupOpenDeliverModel?: CreateAndDeliverWithDelegateRequestImGroupOpenDeliverModel;
    imGroupOpenSpaceModel?: CreateAndDeliverWithDelegateRequestImGroupOpenSpaceModel;
    imRobotOpenDeliverModel?: CreateAndDeliverWithDelegateRequestImRobotOpenDeliverModel;
    imRobotOpenSpaceModel?: CreateAndDeliverWithDelegateRequestImRobotOpenSpaceModel;
    imSingleOpenDeliverModel?: CreateAndDeliverWithDelegateRequestImSingleOpenDeliverModel;
    imSingleOpenSpaceModel?: CreateAndDeliverWithDelegateRequestImSingleOpenSpaceModel;
    openDynamicDataConfig?: CreateAndDeliverWithDelegateRequestOpenDynamicDataConfig;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * dtv1.card//im_group.cidp4Gh*******VCQ==;im_robot.manager****67;im_robot.staff****89;co_feed.manager****67;one_box.cidp4Gh*******VCQ==;
     */
    openSpaceId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    outTrackId?: string;
    privateData?: {
        [key: string]: PrivateDataValue;
    };
    topOpenDeliverModel?: CreateAndDeliverWithDelegateRequestTopOpenDeliverModel;
    topOpenSpaceModel?: CreateAndDeliverWithDelegateRequestTopOpenSpaceModel;
    userId?: string;
    userIdType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateResponseBody extends $tea.Model {
    result?: CreateAndDeliverWithDelegateResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateAndDeliverWithDelegateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardRequest extends $tea.Model {
    /**
     * @example
     * routekey-7931
     */
    callbackRouteKey?: string;
    /**
     * @example
     * STREAM
     */
    callbackType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    cardData?: CreateCardRequestCardData;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * b0aa776f-79ac-4e13-f838-749aae913bc7
     */
    cardTemplateId?: string;
    coFeedOpenSpaceModel?: CreateCardRequestCoFeedOpenSpaceModel;
    imGroupOpenSpaceModel?: CreateCardRequestImGroupOpenSpaceModel;
    imRobotOpenSpaceModel?: CreateCardRequestImRobotOpenSpaceModel;
    imSingleOpenSpaceModel?: CreateCardRequestImSingleOpenSpaceModel;
    openDynamicDataConfig?: CreateCardRequestOpenDynamicDataConfig;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * mycard-07921
     */
    outTrackId?: string;
    privateData?: {
        [key: string]: PrivateDataValue;
    };
    topOpenSpaceModel?: CreateCardRequestTopOpenSpaceModel;
    /**
     * @example
     * manager1234
     */
    userId?: string;
    userIdType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardResponseBody extends $tea.Model {
    result?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateCardResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardWithDelegateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardWithDelegateRequest extends $tea.Model {
    /**
     * @example
     * routekey-7931
     */
    callbackRouteKey?: string;
    /**
     * @example
     * STREAM
     */
    callbackType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    cardData?: CreateCardWithDelegateRequestCardData;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * b0aa776f-79ac-4e13-f838-749aae913bc7
     */
    cardTemplateId?: string;
    coFeedOpenSpaceModel?: CreateCardWithDelegateRequestCoFeedOpenSpaceModel;
    imGroupOpenSpaceModel?: CreateCardWithDelegateRequestImGroupOpenSpaceModel;
    imRobotOpenSpaceModel?: CreateCardWithDelegateRequestImRobotOpenSpaceModel;
    imSingleOpenSpaceModel?: CreateCardWithDelegateRequestImSingleOpenSpaceModel;
    openDynamicDataConfig?: CreateCardWithDelegateRequestOpenDynamicDataConfig;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * mycard-07921
     */
    outTrackId?: string;
    privateData?: {
        [key: string]: PrivateDataValue;
    };
    topOpenSpaceModel?: CreateCardWithDelegateRequestTopOpenSpaceModel;
    /**
     * @example
     * manager1234
     */
    userId?: string;
    userIdType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardWithDelegateResponseBody extends $tea.Model {
    result?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardWithDelegateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateCardWithDelegateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTemplateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTemplateRequest extends $tea.Model {
    appId?: string;
    creatorId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    extendType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTemplateResponseBody extends $tea.Model {
    data?: CreateTemplateResponseBodyData;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTemplateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteTemplateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteTemplateRequest extends $tea.Model {
    templateId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteTemplateResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteTemplateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeliverCardHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeliverCardRequest extends $tea.Model {
    coFeedOpenDeliverModel?: DeliverCardRequestCoFeedOpenDeliverModel;
    docOpenDeliverModel?: DeliverCardRequestDocOpenDeliverModel;
    imGroupOpenDeliverModel?: DeliverCardRequestImGroupOpenDeliverModel;
    imRobotOpenDeliverModel?: DeliverCardRequestImRobotOpenDeliverModel;
    imSingleOpenDeliverModel?: DeliverCardRequestImSingleOpenDeliverModel;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * dtv1.card//im_group.cidp4Gh*******VCQ==;im_robot.manager****67;co_feed.manager****67;one_box.cidp4Gh*******VCQ==
     */
    openSpaceId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * out_track_id_123456
     */
    outTrackId?: string;
    topOpenDeliverModel?: DeliverCardRequestTopOpenDeliverModel;
    /**
     * @example
     * 1
     */
    userIdType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeliverCardResponseBody extends $tea.Model {
    result?: DeliverCardResponseBodyResult[];
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeliverCardResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeliverCardResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeliverCardWithDelegateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeliverCardWithDelegateRequest extends $tea.Model {
    coFeedOpenDeliverModel?: DeliverCardWithDelegateRequestCoFeedOpenDeliverModel;
    docOpenDeliverModel?: DeliverCardWithDelegateRequestDocOpenDeliverModel;
    imGroupOpenDeliverModel?: DeliverCardWithDelegateRequestImGroupOpenDeliverModel;
    imRobotOpenDeliverModel?: DeliverCardWithDelegateRequestImRobotOpenDeliverModel;
    imSingleOpenDeliverModel?: DeliverCardWithDelegateRequestImSingleOpenDeliverModel;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * dtv1.card//im_group.cidp4Gh*******VCQ==;im_robot.manager****67;co_feed.manager****67;one_box.cidp4Gh*******VCQ==
     */
    openSpaceId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * out_track_id_123456
     */
    outTrackId?: string;
    topOpenDeliverModel?: DeliverCardWithDelegateRequestTopOpenDeliverModel;
    /**
     * @example
     * 1
     */
    userIdType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeliverCardWithDelegateResponseBody extends $tea.Model {
    result?: DeliverCardWithDelegateResponseBodyResult[];
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeliverCardWithDelegateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeliverCardWithDelegateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTemplateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTemplateRequest extends $tea.Model {
    templateId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTemplateResponseBody extends $tea.Model {
    data?: GetTemplateResponseBodyData;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTemplateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PublishTemplateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PublishTemplateRequest extends $tea.Model {
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    templateId?: string;
    templateSource?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PublishTemplateResponseBody extends $tea.Model {
    data?: PublishTemplateResponseBodyData;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PublishTemplateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: PublishTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RegisterCallbackHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RegisterCallbackRequest extends $tea.Model {
    /**
     * @example
     * mySecret
     */
    apiSecret?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * routeKey-12
     */
    callbackRouteKey?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * https://www.myurl/callback
     */
    callbackUrl?: string;
    forceUpdate?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RegisterCallbackResponseBody extends $tea.Model {
    result?: RegisterCallbackResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RegisterCallbackResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: RegisterCallbackResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RegisterCallbackWithDelegateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RegisterCallbackWithDelegateRequest extends $tea.Model {
    /**
     * @example
     * mySecret
     */
    apiSecret?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * routeKey-12
     */
    callbackRouteKey?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * https://www.myurl/callback
     */
    callbackUrl?: string;
    forceUpdate?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RegisterCallbackWithDelegateResponseBody extends $tea.Model {
    result?: RegisterCallbackWithDelegateResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RegisterCallbackWithDelegateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: RegisterCallbackWithDelegateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveTemplateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveTemplateRequest extends $tea.Model {
    name?: string;
    templateId?: string;
    templateSource?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveTemplateResponseBody extends $tea.Model {
    data?: SaveTemplateResponseBodyData;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveTemplateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SaveTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StreamingUpdateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StreamingUpdateRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    content?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    guid?: string;
    isError?: boolean;
    isFinalize?: boolean;
    isFull?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    key?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    outTrackId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StreamingUpdateResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StreamingUpdateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: StreamingUpdateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCardHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCardRequest extends $tea.Model {
    cardData?: UpdateCardRequestCardData;
    cardUpdateOptions?: UpdateCardRequestCardUpdateOptions;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    outTrackId?: string;
    privateData?: {
        [key: string]: PrivateDataValue;
    };
    userIdType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCardResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCardResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateCardResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCardWithDelegateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCardWithDelegateRequest extends $tea.Model {
    cardData?: UpdateCardWithDelegateRequestCardData;
    cardUpdateOptions?: UpdateCardWithDelegateRequestCardUpdateOptions;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    outTrackId?: string;
    privateData?: {
        [key: string]: PrivateDataValue;
    };
    userIdType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCardWithDelegateResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCardWithDelegateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateCardWithDelegateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendSpaceRequestCoFeedOpenSpaceModel extends $tea.Model {
    /**
     * @example
     * xxxx卡片
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendSpaceRequestImGroupOpenSpaceModelNotification extends $tea.Model {
    /**
     * @example
     * 你收到了一个卡片消息
     */
    alertContent?: string;
    notificationOff?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendSpaceRequestImGroupOpenSpaceModelSearchSupport extends $tea.Model {
    /**
     * @example
     * 卡片的具体描述
     */
    searchDesc?: string;
    /**
     * @example
     * @lALPDgQ9q8hFhlHNAXzNAqI
     */
    searchIcon?: string;
    /**
     * @example
     * {"zh_CN":"待办","zh_TW":"待辦","en_US":"ToDo"}
     */
    searchTypeName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendSpaceRequestImGroupOpenSpaceModel extends $tea.Model {
    lastMessageI18n?: {
        [key: string]: string;
    };
    notification?: AppendSpaceRequestImGroupOpenSpaceModelNotification;
    searchSupport?: AppendSpaceRequestImGroupOpenSpaceModelSearchSupport;
    supportForward?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendSpaceRequestImRobotOpenSpaceModelNotification extends $tea.Model {
    /**
     * @example
     * 你收到了一个卡片消息
     */
    alertContent?: string;
    notificationOff?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendSpaceRequestImRobotOpenSpaceModelSearchSupport extends $tea.Model {
    /**
     * @example
     * 卡片的具体描述
     */
    searchDesc?: string;
    /**
     * @example
     * @lALPDgQ9q8hFhlHNAXzNAqI
     */
    searchIcon?: string;
    /**
     * @example
     * {"zh_CN":"待办","zh_TW":"待辦","en_US":"ToDo"}
     */
    searchTypeName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendSpaceRequestImRobotOpenSpaceModel extends $tea.Model {
    lastMessageI18n?: {
        [key: string]: string;
    };
    notification?: AppendSpaceRequestImRobotOpenSpaceModelNotification;
    searchSupport?: AppendSpaceRequestImRobotOpenSpaceModelSearchSupport;
    supportForward?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendSpaceRequestTopOpenSpaceModel extends $tea.Model {
    /**
     * @example
     * ONE_BOX
     */
    spaceType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendSpaceWithDelegateRequestCoFeedOpenSpaceModel extends $tea.Model {
    /**
     * @example
     * xxxx卡片
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendSpaceWithDelegateRequestImGroupOpenSpaceModelNotification extends $tea.Model {
    /**
     * @example
     * 你收到了一个卡片消息
     */
    alertContent?: string;
    notificationOff?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendSpaceWithDelegateRequestImGroupOpenSpaceModelSearchSupport extends $tea.Model {
    /**
     * @example
     * 卡片的具体描述
     */
    searchDesc?: string;
    /**
     * @example
     * @lALPDgQ9q8hFhlHNAXzNAqI
     */
    searchIcon?: string;
    /**
     * @example
     * {"zh_CN":"待办","zh_TW":"待辦","en_US":"ToDo"}
     */
    searchTypeName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendSpaceWithDelegateRequestImGroupOpenSpaceModel extends $tea.Model {
    lastMessageI18n?: {
        [key: string]: string;
    };
    notification?: AppendSpaceWithDelegateRequestImGroupOpenSpaceModelNotification;
    searchSupport?: AppendSpaceWithDelegateRequestImGroupOpenSpaceModelSearchSupport;
    supportForward?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendSpaceWithDelegateRequestImRobotOpenSpaceModelNotification extends $tea.Model {
    /**
     * @example
     * 你收到了一个卡片消息
     */
    alertContent?: string;
    notificationOff?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendSpaceWithDelegateRequestImRobotOpenSpaceModelSearchSupport extends $tea.Model {
    /**
     * @example
     * 卡片的具体描述
     */
    searchDesc?: string;
    /**
     * @example
     * @lALPDgQ9q8hFhlHNAXzNAqI
     */
    searchIcon?: string;
    /**
     * @example
     * {"zh_CN":"待办","zh_TW":"待辦","en_US":"ToDo"}
     */
    searchTypeName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendSpaceWithDelegateRequestImRobotOpenSpaceModel extends $tea.Model {
    lastMessageI18n?: {
        [key: string]: string;
    };
    notification?: AppendSpaceWithDelegateRequestImRobotOpenSpaceModelNotification;
    searchSupport?: AppendSpaceWithDelegateRequestImRobotOpenSpaceModelSearchSupport;
    supportForward?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AppendSpaceWithDelegateRequestTopOpenSpaceModel extends $tea.Model {
    /**
     * @example
     * ONE_BOX
     */
    spaceType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CopyTemplateResponseBodyData extends $tea.Model {
    templateId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverRequestCardData extends $tea.Model {
    cardParamMap?: {
        [key: string]: string;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverRequestCoFeedOpenDeliverModel extends $tea.Model {
    /**
     * @example
     * xxx_biz_tag
     */
    bizTag?: string;
    /**
     * @example
     * 1665473229000
     */
    gmtTimeLine?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverRequestCoFeedOpenSpaceModel extends $tea.Model {
    /**
     * @example
     * coolAppCode123
     */
    coolAppCode?: string;
    /**
     * @example
     * xxxx卡片
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverRequestDocOpenDeliverModel extends $tea.Model {
    /**
     * @example
     * xxx_biz_tag
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverRequestImGroupOpenDeliverModel extends $tea.Model {
    atUserIds?: {
        [key: string]: string;
    };
    extension?: {
        [key: string]: string;
    };
    recipients?: string[];
    /**
     * @example
     * dingg3xmqdkpaojuakm8
     */
    robotCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverRequestImGroupOpenSpaceModelNotification extends $tea.Model {
    /**
     * @example
     * 你收到了一个卡片消息
     */
    alertContent?: string;
    notificationOff?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverRequestImGroupOpenSpaceModelSearchSupport extends $tea.Model {
    /**
     * @example
     * 卡片的具体描述
     */
    searchDesc?: string;
    /**
     * @example
     * @lALPDgQ9q8hFhlHNAXzNAqI
     */
    searchIcon?: string;
    /**
     * @example
     * {"zh_CN":"待办","zh_TW":"待辦","en_US":"ToDo"}
     */
    searchTypeName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverRequestImGroupOpenSpaceModel extends $tea.Model {
    lastMessageI18n?: {
        [key: string]: string;
    };
    notification?: CreateAndDeliverRequestImGroupOpenSpaceModelNotification;
    searchSupport?: CreateAndDeliverRequestImGroupOpenSpaceModelSearchSupport;
    supportForward?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverRequestImRobotOpenDeliverModel extends $tea.Model {
    extension?: {
        [key: string]: string;
    };
    /**
     * @example
     * dingg3xmqdkpaojuakm8
     */
    robotCode?: string;
    spaceType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverRequestImRobotOpenSpaceModelNotification extends $tea.Model {
    /**
     * @example
     * 你收到了一个卡片消息
     */
    alertContent?: string;
    notificationOff?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverRequestImRobotOpenSpaceModelSearchSupport extends $tea.Model {
    /**
     * @example
     * 卡片的具体描述
     */
    searchDesc?: string;
    /**
     * @example
     * @lALPDgQ9q8hFhlHNAXzNAqI
     */
    searchIcon?: string;
    /**
     * @example
     * {"zh_CN":"待办","zh_TW":"待辦","en_US":"ToDo"}
     */
    searchTypeName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverRequestImRobotOpenSpaceModel extends $tea.Model {
    lastMessageI18n?: {
        [key: string]: string;
    };
    notification?: CreateAndDeliverRequestImRobotOpenSpaceModelNotification;
    searchSupport?: CreateAndDeliverRequestImRobotOpenSpaceModelSearchSupport;
    supportForward?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverRequestImSingleOpenDeliverModel extends $tea.Model {
    atUserIds?: {
        [key: string]: string;
    };
    extension?: {
        [key: string]: string;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverRequestImSingleOpenSpaceModelNotification extends $tea.Model {
    /**
     * @example
     * 你收到了一个卡片消息
     */
    alertContent?: string;
    notificationOff?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverRequestImSingleOpenSpaceModelSearchSupport extends $tea.Model {
    /**
     * @example
     * 卡片的具体描述
     */
    searchDesc?: string;
    /**
     * @example
     * @lALPDgQ9q8hFhlHNAXzNAqI
     */
    searchIcon?: string;
    /**
     * @example
     * {"zh_CN":"待办","zh_TW":"待辦","en_US":"ToDo"}
     */
    searchTypeName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverRequestImSingleOpenSpaceModel extends $tea.Model {
    lastMessageI18n?: {
        [key: string]: string;
    };
    notification?: CreateAndDeliverRequestImSingleOpenSpaceModelNotification;
    searchSupport?: CreateAndDeliverRequestImSingleOpenSpaceModelSearchSupport;
    supportForward?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverRequestOpenDynamicDataConfigDynamicDataSourceConfigsPullConfig extends $tea.Model {
    interval?: number;
    pullStrategy?: string;
    timeUnit?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverRequestOpenDynamicDataConfigDynamicDataSourceConfigs extends $tea.Model {
    constParams?: {
        [key: string]: string;
    };
    dynamicDataSourceId?: string;
    pullConfig?: CreateAndDeliverRequestOpenDynamicDataConfigDynamicDataSourceConfigsPullConfig;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverRequestOpenDynamicDataConfig extends $tea.Model {
    dynamicDataSourceConfigs?: CreateAndDeliverRequestOpenDynamicDataConfigDynamicDataSourceConfigs[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverRequestTopOpenDeliverModel extends $tea.Model {
    /**
     * @example
     * 1665473229000
     */
    expiredTimeMillis?: number;
    platforms?: string[];
    userIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverRequestTopOpenSpaceModel extends $tea.Model {
    /**
     * @example
     * ONE_BOX
     */
    spaceType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverResponseBodyResultDeliverResults extends $tea.Model {
    /**
     * @example
     * 4v+AzUEDuC0dKuO*********J0w8=
     */
    carrierId?: string;
    /**
     * @example
     * system error
     */
    errorMsg?: string;
    /**
     * @example
     * cid1234abcd
     */
    spaceId?: string;
    /**
     * @example
     * IM_GROUP
     */
    spaceType?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverResponseBodyResult extends $tea.Model {
    deliverResults?: CreateAndDeliverResponseBodyResultDeliverResults[];
    /**
     * @example
     * out_track_id_xxx
     */
    outTrackId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateRequestCardData extends $tea.Model {
    cardParamMap?: {
        [key: string]: string;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateRequestCoFeedOpenDeliverModel extends $tea.Model {
    /**
     * @example
     * xxx_biz_tag
     */
    bizTag?: string;
    /**
     * @example
     * 1665473229000
     */
    gmtTimeLine?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateRequestCoFeedOpenSpaceModel extends $tea.Model {
    /**
     * @example
     * coolAppCode123
     */
    coolAppCode?: string;
    /**
     * @example
     * xxxx卡片
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateRequestDocOpenDeliverModel extends $tea.Model {
    /**
     * @example
     * xxx_biz_tag
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateRequestImGroupOpenDeliverModel extends $tea.Model {
    atUserIds?: {
        [key: string]: string;
    };
    extension?: {
        [key: string]: string;
    };
    recipients?: string[];
    /**
     * @example
     * dingg3xmqdkpaojuakm8
     */
    robotCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateRequestImGroupOpenSpaceModelNotification extends $tea.Model {
    /**
     * @example
     * 你收到了一个卡片消息
     */
    alertContent?: string;
    notificationOff?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateRequestImGroupOpenSpaceModelSearchSupport extends $tea.Model {
    /**
     * @example
     * 卡片的具体描述
     */
    searchDesc?: string;
    /**
     * @example
     * @lALPDgQ9q8hFhlHNAXzNAqI
     */
    searchIcon?: string;
    /**
     * @example
     * {"zh_CN":"待办","zh_TW":"待辦","en_US":"ToDo"}
     */
    searchTypeName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateRequestImGroupOpenSpaceModel extends $tea.Model {
    lastMessageI18n?: {
        [key: string]: string;
    };
    notification?: CreateAndDeliverWithDelegateRequestImGroupOpenSpaceModelNotification;
    searchSupport?: CreateAndDeliverWithDelegateRequestImGroupOpenSpaceModelSearchSupport;
    supportForward?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateRequestImRobotOpenDeliverModel extends $tea.Model {
    extension?: {
        [key: string]: string;
    };
    /**
     * @example
     * dingg3xmqdkpaojuakm8
     */
    robotCode?: string;
    spaceType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateRequestImRobotOpenSpaceModelNotification extends $tea.Model {
    /**
     * @example
     * 你收到了一个卡片消息
     */
    alertContent?: string;
    notificationOff?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateRequestImRobotOpenSpaceModelSearchSupport extends $tea.Model {
    /**
     * @example
     * 卡片的具体描述
     */
    searchDesc?: string;
    /**
     * @example
     * @lALPDgQ9q8hFhlHNAXzNAqI
     */
    searchIcon?: string;
    /**
     * @example
     * {"zh_CN":"待办","zh_TW":"待辦","en_US":"ToDo"}
     */
    searchTypeName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateRequestImRobotOpenSpaceModel extends $tea.Model {
    lastMessageI18n?: {
        [key: string]: string;
    };
    notification?: CreateAndDeliverWithDelegateRequestImRobotOpenSpaceModelNotification;
    searchSupport?: CreateAndDeliverWithDelegateRequestImRobotOpenSpaceModelSearchSupport;
    supportForward?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateRequestImSingleOpenDeliverModel extends $tea.Model {
    atUserIds?: {
        [key: string]: string;
    };
    extension?: {
        [key: string]: string;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateRequestImSingleOpenSpaceModelNotification extends $tea.Model {
    /**
     * @example
     * 你收到了一个卡片消息
     */
    alertContent?: string;
    notificationOff?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateRequestImSingleOpenSpaceModelSearchSupport extends $tea.Model {
    /**
     * @example
     * 卡片的具体描述
     */
    searchDesc?: string;
    /**
     * @example
     * @lALPDgQ9q8hFhlHNAXzNAqI
     */
    searchIcon?: string;
    /**
     * @example
     * {"zh_CN":"待办","zh_TW":"待辦","en_US":"ToDo"}
     */
    searchTypeName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateRequestImSingleOpenSpaceModel extends $tea.Model {
    lastMessageI18n?: {
        [key: string]: string;
    };
    notification?: CreateAndDeliverWithDelegateRequestImSingleOpenSpaceModelNotification;
    searchSupport?: CreateAndDeliverWithDelegateRequestImSingleOpenSpaceModelSearchSupport;
    supportForward?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateRequestOpenDynamicDataConfigDynamicDataSourceConfigsPullConfig extends $tea.Model {
    interval?: number;
    pullStrategy?: string;
    timeUnit?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateRequestOpenDynamicDataConfigDynamicDataSourceConfigs extends $tea.Model {
    constParams?: {
        [key: string]: string;
    };
    dynamicDataSourceId?: string;
    pullConfig?: CreateAndDeliverWithDelegateRequestOpenDynamicDataConfigDynamicDataSourceConfigsPullConfig;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateRequestOpenDynamicDataConfig extends $tea.Model {
    dynamicDataSourceConfigs?: CreateAndDeliverWithDelegateRequestOpenDynamicDataConfigDynamicDataSourceConfigs[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateRequestTopOpenDeliverModel extends $tea.Model {
    /**
     * @example
     * 1665473229000
     */
    expiredTimeMillis?: number;
    platforms?: string[];
    userIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateRequestTopOpenSpaceModel extends $tea.Model {
    /**
     * @example
     * ONE_BOX
     */
    spaceType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateResponseBodyResultDeliverResults extends $tea.Model {
    /**
     * @example
     * 4v+AzUEDuC0dKuO*********J0w8=
     */
    carrierId?: string;
    /**
     * @example
     * system error
     */
    errorMsg?: string;
    /**
     * @example
     * cid1234abcd
     */
    spaceId?: string;
    /**
     * @example
     * IM_GROUP
     */
    spaceType?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndDeliverWithDelegateResponseBodyResult extends $tea.Model {
    deliverResults?: CreateAndDeliverWithDelegateResponseBodyResultDeliverResults[];
    /**
     * @example
     * out_track_id_xxx
     */
    outTrackId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardRequestCardData extends $tea.Model {
    cardParamMap?: {
        [key: string]: string;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardRequestCoFeedOpenSpaceModel extends $tea.Model {
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardRequestImGroupOpenSpaceModelNotification extends $tea.Model {
    /**
     * @example
     * 你收到1条新消息
     */
    alertContent?: string;
    notificationOff?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardRequestImGroupOpenSpaceModelSearchSupport extends $tea.Model {
    searchDesc?: string;
    /**
     * @example
     * @lALPDgQ9q8hFhlHNAXzNAqI
     */
    searchIcon?: string;
    /**
     * @example
     * {"zh_CN":"待办","zh_TW":"待辦","en_US":"ToDo"}
     */
    searchTypeName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardRequestImGroupOpenSpaceModel extends $tea.Model {
    lastMessageI18n?: {
        [key: string]: string;
    };
    notification?: CreateCardRequestImGroupOpenSpaceModelNotification;
    searchSupport?: CreateCardRequestImGroupOpenSpaceModelSearchSupport;
    supportForward?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardRequestImRobotOpenSpaceModelNotification extends $tea.Model {
    alertContent?: string;
    notificationOff?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardRequestImRobotOpenSpaceModelSearchSupport extends $tea.Model {
    searchDesc?: string;
    /**
     * @example
     * @lALPDgQ9q8hFhlHNAXzNAqI
     */
    searchIcon?: string;
    /**
     * @example
     * {"zh_CN":"待办","zh_TW":"待辦","en_US":"ToDo"}
     */
    searchTypeName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardRequestImRobotOpenSpaceModel extends $tea.Model {
    lastMessageI18n?: {
        [key: string]: string;
    };
    notification?: CreateCardRequestImRobotOpenSpaceModelNotification;
    searchSupport?: CreateCardRequestImRobotOpenSpaceModelSearchSupport;
    supportForward?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardRequestImSingleOpenSpaceModelNotification extends $tea.Model {
    alertContent?: string;
    notificationOff?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardRequestImSingleOpenSpaceModelSearchSupport extends $tea.Model {
    searchDesc?: string;
    /**
     * @example
     * @lALPDgQ9q8hFhlHNAXzNAqI
     */
    searchIcon?: string;
    /**
     * @example
     * {"zh_CN":"待办","zh_TW":"待辦","en_US":"ToDo"}
     */
    searchTypeName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardRequestImSingleOpenSpaceModel extends $tea.Model {
    lastMessageI18n?: {
        [key: string]: string;
    };
    notification?: CreateCardRequestImSingleOpenSpaceModelNotification;
    searchSupport?: CreateCardRequestImSingleOpenSpaceModelSearchSupport;
    supportForward?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardRequestOpenDynamicDataConfigDynamicDataSourceConfigsPullConfig extends $tea.Model {
    interval?: number;
    /**
     * @example
     * INTERVAL
     */
    pullStrategy?: string;
    /**
     * @example
     * SECONDS
     */
    timeUnit?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardRequestOpenDynamicDataConfigDynamicDataSourceConfigs extends $tea.Model {
    constParams?: {
        [key: string]: string;
    };
    /**
     * @example
     * ds-01
     */
    dynamicDataSourceId?: string;
    pullConfig?: CreateCardRequestOpenDynamicDataConfigDynamicDataSourceConfigsPullConfig;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardRequestOpenDynamicDataConfig extends $tea.Model {
    dynamicDataSourceConfigs?: CreateCardRequestOpenDynamicDataConfigDynamicDataSourceConfigs[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardRequestTopOpenSpaceModel extends $tea.Model {
    spaceType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardWithDelegateRequestCardData extends $tea.Model {
    cardParamMap?: {
        [key: string]: string;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardWithDelegateRequestCoFeedOpenSpaceModel extends $tea.Model {
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardWithDelegateRequestImGroupOpenSpaceModelNotification extends $tea.Model {
    /**
     * @example
     * 你收到1条新消息
     */
    alertContent?: string;
    notificationOff?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardWithDelegateRequestImGroupOpenSpaceModelSearchSupport extends $tea.Model {
    searchDesc?: string;
    /**
     * @example
     * @lALPDgQ9q8hFhlHNAXzNAqI
     */
    searchIcon?: string;
    /**
     * @example
     * {"zh_CN":"待办","zh_TW":"待辦","en_US":"ToDo"}
     */
    searchTypeName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardWithDelegateRequestImGroupOpenSpaceModel extends $tea.Model {
    lastMessageI18n?: {
        [key: string]: string;
    };
    notification?: CreateCardWithDelegateRequestImGroupOpenSpaceModelNotification;
    searchSupport?: CreateCardWithDelegateRequestImGroupOpenSpaceModelSearchSupport;
    supportForward?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardWithDelegateRequestImRobotOpenSpaceModelNotification extends $tea.Model {
    alertContent?: string;
    notificationOff?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardWithDelegateRequestImRobotOpenSpaceModelSearchSupport extends $tea.Model {
    searchDesc?: string;
    /**
     * @example
     * @lALPDgQ9q8hFhlHNAXzNAqI
     */
    searchIcon?: string;
    /**
     * @example
     * {"zh_CN":"待办","zh_TW":"待辦","en_US":"ToDo"}
     */
    searchTypeName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardWithDelegateRequestImRobotOpenSpaceModel extends $tea.Model {
    lastMessageI18n?: {
        [key: string]: string;
    };
    notification?: CreateCardWithDelegateRequestImRobotOpenSpaceModelNotification;
    searchSupport?: CreateCardWithDelegateRequestImRobotOpenSpaceModelSearchSupport;
    supportForward?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardWithDelegateRequestImSingleOpenSpaceModelNotification extends $tea.Model {
    alertContent?: string;
    notificationOff?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardWithDelegateRequestImSingleOpenSpaceModelSearchSupport extends $tea.Model {
    searchDesc?: string;
    /**
     * @example
     * @lALPDgQ9q8hFhlHNAXzNAqI
     */
    searchIcon?: string;
    /**
     * @example
     * {"zh_CN":"待办","zh_TW":"待辦","en_US":"ToDo"}
     */
    searchTypeName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardWithDelegateRequestImSingleOpenSpaceModel extends $tea.Model {
    lastMessageI18n?: {
        [key: string]: string;
    };
    notification?: CreateCardWithDelegateRequestImSingleOpenSpaceModelNotification;
    searchSupport?: CreateCardWithDelegateRequestImSingleOpenSpaceModelSearchSupport;
    supportForward?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardWithDelegateRequestOpenDynamicDataConfigDynamicDataSourceConfigsPullConfig extends $tea.Model {
    interval?: number;
    /**
     * @example
     * INTERVAL
     */
    pullStrategy?: string;
    /**
     * @example
     * SECONDS
     */
    timeUnit?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardWithDelegateRequestOpenDynamicDataConfigDynamicDataSourceConfigs extends $tea.Model {
    constParams?: {
        [key: string]: string;
    };
    /**
     * @example
     * ds-01
     */
    dynamicDataSourceId?: string;
    pullConfig?: CreateCardWithDelegateRequestOpenDynamicDataConfigDynamicDataSourceConfigsPullConfig;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardWithDelegateRequestOpenDynamicDataConfig extends $tea.Model {
    dynamicDataSourceConfigs?: CreateCardWithDelegateRequestOpenDynamicDataConfigDynamicDataSourceConfigs[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCardWithDelegateRequestTopOpenSpaceModel extends $tea.Model {
    spaceType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTemplateResponseBodyData extends $tea.Model {
    templateId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeliverCardRequestCoFeedOpenDeliverModel extends $tea.Model {
    /**
     * @example
     * xxx_biz_tag
     */
    bizTag?: string;
    /**
     * @example
     * 1665473229000
     */
    gmtTimeLine?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeliverCardRequestDocOpenDeliverModel extends $tea.Model {
    /**
     * @example
     * xxx_biz_tag
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeliverCardRequestImGroupOpenDeliverModel extends $tea.Model {
    atUserIds?: {
        [key: string]: string;
    };
    extension?: {
        [key: string]: string;
    };
    recipients?: string[];
    /**
     * @example
     * dingg3xmqdkpaojuakm8
     */
    robotCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeliverCardRequestImRobotOpenDeliverModel extends $tea.Model {
    extension?: {
        [key: string]: string;
    };
    /**
     * @example
     * dingg3xmqdkpaojuakm8
     */
    robotCode?: string;
    /**
     * @example
     * IM_ROBOT
     */
    spaceType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeliverCardRequestImSingleOpenDeliverModel extends $tea.Model {
    atUserIds?: {
        [key: string]: string;
    };
    extension?: {
        [key: string]: string;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeliverCardRequestTopOpenDeliverModel extends $tea.Model {
    /**
     * @example
     * 1665473229000
     */
    expiredTimeMillis?: number;
    platforms?: string[];
    userIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeliverCardResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 4v+AzUEDuC0dKuO*********J0w8=
     */
    carrierId?: string;
    /**
     * @example
     * system error
     */
    errorMsg?: string;
    /**
     * @example
     * cid1234abcd
     */
    spaceId?: string;
    /**
     * @example
     * IM_GROUP
     */
    spaceType?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeliverCardWithDelegateRequestCoFeedOpenDeliverModel extends $tea.Model {
    /**
     * @example
     * xxx_biz_tag
     */
    bizTag?: string;
    /**
     * @example
     * 1665473229000
     */
    gmtTimeLine?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeliverCardWithDelegateRequestDocOpenDeliverModel extends $tea.Model {
    /**
     * @example
     * xxx_biz_tag
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeliverCardWithDelegateRequestImGroupOpenDeliverModel extends $tea.Model {
    atUserIds?: {
        [key: string]: string;
    };
    extension?: {
        [key: string]: string;
    };
    recipients?: string[];
    /**
     * @example
     * dingg3xmqdkpaojuakm8
     */
    robotCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeliverCardWithDelegateRequestImRobotOpenDeliverModel extends $tea.Model {
    extension?: {
        [key: string]: string;
    };
    /**
     * @example
     * dingg3xmqdkpaojuakm8
     */
    robotCode?: string;
    /**
     * @example
     * IM_ROBOT
     */
    spaceType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeliverCardWithDelegateRequestImSingleOpenDeliverModel extends $tea.Model {
    atUserIds?: {
        [key: string]: string;
    };
    extension?: {
        [key: string]: string;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeliverCardWithDelegateRequestTopOpenDeliverModel extends $tea.Model {
    /**
     * @example
     * 1665473229000
     */
    expiredTimeMillis?: number;
    platforms?: string[];
    userIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeliverCardWithDelegateResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 4v+AzUEDuC0dKuO*********J0w8=
     */
    carrierId?: string;
    /**
     * @example
     * system error
     */
    errorMsg?: string;
    /**
     * @example
     * cid1234abcd
     */
    spaceId?: string;
    /**
     * @example
     * IM_GROUP
     */
    spaceType?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTemplateResponseBodyData extends $tea.Model {
    commonVariableList?: any;
    creatorId?: string;
    expVariableList?: any;
    extendType?: string;
    gmtCreate?: string;
    gmtModified?: string;
    localVariableList?: any;
    name?: string;
    preview?: string;
    status?: string;
    templateId?: string;
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PublishTemplateResponseBodyData extends $tea.Model {
    commonVariableList?: any;
    creatorId?: string;
    expVariableList?: any;
    extendType?: string;
    gmtCreate?: string;
    gmtModified?: string;
    localVariableList?: any;
    name?: string;
    preview?: string;
    status?: string;
    templateId?: string;
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RegisterCallbackResponseBodyResult extends $tea.Model {
    apiSecret?: string;
    callbackUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RegisterCallbackWithDelegateResponseBodyResult extends $tea.Model {
    apiSecret?: string;
    callbackUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveTemplateResponseBodyData extends $tea.Model {
    commonVariableList?: any;
    creatorId?: string;
    expVariableList?: any;
    extendType?: string;
    gmtCreate?: string;
    gmtModified?: string;
    localVariableList?: any;
    name?: string;
    preview?: string;
    status?: string;
    templateId?: string;
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCardRequestCardData extends $tea.Model {
    cardParamMap?: {
        [key: string]: string;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCardRequestCardUpdateOptions extends $tea.Model {
    updateCardDataByKey?: boolean;
    updatePrivateDataByKey?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCardWithDelegateRequestCardData extends $tea.Model {
    cardParamMap?: {
        [key: string]: string;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCardWithDelegateRequestCardUpdateOptions extends $tea.Model {
    updateCardDataByKey?: boolean;
    updatePrivateDataByKey?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 新增或更新卡片的场域信息
     *
     * @param request - AppendSpaceRequest
     * @param headers - AppendSpaceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AppendSpaceResponse
     */
    appendSpaceWithOptions(request: AppendSpaceRequest, headers: AppendSpaceHeaders, runtime: $Util.RuntimeOptions): Promise<AppendSpaceResponse>;
    /**
     * 新增或更新卡片的场域信息
     *
     * @param request - AppendSpaceRequest
     * @returns AppendSpaceResponse
     */
    appendSpace(request: AppendSpaceRequest): Promise<AppendSpaceResponse>;
    /**
     * 新增或更新卡片的场域信息
     *
     * @param request - AppendSpaceWithDelegateRequest
     * @param headers - AppendSpaceWithDelegateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AppendSpaceWithDelegateResponse
     */
    appendSpaceWithDelegateWithOptions(request: AppendSpaceWithDelegateRequest, headers: AppendSpaceWithDelegateHeaders, runtime: $Util.RuntimeOptions): Promise<AppendSpaceWithDelegateResponse>;
    /**
     * 新增或更新卡片的场域信息
     *
     * @param request - AppendSpaceWithDelegateRequest
     * @returns AppendSpaceWithDelegateResponse
     */
    appendSpaceWithDelegate(request: AppendSpaceWithDelegateRequest): Promise<AppendSpaceWithDelegateResponse>;
    /**
     * 关闭吊顶卡片接口
     *
     * @param request - CloseTopCardRequest
     * @param headers - CloseTopCardHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CloseTopCardResponse
     */
    closeTopCardWithOptions(request: CloseTopCardRequest, headers: CloseTopCardHeaders, runtime: $Util.RuntimeOptions): Promise<CloseTopCardResponse>;
    /**
     * 关闭吊顶卡片接口
     *
     * @param request - CloseTopCardRequest
     * @returns CloseTopCardResponse
     */
    closeTopCard(request: CloseTopCardRequest): Promise<CloseTopCardResponse>;
    /**
     * 复制模板
     *
     * @param request - CopyTemplateRequest
     * @param headers - CopyTemplateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CopyTemplateResponse
     */
    copyTemplateWithOptions(request: CopyTemplateRequest, headers: CopyTemplateHeaders, runtime: $Util.RuntimeOptions): Promise<CopyTemplateResponse>;
    /**
     * 复制模板
     *
     * @param request - CopyTemplateRequest
     * @returns CopyTemplateResponse
     */
    copyTemplate(request: CopyTemplateRequest): Promise<CopyTemplateResponse>;
    /**
     * 创建并投放卡片
     *
     * @param request - CreateAndDeliverRequest
     * @param headers - CreateAndDeliverHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateAndDeliverResponse
     */
    createAndDeliverWithOptions(request: CreateAndDeliverRequest, headers: CreateAndDeliverHeaders, runtime: $Util.RuntimeOptions): Promise<CreateAndDeliverResponse>;
    /**
     * 创建并投放卡片
     *
     * @param request - CreateAndDeliverRequest
     * @returns CreateAndDeliverResponse
     */
    createAndDeliver(request: CreateAndDeliverRequest): Promise<CreateAndDeliverResponse>;
    /**
     * 创建并投放卡片
     *
     * @param request - CreateAndDeliverWithDelegateRequest
     * @param headers - CreateAndDeliverWithDelegateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateAndDeliverWithDelegateResponse
     */
    createAndDeliverWithDelegateWithOptions(request: CreateAndDeliverWithDelegateRequest, headers: CreateAndDeliverWithDelegateHeaders, runtime: $Util.RuntimeOptions): Promise<CreateAndDeliverWithDelegateResponse>;
    /**
     * 创建并投放卡片
     *
     * @param request - CreateAndDeliverWithDelegateRequest
     * @returns CreateAndDeliverWithDelegateResponse
     */
    createAndDeliverWithDelegate(request: CreateAndDeliverWithDelegateRequest): Promise<CreateAndDeliverWithDelegateResponse>;
    /**
     * 创建卡片
     *
     * @param request - CreateCardRequest
     * @param headers - CreateCardHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateCardResponse
     */
    createCardWithOptions(request: CreateCardRequest, headers: CreateCardHeaders, runtime: $Util.RuntimeOptions): Promise<CreateCardResponse>;
    /**
     * 创建卡片
     *
     * @param request - CreateCardRequest
     * @returns CreateCardResponse
     */
    createCard(request: CreateCardRequest): Promise<CreateCardResponse>;
    /**
     * 创建卡片
     *
     * @param request - CreateCardWithDelegateRequest
     * @param headers - CreateCardWithDelegateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateCardWithDelegateResponse
     */
    createCardWithDelegateWithOptions(request: CreateCardWithDelegateRequest, headers: CreateCardWithDelegateHeaders, runtime: $Util.RuntimeOptions): Promise<CreateCardWithDelegateResponse>;
    /**
     * 创建卡片
     *
     * @param request - CreateCardWithDelegateRequest
     * @returns CreateCardWithDelegateResponse
     */
    createCardWithDelegate(request: CreateCardWithDelegateRequest): Promise<CreateCardWithDelegateResponse>;
    /**
     * 创建模板
     *
     * @param request - CreateTemplateRequest
     * @param headers - CreateTemplateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateTemplateResponse
     */
    createTemplateWithOptions(request: CreateTemplateRequest, headers: CreateTemplateHeaders, runtime: $Util.RuntimeOptions): Promise<CreateTemplateResponse>;
    /**
     * 创建模板
     *
     * @param request - CreateTemplateRequest
     * @returns CreateTemplateResponse
     */
    createTemplate(request: CreateTemplateRequest): Promise<CreateTemplateResponse>;
    /**
     * 删除模板
     *
     * @param request - DeleteTemplateRequest
     * @param headers - DeleteTemplateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteTemplateResponse
     */
    deleteTemplateWithOptions(request: DeleteTemplateRequest, headers: DeleteTemplateHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteTemplateResponse>;
    /**
     * 删除模板
     *
     * @param request - DeleteTemplateRequest
     * @returns DeleteTemplateResponse
     */
    deleteTemplate(request: DeleteTemplateRequest): Promise<DeleteTemplateResponse>;
    /**
     * 投放卡片
     *
     * @param request - DeliverCardRequest
     * @param headers - DeliverCardHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeliverCardResponse
     */
    deliverCardWithOptions(request: DeliverCardRequest, headers: DeliverCardHeaders, runtime: $Util.RuntimeOptions): Promise<DeliverCardResponse>;
    /**
     * 投放卡片
     *
     * @param request - DeliverCardRequest
     * @returns DeliverCardResponse
     */
    deliverCard(request: DeliverCardRequest): Promise<DeliverCardResponse>;
    /**
     * 投放卡片
     *
     * @param request - DeliverCardWithDelegateRequest
     * @param headers - DeliverCardWithDelegateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeliverCardWithDelegateResponse
     */
    deliverCardWithDelegateWithOptions(request: DeliverCardWithDelegateRequest, headers: DeliverCardWithDelegateHeaders, runtime: $Util.RuntimeOptions): Promise<DeliverCardWithDelegateResponse>;
    /**
     * 投放卡片
     *
     * @param request - DeliverCardWithDelegateRequest
     * @returns DeliverCardWithDelegateResponse
     */
    deliverCardWithDelegate(request: DeliverCardWithDelegateRequest): Promise<DeliverCardWithDelegateResponse>;
    /**
     * 获取模板信息
     *
     * @param request - GetTemplateRequest
     * @param headers - GetTemplateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetTemplateResponse
     */
    getTemplateWithOptions(request: GetTemplateRequest, headers: GetTemplateHeaders, runtime: $Util.RuntimeOptions): Promise<GetTemplateResponse>;
    /**
     * 获取模板信息
     *
     * @param request - GetTemplateRequest
     * @returns GetTemplateResponse
     */
    getTemplate(request: GetTemplateRequest): Promise<GetTemplateResponse>;
    /**
     * 发布模板
     *
     * @param request - PublishTemplateRequest
     * @param headers - PublishTemplateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns PublishTemplateResponse
     */
    publishTemplateWithOptions(request: PublishTemplateRequest, headers: PublishTemplateHeaders, runtime: $Util.RuntimeOptions): Promise<PublishTemplateResponse>;
    /**
     * 发布模板
     *
     * @param request - PublishTemplateRequest
     * @returns PublishTemplateResponse
     */
    publishTemplate(request: PublishTemplateRequest): Promise<PublishTemplateResponse>;
    /**
     * 注册卡片回调地址
     *
     * @param request - RegisterCallbackRequest
     * @param headers - RegisterCallbackHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns RegisterCallbackResponse
     */
    registerCallbackWithOptions(request: RegisterCallbackRequest, headers: RegisterCallbackHeaders, runtime: $Util.RuntimeOptions): Promise<RegisterCallbackResponse>;
    /**
     * 注册卡片回调地址
     *
     * @param request - RegisterCallbackRequest
     * @returns RegisterCallbackResponse
     */
    registerCallback(request: RegisterCallbackRequest): Promise<RegisterCallbackResponse>;
    /**
     * 注册卡片回调地址
     *
     * @param request - RegisterCallbackWithDelegateRequest
     * @param headers - RegisterCallbackWithDelegateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns RegisterCallbackWithDelegateResponse
     */
    registerCallbackWithDelegateWithOptions(request: RegisterCallbackWithDelegateRequest, headers: RegisterCallbackWithDelegateHeaders, runtime: $Util.RuntimeOptions): Promise<RegisterCallbackWithDelegateResponse>;
    /**
     * 注册卡片回调地址
     *
     * @param request - RegisterCallbackWithDelegateRequest
     * @returns RegisterCallbackWithDelegateResponse
     */
    registerCallbackWithDelegate(request: RegisterCallbackWithDelegateRequest): Promise<RegisterCallbackWithDelegateResponse>;
    /**
     * 保存模板
     *
     * @param request - SaveTemplateRequest
     * @param headers - SaveTemplateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SaveTemplateResponse
     */
    saveTemplateWithOptions(request: SaveTemplateRequest, headers: SaveTemplateHeaders, runtime: $Util.RuntimeOptions): Promise<SaveTemplateResponse>;
    /**
     * 保存模板
     *
     * @param request - SaveTemplateRequest
     * @returns SaveTemplateResponse
     */
    saveTemplate(request: SaveTemplateRequest): Promise<SaveTemplateResponse>;
    /**
     * AI互动卡片流式更新
     *
     * @param request - StreamingUpdateRequest
     * @param headers - StreamingUpdateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns StreamingUpdateResponse
     */
    streamingUpdateWithOptions(request: StreamingUpdateRequest, headers: StreamingUpdateHeaders, runtime: $Util.RuntimeOptions): Promise<StreamingUpdateResponse>;
    /**
     * AI互动卡片流式更新
     *
     * @param request - StreamingUpdateRequest
     * @returns StreamingUpdateResponse
     */
    streamingUpdate(request: StreamingUpdateRequest): Promise<StreamingUpdateResponse>;
    /**
     * 更新卡片
     *
     * @param request - UpdateCardRequest
     * @param headers - UpdateCardHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateCardResponse
     */
    updateCardWithOptions(request: UpdateCardRequest, headers: UpdateCardHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateCardResponse>;
    /**
     * 更新卡片
     *
     * @param request - UpdateCardRequest
     * @returns UpdateCardResponse
     */
    updateCard(request: UpdateCardRequest): Promise<UpdateCardResponse>;
    /**
     * 更新卡片
     *
     * @param request - UpdateCardWithDelegateRequest
     * @param headers - UpdateCardWithDelegateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateCardWithDelegateResponse
     */
    updateCardWithDelegateWithOptions(request: UpdateCardWithDelegateRequest, headers: UpdateCardWithDelegateHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateCardWithDelegateResponse>;
    /**
     * 更新卡片
     *
     * @param request - UpdateCardWithDelegateRequest
     * @returns UpdateCardWithDelegateResponse
     */
    updateCardWithDelegate(request: UpdateCardWithDelegateRequest): Promise<UpdateCardWithDelegateResponse>;
}
