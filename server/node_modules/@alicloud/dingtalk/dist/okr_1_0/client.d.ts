/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import { Readable } from 'stream';
import * as $tea from '@alicloud/tea-typescript';
export declare class OpenKeyResultDTO extends $tea.Model {
    /**
     * @example
     * 65222713d0e8b868f9f9ae51
     */
    krId?: string;
    /**
     * @example
     * 80
     */
    progress?: number;
    /**
     * @example
     * 1
     */
    status?: number;
    /**
     * @example
     * 这是一个KR
     */
    title?: string;
    titleMentions?: TitleMention[];
    /**
     * @example
     * 1
     */
    type?: number;
    /**
     * @example
     * 10.00
     */
    weight?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OpenObjectiveDTO extends $tea.Model {
    executor?: OpenUserDTO;
    keyResults?: OpenKeyResultDTO[];
    /**
     * @example
     * 65222640d0e8b868f9f9ae3c
     */
    objectiveId?: string;
    period?: OpenPeriodDTO;
    /**
     * @example
     * 80
     */
    progress?: number;
    /**
     * @example
     * 1
     */
    status?: number;
    teams?: OpenTeamDTO[];
    /**
     * @example
     * 这是一个O的标题
     */
    title?: string;
    /**
     * @example
     * 10.00
     */
    weight?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OpenPeriodDTO extends $tea.Model {
    endDate?: number;
    nameCn?: string;
    nameEn?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    periodId?: string;
    startDate?: number;
    status?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OpenTeamDTO extends $tea.Model {
    /**
     * @example
     * 0342464558835299
     */
    deptUid?: string;
    /**
     * @example
     * 64cd2e9bb80efb17244c650d
     */
    dingDeptId?: string;
    /**
     * @example
     * xx部门
     */
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OpenUserDTO extends $tea.Model {
    /**
     * @example
     * 0342464558835299
     */
    dingUserId?: string;
    /**
     * @example
     * 小明
     */
    name?: string;
    /**
     * @example
     * 64cd2e9bb80efb17244c650d
     */
    userUid?: string;
    /**
     * @example
     * 2639402752-1812711657
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class TitleMention extends $tea.Model {
    /**
     * @example
     * 20
     */
    length?: number;
    /**
     * @example
     * 1
     */
    offset?: number;
    user?: OpenUserDTO;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AlignObjectiveHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AlignObjectiveRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1006
     */
    periodId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 59YD
     */
    targetId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0115396701752283
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AlignObjectiveResponseBody extends $tea.Model {
    data?: AlignObjectiveResponseBodyData;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AlignObjectiveResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AlignObjectiveResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddPermissionHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddPermissionRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    list?: BatchAddPermissionRequestList[];
    /**
     * @remarks
     * This parameter is required.
     */
    targetId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    targetType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 当前用户 userId。
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddPermissionResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    data?: BatchAddPermissionResponseBodyData;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddPermissionResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchAddPermissionResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryObjectiveHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryObjectiveRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    objectiveIds?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10056
     */
    periodId?: string;
    /**
     * @example
     * false
     */
    withAlign?: boolean;
    /**
     * @example
     * false
     */
    withKr?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    withProgress?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0115396701752283
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryObjectiveResponseBody extends $tea.Model {
    data?: BatchQueryObjectiveResponseBodyData[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryObjectiveResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchQueryObjectiveResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryUserHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryUserRequest extends $tea.Model {
    okrUserIds?: string[];
    userIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryUserResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    data?: BatchQueryUserResponseBodyData[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryUserResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchQueryUserResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateKeyResultHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateKeyResultRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 我的内容
     */
    content?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 58Y4
     */
    objectiveId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1006
     */
    periodId?: string;
    /**
     * @example
     * 234631
     */
    prevPosition?: number;
    /**
     * @example
     * 100
     */
    weight?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 06186238011033616
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateKeyResultResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    data?: CreateKeyResultResponseBodyData;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateKeyResultResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateKeyResultResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateObjectiveHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateObjectiveRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 我是内容
     */
    content?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1006
     */
    periodId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1334543
     */
    prevPosition?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 06186238011033616
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateObjectiveResponseBody extends $tea.Model {
    data?: CreateObjectiveResponseBodyData;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateObjectiveResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateObjectiveResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteKeyResultHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteKeyResultRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 4d2d
     */
    krId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 06186238011033616
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteKeyResultResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * success
     */
    data?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteKeyResultResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteKeyResultResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteObjectiveHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteObjectiveRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 06186238011033616
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteObjectiveResponseBody extends $tea.Model {
    data?: DeleteObjectiveResponseBodyData;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteObjectiveResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteObjectiveResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeletePermissionHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeletePermissionRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    id?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    policyType?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    targetId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    targetType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    type?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0115396701752283
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeletePermissionResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    data?: DeletePermissionResponseBodyData;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeletePermissionResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeletePermissionResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPeriodListHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPeriodListResponseBody extends $tea.Model {
    data?: GetPeriodListResponseBodyData;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPeriodListResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetPeriodListResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPermissionHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPermissionRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    targetId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    targetType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 当前用户 userId。
     */
    userId?: string;
    withKr?: boolean;
    withObjective?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPermissionResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    data?: GetPermissionResponseBodyData;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPermissionResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetPermissionResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserOkrHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserOkrRequest extends $tea.Model {
    /**
     * @example
     * 2
     */
    pageNumber?: number;
    /**
     * @example
     * 30
     */
    pageSize?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1005
     */
    periodId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 011539670175223
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserOkrResponseBody extends $tea.Model {
    data?: GetUserOkrResponseBodyData;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserOkrResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetUserOkrResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OkrObjectivesBatchHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OkrObjectivesBatchRequest extends $tea.Model {
    /**
     * @example
     * dingOKR
     */
    goodsCode?: string;
    objectiveIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OkrObjectivesBatchResponseBody extends $tea.Model {
    content?: OpenObjectiveDTO[];
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OkrObjectivesBatchResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: OkrObjectivesBatchResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OkrObjectivesByUserHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OkrObjectivesByUserRequest extends $tea.Model {
    /**
     * @example
     * dingOKR
     */
    goodsCode?: string;
    pageNumber?: number;
    /**
     * @example
     * 10
     */
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OkrObjectivesByUserResponseBody extends $tea.Model {
    content?: OkrObjectivesByUserResponseBodyContent;
    requestId?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OkrObjectivesByUserResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: OkrObjectivesByUserResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OkrPeriodsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OkrPeriodsRequest extends $tea.Model {
    /**
     * @example
     * dingOKR
     */
    goodsCode?: string;
    /**
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @example
     * 10
     */
    pageSize?: number;
    /**
     * @example
     * 0
     */
    status?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OkrPeriodsResponseBody extends $tea.Model {
    content?: OkrPeriodsResponseBodyContent;
    requestId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OkrPeriodsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: OkrPeriodsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UnAlignObjectiveHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UnAlignObjectiveRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1006
     */
    periodId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 59YD
     */
    targetId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0115396701752283
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UnAlignObjectiveResponseBody extends $tea.Model {
    data?: UnAlignObjectiveResponseBodyData;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UnAlignObjectiveResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UnAlignObjectiveResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateKROfContentHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateKROfContentRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 更新内容
     */
    content?: string;
    updateQuoteList?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 46GM2
     */
    krId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0115396701752283
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateKROfContentResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    data?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateKROfContentResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateKROfContentResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateKROfScoreHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateKROfScoreRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    score?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 46GM2
     */
    krId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0115396701752283
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateKROfScoreResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    data?: UpdateKROfScoreResponseBodyData;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateKROfScoreResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateKROfScoreResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateKROfWeightHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateKROfWeightRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100
     */
    weight?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 46GM2
     */
    krId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0115396701752283
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateKROfWeightResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    data?: UpdateKROfWeightResponseBodyData;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateKROfWeightResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateKROfWeightResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateObjectiveHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateObjectiveRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 更新的内容
     */
    content?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 06186238011033616
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateObjectiveResponseBody extends $tea.Model {
    data?: UpdateObjectiveResponseBodyData;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateObjectiveResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateObjectiveResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdatePrivacyHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdatePrivacyRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * public
     */
    privacy?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 3RF5
     */
    targetId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2
     */
    targetType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0115396701752283
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdatePrivacyResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    data?: UpdatePrivacyResponseBodyData;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdatePrivacyResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdatePrivacyResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AlignObjectiveResponseBodyData extends $tea.Model {
    /**
     * @example
     * 59YD
     */
    alignId?: Readable;
    /**
     * @example
     * 5dAX8
     */
    id?: Readable;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddPermissionRequestListMember extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    id?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddPermissionRequestList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    member?: BatchAddPermissionRequestListMember;
    /**
     * @remarks
     * This parameter is required.
     */
    policyType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddPermissionResponseBodyDataPermissionTreePolicyListMemberList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    id?: string;
    nickname?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddPermissionResponseBodyDataPermissionTreePolicyList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    memberList?: BatchAddPermissionResponseBodyDataPermissionTreePolicyListMemberList[];
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    type?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddPermissionResponseBodyDataPermissionTree extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    id?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    policyList?: BatchAddPermissionResponseBodyDataPermissionTreePolicyList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * public
     */
    privacy?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * period
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchAddPermissionResponseBodyData extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    hasInvalidUser?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    permissionTree?: BatchAddPermissionResponseBodyDataPermissionTree;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryObjectiveResponseBodyDataKrListProgress extends $tea.Model {
    /**
     * @example
     * 30
     */
    percent?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryObjectiveResponseBodyDataKrList extends $tea.Model {
    /**
     * @example
     * 你好
     */
    content?: Readable;
    /**
     * @example
     * 1648625407694
     */
    gmtCreate?: number;
    /**
     * @example
     * 1648625407694
     */
    gmtModified?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5w9f
     */
    id?: Readable;
    /**
     * @example
     * 5wf8
     */
    objectiveId?: Readable;
    permission?: number[];
    /**
     * @example
     * 35614536
     */
    position?: number;
    progress?: BatchQueryObjectiveResponseBodyDataKrListProgress;
    /**
     * @example
     * 44
     */
    score?: number;
    /**
     * @example
     * 44
     */
    weight?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryObjectiveResponseBodyDataOwner extends $tea.Model {
    /**
     * @example
     * @lADPDh0cQ_j4Mi_NBULNBUA
     */
    avatarMediaId?: Readable;
    /**
     * @example
     * ding4d1c8883ff63ee8124f2f5cc6abecb85
     */
    corpId?: Readable;
    /**
     * @example
     * K1AMgq
     */
    id?: Readable;
    /**
     * @example
     * 你好
     */
    nickname?: Readable;
    /**
     * @example
     * 06186238011033616
     */
    userId?: Readable;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryObjectiveResponseBodyDataProgress extends $tea.Model {
    /**
     * @example
     * 100
     */
    percent?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryObjectiveResponseBodyData extends $tea.Model {
    alignFromIds?: Readable[];
    alignToIds?: Readable[];
    /**
     * @example
     * Objective demo
     */
    content?: Readable;
    /**
     * @example
     * 1648625407694
     */
    gmtCreate?: number;
    /**
     * @example
     * 1648625407694
     */
    gmtModified?: number;
    /**
     * @example
     * 5dAX8
     */
    id?: Readable;
    krList?: BatchQueryObjectiveResponseBodyDataKrList[];
    owner?: BatchQueryObjectiveResponseBodyDataOwner;
    /**
     * @example
     * 1006
     */
    periodId?: Readable;
    permission?: number[];
    /**
     * @example
     * 3021332
     */
    position?: number;
    progress?: BatchQueryObjectiveResponseBodyDataProgress;
    /**
     * @example
     * 100
     */
    progressPercent?: number;
    /**
     * @example
     * true
     */
    published?: boolean;
    /**
     * @example
     * 20
     */
    score?: number;
    /**
     * @example
     * 0
     */
    status?: number;
    /**
     * @example
     * s34d
     */
    userId?: Readable;
    /**
     * @example
     * 50
     */
    weight?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchQueryUserResponseBodyData extends $tea.Model {
    /**
     * @example
     * @lADPDh0cQ_j4Mi_NBULNBUA
     */
    avatarMediaId?: Readable;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * https://static.dingtalk.com/media/lADPEj_RiGhUdKjNC9TNC9A_3024_3028.jpg_620x10000q90.jpg
     */
    avatarUrl?: Readable;
    /**
     * @example
     * ding4d1c8883ff63ee8124f2f5cc6abecb85
     */
    corpId?: Readable;
    /**
     * @example
     * K1AMgq
     */
    id?: Readable;
    /**
     * @example
     * 你好
     */
    nickname?: Readable;
    /**
     * @example
     * 06186238011033616
     */
    userId?: Readable;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateKeyResultResponseBodyData extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * R45Y
     */
    id?: Readable;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 420983
     */
    position?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100
     */
    weight?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateObjectiveResponseBodyData extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 58YD
     */
    id?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 33453
     */
    position?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteObjectiveResponseBodyData extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 58YD
     */
    id?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeletePermissionResponseBodyDataPolicyListMemberList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    id?: string;
    nickname?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeletePermissionResponseBodyDataPolicyList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    memberList?: DeletePermissionResponseBodyDataPolicyListMemberList[];
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    type?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeletePermissionResponseBodyData extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    id?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    policyList?: DeletePermissionResponseBodyDataPolicyList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * public
     */
    privacy?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * period
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPeriodListResponseBodyDataPeriodList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    endTime?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    id?: Readable;
    /**
     * @remarks
     * This parameter is required.
     */
    isCurrent?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    isYearly?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    name?: Readable;
    /**
     * @remarks
     * This parameter is required.
     */
    startTime?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPeriodListResponseBodyData extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    periodList?: GetPeriodListResponseBodyDataPeriodList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPermissionResponseBodyDataPolicyListMemberList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    id?: string;
    nickname?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPermissionResponseBodyDataPolicyList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    memberList?: GetPermissionResponseBodyDataPolicyListMemberList[];
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    type?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPermissionResponseBodyData extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    id?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    policyList?: GetPermissionResponseBodyDataPolicyList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * public
     */
    privacy?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * period
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserOkrResponseBodyDataListKrListProgress extends $tea.Model {
    /**
     * @example
     * 30
     */
    percent?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserOkrResponseBodyDataListKrList extends $tea.Model {
    /**
     * @example
     * 你好
     */
    content?: Readable;
    /**
     * @example
     * 1648625407694
     */
    gmtCreate?: number;
    /**
     * @example
     * 1648625407694
     */
    gmtModified?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5w9f
     */
    id?: Readable;
    /**
     * @example
     * 5wf8
     */
    objectiveId?: Readable;
    permission?: number[];
    /**
     * @example
     * 35614536
     */
    position?: number;
    progress?: GetUserOkrResponseBodyDataListKrListProgress;
    /**
     * @example
     * 44
     */
    score?: number;
    /**
     * @example
     * 44
     */
    weight?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserOkrResponseBodyDataListOwner extends $tea.Model {
    /**
     * @example
     * @lADPDh0cQ_j4Mi_NBULNBUA
     */
    avatarMediaId?: Readable;
    /**
     * @example
     * ding4d1c8883ff63ee8124f2f5cc6abecb85
     */
    corpId?: Readable;
    /**
     * @example
     * K1AMgq
     */
    id?: Readable;
    /**
     * @example
     * 你好
     */
    nickname?: Readable;
    /**
     * @example
     * 06186238011033616
     */
    userId?: Readable;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserOkrResponseBodyDataListProgress extends $tea.Model {
    /**
     * @example
     * 100
     */
    percent?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserOkrResponseBodyDataList extends $tea.Model {
    alignFromIds?: Readable[];
    alignToIds?: Readable[];
    /**
     * @example
     * Objective demo
     */
    content?: Readable;
    /**
     * @example
     * 1648625407694
     */
    gmtCreate?: number;
    /**
     * @example
     * 1648625407694
     */
    gmtModified?: number;
    /**
     * @example
     * 5dAX8
     */
    id?: Readable;
    krList?: GetUserOkrResponseBodyDataListKrList[];
    owner?: GetUserOkrResponseBodyDataListOwner;
    /**
     * @example
     * 1006
     */
    periodId?: Readable;
    permission?: number[];
    /**
     * @example
     * 3021332
     */
    position?: number;
    progress?: GetUserOkrResponseBodyDataListProgress;
    /**
     * @example
     * 100
     */
    progressPercent?: number;
    /**
     * @example
     * true
     */
    published?: boolean;
    /**
     * @example
     * 20
     */
    score?: number;
    /**
     * @example
     * 0
     */
    status?: number;
    /**
     * @example
     * s34d
     */
    userId?: Readable;
    /**
     * @example
     * 50
     */
    weight?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserOkrResponseBodyData extends $tea.Model {
    list?: GetUserOkrResponseBodyDataList[];
    /**
     * @example
     * 2
     */
    pageNumber?: number;
    /**
     * @example
     * 50
     */
    pageSize?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OkrObjectivesByUserResponseBodyContent extends $tea.Model {
    result?: OpenObjectiveDTO[];
    /**
     * @example
     * 15
     */
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OkrPeriodsResponseBodyContent extends $tea.Model {
    /**
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @example
     * 10
     */
    pageSize?: number;
    result?: OpenPeriodDTO[];
    /**
     * @example
     * 15
     */
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UnAlignObjectiveResponseBodyData extends $tea.Model {
    /**
     * @example
     * 59YD
     */
    alignId?: Readable;
    /**
     * @example
     * 5dAX8
     */
    id?: Readable;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateKROfScoreResponseBodyData extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 50
     */
    objectiveScore?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateKROfWeightResponseBodyDataObjectiveProgress extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    percent?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateKROfWeightResponseBodyData extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    objectiveProgress?: UpdateKROfWeightResponseBodyDataObjectiveProgress;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    objectiveScore?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateObjectiveResponseBodyData extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 58YD
     */
    id?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 33453
     */
    position?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdatePrivacyResponseBodyDataPolicyListMemberList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    id?: string;
    nickname?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdatePrivacyResponseBodyDataPolicyList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    memberList?: UpdatePrivacyResponseBodyDataPolicyListMemberList[];
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    type?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdatePrivacyResponseBodyData extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    id?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    policyList?: UpdatePrivacyResponseBodyDataPolicyList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * public
     */
    privacy?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * period
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 增加对齐目标
     *
     * @param request - AlignObjectiveRequest
     * @param headers - AlignObjectiveHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AlignObjectiveResponse
     */
    alignObjectiveWithOptions(objectiveId: string, request: AlignObjectiveRequest, headers: AlignObjectiveHeaders, runtime: $Util.RuntimeOptions): Promise<AlignObjectiveResponse>;
    /**
     * 增加对齐目标
     *
     * @param request - AlignObjectiveRequest
     * @returns AlignObjectiveResponse
     */
    alignObjective(objectiveId: string, request: AlignObjectiveRequest): Promise<AlignObjectiveResponse>;
    /**
     * 批量添加权限信息
     *
     * @param request - BatchAddPermissionRequest
     * @param headers - BatchAddPermissionHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BatchAddPermissionResponse
     */
    batchAddPermissionWithOptions(request: BatchAddPermissionRequest, headers: BatchAddPermissionHeaders, runtime: $Util.RuntimeOptions): Promise<BatchAddPermissionResponse>;
    /**
     * 批量添加权限信息
     *
     * @param request - BatchAddPermissionRequest
     * @returns BatchAddPermissionResponse
     */
    batchAddPermission(request: BatchAddPermissionRequest): Promise<BatchAddPermissionResponse>;
    /**
     * 批量查询目标
     *
     * @param request - BatchQueryObjectiveRequest
     * @param headers - BatchQueryObjectiveHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BatchQueryObjectiveResponse
     */
    batchQueryObjectiveWithOptions(request: BatchQueryObjectiveRequest, headers: BatchQueryObjectiveHeaders, runtime: $Util.RuntimeOptions): Promise<BatchQueryObjectiveResponse>;
    /**
     * 批量查询目标
     *
     * @param request - BatchQueryObjectiveRequest
     * @returns BatchQueryObjectiveResponse
     */
    batchQueryObjective(request: BatchQueryObjectiveRequest): Promise<BatchQueryObjectiveResponse>;
    /**
     * 批量查询用户信息
     *
     * @param request - BatchQueryUserRequest
     * @param headers - BatchQueryUserHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BatchQueryUserResponse
     */
    batchQueryUserWithOptions(request: BatchQueryUserRequest, headers: BatchQueryUserHeaders, runtime: $Util.RuntimeOptions): Promise<BatchQueryUserResponse>;
    /**
     * 批量查询用户信息
     *
     * @param request - BatchQueryUserRequest
     * @returns BatchQueryUserResponse
     */
    batchQueryUser(request: BatchQueryUserRequest): Promise<BatchQueryUserResponse>;
    /**
     * 创建keyResult
     *
     * @param request - CreateKeyResultRequest
     * @param headers - CreateKeyResultHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateKeyResultResponse
     */
    createKeyResultWithOptions(request: CreateKeyResultRequest, headers: CreateKeyResultHeaders, runtime: $Util.RuntimeOptions): Promise<CreateKeyResultResponse>;
    /**
     * 创建keyResult
     *
     * @param request - CreateKeyResultRequest
     * @returns CreateKeyResultResponse
     */
    createKeyResult(request: CreateKeyResultRequest): Promise<CreateKeyResultResponse>;
    /**
     * 创建目标
     *
     * @param request - CreateObjectiveRequest
     * @param headers - CreateObjectiveHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateObjectiveResponse
     */
    createObjectiveWithOptions(request: CreateObjectiveRequest, headers: CreateObjectiveHeaders, runtime: $Util.RuntimeOptions): Promise<CreateObjectiveResponse>;
    /**
     * 创建目标
     *
     * @param request - CreateObjectiveRequest
     * @returns CreateObjectiveResponse
     */
    createObjective(request: CreateObjectiveRequest): Promise<CreateObjectiveResponse>;
    /**
     * 删除keyresult的方法
     *
     * @param request - DeleteKeyResultRequest
     * @param headers - DeleteKeyResultHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteKeyResultResponse
     */
    deleteKeyResultWithOptions(request: DeleteKeyResultRequest, headers: DeleteKeyResultHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteKeyResultResponse>;
    /**
     * 删除keyresult的方法
     *
     * @param request - DeleteKeyResultRequest
     * @returns DeleteKeyResultResponse
     */
    deleteKeyResult(request: DeleteKeyResultRequest): Promise<DeleteKeyResultResponse>;
    /**
     * 删除目标
     *
     * @param request - DeleteObjectiveRequest
     * @param headers - DeleteObjectiveHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteObjectiveResponse
     */
    deleteObjectiveWithOptions(objectiveId: string, request: DeleteObjectiveRequest, headers: DeleteObjectiveHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteObjectiveResponse>;
    /**
     * 删除目标
     *
     * @param request - DeleteObjectiveRequest
     * @returns DeleteObjectiveResponse
     */
    deleteObjective(objectiveId: string, request: DeleteObjectiveRequest): Promise<DeleteObjectiveResponse>;
    /**
     * 删除权限信息
     *
     * @param request - DeletePermissionRequest
     * @param headers - DeletePermissionHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeletePermissionResponse
     */
    deletePermissionWithOptions(request: DeletePermissionRequest, headers: DeletePermissionHeaders, runtime: $Util.RuntimeOptions): Promise<DeletePermissionResponse>;
    /**
     * 删除权限信息
     *
     * @param request - DeletePermissionRequest
     * @returns DeletePermissionResponse
     */
    deletePermission(request: DeletePermissionRequest): Promise<DeletePermissionResponse>;
    /**
     * 获取周期列表
     *
     * @param headers - GetPeriodListHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetPeriodListResponse
     */
    getPeriodListWithOptions(headers: GetPeriodListHeaders, runtime: $Util.RuntimeOptions): Promise<GetPeriodListResponse>;
    /**
     * 获取周期列表
     * @returns GetPeriodListResponse
     */
    getPeriodList(): Promise<GetPeriodListResponse>;
    /**
     * 获取权限信息
     *
     * @param request - GetPermissionRequest
     * @param headers - GetPermissionHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetPermissionResponse
     */
    getPermissionWithOptions(request: GetPermissionRequest, headers: GetPermissionHeaders, runtime: $Util.RuntimeOptions): Promise<GetPermissionResponse>;
    /**
     * 获取权限信息
     *
     * @param request - GetPermissionRequest
     * @returns GetPermissionResponse
     */
    getPermission(request: GetPermissionRequest): Promise<GetPermissionResponse>;
    /**
     * 获取用户当前周期下的全部 OKR 内容
     *
     * @param request - GetUserOkrRequest
     * @param headers - GetUserOkrHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetUserOkrResponse
     */
    getUserOkrWithOptions(request: GetUserOkrRequest, headers: GetUserOkrHeaders, runtime: $Util.RuntimeOptions): Promise<GetUserOkrResponse>;
    /**
     * 获取用户当前周期下的全部 OKR 内容
     *
     * @param request - GetUserOkrRequest
     * @returns GetUserOkrResponse
     */
    getUserOkr(request: GetUserOkrRequest): Promise<GetUserOkrResponse>;
    /**
     * 批量查询OKR
     *
     * @param request - OkrObjectivesBatchRequest
     * @param headers - OkrObjectivesBatchHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns OkrObjectivesBatchResponse
     */
    okrObjectivesBatchWithOptions(request: OkrObjectivesBatchRequest, headers: OkrObjectivesBatchHeaders, runtime: $Util.RuntimeOptions): Promise<OkrObjectivesBatchResponse>;
    /**
     * 批量查询OKR
     *
     * @param request - OkrObjectivesBatchRequest
     * @returns OkrObjectivesBatchResponse
     */
    okrObjectivesBatch(request: OkrObjectivesBatchRequest): Promise<OkrObjectivesBatchResponse>;
    /**
     * 查询单个用户的OKR
     *
     * @param request - OkrObjectivesByUserRequest
     * @param headers - OkrObjectivesByUserHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns OkrObjectivesByUserResponse
     */
    okrObjectivesByUserWithOptions(dingUserId: string, request: OkrObjectivesByUserRequest, headers: OkrObjectivesByUserHeaders, runtime: $Util.RuntimeOptions): Promise<OkrObjectivesByUserResponse>;
    /**
     * 查询单个用户的OKR
     *
     * @param request - OkrObjectivesByUserRequest
     * @returns OkrObjectivesByUserResponse
     */
    okrObjectivesByUser(dingUserId: string, request: OkrObjectivesByUserRequest): Promise<OkrObjectivesByUserResponse>;
    /**
     * 获取 OKR 周期
     *
     * @param request - OkrPeriodsRequest
     * @param headers - OkrPeriodsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns OkrPeriodsResponse
     */
    okrPeriodsWithOptions(request: OkrPeriodsRequest, headers: OkrPeriodsHeaders, runtime: $Util.RuntimeOptions): Promise<OkrPeriodsResponse>;
    /**
     * 获取 OKR 周期
     *
     * @param request - OkrPeriodsRequest
     * @returns OkrPeriodsResponse
     */
    okrPeriods(request: OkrPeriodsRequest): Promise<OkrPeriodsResponse>;
    /**
     * 取消对齐Objective
     *
     * @param request - UnAlignObjectiveRequest
     * @param headers - UnAlignObjectiveHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UnAlignObjectiveResponse
     */
    unAlignObjectiveWithOptions(objectiveId: string, request: UnAlignObjectiveRequest, headers: UnAlignObjectiveHeaders, runtime: $Util.RuntimeOptions): Promise<UnAlignObjectiveResponse>;
    /**
     * 取消对齐Objective
     *
     * @param request - UnAlignObjectiveRequest
     * @returns UnAlignObjectiveResponse
     */
    unAlignObjective(objectiveId: string, request: UnAlignObjectiveRequest): Promise<UnAlignObjectiveResponse>;
    /**
     * 更改KR内容
     *
     * @param request - UpdateKROfContentRequest
     * @param headers - UpdateKROfContentHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateKROfContentResponse
     */
    updateKROfContentWithOptions(request: UpdateKROfContentRequest, headers: UpdateKROfContentHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateKROfContentResponse>;
    /**
     * 更改KR内容
     *
     * @param request - UpdateKROfContentRequest
     * @returns UpdateKROfContentResponse
     */
    updateKROfContent(request: UpdateKROfContentRequest): Promise<UpdateKROfContentResponse>;
    /**
     * 更改KR分数
     *
     * @param request - UpdateKROfScoreRequest
     * @param headers - UpdateKROfScoreHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateKROfScoreResponse
     */
    updateKROfScoreWithOptions(request: UpdateKROfScoreRequest, headers: UpdateKROfScoreHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateKROfScoreResponse>;
    /**
     * 更改KR分数
     *
     * @param request - UpdateKROfScoreRequest
     * @returns UpdateKROfScoreResponse
     */
    updateKROfScore(request: UpdateKROfScoreRequest): Promise<UpdateKROfScoreResponse>;
    /**
     * 更改 KR 权重
     *
     * @param request - UpdateKROfWeightRequest
     * @param headers - UpdateKROfWeightHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateKROfWeightResponse
     */
    updateKROfWeightWithOptions(request: UpdateKROfWeightRequest, headers: UpdateKROfWeightHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateKROfWeightResponse>;
    /**
     * 更改 KR 权重
     *
     * @param request - UpdateKROfWeightRequest
     * @returns UpdateKROfWeightResponse
     */
    updateKROfWeight(request: UpdateKROfWeightRequest): Promise<UpdateKROfWeightResponse>;
    /**
     * 更新目标
     *
     * @param request - UpdateObjectiveRequest
     * @param headers - UpdateObjectiveHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateObjectiveResponse
     */
    updateObjectiveWithOptions(objectiveId: string, request: UpdateObjectiveRequest, headers: UpdateObjectiveHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateObjectiveResponse>;
    /**
     * 更新目标
     *
     * @param request - UpdateObjectiveRequest
     * @returns UpdateObjectiveResponse
     */
    updateObjective(objectiveId: string, request: UpdateObjectiveRequest): Promise<UpdateObjectiveResponse>;
    /**
     * 更新资源隐私策略
     *
     * @param request - UpdatePrivacyRequest
     * @param headers - UpdatePrivacyHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdatePrivacyResponse
     */
    updatePrivacyWithOptions(request: UpdatePrivacyRequest, headers: UpdatePrivacyHeaders, runtime: $Util.RuntimeOptions): Promise<UpdatePrivacyResponse>;
    /**
     * 更新资源隐私策略
     *
     * @param request - UpdatePrivacyRequest
     * @returns UpdatePrivacyResponse
     */
    updatePrivacy(request: UpdatePrivacyRequest): Promise<UpdatePrivacyResponse>;
}
