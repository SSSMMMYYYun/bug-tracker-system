/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class QueryAppActiveUsersHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAppActiveUsersRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100
     */
    maxResults?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    needPositionInfo?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    nextToken?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAppActiveUsersResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    hasMore?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    list?: QueryAppActiveUsersResponseBodyList[];
    /**
     * @remarks
     * This parameter is required.
     */
    nextToken?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 23153
     */
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAppActiveUsersResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryAppActiveUsersResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCollectingTraceTaskHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCollectingTraceTaskRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    userIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCollectingTraceTaskResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    list?: QueryCollectingTraceTaskResponseBodyList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCollectingTraceTaskResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryCollectingTraceTaskResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPageTraceDataHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPageTraceDataRequest extends $tea.Model {
    endTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100
     */
    maxResults?: number;
    /**
     * @example
     * 0
     */
    nextToken?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    staffId?: string;
    startTime?: number;
    traceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPageTraceDataResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    hasMore?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    list?: QueryPageTraceDataResponseBodyList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100
     */
    nextToken?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPageTraceDataResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryPageTraceDataResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAppActiveUsersResponseBodyList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * kxm9dhfs01jd98cuv
     */
    appTraceId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123.123
     */
    latitude?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123.123
     */
    longitude?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1619341954123
     */
    reportTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1619341754123
     */
    startTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * I0912384771
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCollectingTraceTaskResponseBodyList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ffsfsdf
     */
    appTraceId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    geoCollectPeriod?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    geoReportPeriod?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    geoReportStatus?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    reportEndTime?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    reportStartTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * I01231231ads1
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPageTraceDataResponseBodyListCoordinates extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    latitude?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    longitude?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPageTraceDataResponseBodyList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    coordinates?: QueryPageTraceDataResponseBodyListCoordinates;
    /**
     * @remarks
     * This parameter is required.
     */
    gmtLocation?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    gmtUpload?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 查询APP当前开启轨迹采集的用户
     *
     * @param request - QueryAppActiveUsersRequest
     * @param headers - QueryAppActiveUsersHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryAppActiveUsersResponse
     */
    queryAppActiveUsersWithOptions(request: QueryAppActiveUsersRequest, headers: QueryAppActiveUsersHeaders, runtime: $Util.RuntimeOptions): Promise<QueryAppActiveUsersResponse>;
    /**
     * 查询APP当前开启轨迹采集的用户
     *
     * @param request - QueryAppActiveUsersRequest
     * @returns QueryAppActiveUsersResponse
     */
    queryAppActiveUsers(request: QueryAppActiveUsersRequest): Promise<QueryAppActiveUsersResponse>;
    /**
     * 查询应用采集中的轨迹任务
     *
     * @param request - QueryCollectingTraceTaskRequest
     * @param headers - QueryCollectingTraceTaskHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryCollectingTraceTaskResponse
     */
    queryCollectingTraceTaskWithOptions(request: QueryCollectingTraceTaskRequest, headers: QueryCollectingTraceTaskHeaders, runtime: $Util.RuntimeOptions): Promise<QueryCollectingTraceTaskResponse>;
    /**
     * 查询应用采集中的轨迹任务
     *
     * @param request - QueryCollectingTraceTaskRequest
     * @returns QueryCollectingTraceTaskResponse
     */
    queryCollectingTraceTask(request: QueryCollectingTraceTaskRequest): Promise<QueryCollectingTraceTaskResponse>;
    /**
     * 查询轨迹数据
     *
     * @param request - QueryPageTraceDataRequest
     * @param headers - QueryPageTraceDataHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryPageTraceDataResponse
     */
    queryPageTraceDataWithOptions(request: QueryPageTraceDataRequest, headers: QueryPageTraceDataHeaders, runtime: $Util.RuntimeOptions): Promise<QueryPageTraceDataResponse>;
    /**
     * 查询轨迹数据
     *
     * @param request - QueryPageTraceDataRequest
     * @returns QueryPageTraceDataResponse
     */
    queryPageTraceData(request: QueryPageTraceDataRequest): Promise<QueryPageTraceDataResponse>;
}
