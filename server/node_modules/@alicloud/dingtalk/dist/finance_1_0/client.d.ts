/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class ApplyBatchPayHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ApplyBatchPayRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021070712440326300185114
     */
    accountId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20210909153300000002734753314700
     */
    orderNo?: string;
    /**
     * @example
     * map
     */
    passBackParams?: {
        [key: string]: any;
    };
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * PC
     */
    payTerminal?: string;
    /**
     * @example
     * http://xx
     */
    returnUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 8754214873
     */
    staffId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10.00
     */
    transAmount?: string;
    /**
     * @example
     * yyyy-MM-dd HH:mm:ss
     */
    transExpireTime?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ApplyBatchPayResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20210909153300000002734753314700
     */
    orderNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * payData
     */
    payData?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ApplyBatchPayResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ApplyBatchPayResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CloseLoanEntranceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CloseLoanEntranceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1a23qdfa
     *
     * **if can be null:**
     * true
     */
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CloseLoanEntranceResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1a23qdfa
     */
    requestId?: string;
    /**
     * @example
     * Y
     */
    result?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CloseLoanEntranceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CloseLoanEntranceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsultCreateSubInstitutionHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsultCreateSubInstitutionRequest extends $tea.Model {
    /**
     * @example
     * asdf@163.com
     */
    bindingAlipayLogonId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    contactInfo?: ConsultCreateSubInstitutionRequestContactInfo;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202111090001
     */
    instId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    legalPersonCertInfo?: ConsultCreateSubInstitutionRequestLegalPersonCertInfo;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021000001
     */
    outTradeNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ALIPAY
     */
    payChannel?: string;
    qualificationInfos?: ConsultCreateSubInstitutionRequestQualificationInfos[];
    /**
     * @remarks
     * This parameter is required.
     */
    services?: string[];
    /**
     * @remarks
     * This parameter is required.
     */
    settleInfo?: ConsultCreateSubInstitutionRequestSettleInfo;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * S001
     */
    solution?: string;
    subInstAddressInfo?: ConsultCreateSubInstitutionRequestSubInstAddressInfo;
    subInstAuthInfo?: ConsultCreateSubInstitutionRequestSubInstAuthInfo;
    /**
     * @remarks
     * This parameter is required.
     */
    subInstBasicInfo?: ConsultCreateSubInstitutionRequestSubInstBasicInfo;
    /**
     * @remarks
     * This parameter is required.
     */
    subInstCertifyInfo?: ConsultCreateSubInstitutionRequestSubInstCertifyInfo;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1001
     */
    subInstId?: string;
    subInstInvoiceInfo?: ConsultCreateSubInstitutionRequestSubInstInvoiceInfo;
    subInstShopInfo?: ConsultCreateSubInstitutionRequestSubInstShopInfo;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsultCreateSubInstitutionResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202110110000001
     */
    orderId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsultCreateSubInstitutionResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ConsultCreateSubInstitutionResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreatWithholdingOrderAndPayHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreatWithholdingOrderAndPayRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10.01
     */
    amount?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202111090001
     */
    instId?: string;
    otherPayChannelDetailInfoList?: CreatWithholdingOrderAndPayRequestOtherPayChannelDetailInfoList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021113000001
     */
    outTradeNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ALIPAY
     */
    payChannel?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2120493284
     */
    payerUserId?: string;
    /**
     * @example
     * 备注
     */
    remark?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1001
     */
    subInstId?: string;
    /**
     * @example
     * 15m
     */
    timeOutExpress?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 餐费
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreatWithholdingOrderAndPayResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10.01
     */
    amount?: string;
    /**
     * @example
     * 2021-11-15 10:10:10
     */
    gmtPay?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202111010001
     */
    instId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202121241343151
     */
    orderNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202111020001
     */
    outTradeNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ALIPAY
     */
    payChannel?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 13****09
     */
    payChannelAccountNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123124
     */
    payerStaffId?: string;
    /**
     * @example
     * 备注
     */
    remark?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SUCCESS
     */
    status?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1001
     */
    subInstId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 餐费
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreatWithholdingOrderAndPayResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreatWithholdingOrderAndPayResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAcquireRefundOrderHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAcquireRefundOrderRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202111090001
     */
    instId?: string;
    /**
     * @example
     * 2120493284
     */
    operatorUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021113000001
     */
    originOutTradeNo?: string;
    otherPayChannelDetailInfoList?: CreateAcquireRefundOrderRequestOtherPayChannelDetailInfoList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * r2021113000001
     */
    outRefundNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10.01
     */
    refundAmount?: string;
    /**
     * @example
     * 备注
     */
    remark?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1001
     */
    subInstId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 餐费
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAcquireRefundOrderResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * r2021113000001
     */
    outRefundNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202111110000111
     */
    refundOrderNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SUCCESS
     */
    status?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAcquireRefundOrderResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateAcquireRefundOrderResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateBatchTradeOrderHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateBatchTradeOrderRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021070712440326300185114
     */
    accountId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 13****9
     */
    accountNo?: string;
    /**
     * @example
     * 备注
     */
    batchRemark?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    batchTradeDetails?: CreateBatchTradeOrderRequestBatchTradeDetails[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20210901001
     */
    outBatchNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 8476212471
     */
    staffId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1.00
     */
    totalAmount?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    totalCount?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 工资
     */
    tradeTitle?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateBatchTradeOrderResponseBody extends $tea.Model {
    orderNo?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    orderStatus?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    outBatchNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateBatchTradeOrderResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateBatchTradeOrderResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSubInstitutionHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSubInstitutionRequest extends $tea.Model {
    /**
     * @example
     * asdf@163.com
     */
    bindingAlipayLogonId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    contactInfo?: CreateSubInstitutionRequestContactInfo;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202111090001
     */
    instId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    legalPersonCertInfo?: CreateSubInstitutionRequestLegalPersonCertInfo;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021000001
     */
    outTradeNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ALIPAY
     */
    payChannel?: string;
    qualificationInfos?: CreateSubInstitutionRequestQualificationInfos[];
    /**
     * @remarks
     * This parameter is required.
     */
    services?: string[];
    /**
     * @remarks
     * This parameter is required.
     */
    settleInfo?: CreateSubInstitutionRequestSettleInfo;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * S001
     */
    solution?: string;
    subInstAddressInfo?: CreateSubInstitutionRequestSubInstAddressInfo;
    subInstAuthInfo?: CreateSubInstitutionRequestSubInstAuthInfo;
    /**
     * @remarks
     * This parameter is required.
     */
    subInstBasicInfo?: CreateSubInstitutionRequestSubInstBasicInfo;
    /**
     * @remarks
     * This parameter is required.
     */
    subInstCertifyInfo?: CreateSubInstitutionRequestSubInstCertifyInfo;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1001
     */
    subInstId?: string;
    subInstInvoiceInfo?: CreateSubInstitutionRequestSubInstInvoiceInfo;
    subInstShopInfo?: CreateSubInstitutionRequestSubInstShopInfo;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSubInstitutionResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202110110000001
     */
    orderId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSubInstitutionResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateSubInstitutionResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateUserCodeInstanceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateUserCodeInstanceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    availableTimes?: CreateUserCodeInstanceRequestAvailableTimes[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * TEST
     */
    codeIdentity?: string;
    codeValue?: string;
    /**
     * @example
     * DING_STATIC
     */
    codeValueType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * corpid1234
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    extInfo?: {
        [key: string]: any;
    };
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * yyyy-MM-dd HH:mm:ss
     */
    gmtExpired?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202102021212
     */
    requestId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * OPEN
     */
    status?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * INTERNAL_STAFF
     */
    userCorpRelationType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 86-xxxxxx
     */
    userIdentity?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateUserCodeInstanceResponseBody extends $tea.Model {
    codeDetailUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * codexxxxxx
     */
    codeId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateUserCodeInstanceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateUserCodeInstanceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DecodePayCodeHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DecodePayCodeRequest extends $tea.Model {
    payCode?: string;
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DecodePayCodeResponseBody extends $tea.Model {
    /**
     * @example
     * 2512345678
     */
    alipayCode?: string;
    /**
     * @example
     * codeIdxxxxx
     */
    codeId?: string;
    /**
     * @example
     * DT_VISITOR
     */
    codeIdentity?: string;
    /**
     * @example
     * PURE_IDENTIFY_CODE
     */
    codeType?: string;
    /**
     * @example
     * ding1234
     */
    corpId?: string;
    /**
     * @example
     * {"authRules":{}}
     */
    extInfo?: string;
    /**
     * @example
     * xxxxx
     */
    outBizId?: string;
    /**
     * @example
     * INTERNAL_STAFF
     */
    userCorpRelationType?: string;
    /**
     * @example
     * staffId
     */
    userId?: string;
    /**
     * @example
     * true
     */
    userInCorp?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DecodePayCodeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DecodePayCodeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class FinanceLoanNotifyRegisterHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class FinanceLoanNotifyRegisterRequest extends $tea.Model {
    /**
     * @example
     * 2024-06-18 14:53:33
     */
    completeTime?: string;
    /**
     * @example
     * {}
     */
    extension?: string;
    /**
     * @example
     * 330725189509101234
     */
    idCardNo?: string;
    /**
     * @example
     * 中原消费金融
     */
    openChannelName?: string;
    /**
     * @example
     * XFD201909210001
     */
    openProductCode?: string;
    /**
     * @example
     * 员工贷
     */
    openProductName?: string;
    /**
     * @example
     * ZYXJ_XFD
     */
    openProductType?: string;
    /**
     * @example
     * 0
     */
    processingStatus?: string;
    /**
     * @example
     * ZRSB2020
     */
    refuseCode?: string;
    /**
     * @example
     * 进件准入失败
     */
    refuseReason?: string;
    /**
     * @example
     * 2024061814654041710801
     */
    registerNo?: string;
    /**
     * @example
     * 0
     */
    status?: string;
    /**
     * @example
     * 2024-06-18 14:53:33
     */
    submitTime?: string;
    /**
     * @example
     * 18092149430
     */
    userMobile?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class FinanceLoanNotifyRegisterResponseBody extends $tea.Model {
    requestId?: string;
    result?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class FinanceLoanNotifyRegisterResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: FinanceLoanNotifyRegisterResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifySubInstitutionHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifySubInstitutionRequest extends $tea.Model {
    /**
     * @example
     * asdf@163.com
     */
    bindingAlipayLogonId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    contactInfo?: ModifySubInstitutionRequestContactInfo;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202111090001
     */
    instId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    legalPersonCertInfo?: ModifySubInstitutionRequestLegalPersonCertInfo;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021000001
     */
    outTradeNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ALIPAY
     */
    payChannel?: string;
    qualificationInfos?: ModifySubInstitutionRequestQualificationInfos[];
    /**
     * @remarks
     * This parameter is required.
     */
    services?: string[];
    /**
     * @remarks
     * This parameter is required.
     */
    settleInfo?: ModifySubInstitutionRequestSettleInfo;
    subInstAddressInfo?: ModifySubInstitutionRequestSubInstAddressInfo;
    subInstAuthInfo?: ModifySubInstitutionRequestSubInstAuthInfo;
    /**
     * @remarks
     * This parameter is required.
     */
    subInstBasicInfo?: ModifySubInstitutionRequestSubInstBasicInfo;
    /**
     * @remarks
     * This parameter is required.
     */
    subInstCertifyInfo?: ModifySubInstitutionRequestSubInstCertifyInfo;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1001
     */
    subInstId?: string;
    subInstInvoiceInfo?: ModifySubInstitutionRequestSubInstInvoiceInfo;
    subInstShopInfo?: ModifySubInstitutionRequestSubInstShopInfo;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifySubInstitutionResponseBody extends $tea.Model {
    /**
     * @example
     * 202110110000001
     */
    orderId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifySubInstitutionResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ModifySubInstitutionResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class NotifyPayCodePayResultHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class NotifyPayCodePayResultRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1234.56
     */
    amount?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1.00, 没有传0.00
     */
    chargeAmount?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding1234
     */
    corpId?: string;
    /**
     * @example
     * { "akey": "avalue“}
     */
    extInfo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-01-01 11:11:11
     */
    gmtTradeCreate?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-01-01 11:11:11
     */
    gmtTradeFinish?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * XX公司食堂
     */
    merchantName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    payChannelDetailList?: NotifyPayCodePayResultRequestPayChannelDetailList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 261234567890
     */
    payCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1.23，没有传0.00
     */
    promotionAmount?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 备注
     */
    remark?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 晚餐100.0元
     */
    title?: string;
    /**
     * @example
     * BALANCE_NOT_ENOUGH
     */
    tradeErrorCode?: string;
    /**
     * @example
     * 余额不足，请充值
     */
    tradeErrorMsg?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202101012345678
     */
    tradeNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SUCCESS/FAIL
     */
    tradeStatus?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * userId1234
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class NotifyPayCodePayResultResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SUCCESS
     */
    result?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class NotifyPayCodePayResultResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: NotifyPayCodePayResultResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class NotifyPayCodeRefundResultHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class NotifyPayCodeRefundResultRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding1234
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-11-11 11:11:11
     */
    gmtRefund?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    payChannelDetailList?: NotifyPayCodeRefundResultRequestPayChannelDetailList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * payCode
     */
    payCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1.00
     */
    refundAmount?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * refundOrderNo
     */
    refundOrderNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0.00
     */
    refundPromotionAmount?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 晚餐退款
     */
    remark?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * tradeNo
     */
    tradeNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * userId
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class NotifyPayCodeRefundResultResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SUCCESS
     */
    result?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class NotifyPayCodeRefundResultResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: NotifyPayCodeRefundResultResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class NotifyVerifyResultHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class NotifyVerifyResultRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * corpxxxx
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 261234567890
     */
    payCode?: string;
    remark?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * INTERNAL_STAFF
     */
    userCorpRelationType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxxxxx
     */
    userIdentity?: string;
    /**
     * @example
     * 门禁验证
     */
    verifyEvent?: string;
    /**
     * @example
     * 1号食堂
     */
    verifyLocation?: string;
    /**
     * @example
     * 202112120003232
     */
    verifyNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 是否通过
     */
    verifyResult?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-01-01 12:12:12
     */
    verifyTime?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class NotifyVerifyResultResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SUCCESS
     */
    result?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class NotifyVerifyResultResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: NotifyVerifyResultResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PreCreateGroupBillOrderHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PreCreateGroupBillOrderRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    billItemList?: PreCreateGroupBillOrderRequestBillItemList[];
    extParams?: {
        [key: string]: string;
    };
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2
     */
    headCount?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    isAverageAmount?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * dhqhadsnkj2qweqsw2
     */
    merchantId?: string;
    /**
     * @example
     * opemcesdjuwqw2uwnedj==
     */
    openCid?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20230918291921929193911
     */
    outBizNo?: string;
    /**
     * @example
     * ding32fff839a3e0105d
     */
    payeeCorpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ECEjwiiwenwnw2q2sdd
     */
    payeeUnionId?: string;
    /**
     * @example
     * 饿了么拼单-测试
     */
    remark?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10.24
     */
    totalAmount?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PreCreateGroupBillOrderResponseBody extends $tea.Model {
    result?: PreCreateGroupBillOrderResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PreCreateGroupBillOrderResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: PreCreateGroupBillOrderResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAcquireRefundOrderHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAcquireRefundOrderRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202100001
     */
    outRefundNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAcquireRefundOrderResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10.01
     */
    amount?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-11-15 10:10:09
     */
    gmtCreate?: string;
    /**
     * @example
     * 2021-11-15 10:10:10
     */
    gmtRefund?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202111010001
     */
    instId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202121241343151
     */
    orderNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202111020001
     */
    originOutTradeNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * r202111020001
     */
    outRefundNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ALIPAY
     */
    payChannel?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 13****09
     */
    payChannelAccountNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123124
     */
    payerUserId?: string;
    /**
     * @example
     * 备注
     */
    remark?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SUCCESS
     */
    status?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1001
     */
    subInstId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 餐费
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAcquireRefundOrderResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryAcquireRefundOrderResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryBatchTradeDetailListHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryBatchTradeDetailListRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20210901001
     */
    outBatchNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 50
     */
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryBatchTradeDetailListResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    batchTradeDetailList?: QueryBatchTradeDetailListResponseBodyBatchTradeDetailList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    pageSize?: number;
    /**
     * @example
     * 1
     */
    total?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    totalPageNumber?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryBatchTradeDetailListResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryBatchTradeDetailListResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryBatchTradeOrderHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryBatchTradeOrderRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    outBatchNos?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryBatchTradeOrderResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    batchTradeOrderVOs?: QueryBatchTradeOrderResponseBodyBatchTradeOrderVOs[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryBatchTradeOrderResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryBatchTradeOrderResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPayAccountListHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPayAccountListResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    payAccountVOList?: QueryPayAccountListResponseBodyPayAccountVOList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPayAccountListResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryPayAccountListResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRegisterOrderHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRegisterOrderRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202111090001
     */
    instId?: string;
    /**
     * @example
     * 20211222000000001
     */
    orderId?: string;
    /**
     * @example
     * 202112220001
     */
    outTradeNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 3
     */
    subInstId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRegisterOrderResponseBody extends $tea.Model {
    failReason?: string;
    gmtAudit?: string;
    instId?: string;
    orderId?: string;
    outTradeNo?: string;
    status?: string;
    subInstId?: string;
    subInstName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRegisterOrderResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryRegisterOrderResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserAgreementHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserAgreementRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * TRADE
     */
    bizCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * WITHHOLDING
     */
    bizScene?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202111090001
     */
    instId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1001
     */
    subInstId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2120493284
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserAgreementResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 201220123212312
     */
    agreementNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding123123234234
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-11-11 10:10:10
     */
    gmtExpire?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-11-11 10:10:10
     */
    gmtSign?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-11-11 10:10:10
     */
    gmtValid?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021000001
     */
    instId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ALIPAY
     */
    payChannel?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * *川
     */
    payChannelAccountName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 139*****0
     */
    payChannelAccountNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SUCCESS
     */
    status?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 101
     */
    subInstId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 54646545
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserAgreementResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryUserAgreementResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserAlipayAccountHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserAlipayAccountResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2088894773487
     */
    alipayUid?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserAlipayAccountResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryUserAlipayAccountResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryWithholdingOrderHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryWithholdingOrderRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202100001
     */
    outTradeNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryWithholdingOrderResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10.01
     */
    amount?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-11-15 10:10:09
     */
    gmtCreate?: string;
    /**
     * @example
     * 2021-11-15 10:10:10
     */
    gmtPay?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202111010001
     */
    instId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202121241343151
     */
    orderNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202111020001
     */
    outTradeNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ALIPAY
     */
    payChannel?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 13****09
     */
    payChannelAccountNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123124
     */
    payerUserId?: string;
    /**
     * @example
     * 备注
     */
    remark?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SUCCESS
     */
    status?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1001
     */
    subInstId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 餐费
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryWithholdingOrderResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryWithholdingOrderResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveCorpPayCodeHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveCorpPayCodeRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * H_FISH_CANTEEN
     */
    codeIdentity?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * dingxxxx
     */
    corpId?: string;
    extInfo?: {
        [key: string]: string;
    };
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * OPEN
     */
    status?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveCorpPayCodeResponseBody extends $tea.Model {
    codeIdentity?: string;
    corpId?: string;
    extInfo?: {
        [key: string]: string;
    };
    status?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveCorpPayCodeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SaveCorpPayCodeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UnsignUserAgreementHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UnsignUserAgreementRequest extends $tea.Model {
    /**
     * @example
     * 23021_12342134
     */
    agreementNo?: string;
    /**
     * @example
     * TRADE
     */
    bizCode?: string;
    /**
     * @example
     * WITHHOLDING
     */
    bizScene?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202111090001
     */
    instId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1001
     */
    subInstId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2120493284
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UnsignUserAgreementResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpateUserCodeInstanceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpateUserCodeInstanceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    availableTimes?: UpateUserCodeInstanceRequestAvailableTimes[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ccodexxxxx
     */
    codeId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * TEST
     */
    codeIdentity?: string;
    codeValue?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * corpIdxxxx
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    extInfo?: {
        [key: string]: any;
    };
    /**
     * @remarks
     * This parameter is required.
     */
    gmtExpired?: string;
    /**
     * @example
     * OPEN
     */
    status?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * INTERNAL_STAFF
     */
    userCorpRelationType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 86-xxxxxx
     */
    userIdentity?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpateUserCodeInstanceResponseBody extends $tea.Model {
    /**
     * @example
     * codexxxxxx
     */
    codeId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpateUserCodeInstanceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpateUserCodeInstanceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVerifyStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVerifyStatusRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * lpKgSTzGSy
     */
    bizId?: string;
    /**
     * @example
     * 1
     */
    checkingResult?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    checkingStatus?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 200
     */
    code?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding673cxxxxxxxxxxxx85
     */
    corpId?: string;
    /**
     * @example
     * {"restCheckTimes":10,"noticeFlag":1}
     */
    extension?: string;
    /**
     * @example
     * 034012100111
     */
    invoiceCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 61235725
     */
    invoiceNo?: string;
    /**
     * @example
     * 1
     */
    invoiceStatus?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1299999
     */
    invoiceVerifyId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    msg?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * BPq7qiSIH8PJHlB9kPuii1NQiEiE
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVerifyStatusResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateInvoiceVerifyStatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateInvoiceVerifyStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadInvoiceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadInvoiceRequest extends $tea.Model {
    extension?: UploadInvoiceRequestExtension;
    /**
     * @remarks
     * This parameter is required.
     */
    invoices?: UploadInvoiceRequestInvoices[];
    userIdentity?: UploadInvoiceRequestUserIdentity;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadInvoiceResponseBody extends $tea.Model {
    result?: UploadInvoiceResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadInvoiceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UploadInvoiceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadInvoiceByAuthHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadInvoiceByAuthRequest extends $tea.Model {
    extension?: UploadInvoiceByAuthRequestExtension;
    /**
     * @remarks
     * This parameter is required.
     */
    invoices?: UploadInvoiceByAuthRequestInvoices[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadInvoiceByAuthResponseBody extends $tea.Model {
    result?: UploadInvoiceByAuthResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadInvoiceByAuthResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UploadInvoiceByAuthResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadInvoiceByMobileHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadInvoiceByMobileRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    invoices?: UploadInvoiceByMobileRequestInvoices[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 13600000000
     */
    mobile?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 86
     */
    mobileStateCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadInvoiceByMobileResponseBody extends $tea.Model {
    result?: UploadInvoiceByMobileResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadInvoiceByMobileResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UploadInvoiceByMobileResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadRegisterImageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadRegisterImageRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * byte[]转Base64
     */
    imageContent?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * test
     */
    imageName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * JPG
     */
    imageType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 12020001
     */
    instId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ALIPAY
     */
    payChannel?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadRegisterImageResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ossUrl
     */
    ossUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadRegisterImageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UploadRegisterImageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UserAgreementPageSignHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UserAgreementPageSignRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * TRADE
     */
    bizCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * WITHHOLDING
     */
    bizScene?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202111090001
     */
    instId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 支付宝
     */
    payChannel?: string;
    /**
     * @example
     * 备注
     */
    remark?: string;
    /**
     * @example
     * http://****.com
     */
    returnUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 详见支付宝接口文档https://opendocs.alipay.com/open/20190319114403226822/signscene
     */
    signScene?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1001
     */
    subInstId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 滴滴出行
     */
    subMerchantName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 免密付车费，单次最高500元
     */
    subMerchantServiceDesc?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 滴滴出行免密支付
     */
    subMerchantServiceName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2120493284
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UserAgreementPageSignResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 略
     */
    pageData?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UserAgreementPageSignResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UserAgreementPageSignResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsultCreateSubInstitutionRequestContactInfo extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 李某某
     */
    contactName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 13900000000
     */
    mobile?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsultCreateSubInstitutionRequestLegalPersonCertInfo extends $tea.Model {
    /**
     * @example
     * ossUrl
     */
    certBackImage?: string;
    /**
     * @example
     * ossUrl
     */
    certFrontImage?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 李某某
     */
    certName?: string;
    /**
     * @example
     * 100
     */
    certType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 330104200010109999
     */
    idCardNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsultCreateSubInstitutionRequestQualificationInfos extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ossUrl
     */
    qualificationImage?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 301
     */
    qualificationType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsultCreateSubInstitutionRequestSettleInfo extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 622202120200000000
     */
    accountId?: string;
    /**
     * @example
     * 李某某
     */
    accountName?: string;
    /**
     * @example
     * DEBIT_CARD
     */
    accountType?: string;
    /**
     * @example
     * 城东支行
     */
    bankBranchName?: string;
    /**
     * @example
     * 杭州市
     */
    bankCity?: string;
    /**
     * @example
     * 313791000023
     */
    bankCode?: string;
    /**
     * @example
     * 工商银行
     */
    bankName?: string;
    /**
     * @example
     * 浙江省
     */
    bankProvince?: string;
    /**
     * @example
     * ICBC
     */
    bankShortNameCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ALIPAY
     */
    type?: string;
    /**
     * @example
     * TO_PRI
     */
    usageType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsultCreateSubInstitutionRequestSubInstAddressInfo extends $tea.Model {
    /**
     * @example
     * 未来park
     */
    address?: string;
    /**
     * @example
     * 330100
     */
    cityCode?: string;
    /**
     * @example
     * 330104
     */
    districtCode?: string;
    /**
     * @example
     * 330000
     */
    provinceCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsultCreateSubInstitutionRequestSubInstAuthInfo extends $tea.Model {
    /**
     * @example
     * ossUrl
     */
    authorizationLetterUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsultCreateSubInstitutionRequestSubInstBasicInfo extends $tea.Model {
    /**
     * @example
     * 一食堂
     */
    aliasName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5812
     */
    mcc?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 食堂
     */
    subInstName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 01
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsultCreateSubInstitutionRequestSubInstCertifyInfo extends $tea.Model {
    /**
     * @example
     * ossUrl
     */
    certImage?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 331081198611111111
     */
    certNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 201
     */
    certType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsultCreateSubInstitutionRequestSubInstInvoiceInfoMailAddress extends $tea.Model {
    /**
     * @example
     * 未来park
     */
    address?: string;
    /**
     * @example
     * 330100
     */
    cityCode?: string;
    /**
     * @example
     * 330104
     */
    districtCode?: string;
    /**
     * @example
     * 330000
     */
    provinceCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsultCreateSubInstitutionRequestSubInstInvoiceInfo extends $tea.Model {
    /**
     * @example
     * true
     */
    acceptElectronic?: boolean;
    /**
     * @example
     * 浙江省杭州市西湖区西溪路蚂蚁金服
     */
    address?: string;
    /**
     * @example
     * false
     */
    autoInvoice?: boolean;
    /**
     * @example
     * 1234567812345678123
     */
    bankAccount?: string;
    /**
     * @example
     * 中国银行
     */
    bankName?: string;
    mailAddress?: ConsultCreateSubInstitutionRequestSubInstInvoiceInfoMailAddress;
    /**
     * @example
     * 张三
     */
    mailName?: string;
    /**
     * @example
     * 057162288888
     */
    mailPhone?: string;
    /**
     * @example
     * 51010482542598631219
     */
    taxNo?: string;
    /**
     * @example
     * 01
     */
    taxPayerQualification?: string;
    /**
     * @example
     * 19981011
     */
    taxPayerValidDate?: string;
    /**
     * @example
     * 057162288888
     */
    telephone?: string;
    /**
     * @example
     * **有限公司
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsultCreateSubInstitutionRequestSubInstShopInfo extends $tea.Model {
    inDoorImages?: string[];
    outDoorImages?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreatWithholdingOrderAndPayRequestOtherPayChannelDetailInfoListFundToolDetailInfoList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5.00
     */
    amount?: string;
    extInfo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 余额
     */
    fundToolName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-11-15 10:10:10
     */
    gmtCreate?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-11-15 10:10:11
     */
    gmtFinish?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * false
     */
    promotionFundTool?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreatWithholdingOrderAndPayRequestOtherPayChannelDetailInfoList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5.00
     */
    amount?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fundToolDetailInfoList?: CreatWithholdingOrderAndPayRequestOtherPayChannelDetailInfoListFundToolDetailInfoList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 支付宝
     */
    payChannelName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021110100001
     */
    payChannelOrderNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ALIPAY
     */
    payChannelType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 4.00
     */
    promotionAmount?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAcquireRefundOrderRequestOtherPayChannelDetailInfoListFundToolDetailInfoList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5.00
     */
    amount?: string;
    extInfo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 余额
     */
    fundToolName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-11-15 10:10:10
     */
    gmtCreate?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-11-15 10:10:11
     */
    gmtFinish?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * false
     */
    promotionFundTool?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAcquireRefundOrderRequestOtherPayChannelDetailInfoList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5.00
     */
    amount?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fundToolDetailInfoList?: CreateAcquireRefundOrderRequestOtherPayChannelDetailInfoListFundToolDetailInfoList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 支付宝
     */
    payChannelName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021110100001
     */
    payChannelOrderNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ALIPAY
     */
    payChannelType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 4.00
     */
    promotionAmount?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateBatchTradeOrderRequestBatchTradeDetails extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1.00
     */
    amount?: string;
    /**
     * @example
     * 工资
     */
    memo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 测试
     */
    payeeAccountName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 13000000000
     */
    payeeAccountNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ALIPAY
     */
    payeeAccountType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    serialNo?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSubInstitutionRequestContactInfo extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 李某某
     */
    contactName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 13900000000
     */
    mobile?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSubInstitutionRequestLegalPersonCertInfo extends $tea.Model {
    /**
     * @example
     * ossUrl
     */
    certBackImage?: string;
    /**
     * @example
     * ossUrl
     */
    certFrontImage?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 李某某
     */
    certName?: string;
    /**
     * @example
     * 100
     */
    certType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 330104200010109999
     */
    idCardNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSubInstitutionRequestQualificationInfos extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ossUrl
     */
    qualificationImage?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 301
     */
    qualificationType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSubInstitutionRequestSettleInfo extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 622202120200000000
     */
    accountId?: string;
    /**
     * @example
     * 李某某
     */
    accountName?: string;
    /**
     * @example
     * DEBIT_CARD
     */
    accountType?: string;
    /**
     * @example
     * 城东支行
     */
    bankBranchName?: string;
    /**
     * @example
     * 杭州市
     */
    bankCity?: string;
    /**
     * @example
     * 313791000023
     */
    bankCode?: string;
    /**
     * @example
     * 工商银行
     */
    bankName?: string;
    /**
     * @example
     * 浙江省
     */
    bankProvince?: string;
    /**
     * @example
     * ICBC
     */
    bankShortNameCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ALIPAY
     */
    type?: string;
    /**
     * @example
     * TO_PRI
     */
    usageType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSubInstitutionRequestSubInstAddressInfo extends $tea.Model {
    /**
     * @example
     * 未来park
     */
    address?: string;
    /**
     * @example
     * 330100
     */
    cityCode?: string;
    /**
     * @example
     * 330104
     */
    districtCode?: string;
    /**
     * @example
     * 330000
     */
    provinceCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSubInstitutionRequestSubInstAuthInfo extends $tea.Model {
    /**
     * @example
     * ossUrl
     */
    authorizationLetterUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSubInstitutionRequestSubInstBasicInfo extends $tea.Model {
    /**
     * @example
     * 一食堂
     */
    aliasName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5812
     */
    mcc?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 食堂
     */
    subInstName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 01
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSubInstitutionRequestSubInstCertifyInfo extends $tea.Model {
    /**
     * @example
     * ossUrl
     */
    certImage?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 331081198611111111
     */
    certNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 201
     */
    certType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSubInstitutionRequestSubInstInvoiceInfoMailAddress extends $tea.Model {
    /**
     * @example
     * 未来park
     */
    address?: string;
    /**
     * @example
     * 330100
     */
    cityCode?: string;
    /**
     * @example
     * 330104
     */
    districtCode?: string;
    /**
     * @example
     * 330000
     */
    provinceCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSubInstitutionRequestSubInstInvoiceInfo extends $tea.Model {
    /**
     * @example
     * true
     */
    acceptElectronic?: boolean;
    /**
     * @example
     * 浙江省杭州市西湖区西溪路蚂蚁金服
     */
    address?: string;
    /**
     * @example
     * false
     */
    autoInvoice?: boolean;
    /**
     * @example
     * 1234567812345678123
     */
    bankAccount?: string;
    /**
     * @example
     * 中国银行
     */
    bankName?: string;
    mailAddress?: CreateSubInstitutionRequestSubInstInvoiceInfoMailAddress;
    /**
     * @example
     * 张三
     */
    mailName?: string;
    /**
     * @example
     * 057162288888
     */
    mailPhone?: string;
    /**
     * @example
     * 51010482542598631219
     */
    taxNo?: string;
    /**
     * @example
     * 01
     */
    taxPayerQualification?: string;
    /**
     * @example
     * 19981011
     */
    taxPayerValidDate?: string;
    /**
     * @example
     * 057162288888
     */
    telephone?: string;
    /**
     * @example
     * **有限公司
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSubInstitutionRequestSubInstShopInfo extends $tea.Model {
    inDoorImages?: string[];
    outDoorImages?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateUserCodeInstanceRequestAvailableTimes extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * yyyy-MM-dd HH:mm:ss
     */
    gmtEnd?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * yyyy-MM-dd HH:mm:ss
     */
    gmtStart?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifySubInstitutionRequestContactInfo extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 李某某
     */
    contactName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 13900000000
     */
    mobile?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifySubInstitutionRequestLegalPersonCertInfo extends $tea.Model {
    /**
     * @example
     * ossUrl
     */
    certBackImage?: string;
    /**
     * @example
     * ossUrl
     */
    certFrontImage?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 李某某
     */
    certName?: string;
    /**
     * @example
     * 100
     */
    certType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 330104200010109999
     */
    idCardNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifySubInstitutionRequestQualificationInfos extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ossUrl
     */
    qualificationImage?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 301
     */
    qualificationType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifySubInstitutionRequestSettleInfo extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 622202120200000000
     */
    accountId?: string;
    /**
     * @example
     * 李某某
     */
    accountName?: string;
    /**
     * @example
     * DEBIT_CARD
     */
    accountType?: string;
    /**
     * @example
     * 城东支行
     */
    bankBranchName?: string;
    /**
     * @example
     * 杭州市
     */
    bankCity?: string;
    /**
     * @example
     * 313791000023
     */
    bankCode?: string;
    /**
     * @example
     * 工商银行
     */
    bankName?: string;
    /**
     * @example
     * 浙江省
     */
    bankProvince?: string;
    /**
     * @example
     * ICBC
     */
    bankShortNameCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ALIPAY
     */
    type?: string;
    /**
     * @example
     * TO_PRI
     */
    usageType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifySubInstitutionRequestSubInstAddressInfo extends $tea.Model {
    /**
     * @example
     * 未来park
     */
    address?: string;
    /**
     * @example
     * 330100
     */
    cityCode?: string;
    /**
     * @example
     * 330104
     */
    districtCode?: string;
    /**
     * @example
     * 330000
     */
    provinceCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifySubInstitutionRequestSubInstAuthInfo extends $tea.Model {
    /**
     * @example
     * ossUrl
     */
    authorizationLetterUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifySubInstitutionRequestSubInstBasicInfo extends $tea.Model {
    /**
     * @example
     * 一食堂
     */
    aliasName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5812
     */
    mcc?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 食堂
     */
    subInstName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 01
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifySubInstitutionRequestSubInstCertifyInfo extends $tea.Model {
    /**
     * @example
     * ossUrl
     */
    certImage?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 331081198611111111
     */
    certNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 201
     */
    certType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifySubInstitutionRequestSubInstInvoiceInfoMailAddress extends $tea.Model {
    /**
     * @example
     * 未来park
     */
    address?: string;
    /**
     * @example
     * 330100
     */
    cityCode?: string;
    /**
     * @example
     * 330104
     */
    districtCode?: string;
    /**
     * @example
     * 330000
     */
    provinceCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifySubInstitutionRequestSubInstInvoiceInfo extends $tea.Model {
    /**
     * @example
     * true
     */
    acceptElectronic?: boolean;
    /**
     * @example
     * 浙江省杭州市西湖区西溪路蚂蚁金服
     */
    address?: string;
    /**
     * @example
     * false
     */
    autoInvoice?: boolean;
    /**
     * @example
     * 1234567812345678123
     */
    bankAccount?: string;
    /**
     * @example
     * 中国银行
     */
    bankName?: string;
    mailAddress?: ModifySubInstitutionRequestSubInstInvoiceInfoMailAddress;
    /**
     * @example
     * 张三
     */
    mailName?: string;
    /**
     * @example
     * 057162288888
     */
    mailPhone?: string;
    /**
     * @example
     * 51010482542598631219
     */
    taxNo?: string;
    /**
     * @example
     * 01
     */
    taxPayerQualification?: string;
    /**
     * @example
     * 19981011
     */
    taxPayerValidDate?: string;
    /**
     * @example
     * 057162288888
     */
    telephone?: string;
    /**
     * @example
     * **有限公司
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ModifySubInstitutionRequestSubInstShopInfo extends $tea.Model {
    inDoorImages?: string[];
    outDoorImages?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class NotifyPayCodePayResultRequestPayChannelDetailListFundToolDetailList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 金额
     */
    amount?: string;
    /**
     * @example
     * {"key":"value"}
     */
    extInfo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 优惠券
     */
    fundToolName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-01-01
     */
    gmtCreate?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-01-01 11:11:11
     */
    gmtFinish?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    promotionFundTool?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class NotifyPayCodePayResultRequestPayChannelDetailList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1.23
     */
    amount?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fundToolDetailList?: NotifyPayCodePayResultRequestPayChannelDetailListFundToolDetailList[];
    /**
     * @example
     * 2021-01-01 11:11:11
     */
    gmtCreate?: string;
    /**
     * @example
     * 2021-01-01 11:11:11
     */
    gmtFinish?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 卡余额
     */
    payChannelName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20211234
     */
    payChannelOrderNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ALIPAY|BALANCE
     */
    payChannelType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0.00
     */
    promotionAmount?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class NotifyPayCodeRefundResultRequestPayChannelDetailListFundToolDetailList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1.00
     */
    amount?: string;
    extInfo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 余额
     */
    fundToolName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-05-31 11:11:11
     */
    gmtCreate?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-05-31 11:11:11
     */
    gmtFinish?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    promotionFundTool?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class NotifyPayCodeRefundResultRequestPayChannelDetailList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1.00
     */
    amount?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fundToolDetailList?: NotifyPayCodeRefundResultRequestPayChannelDetailListFundToolDetailList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ALIPAY
     */
    payChannelName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20210531123456
     */
    payChannelOrderNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021053112345678
     */
    payChannelRefundOrderNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ALIPAY
     */
    payChannelType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0.00
     */
    promotionAmount?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PreCreateGroupBillOrderRequestBillItemList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5.12
     */
    amount?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * cshadbikahdksnajhada
     */
    payerUnionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PreCreateGroupBillOrderResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2023100914312930910100002107362525
     */
    orderNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryBatchTradeDetailListResponseBodyBatchTradeDetailList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1.00
     */
    amount?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20210909153300000002734746770740
     */
    detailNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-09-29 14:46:48
     */
    gmtCreate?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-09-29 16:05:00
     */
    gmtFinish?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 测试
     */
    memo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 收款人
     */
    payeeAccountName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 13900000000
     */
    payeeAccountNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ALIPAY
     */
    payeeAccountType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    serialNo?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SUCCESS
     */
    status?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryBatchTradeOrderResponseBodyBatchTradeOrderVOs extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021090102102122200002121
     */
    alipayTransId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    failAmount?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    failCount?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 收款人不存在
     */
    failReason?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-09-01 12:00:00
     */
    gmtFinish?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-09-01 11:00:00
     */
    gmtSubmit?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20210901001
     */
    outBatchNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 213654465
     */
    payerStaffId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1.00
     */
    paymentAmount?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * CNY
     */
    paymentCurrency?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SUCCESS
     */
    status?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1.00
     */
    successAmount?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    successCount?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1.00
     */
    totalAmount?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPayAccountListResponseBodyPayAccountVOList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * B
     */
    accountClass?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20210912001
     */
    accountId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * test
     */
    accountName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 139****1
     */
    accountNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 备注
     */
    accountRemark?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ALIPAY
     */
    accountType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpateUserCodeInstanceRequestAvailableTimes extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * yyyy-MM-dd HH:mm:ss
     */
    gmtEnd?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * yyyy-MM-dd HH:mm:ss
     */
    gmtStart?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadInvoiceRequestExtension extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * TRIP
     */
    bizCode?: string;
    /**
     * @example
     * 111924191922
     *
     * @deprecated
     */
    orderNo?: string;
    orderNoList?: string[];
    /**
     * @example
     * HOTEL
     */
    orderType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadInvoiceRequestInvoices extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100.00
     */
    invoiceAmount?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 033002000712
     */
    invoiceCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2022-02-21
     */
    invoiceDate?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20532643
     */
    invoiceNo?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    invoiceType?: string;
    logoUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 小钉科技有限公司
     */
    payeeName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 91330100MA28XNB274
     */
    payeeTaxNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 小钉科技有限公司
     */
    payerName?: string;
    /**
     * @example
     * 91330100MA28XNB274
     */
    payerTaxNo?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    pdfUrl?: string;
    /**
     * @example
     * 0.50
     */
    taxAmount?: string;
    /**
     * @example
     * 增值税普通发票必填，示例：52501101414266612380
     */
    verifyCode?: string;
    /**
     * @example
     * 99.50
     */
    withoutTaxAmount?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadInvoiceRequestUserIdentity extends $tea.Model {
    /**
     * @example
     * 95188
     */
    mobile?: string;
    /**
     * @example
     * 86
     */
    mobileStateCode?: string;
    /**
     * @example
     * dinng1123434
     */
    targetCorpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * STAFF_ID
     */
    type?: string;
    /**
     * @example
     * akdfwiiw
     */
    unionId?: string;
    /**
     * @example
     * 02734930
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadInvoiceResponseBodyResultResults extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20006
     */
    errCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 033002000712
     */
    invoiceCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20532643
     */
    invoiceNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * duplicateInvoice
     */
    reason?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadInvoiceResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    results?: UploadInvoiceResponseBodyResultResults[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadInvoiceByAuthRequestExtension extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * TRIP
     */
    bizCode?: string;
    /**
     * @example
     * 111924191922
     */
    orderNo?: string;
    /**
     * @example
     * HOTEL
     */
    orderType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadInvoiceByAuthRequestInvoices extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100.00
     */
    invoiceAmount?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 033002000712
     */
    invoiceCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2022-02-21
     */
    invoiceDate?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20532643
     */
    invoiceNo?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    invoiceType?: string;
    logoUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 小钉科技有限公司
     */
    payeeName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 91330100MA28XNB274
     */
    payeeTaxNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 小钉科技有限公司
     */
    payerName?: string;
    /**
     * @example
     * 91330100MA28XNB274
     */
    payerTaxNo?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    pdfUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0.50
     */
    taxAmount?: string;
    /**
     * @example
     * 增值税普通发票必填，示例：52501101414266612380
     */
    verifyCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 99.50
     */
    withoutTaxAmount?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadInvoiceByAuthResponseBodyResultResults extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20006
     */
    errCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 033002000712
     */
    invoiceCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20532643
     */
    invoiceNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * duplicateInvoice
     */
    reason?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadInvoiceByAuthResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    results?: UploadInvoiceByAuthResponseBodyResultResults[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadInvoiceByMobileRequestInvoices extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100.00
     */
    invoiceAmount?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 033002000712
     */
    invoiceCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2022-02-21
     */
    invoiceDate?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20532643
     */
    invoiceNo?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    invoiceType?: string;
    logoUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 小钉科技有限公司
     */
    payeeName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 91330100MA28XNB274
     */
    payeeTaxNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 小钉科技有限公司
     */
    payerName?: string;
    /**
     * @example
     * 91330100MA28XNB274
     */
    payerTaxNo?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    pdfUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0.50
     */
    taxAmount?: string;
    /**
     * @example
     * 增值税普通发票必填，示例：52501101414266612380
     */
    verifyCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 99.50
     */
    withoutTaxAmount?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadInvoiceByMobileResponseBodyResultResults extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20006
     */
    errCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 033002000712
     */
    invoiceCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20532643
     */
    invoiceNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * duplicateInvoice
     */
    reason?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadInvoiceByMobileResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    results?: UploadInvoiceByMobileResponseBodyResultResults[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 批量付款
     *
     * @param request - ApplyBatchPayRequest
     * @param headers - ApplyBatchPayHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ApplyBatchPayResponse
     */
    applyBatchPayWithOptions(request: ApplyBatchPayRequest, headers: ApplyBatchPayHeaders, runtime: $Util.RuntimeOptions): Promise<ApplyBatchPayResponse>;
    /**
     * 批量付款
     *
     * @param request - ApplyBatchPayRequest
     * @returns ApplyBatchPayResponse
     */
    applyBatchPay(request: ApplyBatchPayRequest): Promise<ApplyBatchPayResponse>;
    /**
     * 助贷业务关闭借款入口
     *
     * @param request - CloseLoanEntranceRequest
     * @param headers - CloseLoanEntranceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CloseLoanEntranceResponse
     */
    closeLoanEntranceWithOptions(request: CloseLoanEntranceRequest, headers: CloseLoanEntranceHeaders, runtime: $Util.RuntimeOptions): Promise<CloseLoanEntranceResponse>;
    /**
     * 助贷业务关闭借款入口
     *
     * @param request - CloseLoanEntranceRequest
     * @returns CloseLoanEntranceResponse
     */
    closeLoanEntrance(request: CloseLoanEntranceRequest): Promise<CloseLoanEntranceResponse>;
    /**
     * 子机构创建进件预校验
     *
     * @param request - ConsultCreateSubInstitutionRequest
     * @param headers - ConsultCreateSubInstitutionHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ConsultCreateSubInstitutionResponse
     */
    consultCreateSubInstitutionWithOptions(request: ConsultCreateSubInstitutionRequest, headers: ConsultCreateSubInstitutionHeaders, runtime: $Util.RuntimeOptions): Promise<ConsultCreateSubInstitutionResponse>;
    /**
     * 子机构创建进件预校验
     *
     * @param request - ConsultCreateSubInstitutionRequest
     * @returns ConsultCreateSubInstitutionResponse
     */
    consultCreateSubInstitution(request: ConsultCreateSubInstitutionRequest): Promise<ConsultCreateSubInstitutionResponse>;
    /**
     * 发起代扣交易
     *
     * @param request - CreatWithholdingOrderAndPayRequest
     * @param headers - CreatWithholdingOrderAndPayHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreatWithholdingOrderAndPayResponse
     */
    creatWithholdingOrderAndPayWithOptions(request: CreatWithholdingOrderAndPayRequest, headers: CreatWithholdingOrderAndPayHeaders, runtime: $Util.RuntimeOptions): Promise<CreatWithholdingOrderAndPayResponse>;
    /**
     * 发起代扣交易
     *
     * @param request - CreatWithholdingOrderAndPayRequest
     * @returns CreatWithholdingOrderAndPayResponse
     */
    creatWithholdingOrderAndPay(request: CreatWithholdingOrderAndPayRequest): Promise<CreatWithholdingOrderAndPayResponse>;
    /**
     * 收单退款交易
     *
     * @param request - CreateAcquireRefundOrderRequest
     * @param headers - CreateAcquireRefundOrderHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateAcquireRefundOrderResponse
     */
    createAcquireRefundOrderWithOptions(request: CreateAcquireRefundOrderRequest, headers: CreateAcquireRefundOrderHeaders, runtime: $Util.RuntimeOptions): Promise<CreateAcquireRefundOrderResponse>;
    /**
     * 收单退款交易
     *
     * @param request - CreateAcquireRefundOrderRequest
     * @returns CreateAcquireRefundOrderResponse
     */
    createAcquireRefundOrder(request: CreateAcquireRefundOrderRequest): Promise<CreateAcquireRefundOrderResponse>;
    /**
     * 创建批量支付单
     *
     * @param request - CreateBatchTradeOrderRequest
     * @param headers - CreateBatchTradeOrderHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateBatchTradeOrderResponse
     */
    createBatchTradeOrderWithOptions(request: CreateBatchTradeOrderRequest, headers: CreateBatchTradeOrderHeaders, runtime: $Util.RuntimeOptions): Promise<CreateBatchTradeOrderResponse>;
    /**
     * 创建批量支付单
     *
     * @param request - CreateBatchTradeOrderRequest
     * @returns CreateBatchTradeOrderResponse
     */
    createBatchTradeOrder(request: CreateBatchTradeOrderRequest): Promise<CreateBatchTradeOrderResponse>;
    /**
     * 创建子机构
     *
     * @param request - CreateSubInstitutionRequest
     * @param headers - CreateSubInstitutionHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateSubInstitutionResponse
     */
    createSubInstitutionWithOptions(request: CreateSubInstitutionRequest, headers: CreateSubInstitutionHeaders, runtime: $Util.RuntimeOptions): Promise<CreateSubInstitutionResponse>;
    /**
     * 创建子机构
     *
     * @param request - CreateSubInstitutionRequest
     * @returns CreateSubInstitutionResponse
     */
    createSubInstitution(request: CreateSubInstitutionRequest): Promise<CreateSubInstitutionResponse>;
    /**
     * 创建用户码实例
     *
     * @param request - CreateUserCodeInstanceRequest
     * @param headers - CreateUserCodeInstanceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateUserCodeInstanceResponse
     */
    createUserCodeInstanceWithOptions(request: CreateUserCodeInstanceRequest, headers: CreateUserCodeInstanceHeaders, runtime: $Util.RuntimeOptions): Promise<CreateUserCodeInstanceResponse>;
    /**
     * 创建用户码实例
     *
     * @param request - CreateUserCodeInstanceRequest
     * @returns CreateUserCodeInstanceResponse
     */
    createUserCodeInstance(request: CreateUserCodeInstanceRequest): Promise<CreateUserCodeInstanceResponse>;
    /**
     * 解码付款码
     *
     * @param request - DecodePayCodeRequest
     * @param headers - DecodePayCodeHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DecodePayCodeResponse
     */
    decodePayCodeWithOptions(request: DecodePayCodeRequest, headers: DecodePayCodeHeaders, runtime: $Util.RuntimeOptions): Promise<DecodePayCodeResponse>;
    /**
     * 解码付款码
     *
     * @param request - DecodePayCodeRequest
     * @returns DecodePayCodeResponse
     */
    decodePayCode(request: DecodePayCodeRequest): Promise<DecodePayCodeResponse>;
    /**
     * 企业金融助贷业务进件通知接口
     *
     * @param request - FinanceLoanNotifyRegisterRequest
     * @param headers - FinanceLoanNotifyRegisterHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns FinanceLoanNotifyRegisterResponse
     */
    financeLoanNotifyRegisterWithOptions(request: FinanceLoanNotifyRegisterRequest, headers: FinanceLoanNotifyRegisterHeaders, runtime: $Util.RuntimeOptions): Promise<FinanceLoanNotifyRegisterResponse>;
    /**
     * 企业金融助贷业务进件通知接口
     *
     * @param request - FinanceLoanNotifyRegisterRequest
     * @returns FinanceLoanNotifyRegisterResponse
     */
    financeLoanNotifyRegister(request: FinanceLoanNotifyRegisterRequest): Promise<FinanceLoanNotifyRegisterResponse>;
    /**
     * 修改子机构信息
     *
     * @param request - ModifySubInstitutionRequest
     * @param headers - ModifySubInstitutionHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ModifySubInstitutionResponse
     */
    modifySubInstitutionWithOptions(request: ModifySubInstitutionRequest, headers: ModifySubInstitutionHeaders, runtime: $Util.RuntimeOptions): Promise<ModifySubInstitutionResponse>;
    /**
     * 修改子机构信息
     *
     * @param request - ModifySubInstitutionRequest
     * @returns ModifySubInstitutionResponse
     */
    modifySubInstitution(request: ModifySubInstitutionRequest): Promise<ModifySubInstitutionResponse>;
    /**
     * 通知付款码支付结果
     *
     * @param request - NotifyPayCodePayResultRequest
     * @param headers - NotifyPayCodePayResultHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns NotifyPayCodePayResultResponse
     */
    notifyPayCodePayResultWithOptions(request: NotifyPayCodePayResultRequest, headers: NotifyPayCodePayResultHeaders, runtime: $Util.RuntimeOptions): Promise<NotifyPayCodePayResultResponse>;
    /**
     * 通知付款码支付结果
     *
     * @param request - NotifyPayCodePayResultRequest
     * @returns NotifyPayCodePayResultResponse
     */
    notifyPayCodePayResult(request: NotifyPayCodePayResultRequest): Promise<NotifyPayCodePayResultResponse>;
    /**
     * 通知付款码退款结果
     *
     * @param request - NotifyPayCodeRefundResultRequest
     * @param headers - NotifyPayCodeRefundResultHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns NotifyPayCodeRefundResultResponse
     */
    notifyPayCodeRefundResultWithOptions(request: NotifyPayCodeRefundResultRequest, headers: NotifyPayCodeRefundResultHeaders, runtime: $Util.RuntimeOptions): Promise<NotifyPayCodeRefundResultResponse>;
    /**
     * 通知付款码退款结果
     *
     * @param request - NotifyPayCodeRefundResultRequest
     * @returns NotifyPayCodeRefundResultResponse
     */
    notifyPayCodeRefundResult(request: NotifyPayCodeRefundResultRequest): Promise<NotifyPayCodeRefundResultResponse>;
    /**
     * 上报码验证结果
     *
     * @param request - NotifyVerifyResultRequest
     * @param headers - NotifyVerifyResultHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns NotifyVerifyResultResponse
     */
    notifyVerifyResultWithOptions(request: NotifyVerifyResultRequest, headers: NotifyVerifyResultHeaders, runtime: $Util.RuntimeOptions): Promise<NotifyVerifyResultResponse>;
    /**
     * 上报码验证结果
     *
     * @param request - NotifyVerifyResultRequest
     * @returns NotifyVerifyResultResponse
     */
    notifyVerifyResult(request: NotifyVerifyResultRequest): Promise<NotifyVerifyResultResponse>;
    /**
     * 预创建群收款订单返回订单号
     *
     * @param request - PreCreateGroupBillOrderRequest
     * @param headers - PreCreateGroupBillOrderHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns PreCreateGroupBillOrderResponse
     */
    preCreateGroupBillOrderWithOptions(request: PreCreateGroupBillOrderRequest, headers: PreCreateGroupBillOrderHeaders, runtime: $Util.RuntimeOptions): Promise<PreCreateGroupBillOrderResponse>;
    /**
     * 预创建群收款订单返回订单号
     *
     * @param request - PreCreateGroupBillOrderRequest
     * @returns PreCreateGroupBillOrderResponse
     */
    preCreateGroupBillOrder(request: PreCreateGroupBillOrderRequest): Promise<PreCreateGroupBillOrderResponse>;
    /**
     * 查询收单退款交易
     *
     * @param request - QueryAcquireRefundOrderRequest
     * @param headers - QueryAcquireRefundOrderHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryAcquireRefundOrderResponse
     */
    queryAcquireRefundOrderWithOptions(request: QueryAcquireRefundOrderRequest, headers: QueryAcquireRefundOrderHeaders, runtime: $Util.RuntimeOptions): Promise<QueryAcquireRefundOrderResponse>;
    /**
     * 查询收单退款交易
     *
     * @param request - QueryAcquireRefundOrderRequest
     * @returns QueryAcquireRefundOrderResponse
     */
    queryAcquireRefundOrder(request: QueryAcquireRefundOrderRequest): Promise<QueryAcquireRefundOrderResponse>;
    /**
     * 查询批量付款明细列表
     *
     * @param request - QueryBatchTradeDetailListRequest
     * @param headers - QueryBatchTradeDetailListHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryBatchTradeDetailListResponse
     */
    queryBatchTradeDetailListWithOptions(request: QueryBatchTradeDetailListRequest, headers: QueryBatchTradeDetailListHeaders, runtime: $Util.RuntimeOptions): Promise<QueryBatchTradeDetailListResponse>;
    /**
     * 查询批量付款明细列表
     *
     * @param request - QueryBatchTradeDetailListRequest
     * @returns QueryBatchTradeDetailListResponse
     */
    queryBatchTradeDetailList(request: QueryBatchTradeDetailListRequest): Promise<QueryBatchTradeDetailListResponse>;
    /**
     * 根据请求对象查询批量交易订单信息
     *
     * @param request - QueryBatchTradeOrderRequest
     * @param headers - QueryBatchTradeOrderHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryBatchTradeOrderResponse
     */
    queryBatchTradeOrderWithOptions(request: QueryBatchTradeOrderRequest, headers: QueryBatchTradeOrderHeaders, runtime: $Util.RuntimeOptions): Promise<QueryBatchTradeOrderResponse>;
    /**
     * 根据请求对象查询批量交易订单信息
     *
     * @param request - QueryBatchTradeOrderRequest
     * @returns QueryBatchTradeOrderResponse
     */
    queryBatchTradeOrder(request: QueryBatchTradeOrderRequest): Promise<QueryBatchTradeOrderResponse>;
    /**
     * 查询付款账号列表
     *
     * @param headers - QueryPayAccountListHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryPayAccountListResponse
     */
    queryPayAccountListWithOptions(headers: QueryPayAccountListHeaders, runtime: $Util.RuntimeOptions): Promise<QueryPayAccountListResponse>;
    /**
     * 查询付款账号列表
     * @returns QueryPayAccountListResponse
     */
    queryPayAccountList(): Promise<QueryPayAccountListResponse>;
    /**
     * 查询子机构申请单状态
     *
     * @param request - QueryRegisterOrderRequest
     * @param headers - QueryRegisterOrderHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryRegisterOrderResponse
     */
    queryRegisterOrderWithOptions(request: QueryRegisterOrderRequest, headers: QueryRegisterOrderHeaders, runtime: $Util.RuntimeOptions): Promise<QueryRegisterOrderResponse>;
    /**
     * 查询子机构申请单状态
     *
     * @param request - QueryRegisterOrderRequest
     * @returns QueryRegisterOrderResponse
     */
    queryRegisterOrder(request: QueryRegisterOrderRequest): Promise<QueryRegisterOrderResponse>;
    /**
     * 查询用户协议
     *
     * @param request - QueryUserAgreementRequest
     * @param headers - QueryUserAgreementHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryUserAgreementResponse
     */
    queryUserAgreementWithOptions(request: QueryUserAgreementRequest, headers: QueryUserAgreementHeaders, runtime: $Util.RuntimeOptions): Promise<QueryUserAgreementResponse>;
    /**
     * 查询用户协议
     *
     * @param request - QueryUserAgreementRequest
     * @returns QueryUserAgreementResponse
     */
    queryUserAgreement(request: QueryUserAgreementRequest): Promise<QueryUserAgreementResponse>;
    /**
     * 获取用户绑定支付宝信息
     *
     * @param headers - QueryUserAlipayAccountHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryUserAlipayAccountResponse
     */
    queryUserAlipayAccountWithOptions(headers: QueryUserAlipayAccountHeaders, runtime: $Util.RuntimeOptions): Promise<QueryUserAlipayAccountResponse>;
    /**
     * 获取用户绑定支付宝信息
     * @returns QueryUserAlipayAccountResponse
     */
    queryUserAlipayAccount(): Promise<QueryUserAlipayAccountResponse>;
    /**
     * 查询代扣交易订单信息
     *
     * @param request - QueryWithholdingOrderRequest
     * @param headers - QueryWithholdingOrderHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryWithholdingOrderResponse
     */
    queryWithholdingOrderWithOptions(request: QueryWithholdingOrderRequest, headers: QueryWithholdingOrderHeaders, runtime: $Util.RuntimeOptions): Promise<QueryWithholdingOrderResponse>;
    /**
     * 查询代扣交易订单信息
     *
     * @param request - QueryWithholdingOrderRequest
     * @returns QueryWithholdingOrderResponse
     */
    queryWithholdingOrder(request: QueryWithholdingOrderRequest): Promise<QueryWithholdingOrderResponse>;
    /**
     * 保存付款码企业配置信息
     *
     * @param request - SaveCorpPayCodeRequest
     * @param headers - SaveCorpPayCodeHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SaveCorpPayCodeResponse
     */
    saveCorpPayCodeWithOptions(request: SaveCorpPayCodeRequest, headers: SaveCorpPayCodeHeaders, runtime: $Util.RuntimeOptions): Promise<SaveCorpPayCodeResponse>;
    /**
     * 保存付款码企业配置信息
     *
     * @param request - SaveCorpPayCodeRequest
     * @returns SaveCorpPayCodeResponse
     */
    saveCorpPayCode(request: SaveCorpPayCodeRequest): Promise<SaveCorpPayCodeResponse>;
    /**
     * 解约用户协议
     *
     * @param request - UnsignUserAgreementRequest
     * @param headers - UnsignUserAgreementHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UnsignUserAgreementResponse
     */
    unsignUserAgreementWithOptions(request: UnsignUserAgreementRequest, headers: UnsignUserAgreementHeaders, runtime: $Util.RuntimeOptions): Promise<UnsignUserAgreementResponse>;
    /**
     * 解约用户协议
     *
     * @param request - UnsignUserAgreementRequest
     * @returns UnsignUserAgreementResponse
     */
    unsignUserAgreement(request: UnsignUserAgreementRequest): Promise<UnsignUserAgreementResponse>;
    /**
     * 更新用户码实例
     *
     * @param request - UpateUserCodeInstanceRequest
     * @param headers - UpateUserCodeInstanceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpateUserCodeInstanceResponse
     */
    upateUserCodeInstanceWithOptions(request: UpateUserCodeInstanceRequest, headers: UpateUserCodeInstanceHeaders, runtime: $Util.RuntimeOptions): Promise<UpateUserCodeInstanceResponse>;
    /**
     * 更新用户码实例
     *
     * @param request - UpateUserCodeInstanceRequest
     * @returns UpateUserCodeInstanceResponse
     */
    upateUserCodeInstance(request: UpateUserCodeInstanceRequest): Promise<UpateUserCodeInstanceResponse>;
    /**
     * 用来给第三方企业提供发票验真结果更新的oapi
     *
     * @param request - UpdateInvoiceVerifyStatusRequest
     * @param headers - UpdateInvoiceVerifyStatusHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateInvoiceVerifyStatusResponse
     */
    updateInvoiceVerifyStatusWithOptions(request: UpdateInvoiceVerifyStatusRequest, headers: UpdateInvoiceVerifyStatusHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateInvoiceVerifyStatusResponse>;
    /**
     * 用来给第三方企业提供发票验真结果更新的oapi
     *
     * @param request - UpdateInvoiceVerifyStatusRequest
     * @returns UpdateInvoiceVerifyStatusResponse
     */
    updateInvoiceVerifyStatus(request: UpdateInvoiceVerifyStatusRequest): Promise<UpdateInvoiceVerifyStatusResponse>;
    /**
     * 上传发票
     *
     * @param request - UploadInvoiceRequest
     * @param headers - UploadInvoiceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UploadInvoiceResponse
     */
    uploadInvoiceWithOptions(request: UploadInvoiceRequest, headers: UploadInvoiceHeaders, runtime: $Util.RuntimeOptions): Promise<UploadInvoiceResponse>;
    /**
     * 上传发票
     *
     * @param request - UploadInvoiceRequest
     * @returns UploadInvoiceResponse
     */
    uploadInvoice(request: UploadInvoiceRequest): Promise<UploadInvoiceResponse>;
    /**
     * 用户授权上传发票oapi
     *
     * @param request - UploadInvoiceByAuthRequest
     * @param headers - UploadInvoiceByAuthHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UploadInvoiceByAuthResponse
     */
    uploadInvoiceByAuthWithOptions(request: UploadInvoiceByAuthRequest, headers: UploadInvoiceByAuthHeaders, runtime: $Util.RuntimeOptions): Promise<UploadInvoiceByAuthResponse>;
    /**
     * 用户授权上传发票oapi
     *
     * @param request - UploadInvoiceByAuthRequest
     * @returns UploadInvoiceByAuthResponse
     */
    uploadInvoiceByAuth(request: UploadInvoiceByAuthRequest): Promise<UploadInvoiceByAuthResponse>;
    /**
     * 通过手机号上传发票
     *
     * @param request - UploadInvoiceByMobileRequest
     * @param headers - UploadInvoiceByMobileHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UploadInvoiceByMobileResponse
     */
    uploadInvoiceByMobileWithOptions(request: UploadInvoiceByMobileRequest, headers: UploadInvoiceByMobileHeaders, runtime: $Util.RuntimeOptions): Promise<UploadInvoiceByMobileResponse>;
    /**
     * 通过手机号上传发票
     *
     * @param request - UploadInvoiceByMobileRequest
     * @returns UploadInvoiceByMobileResponse
     */
    uploadInvoiceByMobile(request: UploadInvoiceByMobileRequest): Promise<UploadInvoiceByMobileResponse>;
    /**
     * 上传进件中的图片获得图片链接
     *
     * @param request - UploadRegisterImageRequest
     * @param headers - UploadRegisterImageHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UploadRegisterImageResponse
     */
    uploadRegisterImageWithOptions(request: UploadRegisterImageRequest, headers: UploadRegisterImageHeaders, runtime: $Util.RuntimeOptions): Promise<UploadRegisterImageResponse>;
    /**
     * 上传进件中的图片获得图片链接
     *
     * @param request - UploadRegisterImageRequest
     * @returns UploadRegisterImageResponse
     */
    uploadRegisterImage(request: UploadRegisterImageRequest): Promise<UploadRegisterImageResponse>;
    /**
     * 用户协议签约
     *
     * @param request - UserAgreementPageSignRequest
     * @param headers - UserAgreementPageSignHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UserAgreementPageSignResponse
     */
    userAgreementPageSignWithOptions(request: UserAgreementPageSignRequest, headers: UserAgreementPageSignHeaders, runtime: $Util.RuntimeOptions): Promise<UserAgreementPageSignResponse>;
    /**
     * 用户协议签约
     *
     * @param request - UserAgreementPageSignRequest
     * @returns UserAgreementPageSignResponse
     */
    userAgreementPageSign(request: UserAgreementPageSignRequest): Promise<UserAgreementPageSignResponse>;
}
