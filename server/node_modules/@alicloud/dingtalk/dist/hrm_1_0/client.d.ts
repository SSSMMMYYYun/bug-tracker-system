/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class ResultValue extends $tea.Model {
    status?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddHrmLegalEntityHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddHrmLegalEntityRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    createUserId?: string;
    ext?: AddHrmLegalEntityRequestExt;
    /**
     * @remarks
     * This parameter is required.
     */
    legalEntityName?: string;
    legalEntityShortName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    legalEntityStatus?: number;
    legalPersonName?: string;
    dingTenantId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddHrmLegalEntityResponseBody extends $tea.Model {
    result?: AddHrmLegalEntityResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddHrmLegalEntityResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddHrmLegalEntityResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddHrmPreentryHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddHrmPreentryRequest extends $tea.Model {
    agentId?: number;
    groups?: AddHrmPreentryRequestGroups[];
    /**
     * @remarks
     * This parameter is required.
     */
    mobile?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    needSendPreEntryMsg?: boolean;
    preEntryTime?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddHrmPreentryResponseBody extends $tea.Model {
    /**
     * @example
     * manager123
     */
    tmpUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddHrmPreentryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddHrmPreentryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRecordHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRecordRequest extends $tea.Model {
    attachmentList?: CreateRecordRequestAttachmentList[];
    /**
     * @example
     * 908608088
     */
    deptId?: number;
    fieldList?: CreateRecordRequestFieldList[];
    groupList?: CreateRecordRequestGroupList[];
    /**
     * @example
     * xxx员工劳动合同电子签署
     */
    remark?: string;
    /**
     * @example
     * xxx有限公司
     */
    signLastLegalEntityName?: string;
    /**
     * @example
     * xxx有限公司
     */
    signLegalEntityName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * CONTRACT
     */
    signSource?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 48510731071405348944
     */
    signStartUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 660658
     */
    signUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 9ad11eb3daa24a9692037079e0732f13
     */
    templateId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRecordResponseBody extends $tea.Model {
    result?: CreateRecordResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRecordResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateRecordResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeviceMarketManagerResponseBody extends $tea.Model {
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeviceMarketManagerResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeviceMarketManagerResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeviceMarketOrderManagerResponseBody extends $tea.Model {
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeviceMarketOrderManagerResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeviceMarketOrderManagerResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ECertQueryHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ECertQueryRequest extends $tea.Model {
    /**
     * @example
     * manager231
     *
     * **if can be null:**
     * false
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ECertQueryResponseBody extends $tea.Model {
    /**
     * @example
     * 3300111192912113
     */
    certNO?: string;
    /**
     * @example
     * 1123124124124
     */
    employJobId?: string;
    /**
     * @example
     * 职务
     */
    employJobIdLabel?: string;
    /**
     * @example
     * 1231231232313123
     */
    employPositionId?: string;
    /**
     * @example
     * 职位
     */
    employPositionIdLabel?: string;
    /**
     * @example
     * 498192313
     */
    employPositionRankId?: string;
    /**
     * @example
     * 职级
     */
    employPositionRankIdLabel?: string;
    /**
     * @example
     * 2020-03-14
     */
    hiredDate?: string;
    /**
     * @example
     * 2021-03-14
     */
    lastWorkDay?: string;
    /**
     * @example
     * -1
     */
    mainDeptId?: number;
    /**
     * @example
     * 测试部门
     */
    mainDeptName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 李四
     */
    name?: string;
    /**
     * @example
     * 张三
     */
    realName?: string;
    terminationReasonPassive?: string[];
    terminationReasonVoluntary?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ECertQueryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ECertQueryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EmpStartDismissionHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EmpStartDismissionRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    lastWorkDate?: number;
    partner?: boolean;
    remark?: string;
    terminationReasonPassive?: string[];
    terminationReasonVoluntary?: string[];
    toHireBlackList?: boolean;
    toHireDismissionTalent?: boolean;
    toHrmBlackList?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2163515669935611
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EmpStartDismissionResponseBody extends $tea.Model {
    requestId?: string;
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EmpStartDismissionResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: EmpStartDismissionResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EmployeeAttachmentUpdateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EmployeeAttachmentUpdateRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    appAgentId?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    fieldCode?: string;
    /**
     * @example
     * .png
     */
    fileSuffix?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * "$iAEKAqNwbmcDBgTNAk"
     */
    mediaId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * admin123
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EmployeeAttachmentUpdateResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EmployeeAttachmentUpdateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: EmployeeAttachmentUpdateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EsignRollbackHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EsignRollbackRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    optUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EsignRollbackResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EsignRollbackResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: EsignRollbackResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAllDismissionReasonsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAllDismissionReasonsResponseBody extends $tea.Model {
    requestId?: string;
    result?: GetAllDismissionReasonsResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAllDismissionReasonsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetAllDismissionReasonsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetEmployeeRosterByFieldHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetEmployeeRosterByFieldRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    appAgentId?: number;
    fieldFilterList?: string[];
    text2SelectConvert?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    userIdList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetEmployeeRosterByFieldResponseBody extends $tea.Model {
    result?: GetEmployeeRosterByFieldResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetEmployeeRosterByFieldResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetEmployeeRosterByFieldResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFileTemplateListHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFileTemplateListRequest extends $tea.Model {
    /**
     * @example
     * 10
     */
    maxResults?: number;
    /**
     * @example
     * 0
     */
    nextToken?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * CONTRACT
     */
    signSource?: string;
    /**
     * @example
     * 1
     */
    templateStatus?: number;
    templateTypeList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFileTemplateListResponseBody extends $tea.Model {
    result?: GetFileTemplateListResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFileTemplateListResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetFileTemplateListResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSignRecordByIdHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSignRecordByIdRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    body?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSignRecordByIdResponseBody extends $tea.Model {
    result?: GetSignRecordByIdResponseBodyResult[];
    /**
     * @remarks
     * This parameter is required.
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSignRecordByIdResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetSignRecordByIdResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSignRecordByUserIdHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSignRecordByUserIdRequest extends $tea.Model {
    /**
     * @example
     * 10
     */
    maxResults?: number;
    /**
     * @example
     * 0
     */
    nextToken?: number;
    signStatus?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 660658
     */
    signUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSignRecordByUserIdResponseBody extends $tea.Model {
    result?: GetSignRecordByUserIdResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSignRecordByUserIdResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetSignRecordByUserIdResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmAuthResourcesQueryHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmAuthResourcesQueryRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    authResourceIds?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1231
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmAuthResourcesQueryResponseBody extends $tea.Model {
    result?: HrmAuthResourcesQueryResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmAuthResourcesQueryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrmAuthResourcesQueryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmBenefitQueryHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmBenefitQueryRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    benefitCodes?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmBenefitQueryResponseBody extends $tea.Model {
    result?: any;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmBenefitQueryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrmBenefitQueryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmCorpConfigQueryHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmCorpConfigQueryRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * policy
     */
    subType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * hrm_ai
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmCorpConfigQueryResponseBody extends $tea.Model {
    result?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmCorpConfigQueryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrmCorpConfigQueryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmMailSendHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmMailSendRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    mail?: HrmMailSendRequestMail;
    /**
     * @remarks
     * This parameter is required.
     */
    operator?: HrmMailSendRequestOperator;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmMailSendResponseBody extends $tea.Model {
    result?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmMailSendResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrmMailSendResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmMokaEventHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmMokaEventRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * /user/role/get
     */
    bizId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * {"a":"b"}
     */
    content?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmMokaEventResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmMokaEventResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrmMokaEventResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmMokaOapiHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmMokaOapiRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * /user/role/get
     */
    apiCode?: string;
    params?: any;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmMokaOapiResponseBody extends $tea.Model {
    bizSuccess?: boolean;
    errorCode?: string;
    errorMsg?: string;
    result?: {
        [key: string]: any;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmMokaOapiResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrmMokaOapiResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmProcessRegularHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmProcessRegularRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 16690147049882572
     */
    operationId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1672542359000
     */
    regularDate?: number;
    /**
     * @example
     * 同意转正
     */
    remark?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 16690147049882572
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmProcessRegularResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmProcessRegularResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrmProcessRegularResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmProcessTerminationAndHandoverHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmProcessTerminationAndHandoverRequest extends $tea.Model {
    /**
     * @example
     * user123
     */
    aflowHandOverUserId?: string;
    /**
     * @example
     * user123
     */
    dingPanHandoverUserId?: string;
    /**
     * @example
     * user123
     */
    directSubordinatesHandoverUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * aefadfadaewedad
     */
    dismissionMemo?: string;
    /**
     * @example
     * 1
     */
    dismissionReason?: number;
    /**
     * @example
     * user123
     */
    docNoteHandoverUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1704074400000
     */
    lastWorkDate?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 经理
     */
    optUserId?: string;
    /**
     * @example
     * user123
     */
    permissionHandoverUserId?: string;
    terminationReasonPassive?: string[];
    terminationReasonVoluntary?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2332
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmProcessTerminationAndHandoverResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmProcessTerminationAndHandoverResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrmProcessTerminationAndHandoverResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmProcessTransferHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmProcessTransferRequest extends $tea.Model {
    deptIdsAfterTransfer?: number[];
    /**
     * @example
     * aefadfadaewedad
     */
    jobIdAfterTransfer?: string;
    /**
     * @example
     * 123L
     */
    mainDeptIdAfterTransfer?: number;
    /**
     * @example
     * 232312312
     */
    operateUserId?: string;
    /**
     * @example
     * fasdfaddsadfa
     */
    positionIdAfterTransfer?: string;
    /**
     * @example
     * L1
     */
    positionLevelAfterTransfer?: string;
    /**
     * @example
     * 经理
     */
    positionNameAfterTransfer?: string;
    /**
     * @example
     * fasdfaddsadfa
     */
    rankIdAfterTransfer?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2332
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmProcessTransferResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmProcessTransferResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrmProcessTransferResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmProcessUpdateTerminationInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmProcessUpdateTerminationInfoRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 因个人原因离职
     */
    dismissionMemo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1672502400000
     */
    lastWorkDate?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * admin123
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmProcessUpdateTerminationInfoResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmProcessUpdateTerminationInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrmProcessUpdateTerminationInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmPtsServiceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmPtsServiceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * dev  or online
     */
    env?: string;
    /**
     * @example
     * GET/POST
     */
    method?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * abd123213
     */
    outerId?: string;
    params?: any;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * /user/role/get
     */
    path?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmPtsServiceResponseBody extends $tea.Model {
    bizSuccess?: boolean;
    errorCode?: string;
    errorMsg?: string;
    result?: {
        [key: string]: any;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmPtsServiceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrmPtsServiceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InvalidSignRecordsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InvalidSignRecordsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123456
     */
    invalidUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    signRecordIds?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 作废测试
     */
    statusRemark?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InvalidSignRecordsResponseBody extends $tea.Model {
    result?: InvalidSignRecordsResponseBodyResult;
    /**
     * @remarks
     * This parameter is required.
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InvalidSignRecordsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: InvalidSignRecordsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataDeleteHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataDeleteRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    body?: MasterDataDeleteRequestBody[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    tenantId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataDeleteResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    allSuccess?: boolean;
    failResult?: MasterDataDeleteResponseBodyFailResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataDeleteResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: MasterDataDeleteResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataQueryHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataQueryRequest extends $tea.Model {
    /**
     * @example
     * uk_12123
     */
    bizUK?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    maxResults?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    nextToken?: number;
    /**
     * @example
     * admin1234
     */
    optUserId?: string;
    queryParams?: MasterDataQueryRequestQueryParams[];
    /**
     * @remarks
     * This parameter is required.
     */
    relationIds?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * PERFORMANCE
     */
    scopeCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 3
     */
    tenantId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * base
     */
    viewEntityCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataQueryResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    hasMore?: boolean;
    /**
     * @example
     * 0
     */
    nextToken?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    result?: MasterDataQueryResponseBodyResult[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    /**
     * @example
     * 100
     */
    total?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataQueryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: MasterDataQueryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataSaveHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataSaveRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    body?: MasterDataSaveRequestBody[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    tenantId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataSaveResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    allSuccess?: boolean;
    failResult?: MasterDataSaveResponseBodyFailResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataSaveResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: MasterDataSaveResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataTenantQueyHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataTenantQueyRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    entityCode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    scopeCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataTenantQueyResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: MasterDataTenantQueyResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataTenantQueyResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: MasterDataTenantQueyResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDatasGetHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDatasGetRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * uk1231
     */
    objId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * PERFORMANCE
     */
    scopeCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 3
     */
    tenantId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * base
     */
    viewEntityCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDatasGetResponseBody extends $tea.Model {
    result?: MasterDatasGetResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDatasGetResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: MasterDatasGetResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDatasQueryHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDatasQueryRequest extends $tea.Model {
    /**
     * @example
     * uk_12123
     */
    bizUK?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    maxResults?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    nextToken?: number;
    queryParams?: MasterDatasQueryRequestQueryParams[];
    /**
     * @remarks
     * This parameter is required.
     */
    relationIds?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * PERFORMANCE
     */
    scopeCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 3
     */
    tenantId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * base
     */
    viewEntityCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDatasQueryResponseBody extends $tea.Model {
    hasMore?: boolean;
    /**
     * @example
     * 0
     */
    nextToken?: number;
    result?: MasterDatasQueryResponseBodyResult[];
    /**
     * @remarks
     * This parameter is required.
     */
    success?: boolean;
    /**
     * @example
     * 100
     */
    total?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDatasQueryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: MasterDatasQueryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OpenOemMicroAppHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OpenOemMicroAppRequest extends $tea.Model {
    /**
     * @example
     * 12
     */
    tenantId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OpenOemMicroAppResponseBody extends $tea.Model {
    requestId?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OpenOemMicroAppResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: OpenOemMicroAppResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomEntryProcessesHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomEntryProcessesRequest extends $tea.Model {
    /**
     * @example
     * 20，最大为100，不填默认为100
     */
    maxResults?: number;
    /**
     * @example
     * 默认为0
     */
    nextToken?: number;
    operateUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomEntryProcessesResponseBody extends $tea.Model {
    hasMore?: boolean;
    list?: QueryCustomEntryProcessesResponseBodyList[];
    nextToken?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomEntryProcessesResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryCustomEntryProcessesResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryDismissionStaffIdListHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryDismissionStaffIdListRequest extends $tea.Model {
    /**
     * @example
     * 30
     */
    maxResults?: number;
    /**
     * @example
     * 0
     */
    nextToken?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryDismissionStaffIdListResponseBody extends $tea.Model {
    hasMore?: boolean;
    nextToken?: number;
    userIdList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryDismissionStaffIdListResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryDismissionStaffIdListResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryHrmEmployeeDismissionInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryHrmEmployeeDismissionInfoRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    userIdList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryHrmEmployeeDismissionInfoShrinkRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    userIdListShrink?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryHrmEmployeeDismissionInfoResponseBody extends $tea.Model {
    result?: QueryHrmEmployeeDismissionInfoResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryHrmEmployeeDismissionInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryHrmEmployeeDismissionInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryJobRanksHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryJobRanksRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    maxResults?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    nextToken?: number;
    rankCategoryId?: string;
    rankCode?: string;
    rankName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryJobRanksResponseBody extends $tea.Model {
    hasMore?: boolean;
    list?: QueryJobRanksResponseBodyList[];
    nextToken?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryJobRanksResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryJobRanksResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryJobsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryJobsRequest extends $tea.Model {
    /**
     * @example
     * 工程师
     */
    jobName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20，最大为100
     */
    maxResults?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    nextToken?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryJobsResponseBody extends $tea.Model {
    hasMore?: boolean;
    list?: QueryJobsResponseBodyList[];
    nextToken?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryJobsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryJobsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMicroAppStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMicroAppStatusRequest extends $tea.Model {
    tenantIdList?: number[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMicroAppStatusResponseBody extends $tea.Model {
    requestId?: string;
    result?: {
        [key: string]: ResultValue;
    };
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMicroAppStatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryMicroAppStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMicroAppViewHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMicroAppViewRequest extends $tea.Model {
    tenantIdList?: number[];
    /**
     * @example
     * 2163515669935611
     */
    viewUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMicroAppViewResponseBody extends $tea.Model {
    requestId?: string;
    result?: {
        [key: string]: boolean;
    };
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMicroAppViewResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryMicroAppViewResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPositionsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPositionsRequest extends $tea.Model {
    /**
     * @example
     * 部门id
     */
    deptId?: number;
    inCategoryIds?: string[];
    inPositionIds?: string[];
    /**
     * @example
     * 职位名称
     */
    positionName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    maxResults?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    nextToken?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPositionsResponseBody extends $tea.Model {
    hasMore?: boolean;
    list?: QueryPositionsResponseBodyList[];
    nextToken?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPositionsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryPositionsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RevokeSignRecordsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RevokeSignRecordsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 12345
     */
    revokeUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    signRecordIds?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 撤销签署
     */
    statusRemark?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RevokeSignRecordsResponseBody extends $tea.Model {
    result?: RevokeSignRecordsResponseBodyResult;
    /**
     * @remarks
     * This parameter is required.
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RevokeSignRecordsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: RevokeSignRecordsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RevokeTerminationHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RevokeTerminationRequest extends $tea.Model {
    /**
     * @example
     * 2163515669935611
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RevokeTerminationResponseBody extends $tea.Model {
    requestId?: string;
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RevokeTerminationResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: RevokeTerminationResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RosterMetaAvailableFieldListHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RosterMetaAvailableFieldListRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1231
     */
    appAgentId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RosterMetaAvailableFieldListResponseBody extends $tea.Model {
    result?: RosterMetaAvailableFieldListResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RosterMetaAvailableFieldListResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: RosterMetaAvailableFieldListResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RosterMetaFieldOptionsUpdateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RosterMetaFieldOptionsUpdateRequest extends $tea.Model {
    appAgentId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * sys05-contractType
     */
    fieldCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * sys05
     */
    groupId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    labels?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * OPTIONS_ADD
     */
    modifyType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RosterMetaFieldOptionsUpdateResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RosterMetaFieldOptionsUpdateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: RosterMetaFieldOptionsUpdateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendIsvCardMessageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendIsvCardMessageRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    agentId?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    bizId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    messageType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    receiverUserIds?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 16690147049882572
     */
    sceneType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 同意转正
     */
    scope?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 16690147049882572
     */
    senderUserId?: string;
    valueMap?: {
        [key: string]: string;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendIsvCardMessageResponseBody extends $tea.Model {
    errorCode?: string;
    errorMsg?: string;
    hrmInteractiveCardSendResult?: SendIsvCardMessageResponseBodyHrmInteractiveCardSendResult;
    requestId?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendIsvCardMessageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SendIsvCardMessageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SolutionTaskInitHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SolutionTaskInitRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * training
     */
    category?: string;
    /**
     * @example
     * 时间戳
     */
    claimTime?: number;
    /**
     * @example
     * 这是一个新人培训任务
     */
    description?: string;
    /**
     * @example
     * 时间戳
     */
    finishTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * fdagshfjhajl
     */
    outerId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * running
     */
    status?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 新人学习任务
     */
    title?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123456
     */
    userId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * onboarding
     */
    solutionType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SolutionTaskInitResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SolutionTaskInitResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SolutionTaskInitResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SolutionTaskSaveHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SolutionTaskSaveRequest extends $tea.Model {
    /**
     * @example
     * 时间戳
     */
    claimTime?: number;
    /**
     * @example
     * 这是一个新人培训任务
     */
    description?: string;
    /**
     * @example
     * 时间戳
     */
    finishTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * fdagshfjhajl
     */
    outerId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * qweqweqwe
     */
    solutionInstanceId?: string;
    startTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * running
     */
    status?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * PERFORMANCE_TASK、TRAIN_TASK
     */
    taskType?: string;
    /**
     * @example
     * sdfasd2323sdaf
     */
    templateOuterId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 新人学习任务
     */
    title?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123456
     */
    userId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * onboarding
     */
    solutionType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SolutionTaskSaveResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SolutionTaskSaveResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SolutionTaskSaveResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncSolutionStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncSolutionStatusRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123456
     */
    bizId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * start
     */
    solutionStatus?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * onboarding_v2
     */
    solutionType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 12
     */
    tenantId?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    userIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncSolutionStatusResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncSolutionStatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SyncSolutionStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTaskTemplateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTaskTemplateRequest extends $tea.Model {
    /**
     * **if can be null:**
     * false
     */
    delete?: boolean;
    /**
     * @example
     * 培训、薪酬任务模版
     */
    des?: string;
    /**
     * @example
     * {\"key\":value}
     */
    ext?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 培训模版
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 23234
     */
    optUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 232332
     */
    outerId?: string;
    taskScopeVO?: SyncTaskTemplateRequestTaskScopeVO;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * PERFORMANCE_TASK、TRAIN_TASK
     */
    taskType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * onboarding
     */
    solutionType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTaskTemplateResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTaskTemplateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SyncTaskTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateEmpDismissionInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateEmpDismissionInfoRequest extends $tea.Model {
    dismissionMemo?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    lastWorkDate?: number;
    partner?: boolean;
    terminationReasonPassive?: string[];
    terminationReasonVoluntary?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2163515669935611
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateEmpDismissionInfoResponseBody extends $tea.Model {
    requestId?: string;
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateEmpDismissionInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateEmpDismissionInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateHrmLegalEntityNameHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateHrmLegalEntityNameRequest extends $tea.Model {
    /**
     * @example
     * 57
     */
    dingTenantId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 公司2
     */
    legalEntityName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 公司1
     */
    originLegalEntityName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateHrmLegalEntityNameResponseBody extends $tea.Model {
    result?: UpdateHrmLegalEntityNameResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateHrmLegalEntityNameResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateHrmLegalEntityNameResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateHrmLegalEntityWithoutNameHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateHrmLegalEntityWithoutNameRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    /**
     * @example
     * 123
     */
    createUserId?: string;
    ext?: UpdateHrmLegalEntityWithoutNameRequestExt;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 公司1
     */
    legalEntityName?: string;
    /**
     * @example
     * 公1
     */
    legalEntityShortName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    legalEntityStatus?: number;
    /**
     * @example
     * 法人
     */
    legalPersonName?: string;
    /**
     * @example
     * 57
     */
    dingTenantId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateHrmLegalEntityWithoutNameResponseBody extends $tea.Model {
    result?: UpdateHrmLegalEntityWithoutNameResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateHrmLegalEntityWithoutNameResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateHrmLegalEntityWithoutNameResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateHrmVersionRollBackStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateHrmVersionRollBackStatusRequest extends $tea.Model {
    /**
     * @example
     * show
     */
    configValue?: string;
    /**
     * @example
     * 1231231232
     */
    optUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateHrmVersionRollBackStatusResponseBody extends $tea.Model {
    requestId?: string;
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateHrmVersionRollBackStatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateHrmVersionRollBackStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateIsvCardMessageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateIsvCardMessageRequest extends $tea.Model {
    agentId?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    bizId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    messageType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 16690147049882572
     */
    sceneType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 同意转正
     */
    scope?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    valueMap?: {
        [key: string]: string;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateIsvCardMessageResponseBody extends $tea.Model {
    errorCode?: string;
    errorMsg?: string;
    requestId?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateIsvCardMessageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateIsvCardMessageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadAttachmentHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadAttachmentRequest extends $tea.Model {
    /**
     * @example
     * @dsa8d87y7c8d8c
     */
    mediaId?: string;
    /**
     * @example
     * 16768800278994283
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadAttachmentResponseBody extends $tea.Model {
    result?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadAttachmentResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UploadAttachmentResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddHrmLegalEntityRequestExtManageAddress extends $tea.Model {
    /**
     * @example
     * 110101
     */
    areaCode?: string;
    /**
     * @example
     * 东城区
     */
    areaName?: string;
    /**
     * @example
     * 123
     */
    cityCode?: string;
    /**
     * @example
     * 广州市
     */
    cityName?: string;
    /**
     * @example
     * 123
     */
    countryCode?: string;
    /**
     * @example
     * China
     */
    countryName?: string;
    /**
     * @example
     * 北京市东城区xx街道xx小区xx楼
     */
    detailAddress?: string;
    /**
     * @example
     * 1
     */
    globalAreaType?: string;
    /**
     * @example
     * 123
     */
    provinceCode?: string;
    /**
     * @example
     * 广东省
     */
    provinceName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddHrmLegalEntityRequestExtRegistrationAddress extends $tea.Model {
    /**
     * @example
     * 110101
     */
    areaCode?: string;
    /**
     * @example
     * 东城区
     */
    areaName?: string;
    /**
     * @example
     * 123
     */
    cityCode?: string;
    /**
     * @example
     * 广州市
     */
    cityName?: string;
    /**
     * @example
     * 123
     */
    countryCode?: string;
    /**
     * @example
     * China
     */
    countryName?: string;
    /**
     * @example
     * 北京市东城区xx街道xx小区xx楼
     */
    detailAddress?: string;
    /**
     * @example
     * 1
     */
    globalAreaType?: string;
    /**
     * @example
     * 123
     */
    provinceCode?: string;
    /**
     * @example
     * 广东省
     */
    provinceName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddHrmLegalEntityRequestExt extends $tea.Model {
    legalEntityEnName?: string;
    legalEntityEnShortName?: string;
    legalEntityType?: string;
    manageAddress?: AddHrmLegalEntityRequestExtManageAddress;
    registrationAddress?: AddHrmLegalEntityRequestExtRegistrationAddress;
    registrationDate?: number;
    unifiedSocialCreditCode?: string;
    /**
     * @example
     * 515200
     */
    zipCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddHrmLegalEntityResponseBodyResult extends $tea.Model {
    /**
     * @example
     * ding123
     */
    corpId?: string;
    /**
     * @example
     * 2023-01-01
     */
    gmtCreate?: number;
    /**
     * @example
     * 2023-01-01
     */
    gmtModified?: number;
    /**
     * @example
     * 1234567
     */
    legalEntityId?: string;
    /**
     * @example
     * 公司1
     */
    legalEntityName?: string;
    /**
     * @example
     * 公1
     */
    legalEntityShortName?: string;
    /**
     * @example
     * 1
     */
    legalEntityStatus?: number;
    /**
     * @example
     * 法人
     */
    legalPersonName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddHrmPreentryRequestGroupsSectionsEmpFieldVOList extends $tea.Model {
    /**
     * @example
     * sys01-birthTime
     */
    fieldCode?: string;
    /**
     * @example
     * 2020-10-10
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddHrmPreentryRequestGroupsSections extends $tea.Model {
    empFieldVOList?: AddHrmPreentryRequestGroupsSectionsEmpFieldVOList[];
    /**
     * @example
     * 0
     */
    oldIndex?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddHrmPreentryRequestGroups extends $tea.Model {
    /**
     * @example
     * sys01
     */
    groupId?: string;
    sections?: AddHrmPreentryRequestGroupsSections[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRecordRequestAttachmentList extends $tea.Model {
    /**
     * @example
     * attachment_profile
     */
    fieldCode?: string;
    /**
     * @example
     * 简历附件
     */
    fieldName?: string;
    /**
     * @example
     * DDAttachmentField
     */
    fieldType?: string;
    /**
     * @example
     * https://dt-staging-moka-public.oss-cn-zhangjiakou.aliyuncs.com/form/attachment/b32509e4a809cb4e18a72fc4aa75e655.pdf
     */
    fieldValue?: string;
    /**
     * @example
     * attachment
     */
    groupId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRecordRequestFieldList extends $tea.Model {
    /**
     * @example
     * contract.contract_type
     */
    fieldCode?: string;
    /**
     * @example
     * 合同类型
     */
    fieldName?: string;
    /**
     * @example
     * DDSelectField
     */
    fieldType?: string;
    /**
     * @example
     * 劳动合同
     */
    fieldValue?: string;
    /**
     * @example
     * contract
     */
    groupId?: string;
    /**
     * @example
     * 劳动合同
     */
    optionId?: string;
    /**
     * @example
     * [{\"label\":\"劳动合同\",\"value\":\"劳动合同\"},{\"label\":\"保密协议\",\"value\":\"保密协议\"}]
     */
    options?: string;
    signRequired?: boolean;
    userCustomField?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRecordRequestGroupListFieldList extends $tea.Model {
    /**
     * @example
     * contract.contract_type
     */
    fieldCode?: string;
    /**
     * @example
     * 合同类型
     */
    fieldName?: string;
    /**
     * @example
     * DDSelectField
     */
    fieldType?: string;
    /**
     * @example
     * 劳动合同
     */
    fieldValue?: string;
    /**
     * @example
     * [{\"label\":\"劳动合同\",\"value\":\"劳动合同\"},{\"label\":\"培训协议\",\"value\":\"培训协议\"}]
     */
    options?: string;
    /**
     * @example
     * 劳动合同
     */
    optionId?: string;
    /**
     * @example
     * contract
     */
    groupId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRecordRequestGroupList extends $tea.Model {
    detailFlag?: boolean;
    fieldList?: CreateRecordRequestGroupListFieldList[][];
    /**
     * @example
     * family
     */
    groupId?: string;
    /**
     * @example
     * 家庭成员
     */
    groupName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRecordResponseBodyResult extends $tea.Model {
    details?: string;
    itemId?: string;
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAllDismissionReasonsResponseBodyResultPassiveList extends $tea.Model {
    /**
     * @example
     * 1
     */
    id?: string;
    /**
     * @example
     * 家庭原因
     */
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAllDismissionReasonsResponseBodyResultVoluntaryList extends $tea.Model {
    /**
     * @example
     * 1
     */
    id?: string;
    /**
     * @example
     * 家庭原因
     */
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetAllDismissionReasonsResponseBodyResult extends $tea.Model {
    passiveList?: GetAllDismissionReasonsResponseBodyResultPassiveList[];
    voluntaryList?: GetAllDismissionReasonsResponseBodyResultVoluntaryList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetEmployeeRosterByFieldResponseBodyResultFieldDataListFieldValueList extends $tea.Model {
    /**
     * @example
     * 0
     */
    itemIndex?: number;
    /**
     * @example
     * 正式
     */
    label?: string;
    /**
     * @example
     * 3
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetEmployeeRosterByFieldResponseBodyResultFieldDataList extends $tea.Model {
    /**
     * @example
     * sys01-employeeStatus
     */
    fieldCode?: string;
    /**
     * @example
     * 员工状态
     */
    fieldName?: string;
    fieldValueList?: GetEmployeeRosterByFieldResponseBodyResultFieldDataListFieldValueList[];
    /**
     * @example
     * sys01
     */
    groupId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetEmployeeRosterByFieldResponseBodyResult extends $tea.Model {
    /**
     * @example
     * ding20a11xxx
     */
    corpId?: string;
    fieldDataList?: GetEmployeeRosterByFieldResponseBodyResultFieldDataList[];
    unionId?: string;
    /**
     * @example
     * 042519
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFileTemplateListResponseBodyResultDataAttachmentList extends $tea.Model {
    /**
     * @example
     * 简历附件
     */
    desc?: string;
    /**
     * @example
     * attachment_profile
     */
    fieldCode?: string;
    /**
     * @example
     * 简历附件
     */
    fieldName?: string;
    /**
     * @example
     * DDAttachmentField
     */
    fieldType?: string;
    /**
     * @example
     * attachment
     */
    groupId?: string;
    signRequired?: boolean;
    userCustomField?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFileTemplateListResponseBodyResultDataFieldList extends $tea.Model {
    /**
     * @example
     * 真实姓名字段
     */
    desc?: string;
    /**
     * @example
     * esign_name
     */
    fieldCode?: string;
    /**
     * @example
     * 真实姓名
     */
    fieldName?: string;
    /**
     * @example
     * TextField
     */
    fieldType?: string;
    /**
     * @example
     * baseInfo
     */
    groupId?: string;
    signRequired?: boolean;
    userCustomField?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFileTemplateListResponseBodyResultDataGroupListFieldList extends $tea.Model {
    /**
     * @example
     * 家庭成员明细分组
     */
    desc?: string;
    /**
     * @example
     * family.member_name
     */
    fieldCode?: string;
    /**
     * @example
     * 成员姓名
     */
    fieldName?: string;
    /**
     * @example
     * TextField
     */
    fieldType?: string;
    /**
     * @example
     * family
     */
    groupId?: string;
    signRequired?: boolean;
    userCustomField?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFileTemplateListResponseBodyResultDataGroupList extends $tea.Model {
    detailFlag?: boolean;
    fieldList?: GetFileTemplateListResponseBodyResultDataGroupListFieldList[];
    /**
     * @example
     * family
     */
    groupId?: string;
    /**
     * @example
     * 家庭成员
     */
    groupName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFileTemplateListResponseBodyResultData extends $tea.Model {
    attachmentList?: GetFileTemplateListResponseBodyResultDataAttachmentList[];
    /**
     * @example
     * ding57935b18bfd13e9735c2f4657eb6378f
     */
    corpId?: string;
    fieldList?: GetFileTemplateListResponseBodyResultDataFieldList[];
    groupList?: GetFileTemplateListResponseBodyResultDataGroupList[];
    /**
     * @example
     * f3ed5402e3024febaed773b3ac19feb3
     */
    templateId?: string;
    templateInstName?: string;
    /**
     * @example
     * 劳动合同模板
     */
    templateName?: string;
    /**
     * @example
     * 1
     */
    templateSignStatus?: number;
    /**
     * @example
     * 1
     */
    templateStatus?: number;
    /**
     * @example
     * CONTRACT
     */
    templateType?: string;
    /**
     * @example
     * 合同模板
     */
    templateTypeName?: string;
    /**
     * @example
     * 24
     */
    tenantId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFileTemplateListResponseBodyResult extends $tea.Model {
    data?: GetFileTemplateListResponseBodyResultData[];
    /**
     * @remarks
     * This parameter is required.
     */
    hasMore?: boolean;
    /**
     * @example
     * 10
     */
    nextToken?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSignRecordByIdResponseBodyResult extends $tea.Model {
    /**
     * @example
     * ding12345678
     */
    corpId?: string;
    /**
     * @example
     * 员工签署中
     */
    remark?: string;
    /**
     * @example
     * 1723534265000
     */
    signExpireTime?: number;
    /**
     * @example
     * xxxx-合同文件.pdf
     */
    signFileName?: string;
    /**
     * @example
     * 1723534265000
     */
    signFinishTime?: number;
    /**
     * @example
     * xxxx有限公司
     */
    signLegalEntityName?: string;
    /**
     * @example
     * 6fe06f57ab5a45078f3219be8fd829c6
     */
    signRecordId?: string;
    /**
     * @example
     * 1723534265000
     */
    signStartTime?: number;
    /**
     * @example
     * SIGNING
     */
    signStatus?: string;
    /**
     * @example
     * 签署中
     */
    signStatusRemarks?: string;
    /**
     * @example
     * CONTRACT
     */
    signTemplateType?: string;
    /**
     * @example
     * 400873120394
     */
    signUserId?: string;
    /**
     * @example
     * xiaoming
     */
    signUserName?: string;
    /**
     * @example
     * ON_LINE
     */
    signWay?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSignRecordByUserIdResponseBodyResultData extends $tea.Model {
    /**
     * @example
     * ding57935b18bfd13e9735c2f4657eb6378f
     */
    corpId?: string;
    /**
     * @example
     * 劳动合同电子签签署备注
     */
    remark?: string;
    /**
     * @example
     * 1720775436000
     */
    signExpireTime?: number;
    /**
     * @example
     * 小明-劳动合同-20240808.pdf
     */
    signFileName?: string;
    /**
     * @example
     * https://n.dingtalk.com/xxx
     */
    signFileUrl?: string;
    /**
     * @example
     * 1720775436000
     */
    signFinishTime?: number;
    /**
     * @example
     * xxx有限公司
     */
    signLegalEntityName?: string;
    /**
     * @example
     * 38bc7b69bb6a46b8a69b9001d5c0bdf3
     */
    signRecordId?: string;
    /**
     * @example
     * 1720775436000
     */
    signStartTime?: number;
    /**
     * @example
     * FINISHED
     */
    signStatus?: string;
    /**
     * @example
     * 法人公司未开通
     */
    signStatusRemarks?: string;
    /**
     * @example
     * CONTRACT
     */
    signTemplateType?: string;
    /**
     * @example
     * 660658
     */
    signUserId?: string;
    /**
     * @example
     * 小明
     */
    signUserName?: string;
    /**
     * @example
     * ON_LINE
     */
    signWay?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetSignRecordByUserIdResponseBodyResult extends $tea.Model {
    data?: GetSignRecordByUserIdResponseBodyResultData[];
    hasMore?: boolean;
    nextToken?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmAuthResourcesQueryResponseBodyResult extends $tea.Model {
    authorized?: boolean;
    /**
     * @example
     * /signSetting/manage/*
     */
    resourceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmMailSendRequestMailAttachments extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 测试.pdf
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * @asdc12312
     */
    path?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * media
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmMailSendRequestMailMeetingAlarm extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 还有10分钟开始
     */
    alarmDesc?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    alarmMinutes?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    alarmSummary?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmMailSendRequestMailMeetingAttendees extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * abc@aaa.com
     */
    address?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 参会人1
     */
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmMailSendRequestMailMeetingOrganizer extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * abc@aaa.com
     */
    address?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 系统
     */
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmMailSendRequestMailMeeting extends $tea.Model {
    alarm?: HrmMailSendRequestMailMeetingAlarm;
    attendees?: HrmMailSendRequestMailMeetingAttendees[];
    /**
     * @example
     * 会议描述
     */
    description?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1701692590881
     */
    endTime?: number;
    /**
     * @example
     * 会议室
     */
    location?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * REQUEST
     */
    method?: string;
    organizer?: HrmMailSendRequestMailMeetingOrganizer;
    /**
     * @example
     * 1
     */
    sequence?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1701692590881
     */
    startTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 测试会议
     */
    summary?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * uuidssssss
     */
    uuid?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmMailSendRequestMail extends $tea.Model {
    attachments?: HrmMailSendRequestMailAttachments[];
    /**
     * @example
     * abd@aaa.com,bcd@aaa.com,
     */
    bccAddress?: string;
    /**
     * @example
     * abd@aaa.com,bcd@aaa.com,
     */
    ccAddress?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 请及时填写请填写入职登记表
     */
    content?: string;
    meeting?: HrmMailSendRequestMailMeeting;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * abd@aaa.com,bcd@aaa.com,
     */
    receiverAddress?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 智能人事入职
     */
    senderAlias?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 请填写入职登记表
     */
    subject?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrmMailSendRequestOperator extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * biz222ddd
     */
    bizId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * hrm
     */
    mailAccountType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * tokenabcd
     */
    token?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InvalidSignRecordsResponseBodyResultFailItems extends $tea.Model {
    /**
     * @example
     * 1234566789
     */
    itemId?: string;
    /**
     * @example
     * 电子签状态变更不合法
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InvalidSignRecordsResponseBodyResultSuccessItems extends $tea.Model {
    /**
     * @example
     * 123456789
     */
    itemId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InvalidSignRecordsResponseBodyResult extends $tea.Model {
    failItems?: InvalidSignRecordsResponseBodyResultFailItems[];
    successItems?: InvalidSignRecordsResponseBodyResultSuccessItems[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataDeleteRequestBodyFieldList extends $tea.Model {
    /**
     * @example
     * name
     */
    name?: string;
    /**
     * @example
     * 123
     */
    valueStr?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataDeleteRequestBodyScope extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * performance
     */
    scopeCode?: string;
    /**
     * @example
     * 1
     */
    version?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataDeleteRequestBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 12312
     */
    bizTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * uk123
     */
    bizUk?: string;
    /**
     * @example
     * base
     */
    entityCode?: string;
    fieldList?: MasterDataDeleteRequestBodyFieldList[];
    /**
     * @remarks
     * This parameter is required.
     */
    scope?: MasterDataDeleteRequestBodyScope;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataDeleteResponseBodyFailResult extends $tea.Model {
    /**
     * @example
     * uk123
     */
    bizUK?: string;
    /**
     * @example
     * S0005
     */
    errorCode?: string;
    /**
     * @example
     * 主键冲突
     */
    errorMsg?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataQueryRequestQueryParamsConditionList extends $tea.Model {
    /**
     * @example
     * EQUAL
     */
    operate?: string;
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataQueryRequestQueryParams extends $tea.Model {
    conditionList?: MasterDataQueryRequestQueryParamsConditionList[];
    /**
     * @example
     * performance_code
     */
    fieldCode?: string;
    /**
     * @example
     * AND
     */
    joinType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataQueryResponseBodyResultViewEntityFieldVOListFieldDataVO extends $tea.Model {
    /**
     * @example
     * 100
     */
    key?: string;
    /**
     * @example
     * 100
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataQueryResponseBodyResultViewEntityFieldVOList extends $tea.Model {
    /**
     * @example
     * performanceValue
     */
    fieldCode?: string;
    fieldDataVO?: MasterDataQueryResponseBodyResultViewEntityFieldVOListFieldDataVO;
    /**
     * @example
     * 绩效等级
     */
    fieldName?: string;
    /**
     * @example
     * 1
     */
    fieldType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataQueryResponseBodyResult extends $tea.Model {
    /**
     * @example
     * uk123123
     */
    outerId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * admind123
     */
    relationId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * PERFORMANCE
     */
    scopeCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * base
     */
    viewEntityCode?: string;
    viewEntityFieldVOList?: MasterDataQueryResponseBodyResultViewEntityFieldVOList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataSaveRequestBodyFieldList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * name
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    valueStr?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataSaveRequestBodyScope extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * performance
     */
    scopeCode?: string;
    /**
     * @example
     * 1
     */
    version?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataSaveRequestBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 12312
     */
    bizTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * uk123
     */
    bizUk?: string;
    /**
     * @example
     * base
     */
    entityCode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fieldList?: MasterDataSaveRequestBodyFieldList[];
    /**
     * @remarks
     * This parameter is required.
     */
    scope?: MasterDataSaveRequestBodyScope;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * user123
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataSaveResponseBodyFailResult extends $tea.Model {
    /**
     * @example
     * uk123
     */
    bizUk?: string;
    /**
     * @example
     * S0005
     */
    errorCode?: string;
    /**
     * @example
     * 主键冲突
     */
    errorMsg?: string;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDataTenantQueyResponseBodyResult extends $tea.Model {
    /**
     * @example
     * true
     */
    hasData?: boolean;
    /**
     * @example
     * true
     */
    integrateDataAuth?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * "智能绩效"
     */
    name?: string;
    /**
     * @example
     * true
     */
    readAuth?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 4
     */
    tenantId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    type?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDatasGetResponseBodyResultViewEntityFieldVOListFieldDataVO extends $tea.Model {
    /**
     * @example
     * 100
     */
    key?: string;
    /**
     * @example
     * 100
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDatasGetResponseBodyResultViewEntityFieldVOList extends $tea.Model {
    /**
     * @example
     * performanceValue
     */
    fieldCode?: string;
    fieldDataVO?: MasterDatasGetResponseBodyResultViewEntityFieldVOListFieldDataVO;
    /**
     * @example
     * 绩效等级
     */
    fieldName?: string;
    /**
     * @example
     * 1
     */
    fieldType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDatasGetResponseBodyResult extends $tea.Model {
    /**
     * @example
     * uk123123
     */
    objId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * admind123
     */
    relationId?: string;
    /**
     * @example
     * PERFORMANCE
     */
    scopeCode?: string;
    /**
     * @example
     * base
     */
    viewEntityCode?: string;
    viewEntityFieldVOList?: MasterDatasGetResponseBodyResultViewEntityFieldVOList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDatasQueryRequestQueryParamsConditionList extends $tea.Model {
    /**
     * @example
     * EQUAL
     */
    operate?: string;
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDatasQueryRequestQueryParams extends $tea.Model {
    conditionList?: MasterDatasQueryRequestQueryParamsConditionList[];
    /**
     * @example
     * performance_code
     */
    fieldCode?: string;
    /**
     * @example
     * AND
     */
    joinType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDatasQueryResponseBodyResultViewEntityFieldVOListFieldDataVO extends $tea.Model {
    /**
     * @example
     * 100
     */
    key?: string;
    /**
     * @example
     * 100
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDatasQueryResponseBodyResultViewEntityFieldVOList extends $tea.Model {
    /**
     * @example
     * performanceValue
     */
    fieldCode?: string;
    fieldDataVO?: MasterDatasQueryResponseBodyResultViewEntityFieldVOListFieldDataVO;
    /**
     * @example
     * 绩效等级
     */
    fieldName?: string;
    /**
     * @example
     * 1
     */
    fieldType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MasterDatasQueryResponseBodyResult extends $tea.Model {
    /**
     * @example
     * uk123123
     */
    objId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * admind123
     */
    relationId?: string;
    /**
     * @example
     * PERFORMANCE
     */
    scopeCode?: string;
    /**
     * @example
     * base
     */
    viewEntityCode?: string;
    viewEntityFieldVOList?: MasterDatasQueryResponseBodyResultViewEntityFieldVOList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCustomEntryProcessesResponseBodyList extends $tea.Model {
    formDesc?: string;
    formId?: string;
    formName?: string;
    shortUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryHrmEmployeeDismissionInfoResponseBodyResultDeptList extends $tea.Model {
    deptId?: number;
    deptPath?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryHrmEmployeeDismissionInfoResponseBodyResult extends $tea.Model {
    deptList?: QueryHrmEmployeeDismissionInfoResponseBodyResultDeptList[];
    handoverUserId?: string;
    lastWorkDay?: number;
    mainDeptId?: number;
    mainDeptName?: string;
    name?: string;
    passiveReason?: string[];
    preStatus?: number;
    reasonMemo?: string;
    status?: number;
    userId?: string;
    voluntaryReason?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryJobRanksResponseBodyList extends $tea.Model {
    /**
     * @example
     * 30
     */
    maxJobGrade?: number;
    /**
     * @example
     * 1
     */
    minJobGrade?: number;
    rankCategoryId?: string;
    rankCode?: string;
    rankDescription?: string;
    rankId?: string;
    rankName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryJobsResponseBodyList extends $tea.Model {
    /**
     * @example
     * 职务描述
     */
    jobDescription?: string;
    /**
     * @example
     * ac67286db74c48e28d787173ccc1a111
     */
    jobId?: string;
    /**
     * @example
     * 总裁
     */
    jobName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPositionsResponseBodyList extends $tea.Model {
    jobId?: string;
    positionCategoryId?: string;
    positionDes?: string;
    /**
     * @example
     * ac67286db74c48e28d787173ccc1a111
     */
    positionId?: string;
    positionName?: string;
    rankIdList?: string[];
    status?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RevokeSignRecordsResponseBodyResultFailItems extends $tea.Model {
    /**
     * @example
     * 6fe06f57ab5a45078f3219be8fd829c6
     */
    itemId?: string;
    /**
     * @example
     * 电子签状态变更不合法
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RevokeSignRecordsResponseBodyResultSuccessItems extends $tea.Model {
    /**
     * @example
     * 6fe06f57ab5a45078f3219be8fd829c6
     */
    itemId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RevokeSignRecordsResponseBodyResult extends $tea.Model {
    failItems?: RevokeSignRecordsResponseBodyResultFailItems[];
    successItems?: RevokeSignRecordsResponseBodyResultSuccessItems[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RosterMetaAvailableFieldListResponseBodyResult extends $tea.Model {
    /**
     * @example
     * sys01-employeeType
     */
    fieldCode?: string;
    /**
     * @example
     * 员工类型
     */
    fieldName?: string;
    /**
     * @example
     * DDSelectField
     */
    fieldType?: string;
    /**
     * @example
     * [{"value":"1","label":"男"},{"value":"2","label":"女"}]
     */
    optionText?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendIsvCardMessageResponseBodyHrmInteractiveCardSendResult extends $tea.Model {
    bizId?: string;
    errorCode?: string;
    errorMsg?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncTaskTemplateRequestTaskScopeVO extends $tea.Model {
    deptIds?: number[];
    positionIds?: string[];
    roleIds?: string[];
    userIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateHrmLegalEntityNameResponseBodyResult extends $tea.Model {
    /**
     * @example
     * ding123
     */
    corpId?: string;
    /**
     * @example
     * 2023-08-08
     */
    gmtCreate?: number;
    /**
     * @example
     * 2023-08-08
     */
    gmtModified?: number;
    /**
     * @example
     * 111233
     */
    legalEntityId?: string;
    /**
     * @example
     * 公司2
     */
    legalEntityName?: string;
    /**
     * @example
     * 公2
     */
    legalEntityShortName?: string;
    /**
     * @example
     * 1
     */
    legalEntityStatus?: number;
    /**
     * @example
     * 法人1
     */
    legalPersonName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateHrmLegalEntityWithoutNameRequestExtManageAddress extends $tea.Model {
    /**
     * @example
     * 110101
     */
    areaCode?: string;
    /**
     * @example
     * 东城区
     */
    areaName?: string;
    /**
     * @example
     * 1234
     */
    cityCode?: string;
    /**
     * @example
     * 广州
     */
    cityName?: string;
    /**
     * @example
     * 123
     */
    countryCode?: string;
    /**
     * @example
     * China
     */
    countryName?: string;
    /**
     * @example
     * 北京市东城区xx街道xx小区xx楼
     */
    detailAddress?: string;
    /**
     * @example
     * 1
     */
    globalAreaType?: string;
    /**
     * @example
     * 123
     */
    provinceCode?: string;
    /**
     * @example
     * 广东
     */
    provinceName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateHrmLegalEntityWithoutNameRequestExtRegistrationAddress extends $tea.Model {
    /**
     * @example
     * 110101
     */
    areaCode?: string;
    /**
     * @example
     * 东城区
     */
    areaName?: string;
    /**
     * @example
     * 1234
     */
    cityCode?: string;
    /**
     * @example
     * 广州
     */
    cityName?: string;
    /**
     * @example
     * 123
     */
    countryCode?: string;
    /**
     * @example
     * China
     */
    countryName?: string;
    /**
     * @example
     * 北京市东城区xx街道xx小区xx楼
     */
    detailAddress?: string;
    /**
     * @example
     * 1
     */
    globalAreaType?: string;
    /**
     * @example
     * 123
     */
    provinceCode?: string;
    /**
     * @example
     * 广东
     */
    provinceName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateHrmLegalEntityWithoutNameRequestExt extends $tea.Model {
    /**
     * @example
     * company
     */
    legalEntityEnName?: string;
    /**
     * @example
     * com
     */
    legalEntityEnShortName?: string;
    /**
     * @example
     * whollyOwned
     */
    legalEntityType?: string;
    manageAddress?: UpdateHrmLegalEntityWithoutNameRequestExtManageAddress;
    registrationAddress?: UpdateHrmLegalEntityWithoutNameRequestExtRegistrationAddress;
    /**
     * @example
     * 2023-01-01
     */
    registrationDate?: number;
    /**
     * @example
     * 123456
     */
    unifiedSocialCreditCode?: string;
    /**
     * @example
     * 515200
     */
    zipCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateHrmLegalEntityWithoutNameResponseBodyResult extends $tea.Model {
    /**
     * @example
     * ding123
     */
    corpId?: string;
    /**
     * @example
     * 2023-01-01
     */
    gmtCreate?: number;
    /**
     * @example
     * 2023-01-01
     */
    gmtModified?: number;
    /**
     * @example
     * 123456
     */
    legalEntityId?: string;
    /**
     * @example
     * 公司1
     */
    legalEntityName?: string;
    /**
     * @example
     * 公1
     */
    legalEntityShortName?: string;
    /**
     * @example
     * 1
     */
    legalEntityStatus?: number;
    /**
     * @example
     * 法人
     */
    legalPersonName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 新增法人公司
     *
     * @param request - AddHrmLegalEntityRequest
     * @param headers - AddHrmLegalEntityHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddHrmLegalEntityResponse
     */
    addHrmLegalEntityWithOptions(request: AddHrmLegalEntityRequest, headers: AddHrmLegalEntityHeaders, runtime: $Util.RuntimeOptions): Promise<AddHrmLegalEntityResponse>;
    /**
     * 新增法人公司
     *
     * @param request - AddHrmLegalEntityRequest
     * @returns AddHrmLegalEntityResponse
     */
    addHrmLegalEntity(request: AddHrmLegalEntityRequest): Promise<AddHrmLegalEntityResponse>;
    /**
     * 智能人事添加待入职员工信息(支持花名册数据和分组明细更新)
     *
     * @param request - AddHrmPreentryRequest
     * @param headers - AddHrmPreentryHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddHrmPreentryResponse
     */
    addHrmPreentryWithOptions(request: AddHrmPreentryRequest, headers: AddHrmPreentryHeaders, runtime: $Util.RuntimeOptions): Promise<AddHrmPreentryResponse>;
    /**
     * 智能人事添加待入职员工信息(支持花名册数据和分组明细更新)
     *
     * @param request - AddHrmPreentryRequest
     * @returns AddHrmPreentryResponse
     */
    addHrmPreentry(request: AddHrmPreentryRequest): Promise<AddHrmPreentryResponse>;
    /**
     * 创建电子签签署记录
     *
     * @param request - CreateRecordRequest
     * @param headers - CreateRecordHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateRecordResponse
     */
    createRecordWithOptions(request: CreateRecordRequest, headers: CreateRecordHeaders, runtime: $Util.RuntimeOptions): Promise<CreateRecordResponse>;
    /**
     * 创建电子签签署记录
     *
     * @param request - CreateRecordRequest
     * @returns CreateRecordResponse
     */
    createRecord(request: CreateRecordRequest): Promise<CreateRecordResponse>;
    /**
     * 智能人事设备市场管理
     *
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeviceMarketManagerResponse
     */
    deviceMarketManagerWithOptions(headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<DeviceMarketManagerResponse>;
    /**
     * 智能人事设备市场管理
     * @returns DeviceMarketManagerResponse
     */
    deviceMarketManager(): Promise<DeviceMarketManagerResponse>;
    /**
     * 智能人事设备定向管理接口
     *
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeviceMarketOrderManagerResponse
     */
    deviceMarketOrderManagerWithOptions(headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<DeviceMarketOrderManagerResponse>;
    /**
     * 智能人事设备定向管理接口
     * @returns DeviceMarketOrderManagerResponse
     */
    deviceMarketOrderManager(): Promise<DeviceMarketOrderManagerResponse>;
    /**
     * e签宝专有查询证件接口
     *
     * @param request - ECertQueryRequest
     * @param headers - ECertQueryHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ECertQueryResponse
     */
    eCertQueryWithOptions(request: ECertQueryRequest, headers: ECertQueryHeaders, runtime: $Util.RuntimeOptions): Promise<ECertQueryResponse>;
    /**
     * e签宝专有查询证件接口
     *
     * @param request - ECertQueryRequest
     * @returns ECertQueryResponse
     */
    eCertQuery(request: ECertQueryRequest): Promise<ECertQueryResponse>;
    /**
     * 加入待离职
     *
     * @param request - EmpStartDismissionRequest
     * @param headers - EmpStartDismissionHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns EmpStartDismissionResponse
     */
    empStartDismissionWithOptions(request: EmpStartDismissionRequest, headers: EmpStartDismissionHeaders, runtime: $Util.RuntimeOptions): Promise<EmpStartDismissionResponse>;
    /**
     * 加入待离职
     *
     * @param request - EmpStartDismissionRequest
     * @returns EmpStartDismissionResponse
     */
    empStartDismission(request: EmpStartDismissionRequest): Promise<EmpStartDismissionResponse>;
    /**
     * 智能人事员工档案附件更新
     *
     * @param request - EmployeeAttachmentUpdateRequest
     * @param headers - EmployeeAttachmentUpdateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns EmployeeAttachmentUpdateResponse
     */
    employeeAttachmentUpdateWithOptions(request: EmployeeAttachmentUpdateRequest, headers: EmployeeAttachmentUpdateHeaders, runtime: $Util.RuntimeOptions): Promise<EmployeeAttachmentUpdateResponse>;
    /**
     * 智能人事员工档案附件更新
     *
     * @param request - EmployeeAttachmentUpdateRequest
     * @returns EmployeeAttachmentUpdateResponse
     */
    employeeAttachmentUpdate(request: EmployeeAttachmentUpdateRequest): Promise<EmployeeAttachmentUpdateResponse>;
    /**
     * 人事高级合同管理回退
     *
     * @param request - EsignRollbackRequest
     * @param headers - EsignRollbackHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns EsignRollbackResponse
     */
    esignRollbackWithOptions(request: EsignRollbackRequest, headers: EsignRollbackHeaders, runtime: $Util.RuntimeOptions): Promise<EsignRollbackResponse>;
    /**
     * 人事高级合同管理回退
     *
     * @param request - EsignRollbackRequest
     * @returns EsignRollbackResponse
     */
    esignRollback(request: EsignRollbackRequest): Promise<EsignRollbackResponse>;
    /**
     * 获取所有离职原因
     *
     * @param headers - GetAllDismissionReasonsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetAllDismissionReasonsResponse
     */
    getAllDismissionReasonsWithOptions(headers: GetAllDismissionReasonsHeaders, runtime: $Util.RuntimeOptions): Promise<GetAllDismissionReasonsResponse>;
    /**
     * 获取所有离职原因
     * @returns GetAllDismissionReasonsResponse
     */
    getAllDismissionReasons(): Promise<GetAllDismissionReasonsResponse>;
    /**
     * 获取员工花名册指定字段的信息，支持明细分组字段
     *
     * @param request - GetEmployeeRosterByFieldRequest
     * @param headers - GetEmployeeRosterByFieldHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetEmployeeRosterByFieldResponse
     */
    getEmployeeRosterByFieldWithOptions(request: GetEmployeeRosterByFieldRequest, headers: GetEmployeeRosterByFieldHeaders, runtime: $Util.RuntimeOptions): Promise<GetEmployeeRosterByFieldResponse>;
    /**
     * 获取员工花名册指定字段的信息，支持明细分组字段
     *
     * @param request - GetEmployeeRosterByFieldRequest
     * @returns GetEmployeeRosterByFieldResponse
     */
    getEmployeeRosterByField(request: GetEmployeeRosterByFieldRequest): Promise<GetEmployeeRosterByFieldResponse>;
    /**
     * 查询文件模板列表及文件模板内花名册字段
     *
     * @param request - GetFileTemplateListRequest
     * @param headers - GetFileTemplateListHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetFileTemplateListResponse
     */
    getFileTemplateListWithOptions(request: GetFileTemplateListRequest, headers: GetFileTemplateListHeaders, runtime: $Util.RuntimeOptions): Promise<GetFileTemplateListResponse>;
    /**
     * 查询文件模板列表及文件模板内花名册字段
     *
     * @param request - GetFileTemplateListRequest
     * @returns GetFileTemplateListResponse
     */
    getFileTemplateList(request: GetFileTemplateListRequest): Promise<GetFileTemplateListResponse>;
    /**
     * 通过签署记录id查询指定的电子签署记录
     *
     * @param request - GetSignRecordByIdRequest
     * @param headers - GetSignRecordByIdHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetSignRecordByIdResponse
     */
    getSignRecordByIdWithOptions(request: GetSignRecordByIdRequest, headers: GetSignRecordByIdHeaders, runtime: $Util.RuntimeOptions): Promise<GetSignRecordByIdResponse>;
    /**
     * 通过签署记录id查询指定的电子签署记录
     *
     * @param request - GetSignRecordByIdRequest
     * @returns GetSignRecordByIdResponse
     */
    getSignRecordById(request: GetSignRecordByIdRequest): Promise<GetSignRecordByIdResponse>;
    /**
     * 查询指定用户的电子签署记录，并返回签署记录的基本数据及已签署完成的文件预览地址
     *
     * @param request - GetSignRecordByUserIdRequest
     * @param headers - GetSignRecordByUserIdHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetSignRecordByUserIdResponse
     */
    getSignRecordByUserIdWithOptions(request: GetSignRecordByUserIdRequest, headers: GetSignRecordByUserIdHeaders, runtime: $Util.RuntimeOptions): Promise<GetSignRecordByUserIdResponse>;
    /**
     * 查询指定用户的电子签署记录，并返回签署记录的基本数据及已签署完成的文件预览地址
     *
     * @param request - GetSignRecordByUserIdRequest
     * @returns GetSignRecordByUserIdResponse
     */
    getSignRecordByUserId(request: GetSignRecordByUserIdRequest): Promise<GetSignRecordByUserIdResponse>;
    /**
     * 智能人事权限查询
     *
     * @param request - HrmAuthResourcesQueryRequest
     * @param headers - HrmAuthResourcesQueryHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrmAuthResourcesQueryResponse
     */
    hrmAuthResourcesQueryWithOptions(request: HrmAuthResourcesQueryRequest, headers: HrmAuthResourcesQueryHeaders, runtime: $Util.RuntimeOptions): Promise<HrmAuthResourcesQueryResponse>;
    /**
     * 智能人事权限查询
     *
     * @param request - HrmAuthResourcesQueryRequest
     * @returns HrmAuthResourcesQueryResponse
     */
    hrmAuthResourcesQuery(request: HrmAuthResourcesQueryRequest): Promise<HrmAuthResourcesQueryResponse>;
    /**
     * 智能人事权益查询
     *
     * @param request - HrmBenefitQueryRequest
     * @param headers - HrmBenefitQueryHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrmBenefitQueryResponse
     */
    hrmBenefitQueryWithOptions(request: HrmBenefitQueryRequest, headers: HrmBenefitQueryHeaders, runtime: $Util.RuntimeOptions): Promise<HrmBenefitQueryResponse>;
    /**
     * 智能人事权益查询
     *
     * @param request - HrmBenefitQueryRequest
     * @returns HrmBenefitQueryResponse
     */
    hrmBenefitQuery(request: HrmBenefitQueryRequest): Promise<HrmBenefitQueryResponse>;
    /**
     * 查询企业配置信息
     *
     * @param request - HrmCorpConfigQueryRequest
     * @param headers - HrmCorpConfigQueryHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrmCorpConfigQueryResponse
     */
    hrmCorpConfigQueryWithOptions(request: HrmCorpConfigQueryRequest, headers: HrmCorpConfigQueryHeaders, runtime: $Util.RuntimeOptions): Promise<HrmCorpConfigQueryResponse>;
    /**
     * 查询企业配置信息
     *
     * @param request - HrmCorpConfigQueryRequest
     * @returns HrmCorpConfigQueryResponse
     */
    hrmCorpConfigQuery(request: HrmCorpConfigQueryRequest): Promise<HrmCorpConfigQueryResponse>;
    /**
     * 智能人事邮件发送
     *
     * @param request - HrmMailSendRequest
     * @param headers - HrmMailSendHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrmMailSendResponse
     */
    hrmMailSendWithOptions(request: HrmMailSendRequest, headers: HrmMailSendHeaders, runtime: $Util.RuntimeOptions): Promise<HrmMailSendResponse>;
    /**
     * 智能人事邮件发送
     *
     * @param request - HrmMailSendRequest
     * @returns HrmMailSendResponse
     */
    hrmMailSend(request: HrmMailSendRequest): Promise<HrmMailSendResponse>;
    /**
     * 人事2.0支持Moka事件转发
     *
     * @param request - HrmMokaEventRequest
     * @param headers - HrmMokaEventHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrmMokaEventResponse
     */
    hrmMokaEventWithOptions(request: HrmMokaEventRequest, headers: HrmMokaEventHeaders, runtime: $Util.RuntimeOptions): Promise<HrmMokaEventResponse>;
    /**
     * 人事2.0支持Moka事件转发
     *
     * @param request - HrmMokaEventRequest
     * @returns HrmMokaEventResponse
     */
    hrmMokaEvent(request: HrmMokaEventRequest): Promise<HrmMokaEventResponse>;
    /**
     * 人事2.0支持Moka接口转发
     *
     * @param request - HrmMokaOapiRequest
     * @param headers - HrmMokaOapiHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrmMokaOapiResponse
     */
    hrmMokaOapiWithOptions(request: HrmMokaOapiRequest, headers: HrmMokaOapiHeaders, runtime: $Util.RuntimeOptions): Promise<HrmMokaOapiResponse>;
    /**
     * 人事2.0支持Moka接口转发
     *
     * @param request - HrmMokaOapiRequest
     * @returns HrmMokaOapiResponse
     */
    hrmMokaOapi(request: HrmMokaOapiRequest): Promise<HrmMokaOapiResponse>;
    /**
     * 智能人事转正接口
     *
     * @param request - HrmProcessRegularRequest
     * @param headers - HrmProcessRegularHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrmProcessRegularResponse
     */
    hrmProcessRegularWithOptions(request: HrmProcessRegularRequest, headers: HrmProcessRegularHeaders, runtime: $Util.RuntimeOptions): Promise<HrmProcessRegularResponse>;
    /**
     * 智能人事转正接口
     *
     * @param request - HrmProcessRegularRequest
     * @returns HrmProcessRegularResponse
     */
    hrmProcessRegular(request: HrmProcessRegularRequest): Promise<HrmProcessRegularResponse>;
    /**
     * 智能人事离职和交接接口
     *
     * @param request - HrmProcessTerminationAndHandoverRequest
     * @param headers - HrmProcessTerminationAndHandoverHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrmProcessTerminationAndHandoverResponse
     */
    hrmProcessTerminationAndHandoverWithOptions(request: HrmProcessTerminationAndHandoverRequest, headers: HrmProcessTerminationAndHandoverHeaders, runtime: $Util.RuntimeOptions): Promise<HrmProcessTerminationAndHandoverResponse>;
    /**
     * 智能人事离职和交接接口
     *
     * @param request - HrmProcessTerminationAndHandoverRequest
     * @returns HrmProcessTerminationAndHandoverResponse
     */
    hrmProcessTerminationAndHandover(request: HrmProcessTerminationAndHandoverRequest): Promise<HrmProcessTerminationAndHandoverResponse>;
    /**
     * 智能人事调岗接口
     *
     * @param request - HrmProcessTransferRequest
     * @param headers - HrmProcessTransferHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrmProcessTransferResponse
     */
    hrmProcessTransferWithOptions(request: HrmProcessTransferRequest, headers: HrmProcessTransferHeaders, runtime: $Util.RuntimeOptions): Promise<HrmProcessTransferResponse>;
    /**
     * 智能人事调岗接口
     *
     * @param request - HrmProcessTransferRequest
     * @returns HrmProcessTransferResponse
     */
    hrmProcessTransfer(request: HrmProcessTransferRequest): Promise<HrmProcessTransferResponse>;
    /**
     * 修改员工最后一次离职信息
     *
     * @param request - HrmProcessUpdateTerminationInfoRequest
     * @param headers - HrmProcessUpdateTerminationInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrmProcessUpdateTerminationInfoResponse
     */
    hrmProcessUpdateTerminationInfoWithOptions(request: HrmProcessUpdateTerminationInfoRequest, headers: HrmProcessUpdateTerminationInfoHeaders, runtime: $Util.RuntimeOptions): Promise<HrmProcessUpdateTerminationInfoResponse>;
    /**
     * 修改员工最后一次离职信息
     *
     * @param request - HrmProcessUpdateTerminationInfoRequest
     * @returns HrmProcessUpdateTerminationInfoResponse
     */
    hrmProcessUpdateTerminationInfo(request: HrmProcessUpdateTerminationInfoRequest): Promise<HrmProcessUpdateTerminationInfoResponse>;
    /**
     * 智能人事pts能力调用
     *
     * @param request - HrmPtsServiceRequest
     * @param headers - HrmPtsServiceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrmPtsServiceResponse
     */
    hrmPtsServiceWithOptions(request: HrmPtsServiceRequest, headers: HrmPtsServiceHeaders, runtime: $Util.RuntimeOptions): Promise<HrmPtsServiceResponse>;
    /**
     * 智能人事pts能力调用
     *
     * @param request - HrmPtsServiceRequest
     * @returns HrmPtsServiceResponse
     */
    hrmPtsService(request: HrmPtsServiceRequest): Promise<HrmPtsServiceResponse>;
    /**
     * 作废签署记录
     *
     * @param request - InvalidSignRecordsRequest
     * @param headers - InvalidSignRecordsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns InvalidSignRecordsResponse
     */
    invalidSignRecordsWithOptions(request: InvalidSignRecordsRequest, headers: InvalidSignRecordsHeaders, runtime: $Util.RuntimeOptions): Promise<InvalidSignRecordsResponse>;
    /**
     * 作废签署记录
     *
     * @param request - InvalidSignRecordsRequest
     * @returns InvalidSignRecordsResponse
     */
    invalidSignRecords(request: InvalidSignRecordsRequest): Promise<InvalidSignRecordsResponse>;
    /**
     * 智能人事主数据删除服务
     *
     * @param request - MasterDataDeleteRequest
     * @param headers - MasterDataDeleteHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns MasterDataDeleteResponse
     */
    masterDataDeleteWithOptions(request: MasterDataDeleteRequest, headers: MasterDataDeleteHeaders, runtime: $Util.RuntimeOptions): Promise<MasterDataDeleteResponse>;
    /**
     * 智能人事主数据删除服务
     *
     * @param request - MasterDataDeleteRequest
     * @returns MasterDataDeleteResponse
     */
    masterDataDelete(request: MasterDataDeleteRequest): Promise<MasterDataDeleteResponse>;
    /**
     * 智能人事主数据查询服务
     *
     * @param request - MasterDataQueryRequest
     * @param headers - MasterDataQueryHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns MasterDataQueryResponse
     */
    masterDataQueryWithOptions(request: MasterDataQueryRequest, headers: MasterDataQueryHeaders, runtime: $Util.RuntimeOptions): Promise<MasterDataQueryResponse>;
    /**
     * 智能人事主数据查询服务
     *
     * @param request - MasterDataQueryRequest
     * @returns MasterDataQueryResponse
     */
    masterDataQuery(request: MasterDataQueryRequest): Promise<MasterDataQueryResponse>;
    /**
     * 智能人事主数据保存服务
     *
     * @param request - MasterDataSaveRequest
     * @param headers - MasterDataSaveHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns MasterDataSaveResponse
     */
    masterDataSaveWithOptions(request: MasterDataSaveRequest, headers: MasterDataSaveHeaders, runtime: $Util.RuntimeOptions): Promise<MasterDataSaveResponse>;
    /**
     * 智能人事主数据保存服务
     *
     * @param request - MasterDataSaveRequest
     * @returns MasterDataSaveResponse
     */
    masterDataSave(request: MasterDataSaveRequest): Promise<MasterDataSaveResponse>;
    /**
     * 主数据中拥有某个领域数据的租户信息查询
     *
     * @param request - MasterDataTenantQueyRequest
     * @param headers - MasterDataTenantQueyHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns MasterDataTenantQueyResponse
     */
    masterDataTenantQueyWithOptions(request: MasterDataTenantQueyRequest, headers: MasterDataTenantQueyHeaders, runtime: $Util.RuntimeOptions): Promise<MasterDataTenantQueyResponse>;
    /**
     * 主数据中拥有某个领域数据的租户信息查询
     *
     * @param request - MasterDataTenantQueyRequest
     * @returns MasterDataTenantQueyResponse
     */
    masterDataTenantQuey(request: MasterDataTenantQueyRequest): Promise<MasterDataTenantQueyResponse>;
    /**
     * 智能人事主数据根据ID获取
     *
     * @param request - MasterDatasGetRequest
     * @param headers - MasterDatasGetHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns MasterDatasGetResponse
     */
    masterDatasGetWithOptions(request: MasterDatasGetRequest, headers: MasterDatasGetHeaders, runtime: $Util.RuntimeOptions): Promise<MasterDatasGetResponse>;
    /**
     * 智能人事主数据根据ID获取
     *
     * @param request - MasterDatasGetRequest
     * @returns MasterDatasGetResponse
     */
    masterDatasGet(request: MasterDatasGetRequest): Promise<MasterDatasGetResponse>;
    /**
     * 智能人事主数据查询服务
     *
     * @param request - MasterDatasQueryRequest
     * @param headers - MasterDatasQueryHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns MasterDatasQueryResponse
     */
    masterDatasQueryWithOptions(request: MasterDatasQueryRequest, headers: MasterDatasQueryHeaders, runtime: $Util.RuntimeOptions): Promise<MasterDatasQueryResponse>;
    /**
     * 智能人事主数据查询服务
     *
     * @param request - MasterDatasQueryRequest
     * @returns MasterDatasQueryResponse
     */
    masterDatasQuery(request: MasterDatasQueryRequest): Promise<MasterDatasQueryResponse>;
    /**
     * oem 老用户数据迁移时，开通oem 应用
     *
     * @param request - OpenOemMicroAppRequest
     * @param headers - OpenOemMicroAppHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns OpenOemMicroAppResponse
     */
    openOemMicroAppWithOptions(request: OpenOemMicroAppRequest, headers: OpenOemMicroAppHeaders, runtime: $Util.RuntimeOptions): Promise<OpenOemMicroAppResponse>;
    /**
     * oem 老用户数据迁移时，开通oem 应用
     *
     * @param request - OpenOemMicroAppRequest
     * @returns OpenOemMicroAppResponse
     */
    openOemMicroApp(request: OpenOemMicroAppRequest): Promise<OpenOemMicroAppResponse>;
    /**
     * 自定义入职流程数据查询
     *
     * @param request - QueryCustomEntryProcessesRequest
     * @param headers - QueryCustomEntryProcessesHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryCustomEntryProcessesResponse
     */
    queryCustomEntryProcessesWithOptions(request: QueryCustomEntryProcessesRequest, headers: QueryCustomEntryProcessesHeaders, runtime: $Util.RuntimeOptions): Promise<QueryCustomEntryProcessesResponse>;
    /**
     * 自定义入职流程数据查询
     *
     * @param request - QueryCustomEntryProcessesRequest
     * @returns QueryCustomEntryProcessesResponse
     */
    queryCustomEntryProcesses(request: QueryCustomEntryProcessesRequest): Promise<QueryCustomEntryProcessesResponse>;
    /**
     * 查询企业已离职员工列表
     *
     * @param request - QueryDismissionStaffIdListRequest
     * @param headers - QueryDismissionStaffIdListHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryDismissionStaffIdListResponse
     */
    queryDismissionStaffIdListWithOptions(request: QueryDismissionStaffIdListRequest, headers: QueryDismissionStaffIdListHeaders, runtime: $Util.RuntimeOptions): Promise<QueryDismissionStaffIdListResponse>;
    /**
     * 查询企业已离职员工列表
     *
     * @param request - QueryDismissionStaffIdListRequest
     * @returns QueryDismissionStaffIdListResponse
     */
    queryDismissionStaffIdList(request: QueryDismissionStaffIdListRequest): Promise<QueryDismissionStaffIdListResponse>;
    /**
     * 根据传入的staffId列表，批量查询员工的离职信息
     *
     * @param tmpReq - QueryHrmEmployeeDismissionInfoRequest
     * @param headers - QueryHrmEmployeeDismissionInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryHrmEmployeeDismissionInfoResponse
     */
    queryHrmEmployeeDismissionInfoWithOptions(tmpReq: QueryHrmEmployeeDismissionInfoRequest, headers: QueryHrmEmployeeDismissionInfoHeaders, runtime: $Util.RuntimeOptions): Promise<QueryHrmEmployeeDismissionInfoResponse>;
    /**
     * 根据传入的staffId列表，批量查询员工的离职信息
     *
     * @param request - QueryHrmEmployeeDismissionInfoRequest
     * @returns QueryHrmEmployeeDismissionInfoResponse
     */
    queryHrmEmployeeDismissionInfo(request: QueryHrmEmployeeDismissionInfoRequest): Promise<QueryHrmEmployeeDismissionInfoResponse>;
    /**
     * 分页查询企业的职级信息
     *
     * @param request - QueryJobRanksRequest
     * @param headers - QueryJobRanksHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryJobRanksResponse
     */
    queryJobRanksWithOptions(request: QueryJobRanksRequest, headers: QueryJobRanksHeaders, runtime: $Util.RuntimeOptions): Promise<QueryJobRanksResponse>;
    /**
     * 分页查询企业的职级信息
     *
     * @param request - QueryJobRanksRequest
     * @returns QueryJobRanksResponse
     */
    queryJobRanks(request: QueryJobRanksRequest): Promise<QueryJobRanksResponse>;
    /**
     * 分页查询企业职务信息
     *
     * @param request - QueryJobsRequest
     * @param headers - QueryJobsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryJobsResponse
     */
    queryJobsWithOptions(request: QueryJobsRequest, headers: QueryJobsHeaders, runtime: $Util.RuntimeOptions): Promise<QueryJobsResponse>;
    /**
     * 分页查询企业职务信息
     *
     * @param request - QueryJobsRequest
     * @returns QueryJobsResponse
     */
    queryJobs(request: QueryJobsRequest): Promise<QueryJobsResponse>;
    /**
     * 智能人事查询微应用状态
     *
     * @param request - QueryMicroAppStatusRequest
     * @param headers - QueryMicroAppStatusHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryMicroAppStatusResponse
     */
    queryMicroAppStatusWithOptions(request: QueryMicroAppStatusRequest, headers: QueryMicroAppStatusHeaders, runtime: $Util.RuntimeOptions): Promise<QueryMicroAppStatusResponse>;
    /**
     * 智能人事查询微应用状态
     *
     * @param request - QueryMicroAppStatusRequest
     * @returns QueryMicroAppStatusResponse
     */
    queryMicroAppStatus(request: QueryMicroAppStatusRequest): Promise<QueryMicroAppStatusResponse>;
    /**
     * 智能人事查询微应用可见性
     *
     * @param request - QueryMicroAppViewRequest
     * @param headers - QueryMicroAppViewHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryMicroAppViewResponse
     */
    queryMicroAppViewWithOptions(request: QueryMicroAppViewRequest, headers: QueryMicroAppViewHeaders, runtime: $Util.RuntimeOptions): Promise<QueryMicroAppViewResponse>;
    /**
     * 智能人事查询微应用可见性
     *
     * @param request - QueryMicroAppViewRequest
     * @returns QueryMicroAppViewResponse
     */
    queryMicroAppView(request: QueryMicroAppViewRequest): Promise<QueryMicroAppViewResponse>;
    /**
     * 分页查询企业职位信息
     *
     * @param request - QueryPositionsRequest
     * @param headers - QueryPositionsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryPositionsResponse
     */
    queryPositionsWithOptions(request: QueryPositionsRequest, headers: QueryPositionsHeaders, runtime: $Util.RuntimeOptions): Promise<QueryPositionsResponse>;
    /**
     * 分页查询企业职位信息
     *
     * @param request - QueryPositionsRequest
     * @returns QueryPositionsResponse
     */
    queryPositions(request: QueryPositionsRequest): Promise<QueryPositionsResponse>;
    /**
     * 撤回电子签署中的签署记录
     *
     * @param request - RevokeSignRecordsRequest
     * @param headers - RevokeSignRecordsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns RevokeSignRecordsResponse
     */
    revokeSignRecordsWithOptions(request: RevokeSignRecordsRequest, headers: RevokeSignRecordsHeaders, runtime: $Util.RuntimeOptions): Promise<RevokeSignRecordsResponse>;
    /**
     * 撤回电子签署中的签署记录
     *
     * @param request - RevokeSignRecordsRequest
     * @returns RevokeSignRecordsResponse
     */
    revokeSignRecords(request: RevokeSignRecordsRequest): Promise<RevokeSignRecordsResponse>;
    /**
     * 撤销待离职
     *
     * @param request - RevokeTerminationRequest
     * @param headers - RevokeTerminationHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns RevokeTerminationResponse
     */
    revokeTerminationWithOptions(request: RevokeTerminationRequest, headers: RevokeTerminationHeaders, runtime: $Util.RuntimeOptions): Promise<RevokeTerminationResponse>;
    /**
     * 撤销待离职
     *
     * @param request - RevokeTerminationRequest
     * @returns RevokeTerminationResponse
     */
    revokeTermination(request: RevokeTerminationRequest): Promise<RevokeTerminationResponse>;
    /**
     * 查询花名册中有权限的字段列表
     *
     * @param request - RosterMetaAvailableFieldListRequest
     * @param headers - RosterMetaAvailableFieldListHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns RosterMetaAvailableFieldListResponse
     */
    rosterMetaAvailableFieldListWithOptions(request: RosterMetaAvailableFieldListRequest, headers: RosterMetaAvailableFieldListHeaders, runtime: $Util.RuntimeOptions): Promise<RosterMetaAvailableFieldListResponse>;
    /**
     * 查询花名册中有权限的字段列表
     *
     * @param request - RosterMetaAvailableFieldListRequest
     * @returns RosterMetaAvailableFieldListResponse
     */
    rosterMetaAvailableFieldList(request: RosterMetaAvailableFieldListRequest): Promise<RosterMetaAvailableFieldListResponse>;
    /**
     * 智能人事花名册字段选项修改
     *
     * @param request - RosterMetaFieldOptionsUpdateRequest
     * @param headers - RosterMetaFieldOptionsUpdateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns RosterMetaFieldOptionsUpdateResponse
     */
    rosterMetaFieldOptionsUpdateWithOptions(request: RosterMetaFieldOptionsUpdateRequest, headers: RosterMetaFieldOptionsUpdateHeaders, runtime: $Util.RuntimeOptions): Promise<RosterMetaFieldOptionsUpdateResponse>;
    /**
     * 智能人事花名册字段选项修改
     *
     * @param request - RosterMetaFieldOptionsUpdateRequest
     * @returns RosterMetaFieldOptionsUpdateResponse
     */
    rosterMetaFieldOptionsUpdate(request: RosterMetaFieldOptionsUpdateRequest): Promise<RosterMetaFieldOptionsUpdateResponse>;
    /**
     * ISV发送卡片消息
     *
     * @param request - SendIsvCardMessageRequest
     * @param headers - SendIsvCardMessageHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SendIsvCardMessageResponse
     */
    sendIsvCardMessageWithOptions(request: SendIsvCardMessageRequest, headers: SendIsvCardMessageHeaders, runtime: $Util.RuntimeOptions): Promise<SendIsvCardMessageResponse>;
    /**
     * ISV发送卡片消息
     *
     * @param request - SendIsvCardMessageRequest
     * @returns SendIsvCardMessageResponse
     */
    sendIsvCardMessage(request: SendIsvCardMessageRequest): Promise<SendIsvCardMessageResponse>;
    /**
     * 初始化解决方案任务
     *
     * @param request - SolutionTaskInitRequest
     * @param headers - SolutionTaskInitHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SolutionTaskInitResponse
     */
    solutionTaskInitWithOptions(request: SolutionTaskInitRequest, headers: SolutionTaskInitHeaders, runtime: $Util.RuntimeOptions): Promise<SolutionTaskInitResponse>;
    /**
     * 初始化解决方案任务
     *
     * @param request - SolutionTaskInitRequest
     * @returns SolutionTaskInitResponse
     */
    solutionTaskInit(request: SolutionTaskInitRequest): Promise<SolutionTaskInitResponse>;
    /**
     * 保存解决方案任务
     *
     * @param request - SolutionTaskSaveRequest
     * @param headers - SolutionTaskSaveHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SolutionTaskSaveResponse
     */
    solutionTaskSaveWithOptions(request: SolutionTaskSaveRequest, headers: SolutionTaskSaveHeaders, runtime: $Util.RuntimeOptions): Promise<SolutionTaskSaveResponse>;
    /**
     * 保存解决方案任务
     *
     * @param request - SolutionTaskSaveRequest
     * @returns SolutionTaskSaveResponse
     */
    solutionTaskSave(request: SolutionTaskSaveRequest): Promise<SolutionTaskSaveResponse>;
    /**
     * 同步解决方案状态
     *
     * @param request - SyncSolutionStatusRequest
     * @param headers - SyncSolutionStatusHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SyncSolutionStatusResponse
     */
    syncSolutionStatusWithOptions(request: SyncSolutionStatusRequest, headers: SyncSolutionStatusHeaders, runtime: $Util.RuntimeOptions): Promise<SyncSolutionStatusResponse>;
    /**
     * 同步解决方案状态
     *
     * @param request - SyncSolutionStatusRequest
     * @returns SyncSolutionStatusResponse
     */
    syncSolutionStatus(request: SyncSolutionStatusRequest): Promise<SyncSolutionStatusResponse>;
    /**
     * 同步解决方案任务模版
     *
     * @param request - SyncTaskTemplateRequest
     * @param headers - SyncTaskTemplateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SyncTaskTemplateResponse
     */
    syncTaskTemplateWithOptions(request: SyncTaskTemplateRequest, headers: SyncTaskTemplateHeaders, runtime: $Util.RuntimeOptions): Promise<SyncTaskTemplateResponse>;
    /**
     * 同步解决方案任务模版
     *
     * @param request - SyncTaskTemplateRequest
     * @returns SyncTaskTemplateResponse
     */
    syncTaskTemplate(request: SyncTaskTemplateRequest): Promise<SyncTaskTemplateResponse>;
    /**
     * 更新待离职信息
     *
     * @param request - UpdateEmpDismissionInfoRequest
     * @param headers - UpdateEmpDismissionInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateEmpDismissionInfoResponse
     */
    updateEmpDismissionInfoWithOptions(request: UpdateEmpDismissionInfoRequest, headers: UpdateEmpDismissionInfoHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateEmpDismissionInfoResponse>;
    /**
     * 更新待离职信息
     *
     * @param request - UpdateEmpDismissionInfoRequest
     * @returns UpdateEmpDismissionInfoResponse
     */
    updateEmpDismissionInfo(request: UpdateEmpDismissionInfoRequest): Promise<UpdateEmpDismissionInfoResponse>;
    /**
     * 更新法人公司名称
     *
     * @param request - UpdateHrmLegalEntityNameRequest
     * @param headers - UpdateHrmLegalEntityNameHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateHrmLegalEntityNameResponse
     */
    updateHrmLegalEntityNameWithOptions(request: UpdateHrmLegalEntityNameRequest, headers: UpdateHrmLegalEntityNameHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateHrmLegalEntityNameResponse>;
    /**
     * 更新法人公司名称
     *
     * @param request - UpdateHrmLegalEntityNameRequest
     * @returns UpdateHrmLegalEntityNameResponse
     */
    updateHrmLegalEntityName(request: UpdateHrmLegalEntityNameRequest): Promise<UpdateHrmLegalEntityNameResponse>;
    /**
     * 更新法人公司
     *
     * @param request - UpdateHrmLegalEntityWithoutNameRequest
     * @param headers - UpdateHrmLegalEntityWithoutNameHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateHrmLegalEntityWithoutNameResponse
     */
    updateHrmLegalEntityWithoutNameWithOptions(request: UpdateHrmLegalEntityWithoutNameRequest, headers: UpdateHrmLegalEntityWithoutNameHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateHrmLegalEntityWithoutNameResponse>;
    /**
     * 更新法人公司
     *
     * @param request - UpdateHrmLegalEntityWithoutNameRequest
     * @returns UpdateHrmLegalEntityWithoutNameResponse
     */
    updateHrmLegalEntityWithoutName(request: UpdateHrmLegalEntityWithoutNameRequest): Promise<UpdateHrmLegalEntityWithoutNameResponse>;
    /**
     * 智能人事更新版本回退按钮状态
     *
     * @param request - UpdateHrmVersionRollBackStatusRequest
     * @param headers - UpdateHrmVersionRollBackStatusHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateHrmVersionRollBackStatusResponse
     */
    updateHrmVersionRollBackStatusWithOptions(request: UpdateHrmVersionRollBackStatusRequest, headers: UpdateHrmVersionRollBackStatusHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateHrmVersionRollBackStatusResponse>;
    /**
     * 智能人事更新版本回退按钮状态
     *
     * @param request - UpdateHrmVersionRollBackStatusRequest
     * @returns UpdateHrmVersionRollBackStatusResponse
     */
    updateHrmVersionRollBackStatus(request: UpdateHrmVersionRollBackStatusRequest): Promise<UpdateHrmVersionRollBackStatusResponse>;
    /**
     * ISV更新卡片消息
     *
     * @param request - UpdateIsvCardMessageRequest
     * @param headers - UpdateIsvCardMessageHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateIsvCardMessageResponse
     */
    updateIsvCardMessageWithOptions(request: UpdateIsvCardMessageRequest, headers: UpdateIsvCardMessageHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateIsvCardMessageResponse>;
    /**
     * ISV更新卡片消息
     *
     * @param request - UpdateIsvCardMessageRequest
     * @returns UpdateIsvCardMessageResponse
     */
    updateIsvCardMessage(request: UpdateIsvCardMessageRequest): Promise<UpdateIsvCardMessageResponse>;
    /**
     * 上传附件材料
     *
     * @param request - UploadAttachmentRequest
     * @param headers - UploadAttachmentHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UploadAttachmentResponse
     */
    uploadAttachmentWithOptions(request: UploadAttachmentRequest, headers: UploadAttachmentHeaders, runtime: $Util.RuntimeOptions): Promise<UploadAttachmentResponse>;
    /**
     * 上传附件材料
     *
     * @param request - UploadAttachmentRequest
     * @returns UploadAttachmentResponse
     */
    uploadAttachment(request: UploadAttachmentRequest): Promise<UploadAttachmentResponse>;
}
