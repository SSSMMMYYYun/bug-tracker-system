/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class CloseHPackageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CloseHPackageRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5000000000000000
     */
    miniAppId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CloseHPackageResponseBody extends $tea.Model {
    result?: any;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CloseHPackageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CloseHPackageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUploadTokenHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUploadTokenRequest extends $tea.Model {
    /**
     * @example
     * 5000000002761167
     */
    miniAppId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUploadTokenResponseBody extends $tea.Model {
    /**
     * @example
     * STS.NUPjgnMhCVWvo1HSxfftf
     */
    accessKeyId?: string;
    /**
     * @example
     * ASviryNDy9tTuS5KiYMA6fCYf81vHg4KdoX7CVHz4CSx
     */
    accessKeySecret?: string;
    /**
     * @example
     * dingtalk-bucket
     */
    bucket?: string;
    /**
     * @example
     * oss-cn-shanghai.aliyuncs.com
     */
    endpoint?: string;
    /**
     * @example
     * 2022-09-21T09:32:16Z
     */
    expiration?: string;
    /**
     * @example
     * 5000000002761167/1663751835956
     */
    name?: string;
    /**
     * @example
     * oss-cn-shanghai
     */
    region?: string;
    /**
     * @example
     * CAIS0QJ1q6Ft5B2yfSjIr5blId3aoLdi4ZWdbRf5t3gzavt...
     */
    stsToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUploadTokenResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetUploadTokenResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HPackageListGetHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HPackageListGetRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5000000000000000
     */
    miniAppId?: string;
    /**
     * @example
     * 0
     */
    pageNumber?: number;
    /**
     * @example
     * 20
     */
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HPackageListGetResponseBody extends $tea.Model {
    list?: HPackageListGetResponseBodyList[];
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HPackageListGetResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HPackageListGetResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HPublishPackageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HPublishPackageRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5000000002761167
     */
    miniAppId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0.0.1
     */
    version?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HPublishPackageResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HPublishPackageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HPublishPackageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HUploadPackageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HUploadPackageRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5000000002793153
     */
    miniAppId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxxx
     */
    ossObjectKey?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HUploadPackageResponseBody extends $tea.Model {
    taskId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HUploadPackageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HUploadPackageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HUploadPackageStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HUploadPackageStatusRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5000000002761167
     */
    miniAppId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xxxx
     */
    taskId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HUploadPackageStatusResponseBody extends $tea.Model {
    /**
     * @example
     * 1663743241146
     */
    buildTime?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    finished?: boolean;
    /**
     * @example
     * 100
     */
    packageSize?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2
     */
    status?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1663748308644pjpF
     */
    taskId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0.0.1
     */
    version?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HUploadPackageStatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HUploadPackageStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OpenMicroAppPackageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OpenMicroAppPackageRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    agentId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OpenMicroAppPackageResponseBody extends $tea.Model {
    /**
     * @example
     * 5000000000000000
     */
    miniAppId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OpenMicroAppPackageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: OpenMicroAppPackageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayDeployHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayDeployRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5000000000000000
     */
    miniAppId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0.0.1
     */
    version?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayDeployResponseBody extends $tea.Model {
    result?: any;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayDeployResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ReleaseGrayDeployResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayExitHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayExitRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5000000000000000
     */
    miniAppId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0.0.1
     */
    version?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayExitResponseBody extends $tea.Model {
    reuslt?: any;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayExitResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ReleaseGrayExitResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayOrgGetHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayOrgGetRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5000000000000000
     */
    miniAppId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0.0.1
     */
    version?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayOrgGetResponseBody extends $tea.Model {
    value?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayOrgGetResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ReleaseGrayOrgGetResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayOrgSetHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayOrgSetRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5000000000000000
     */
    miniAppId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    value?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0.0.1
     */
    version?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayOrgSetResponseBody extends $tea.Model {
    result?: any;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayOrgSetResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ReleaseGrayOrgSetResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayPercentGetHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayPercentGetRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5000000000000000
     */
    miniAppId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0.0.1
     */
    version?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayPercentGetResponseBody extends $tea.Model {
    value?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayPercentGetResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ReleaseGrayPercentGetResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayPercentSetHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayPercentSetRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5000000000000000
     */
    miniAppId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    value?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0.0.1
     */
    version?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayPercentSetResponseBody extends $tea.Model {
    result?: any;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayPercentSetResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ReleaseGrayPercentSetResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayUserIdGetHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayUserIdGetRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5000000000000000
     */
    miniAppId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0.0.1
     */
    version?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayUserIdGetResponseBody extends $tea.Model {
    value?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReleaseGrayUserIdGetResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ReleaseGrayUserIdGetResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HPackageListGetResponseBodyList extends $tea.Model {
    /**
     * @example
     * 1
     */
    avaliable?: number;
    creator?: string;
    finished?: boolean;
    /**
     * @example
     * 1669261911344
     */
    operationTime?: number;
    /**
     * @example
     * 100
     */
    packageSize?: number;
    /**
     * @example
     * 1
     */
    status?: string;
    /**
     * @example
     * 00000000Azksf
     */
    taskId?: string;
    /**
     * @example
     * 0.0.1
     */
    version?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 关闭企业自建应用H5离线包
     *
     * @param request - CloseHPackageRequest
     * @param headers - CloseHPackageHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CloseHPackageResponse
     */
    closeHPackageWithOptions(request: CloseHPackageRequest, headers: CloseHPackageHeaders, runtime: $Util.RuntimeOptions): Promise<CloseHPackageResponse>;
    /**
     * 关闭企业自建应用H5离线包
     *
     * @param request - CloseHPackageRequest
     * @returns CloseHPackageResponse
     */
    closeHPackage(request: CloseHPackageRequest): Promise<CloseHPackageResponse>;
    /**
     * 获取离线包上传凭证
     *
     * @param request - GetUploadTokenRequest
     * @param headers - GetUploadTokenHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetUploadTokenResponse
     */
    getUploadTokenWithOptions(request: GetUploadTokenRequest, headers: GetUploadTokenHeaders, runtime: $Util.RuntimeOptions): Promise<GetUploadTokenResponse>;
    /**
     * 获取离线包上传凭证
     *
     * @param request - GetUploadTokenRequest
     * @returns GetUploadTokenResponse
     */
    getUploadToken(request: GetUploadTokenRequest): Promise<GetUploadTokenResponse>;
    /**
     * 获取H5离线包版本列表
     *
     * @param request - HPackageListGetRequest
     * @param headers - HPackageListGetHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HPackageListGetResponse
     */
    hPackageListGetWithOptions(request: HPackageListGetRequest, headers: HPackageListGetHeaders, runtime: $Util.RuntimeOptions): Promise<HPackageListGetResponse>;
    /**
     * 获取H5离线包版本列表
     *
     * @param request - HPackageListGetRequest
     * @returns HPackageListGetResponse
     */
    hPackageListGet(request: HPackageListGetRequest): Promise<HPackageListGetResponse>;
    /**
     * 发布离线包
     *
     * @param request - HPublishPackageRequest
     * @param headers - HPublishPackageHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HPublishPackageResponse
     */
    hPublishPackageWithOptions(request: HPublishPackageRequest, headers: HPublishPackageHeaders, runtime: $Util.RuntimeOptions): Promise<HPublishPackageResponse>;
    /**
     * 发布离线包
     *
     * @param request - HPublishPackageRequest
     * @returns HPublishPackageResponse
     */
    hPublishPackage(request: HPublishPackageRequest): Promise<HPublishPackageResponse>;
    /**
     * 上传H5离线包
     *
     * @param request - HUploadPackageRequest
     * @param headers - HUploadPackageHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HUploadPackageResponse
     */
    hUploadPackageWithOptions(request: HUploadPackageRequest, headers: HUploadPackageHeaders, runtime: $Util.RuntimeOptions): Promise<HUploadPackageResponse>;
    /**
     * 上传H5离线包
     *
     * @param request - HUploadPackageRequest
     * @returns HUploadPackageResponse
     */
    hUploadPackage(request: HUploadPackageRequest): Promise<HUploadPackageResponse>;
    /**
     * 上传H5离线包进度
     *
     * @param request - HUploadPackageStatusRequest
     * @param headers - HUploadPackageStatusHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HUploadPackageStatusResponse
     */
    hUploadPackageStatusWithOptions(request: HUploadPackageStatusRequest, headers: HUploadPackageStatusHeaders, runtime: $Util.RuntimeOptions): Promise<HUploadPackageStatusResponse>;
    /**
     * 上传H5离线包进度
     *
     * @param request - HUploadPackageStatusRequest
     * @returns HUploadPackageStatusResponse
     */
    hUploadPackageStatus(request: HUploadPackageStatusRequest): Promise<HUploadPackageStatusResponse>;
    /**
     * 开启企业自建应用H5离线包
     *
     * @param request - OpenMicroAppPackageRequest
     * @param headers - OpenMicroAppPackageHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns OpenMicroAppPackageResponse
     */
    openMicroAppPackageWithOptions(request: OpenMicroAppPackageRequest, headers: OpenMicroAppPackageHeaders, runtime: $Util.RuntimeOptions): Promise<OpenMicroAppPackageResponse>;
    /**
     * 开启企业自建应用H5离线包
     *
     * @param request - OpenMicroAppPackageRequest
     * @returns OpenMicroAppPackageResponse
     */
    openMicroAppPackage(request: OpenMicroAppPackageRequest): Promise<OpenMicroAppPackageResponse>;
    /**
     * 发布离线包到灰度
     *
     * @param request - ReleaseGrayDeployRequest
     * @param headers - ReleaseGrayDeployHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ReleaseGrayDeployResponse
     */
    releaseGrayDeployWithOptions(request: ReleaseGrayDeployRequest, headers: ReleaseGrayDeployHeaders, runtime: $Util.RuntimeOptions): Promise<ReleaseGrayDeployResponse>;
    /**
     * 发布离线包到灰度
     *
     * @param request - ReleaseGrayDeployRequest
     * @returns ReleaseGrayDeployResponse
     */
    releaseGrayDeploy(request: ReleaseGrayDeployRequest): Promise<ReleaseGrayDeployResponse>;
    /**
     * 退出灰度
     *
     * @param request - ReleaseGrayExitRequest
     * @param headers - ReleaseGrayExitHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ReleaseGrayExitResponse
     */
    releaseGrayExitWithOptions(request: ReleaseGrayExitRequest, headers: ReleaseGrayExitHeaders, runtime: $Util.RuntimeOptions): Promise<ReleaseGrayExitResponse>;
    /**
     * 退出灰度
     *
     * @param request - ReleaseGrayExitRequest
     * @returns ReleaseGrayExitResponse
     */
    releaseGrayExit(request: ReleaseGrayExitRequest): Promise<ReleaseGrayExitResponse>;
    /**
     * 获取企业灰度白名单
     *
     * @param request - ReleaseGrayOrgGetRequest
     * @param headers - ReleaseGrayOrgGetHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ReleaseGrayOrgGetResponse
     */
    releaseGrayOrgGetWithOptions(request: ReleaseGrayOrgGetRequest, headers: ReleaseGrayOrgGetHeaders, runtime: $Util.RuntimeOptions): Promise<ReleaseGrayOrgGetResponse>;
    /**
     * 获取企业灰度白名单
     *
     * @param request - ReleaseGrayOrgGetRequest
     * @returns ReleaseGrayOrgGetResponse
     */
    releaseGrayOrgGet(request: ReleaseGrayOrgGetRequest): Promise<ReleaseGrayOrgGetResponse>;
    /**
     * 设置企业灰度白名单
     *
     * @param request - ReleaseGrayOrgSetRequest
     * @param headers - ReleaseGrayOrgSetHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ReleaseGrayOrgSetResponse
     */
    releaseGrayOrgSetWithOptions(request: ReleaseGrayOrgSetRequest, headers: ReleaseGrayOrgSetHeaders, runtime: $Util.RuntimeOptions): Promise<ReleaseGrayOrgSetResponse>;
    /**
     * 设置企业灰度白名单
     *
     * @param request - ReleaseGrayOrgSetRequest
     * @returns ReleaseGrayOrgSetResponse
     */
    releaseGrayOrgSet(request: ReleaseGrayOrgSetRequest): Promise<ReleaseGrayOrgSetResponse>;
    /**
     * 获取灰度离线包百分比值
     *
     * @param request - ReleaseGrayPercentGetRequest
     * @param headers - ReleaseGrayPercentGetHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ReleaseGrayPercentGetResponse
     */
    releaseGrayPercentGetWithOptions(request: ReleaseGrayPercentGetRequest, headers: ReleaseGrayPercentGetHeaders, runtime: $Util.RuntimeOptions): Promise<ReleaseGrayPercentGetResponse>;
    /**
     * 获取灰度离线包百分比值
     *
     * @param request - ReleaseGrayPercentGetRequest
     * @returns ReleaseGrayPercentGetResponse
     */
    releaseGrayPercentGet(request: ReleaseGrayPercentGetRequest): Promise<ReleaseGrayPercentGetResponse>;
    /**
     * 设置灰度离线包百分比值
     *
     * @param request - ReleaseGrayPercentSetRequest
     * @param headers - ReleaseGrayPercentSetHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ReleaseGrayPercentSetResponse
     */
    releaseGrayPercentSetWithOptions(request: ReleaseGrayPercentSetRequest, headers: ReleaseGrayPercentSetHeaders, runtime: $Util.RuntimeOptions): Promise<ReleaseGrayPercentSetResponse>;
    /**
     * 设置灰度离线包百分比值
     *
     * @param request - ReleaseGrayPercentSetRequest
     * @returns ReleaseGrayPercentSetResponse
     */
    releaseGrayPercentSet(request: ReleaseGrayPercentSetRequest): Promise<ReleaseGrayPercentSetResponse>;
    /**
     * 获取用户灰度名单
     *
     * @param request - ReleaseGrayUserIdGetRequest
     * @param headers - ReleaseGrayUserIdGetHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ReleaseGrayUserIdGetResponse
     */
    releaseGrayUserIdGetWithOptions(request: ReleaseGrayUserIdGetRequest, headers: ReleaseGrayUserIdGetHeaders, runtime: $Util.RuntimeOptions): Promise<ReleaseGrayUserIdGetResponse>;
    /**
     * 获取用户灰度名单
     *
     * @param request - ReleaseGrayUserIdGetRequest
     * @returns ReleaseGrayUserIdGetResponse
     */
    releaseGrayUserIdGet(request: ReleaseGrayUserIdGetRequest): Promise<ReleaseGrayUserIdGetResponse>;
}
