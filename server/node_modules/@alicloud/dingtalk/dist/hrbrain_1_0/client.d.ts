/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class HrbrainDeleteAwardRecordsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteAwardRecordsRequest extends $tea.Model {
    params?: HrbrainDeleteAwardRecordsRequestParams[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteAwardRecordsResponseBody extends $tea.Model {
    requestId?: string;
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteAwardRecordsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainDeleteAwardRecordsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteDimissionHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteDimissionRequest extends $tea.Model {
    params?: HrbrainDeleteDimissionRequestParams[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteDimissionResponseBody extends $tea.Model {
    /**
     * @example
     * 480021443f9f37fcbf464c4a6b85d289
     */
    requestId?: string;
    /**
     * @example
     * true
     */
    result?: boolean;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteDimissionResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainDeleteDimissionResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteEduExpHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteEduExpRequest extends $tea.Model {
    params?: HrbrainDeleteEduExpRequestParams[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteEduExpResponseBody extends $tea.Model {
    /**
     * @example
     * 480021443f9f37fcbf464c4a6b85d289
     */
    requestId?: string;
    /**
     * @example
     * true
     */
    result?: boolean;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteEduExpResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainDeleteEduExpResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteEmpInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteEmpInfoRequest extends $tea.Model {
    params?: HrbrainDeleteEmpInfoRequestParams[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteEmpInfoResponseBody extends $tea.Model {
    /**
     * @example
     * 480021443f9f37fcbf464c4a6b85d289
     */
    requestId?: string;
    /**
     * @example
     * true
     */
    result?: boolean;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteEmpInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainDeleteEmpInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteLabelIndustryHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteLabelIndustryRequest extends $tea.Model {
    params?: HrbrainDeleteLabelIndustryRequestParams[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteLabelIndustryResponseBody extends $tea.Model {
    /**
     * @example
     * 480021443f9f37fcbf464c4a6b85d299
     */
    requestId?: string;
    /**
     * @example
     * true
     */
    result?: boolean;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteLabelIndustryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainDeleteLabelIndustryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteLabelInventoryHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteLabelInventoryRequest extends $tea.Model {
    params?: HrbrainDeleteLabelInventoryRequestParams[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteLabelInventoryResponseBody extends $tea.Model {
    /**
     * @example
     * 480021443f9f37fcbf464c4a6b85d299
     */
    requestId?: string;
    /**
     * @example
     * true
     */
    result?: boolean;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteLabelInventoryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainDeleteLabelInventoryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteLabelProfSkillHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteLabelProfSkillRequest extends $tea.Model {
    params?: HrbrainDeleteLabelProfSkillRequestParams[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteLabelProfSkillResponseBody extends $tea.Model {
    /**
     * @example
     * 480021443f9f37fcbf464c4a6b85d289
     */
    requestId?: string;
    /**
     * @example
     * true
     */
    result?: boolean;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteLabelProfSkillResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainDeleteLabelProfSkillResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeletePerfEvalHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeletePerfEvalRequest extends $tea.Model {
    params?: HrbrainDeletePerfEvalRequestParams[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeletePerfEvalResponseBody extends $tea.Model {
    /**
     * @example
     * 480021443f9f37fcbf464c4a6b85d289
     */
    requestId?: string;
    /**
     * @example
     * true
     */
    result?: boolean;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeletePerfEvalResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainDeletePerfEvalResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeletePromRecordsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeletePromRecordsRequest extends $tea.Model {
    params?: HrbrainDeletePromRecordsRequestParams[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeletePromRecordsResponseBody extends $tea.Model {
    /**
     * @example
     * 480021443f9f37fcbf464c4a6b85d299
     */
    requestId?: string;
    /**
     * @example
     * true
     */
    result?: boolean;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeletePromRecordsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainDeletePromRecordsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeletePunDetailHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeletePunDetailRequest extends $tea.Model {
    params?: HrbrainDeletePunDetailRequestParams[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeletePunDetailResponseBody extends $tea.Model {
    /**
     * @example
     * 480021443f9f37fcbf464c4a6b85d289
     */
    requestId?: string;
    /**
     * @example
     * true
     */
    result?: boolean;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeletePunDetailResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainDeletePunDetailResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteRegistHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteRegistRequest extends $tea.Model {
    params?: HrbrainDeleteRegistRequestParams[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteRegistResponseBody extends $tea.Model {
    /**
     * @example
     * 480021443f9f37fcbf464c4a6b85d289
     */
    requestId?: string;
    /**
     * @example
     * true
     */
    result?: boolean;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteRegistResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainDeleteRegistResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteTransferEvalHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteTransferEvalRequest extends $tea.Model {
    params?: HrbrainDeleteTransferEvalRequestParams[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteTransferEvalResponseBody extends $tea.Model {
    /**
     * @example
     * 480021443f9f37fcbf464c4a6b85d289
     */
    requestId?: string;
    /**
     * @example
     * true
     */
    result?: boolean;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteTransferEvalResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainDeleteTransferEvalResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteWorkExpHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteWorkExpRequest extends $tea.Model {
    params?: HrbrainDeleteWorkExpRequestParams[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteWorkExpResponseBody extends $tea.Model {
    /**
     * @example
     * 480021443f9f37fcbf464c4a6b85d289
     */
    requestId?: string;
    /**
     * @example
     * true
     */
    result?: boolean;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteWorkExpResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainDeleteWorkExpResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeletetLabelBaseHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeletetLabelBaseRequest extends $tea.Model {
    params?: HrbrainDeletetLabelBaseRequestParams[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeletetLabelBaseResponseBody extends $tea.Model {
    /**
     * @example
     * 480021443f9f37fcbf464c4a6b85d289
     */
    requestId?: string;
    /**
     * @example
     * true
     */
    result?: boolean;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeletetLabelBaseResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainDeletetLabelBaseResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportAwardDetailHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportAwardDetailRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    body?: HrbrainImportAwardDetailRequestBody[];
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportAwardDetailResponseBody extends $tea.Model {
    requestId?: string;
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportAwardDetailResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainImportAwardDetailResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportDeptInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportDeptInfoRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    body?: HrbrainImportDeptInfoRequestBody[];
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportDeptInfoResponseBody extends $tea.Model {
    requestId?: string;
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportDeptInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainImportDeptInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportDimissionHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportDimissionRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    body?: HrbrainImportDimissionRequestBody[];
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportDimissionResponseBody extends $tea.Model {
    requestId?: string;
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportDimissionResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainImportDimissionResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportEduExpHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportEduExpRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    body?: HrbrainImportEduExpRequestBody[];
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportEduExpResponseBody extends $tea.Model {
    requestId?: string;
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportEduExpResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainImportEduExpResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportEmpInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportEmpInfoRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    body?: HrbrainImportEmpInfoRequestBody[];
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportEmpInfoResponseBody extends $tea.Model {
    requestId?: string;
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportEmpInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainImportEmpInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelBaseHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelBaseRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    body?: HrbrainImportLabelBaseRequestBody[];
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelBaseResponseBody extends $tea.Model {
    requestId?: string;
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelBaseResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainImportLabelBaseResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelCustomHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelCustomRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    body?: HrbrainImportLabelCustomRequestBody[];
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelCustomResponseBody extends $tea.Model {
    requestId?: string;
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelCustomResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainImportLabelCustomResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelIndustryHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelIndustryRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    body?: HrbrainImportLabelIndustryRequestBody[];
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelIndustryResponseBody extends $tea.Model {
    requestId?: string;
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelIndustryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainImportLabelIndustryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelInventoryHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelInventoryRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    body?: HrbrainImportLabelInventoryRequestBody[];
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelInventoryResponseBody extends $tea.Model {
    requestId?: string;
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelInventoryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainImportLabelInventoryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelProfSkillHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelProfSkillRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    body?: HrbrainImportLabelProfSkillRequestBody[];
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelProfSkillResponseBody extends $tea.Model {
    requestId?: string;
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelProfSkillResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainImportLabelProfSkillResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportPerfEvalHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportPerfEvalRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    body?: HrbrainImportPerfEvalRequestBody[];
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportPerfEvalResponseBody extends $tea.Model {
    requestId?: string;
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportPerfEvalResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainImportPerfEvalResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportPromEvalHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportPromEvalRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    body?: HrbrainImportPromEvalRequestBody[];
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportPromEvalResponseBody extends $tea.Model {
    requestId?: string;
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportPromEvalResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainImportPromEvalResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportPunDetailHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportPunDetailRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    body?: HrbrainImportPunDetailRequestBody[];
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportPunDetailResponseBody extends $tea.Model {
    requestId?: string;
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportPunDetailResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainImportPunDetailResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportRegistHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportRegistRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    body?: HrbrainImportRegistRequestBody[];
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportRegistResponseBody extends $tea.Model {
    requestId?: string;
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportRegistResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainImportRegistResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportTransferEvalHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportTransferEvalRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    body?: HrbrainImportTransferEvalRequestBody[];
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportTransferEvalResponseBody extends $tea.Model {
    requestId?: string;
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportTransferEvalResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainImportTransferEvalResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportWorkExpHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportWorkExpRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    body?: HrbrainImportWorkExpRequestBody[];
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportWorkExpResponseBody extends $tea.Model {
    requestId?: string;
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportWorkExpResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: HrbrainImportWorkExpResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StaffLabelRecordsQueryHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StaffLabelRecordsQueryRequest extends $tea.Model {
    body?: StaffLabelRecordsQueryRequestBody[];
    /**
     * @example
     * 0140180438261064274667
     */
    dingCorpId?: string;
    /**
     * @example
     * 10
     */
    maxResults?: number;
    nextToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StaffLabelRecordsQueryResponseBody extends $tea.Model {
    content?: StaffLabelRecordsQueryResponseBodyContent;
    /**
     * @example
     * 0140180438261064274667
     */
    requestId?: string;
    /**
     * @example
     * true
     */
    result?: boolean;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StaffLabelRecordsQueryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: StaffLabelRecordsQueryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncDataHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncDataRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    content?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    dataId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    etlTime?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    projectId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    schemaId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncDataResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SyncDataResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SyncDataResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteAwardRecordsRequestParams extends $tea.Model {
    awardDate?: string;
    awardName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteDimissionRequestParams extends $tea.Model {
    dimissionDate?: string;
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteEduExpRequestParams extends $tea.Model {
    eduName?: string;
    endDate?: string;
    schoolName?: string;
    startDate?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteEmpInfoRequestParams extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteLabelIndustryRequestParams extends $tea.Model {
    label?: {
        [key: string]: any;
    };
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteLabelInventoryRequestParams extends $tea.Model {
    label?: {
        [key: string]: any;
    };
    period?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteLabelProfSkillRequestParams extends $tea.Model {
    label?: {
        [key: string]: any;
    };
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeletePerfEvalRequestParams extends $tea.Model {
    perfPlanName?: string;
    period?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeletePromRecordsRequestParams extends $tea.Model {
    awardDate?: string;
    awardName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeletePunDetailRequestParams extends $tea.Model {
    effectiveDate?: string;
    punName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteRegistRequestParams extends $tea.Model {
    registDate?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteTransferEvalRequestParams extends $tea.Model {
    transferDate?: string;
    transferType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeleteWorkExpRequestParams extends $tea.Model {
    companyName?: string;
    endDate?: string;
    startDate?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainDeletetLabelBaseRequestParams extends $tea.Model {
    label?: {
        [key: string]: any;
    };
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportAwardDetailRequestBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    awardDate?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    awardName?: string;
    awardOrg?: string;
    awardType?: string;
    comment?: string;
    extendInfo?: {
        [key: string]: any;
    };
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportDeptInfoRequestBody extends $tea.Model {
    createDate?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    deptName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    deptNo?: string;
    effectiveDate?: string;
    extendInfo?: {
        [key: string]: any;
    };
    isEffective?: string;
    superDeptName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    superDeptNo?: string;
    superEmpId?: string;
    superName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportDimissionRequestBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    deptName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    deptNo?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    dimissionDate?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    dimissionReaasonDesc?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    dimissionReason?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    empType?: string;
    extendInfo?: {
        [key: string]: any;
    };
    jobCodeName?: string;
    jobLevel?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    postName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    superName?: string;
    workLocAddr?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportEduExpRequestBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    eduName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    endDate?: string;
    extendInfo?: {
        [key: string]: any;
    };
    major?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    schoolName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    startDate?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportEmpInfoRequestBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    birthday?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    deptName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    deptNo?: string;
    dimissionDate?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    empSource?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    empStatus?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    empType?: string;
    extendInfo?: {
        [key: string]: any;
    };
    /**
     * @remarks
     * This parameter is required.
     */
    gender?: string;
    highestDegree?: string;
    highestEduName?: string;
    isDimission?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    jobCodeName?: string;
    jobLevel?: string;
    lastSchoolName?: string;
    marriage?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    nation?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    nationCtry?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    politicalStatus?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    postName?: string;
    registDate?: string;
    regularDate?: string;
    superEmpId?: string;
    superName?: string;
    workEmail?: string;
    workLocAddr?: string;
    workLocCity?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelBaseRequestBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    extendInfo?: {
        [key: string]: any;
    };
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelCustomRequestBody extends $tea.Model {
    extendInfo?: {
        [key: string]: any;
    };
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    tag?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelIndustryRequestBody extends $tea.Model {
    extendInfo?: {
        [key: string]: any;
    };
    /**
     * @remarks
     * This parameter is required.
     */
    level1?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    level2?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    level3?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelInventoryRequestBody extends $tea.Model {
    extendInfo?: {
        [key: string]: any;
    };
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    period?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportLabelProfSkillRequestBody extends $tea.Model {
    extendInfo?: {
        [key: string]: any;
    };
    /**
     * @remarks
     * This parameter is required.
     */
    level1?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    level2?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    level3?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportPerfEvalRequestBody extends $tea.Model {
    comment?: string;
    extendInfo?: {
        [key: string]: any;
    };
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    perfCate?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    perfPlanName?: string;
    perfScore?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    period?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    periodEndDate?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    periodStartDate?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    score?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportPromEvalRequestBody extends $tea.Model {
    comment?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    effectiveDate?: string;
    extendInfo?: {
        [key: string]: any;
    };
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    newJobLevel?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    period?: string;
    periodEndDate?: string;
    periodStartDate?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    preJobLevel?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportPunDetailRequestBody extends $tea.Model {
    comment?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    effectiveDate?: string;
    extendInfo?: {
        [key: string]: any;
    };
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    punName?: string;
    punOrg?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportRegistRequestBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    deptName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    deptNo?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    empSource?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    empType?: string;
    extendInfo?: {
        [key: string]: any;
    };
    jobCodeName?: string;
    jobLevel?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    postName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    registDate?: string;
    superName?: string;
    workLocAddr?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportTransferEvalRequestBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    currInfo?: {
        [key: string]: any;
    };
    extendInfo?: {
        [key: string]: any;
    };
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    preInfo?: {
        [key: string]: any;
    };
    /**
     * @remarks
     * This parameter is required.
     */
    transferDate?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    transferReason?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    transferType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class HrbrainImportWorkExpRequestBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    companyName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    endDate?: string;
    extendInfo?: {
        [key: string]: any;
    };
    jobDesc?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    postName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    startDate?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    workNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StaffLabelRecordsQueryRequestBodyLabels extends $tea.Model {
    /**
     * @example
     * long_termism_score
     */
    code?: string;
    /**
     * @example
     * values
     */
    typeCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StaffLabelRecordsQueryRequestBody extends $tea.Model {
    labels?: StaffLabelRecordsQueryRequestBodyLabels[];
    /**
     * @example
     * 0140180438261064274667
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StaffLabelRecordsQueryResponseBodyContentDataLabelsOptions extends $tea.Model {
    label?: string;
    tip?: string;
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StaffLabelRecordsQueryResponseBodyContentDataLabels extends $tea.Model {
    /**
     * @example
     * long_termism_score
     */
    code?: string;
    /**
     * @example
     * values.long_termism_score
     */
    guid?: string;
    /**
     * @example
     * 持续业绩
     */
    name?: string;
    options?: StaffLabelRecordsQueryResponseBodyContentDataLabelsOptions[];
    /**
     * @example
     * values
     */
    typeCode?: string;
    /**
     * @example
     * 价值
     */
    typeName?: string;
    /**
     * @example
     * 5（总是）
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StaffLabelRecordsQueryResponseBodyContentData extends $tea.Model {
    labels?: StaffLabelRecordsQueryResponseBodyContentDataLabels[];
    /**
     * @example
     * 0140180438261064274667
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StaffLabelRecordsQueryResponseBodyContent extends $tea.Model {
    data?: StaffLabelRecordsQueryResponseBodyContentData[];
    /**
     * @example
     * 10
     */
    maxResults?: number;
    nextToken?: string;
    /**
     * @example
     * 100
     */
    totalCountt?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 删除奖励记录
     *
     * @param request - HrbrainDeleteAwardRecordsRequest
     * @param headers - HrbrainDeleteAwardRecordsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainDeleteAwardRecordsResponse
     */
    hrbrainDeleteAwardRecordsWithOptions(request: HrbrainDeleteAwardRecordsRequest, headers: HrbrainDeleteAwardRecordsHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainDeleteAwardRecordsResponse>;
    /**
     * 删除奖励记录
     *
     * @param request - HrbrainDeleteAwardRecordsRequest
     * @returns HrbrainDeleteAwardRecordsResponse
     */
    hrbrainDeleteAwardRecords(request: HrbrainDeleteAwardRecordsRequest): Promise<HrbrainDeleteAwardRecordsResponse>;
    /**
     * 删除离职记录
     *
     * @param request - HrbrainDeleteDimissionRequest
     * @param headers - HrbrainDeleteDimissionHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainDeleteDimissionResponse
     */
    hrbrainDeleteDimissionWithOptions(request: HrbrainDeleteDimissionRequest, headers: HrbrainDeleteDimissionHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainDeleteDimissionResponse>;
    /**
     * 删除离职记录
     *
     * @param request - HrbrainDeleteDimissionRequest
     * @returns HrbrainDeleteDimissionResponse
     */
    hrbrainDeleteDimission(request: HrbrainDeleteDimissionRequest): Promise<HrbrainDeleteDimissionResponse>;
    /**
     * 删除教育经历
     *
     * @param request - HrbrainDeleteEduExpRequest
     * @param headers - HrbrainDeleteEduExpHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainDeleteEduExpResponse
     */
    hrbrainDeleteEduExpWithOptions(request: HrbrainDeleteEduExpRequest, headers: HrbrainDeleteEduExpHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainDeleteEduExpResponse>;
    /**
     * 删除教育经历
     *
     * @param request - HrbrainDeleteEduExpRequest
     * @returns HrbrainDeleteEduExpResponse
     */
    hrbrainDeleteEduExp(request: HrbrainDeleteEduExpRequest): Promise<HrbrainDeleteEduExpResponse>;
    /**
     * 删除人员信息
     *
     * @param request - HrbrainDeleteEmpInfoRequest
     * @param headers - HrbrainDeleteEmpInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainDeleteEmpInfoResponse
     */
    hrbrainDeleteEmpInfoWithOptions(request: HrbrainDeleteEmpInfoRequest, headers: HrbrainDeleteEmpInfoHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainDeleteEmpInfoResponse>;
    /**
     * 删除人员信息
     *
     * @param request - HrbrainDeleteEmpInfoRequest
     * @returns HrbrainDeleteEmpInfoResponse
     */
    hrbrainDeleteEmpInfo(request: HrbrainDeleteEmpInfoRequest): Promise<HrbrainDeleteEmpInfoResponse>;
    /**
     * 删除领域经验
     *
     * @param request - HrbrainDeleteLabelIndustryRequest
     * @param headers - HrbrainDeleteLabelIndustryHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainDeleteLabelIndustryResponse
     */
    hrbrainDeleteLabelIndustryWithOptions(request: HrbrainDeleteLabelIndustryRequest, headers: HrbrainDeleteLabelIndustryHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainDeleteLabelIndustryResponse>;
    /**
     * 删除领域经验
     *
     * @param request - HrbrainDeleteLabelIndustryRequest
     * @returns HrbrainDeleteLabelIndustryResponse
     */
    hrbrainDeleteLabelIndustry(request: HrbrainDeleteLabelIndustryRequest): Promise<HrbrainDeleteLabelIndustryResponse>;
    /**
     * 删除盘点数据
     *
     * @param request - HrbrainDeleteLabelInventoryRequest
     * @param headers - HrbrainDeleteLabelInventoryHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainDeleteLabelInventoryResponse
     */
    hrbrainDeleteLabelInventoryWithOptions(request: HrbrainDeleteLabelInventoryRequest, headers: HrbrainDeleteLabelInventoryHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainDeleteLabelInventoryResponse>;
    /**
     * 删除盘点数据
     *
     * @param request - HrbrainDeleteLabelInventoryRequest
     * @returns HrbrainDeleteLabelInventoryResponse
     */
    hrbrainDeleteLabelInventory(request: HrbrainDeleteLabelInventoryRequest): Promise<HrbrainDeleteLabelInventoryResponse>;
    /**
     * 删除专业技能
     *
     * @param request - HrbrainDeleteLabelProfSkillRequest
     * @param headers - HrbrainDeleteLabelProfSkillHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainDeleteLabelProfSkillResponse
     */
    hrbrainDeleteLabelProfSkillWithOptions(request: HrbrainDeleteLabelProfSkillRequest, headers: HrbrainDeleteLabelProfSkillHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainDeleteLabelProfSkillResponse>;
    /**
     * 删除专业技能
     *
     * @param request - HrbrainDeleteLabelProfSkillRequest
     * @returns HrbrainDeleteLabelProfSkillResponse
     */
    hrbrainDeleteLabelProfSkill(request: HrbrainDeleteLabelProfSkillRequest): Promise<HrbrainDeleteLabelProfSkillResponse>;
    /**
     * 删除绩效记录
     *
     * @param request - HrbrainDeletePerfEvalRequest
     * @param headers - HrbrainDeletePerfEvalHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainDeletePerfEvalResponse
     */
    hrbrainDeletePerfEvalWithOptions(request: HrbrainDeletePerfEvalRequest, headers: HrbrainDeletePerfEvalHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainDeletePerfEvalResponse>;
    /**
     * 删除绩效记录
     *
     * @param request - HrbrainDeletePerfEvalRequest
     * @returns HrbrainDeletePerfEvalResponse
     */
    hrbrainDeletePerfEval(request: HrbrainDeletePerfEvalRequest): Promise<HrbrainDeletePerfEvalResponse>;
    /**
     * 数据集成晋升记录删除
     *
     * @param request - HrbrainDeletePromRecordsRequest
     * @param headers - HrbrainDeletePromRecordsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainDeletePromRecordsResponse
     */
    hrbrainDeletePromRecordsWithOptions(request: HrbrainDeletePromRecordsRequest, headers: HrbrainDeletePromRecordsHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainDeletePromRecordsResponse>;
    /**
     * 数据集成晋升记录删除
     *
     * @param request - HrbrainDeletePromRecordsRequest
     * @returns HrbrainDeletePromRecordsResponse
     */
    hrbrainDeletePromRecords(request: HrbrainDeletePromRecordsRequest): Promise<HrbrainDeletePromRecordsResponse>;
    /**
     * 删除处分记录
     *
     * @param request - HrbrainDeletePunDetailRequest
     * @param headers - HrbrainDeletePunDetailHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainDeletePunDetailResponse
     */
    hrbrainDeletePunDetailWithOptions(request: HrbrainDeletePunDetailRequest, headers: HrbrainDeletePunDetailHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainDeletePunDetailResponse>;
    /**
     * 删除处分记录
     *
     * @param request - HrbrainDeletePunDetailRequest
     * @returns HrbrainDeletePunDetailResponse
     */
    hrbrainDeletePunDetail(request: HrbrainDeletePunDetailRequest): Promise<HrbrainDeletePunDetailResponse>;
    /**
     * 删除入职记录
     *
     * @param request - HrbrainDeleteRegistRequest
     * @param headers - HrbrainDeleteRegistHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainDeleteRegistResponse
     */
    hrbrainDeleteRegistWithOptions(request: HrbrainDeleteRegistRequest, headers: HrbrainDeleteRegistHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainDeleteRegistResponse>;
    /**
     * 删除入职记录
     *
     * @param request - HrbrainDeleteRegistRequest
     * @returns HrbrainDeleteRegistResponse
     */
    hrbrainDeleteRegist(request: HrbrainDeleteRegistRequest): Promise<HrbrainDeleteRegistResponse>;
    /**
     * 删除调岗记录
     *
     * @param request - HrbrainDeleteTransferEvalRequest
     * @param headers - HrbrainDeleteTransferEvalHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainDeleteTransferEvalResponse
     */
    hrbrainDeleteTransferEvalWithOptions(request: HrbrainDeleteTransferEvalRequest, headers: HrbrainDeleteTransferEvalHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainDeleteTransferEvalResponse>;
    /**
     * 删除调岗记录
     *
     * @param request - HrbrainDeleteTransferEvalRequest
     * @returns HrbrainDeleteTransferEvalResponse
     */
    hrbrainDeleteTransferEval(request: HrbrainDeleteTransferEvalRequest): Promise<HrbrainDeleteTransferEvalResponse>;
    /**
     * 删除工作经历
     *
     * @param request - HrbrainDeleteWorkExpRequest
     * @param headers - HrbrainDeleteWorkExpHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainDeleteWorkExpResponse
     */
    hrbrainDeleteWorkExpWithOptions(request: HrbrainDeleteWorkExpRequest, headers: HrbrainDeleteWorkExpHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainDeleteWorkExpResponse>;
    /**
     * 删除工作经历
     *
     * @param request - HrbrainDeleteWorkExpRequest
     * @returns HrbrainDeleteWorkExpResponse
     */
    hrbrainDeleteWorkExp(request: HrbrainDeleteWorkExpRequest): Promise<HrbrainDeleteWorkExpResponse>;
    /**
     * 删除标签数据
     *
     * @param request - HrbrainDeletetLabelBaseRequest
     * @param headers - HrbrainDeletetLabelBaseHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainDeletetLabelBaseResponse
     */
    hrbrainDeletetLabelBaseWithOptions(request: HrbrainDeletetLabelBaseRequest, headers: HrbrainDeletetLabelBaseHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainDeletetLabelBaseResponse>;
    /**
     * 删除标签数据
     *
     * @param request - HrbrainDeletetLabelBaseRequest
     * @returns HrbrainDeletetLabelBaseResponse
     */
    hrbrainDeletetLabelBase(request: HrbrainDeletetLabelBaseRequest): Promise<HrbrainDeletetLabelBaseResponse>;
    /**
     * 集成奖励记录
     *
     * @param request - HrbrainImportAwardDetailRequest
     * @param headers - HrbrainImportAwardDetailHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainImportAwardDetailResponse
     */
    hrbrainImportAwardDetailWithOptions(request: HrbrainImportAwardDetailRequest, headers: HrbrainImportAwardDetailHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainImportAwardDetailResponse>;
    /**
     * 集成奖励记录
     *
     * @param request - HrbrainImportAwardDetailRequest
     * @returns HrbrainImportAwardDetailResponse
     */
    hrbrainImportAwardDetail(request: HrbrainImportAwardDetailRequest): Promise<HrbrainImportAwardDetailResponse>;
    /**
     * 集成组织架构
     *
     * @param request - HrbrainImportDeptInfoRequest
     * @param headers - HrbrainImportDeptInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainImportDeptInfoResponse
     */
    hrbrainImportDeptInfoWithOptions(request: HrbrainImportDeptInfoRequest, headers: HrbrainImportDeptInfoHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainImportDeptInfoResponse>;
    /**
     * 集成组织架构
     *
     * @param request - HrbrainImportDeptInfoRequest
     * @returns HrbrainImportDeptInfoResponse
     */
    hrbrainImportDeptInfo(request: HrbrainImportDeptInfoRequest): Promise<HrbrainImportDeptInfoResponse>;
    /**
     * 集成离职信息
     *
     * @param request - HrbrainImportDimissionRequest
     * @param headers - HrbrainImportDimissionHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainImportDimissionResponse
     */
    hrbrainImportDimissionWithOptions(request: HrbrainImportDimissionRequest, headers: HrbrainImportDimissionHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainImportDimissionResponse>;
    /**
     * 集成离职信息
     *
     * @param request - HrbrainImportDimissionRequest
     * @returns HrbrainImportDimissionResponse
     */
    hrbrainImportDimission(request: HrbrainImportDimissionRequest): Promise<HrbrainImportDimissionResponse>;
    /**
     * 集成教育经历
     *
     * @param request - HrbrainImportEduExpRequest
     * @param headers - HrbrainImportEduExpHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainImportEduExpResponse
     */
    hrbrainImportEduExpWithOptions(request: HrbrainImportEduExpRequest, headers: HrbrainImportEduExpHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainImportEduExpResponse>;
    /**
     * 集成教育经历
     *
     * @param request - HrbrainImportEduExpRequest
     * @returns HrbrainImportEduExpResponse
     */
    hrbrainImportEduExp(request: HrbrainImportEduExpRequest): Promise<HrbrainImportEduExpResponse>;
    /**
     * 集成人员信息
     *
     * @param request - HrbrainImportEmpInfoRequest
     * @param headers - HrbrainImportEmpInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainImportEmpInfoResponse
     */
    hrbrainImportEmpInfoWithOptions(request: HrbrainImportEmpInfoRequest, headers: HrbrainImportEmpInfoHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainImportEmpInfoResponse>;
    /**
     * 集成人员信息
     *
     * @param request - HrbrainImportEmpInfoRequest
     * @returns HrbrainImportEmpInfoResponse
     */
    hrbrainImportEmpInfo(request: HrbrainImportEmpInfoRequest): Promise<HrbrainImportEmpInfoResponse>;
    /**
     * 集成基础标签
     *
     * @param request - HrbrainImportLabelBaseRequest
     * @param headers - HrbrainImportLabelBaseHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainImportLabelBaseResponse
     */
    hrbrainImportLabelBaseWithOptions(request: HrbrainImportLabelBaseRequest, headers: HrbrainImportLabelBaseHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainImportLabelBaseResponse>;
    /**
     * 集成基础标签
     *
     * @param request - HrbrainImportLabelBaseRequest
     * @returns HrbrainImportLabelBaseResponse
     */
    hrbrainImportLabelBase(request: HrbrainImportLabelBaseRequest): Promise<HrbrainImportLabelBaseResponse>;
    /**
     * 集成自定义标签
     *
     * @param request - HrbrainImportLabelCustomRequest
     * @param headers - HrbrainImportLabelCustomHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainImportLabelCustomResponse
     */
    hrbrainImportLabelCustomWithOptions(request: HrbrainImportLabelCustomRequest, headers: HrbrainImportLabelCustomHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainImportLabelCustomResponse>;
    /**
     * 集成自定义标签
     *
     * @param request - HrbrainImportLabelCustomRequest
     * @returns HrbrainImportLabelCustomResponse
     */
    hrbrainImportLabelCustom(request: HrbrainImportLabelCustomRequest): Promise<HrbrainImportLabelCustomResponse>;
    /**
     * 集成领域经验
     *
     * @param request - HrbrainImportLabelIndustryRequest
     * @param headers - HrbrainImportLabelIndustryHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainImportLabelIndustryResponse
     */
    hrbrainImportLabelIndustryWithOptions(request: HrbrainImportLabelIndustryRequest, headers: HrbrainImportLabelIndustryHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainImportLabelIndustryResponse>;
    /**
     * 集成领域经验
     *
     * @param request - HrbrainImportLabelIndustryRequest
     * @returns HrbrainImportLabelIndustryResponse
     */
    hrbrainImportLabelIndustry(request: HrbrainImportLabelIndustryRequest): Promise<HrbrainImportLabelIndustryResponse>;
    /**
     * 集成盘点数据
     *
     * @param request - HrbrainImportLabelInventoryRequest
     * @param headers - HrbrainImportLabelInventoryHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainImportLabelInventoryResponse
     */
    hrbrainImportLabelInventoryWithOptions(request: HrbrainImportLabelInventoryRequest, headers: HrbrainImportLabelInventoryHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainImportLabelInventoryResponse>;
    /**
     * 集成盘点数据
     *
     * @param request - HrbrainImportLabelInventoryRequest
     * @returns HrbrainImportLabelInventoryResponse
     */
    hrbrainImportLabelInventory(request: HrbrainImportLabelInventoryRequest): Promise<HrbrainImportLabelInventoryResponse>;
    /**
     * 集成专业技能
     *
     * @param request - HrbrainImportLabelProfSkillRequest
     * @param headers - HrbrainImportLabelProfSkillHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainImportLabelProfSkillResponse
     */
    hrbrainImportLabelProfSkillWithOptions(request: HrbrainImportLabelProfSkillRequest, headers: HrbrainImportLabelProfSkillHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainImportLabelProfSkillResponse>;
    /**
     * 集成专业技能
     *
     * @param request - HrbrainImportLabelProfSkillRequest
     * @returns HrbrainImportLabelProfSkillResponse
     */
    hrbrainImportLabelProfSkill(request: HrbrainImportLabelProfSkillRequest): Promise<HrbrainImportLabelProfSkillResponse>;
    /**
     * 集成绩效记录
     *
     * @param request - HrbrainImportPerfEvalRequest
     * @param headers - HrbrainImportPerfEvalHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainImportPerfEvalResponse
     */
    hrbrainImportPerfEvalWithOptions(request: HrbrainImportPerfEvalRequest, headers: HrbrainImportPerfEvalHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainImportPerfEvalResponse>;
    /**
     * 集成绩效记录
     *
     * @param request - HrbrainImportPerfEvalRequest
     * @returns HrbrainImportPerfEvalResponse
     */
    hrbrainImportPerfEval(request: HrbrainImportPerfEvalRequest): Promise<HrbrainImportPerfEvalResponse>;
    /**
     * 集成晋升记录
     *
     * @param request - HrbrainImportPromEvalRequest
     * @param headers - HrbrainImportPromEvalHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainImportPromEvalResponse
     */
    hrbrainImportPromEvalWithOptions(request: HrbrainImportPromEvalRequest, headers: HrbrainImportPromEvalHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainImportPromEvalResponse>;
    /**
     * 集成晋升记录
     *
     * @param request - HrbrainImportPromEvalRequest
     * @returns HrbrainImportPromEvalResponse
     */
    hrbrainImportPromEval(request: HrbrainImportPromEvalRequest): Promise<HrbrainImportPromEvalResponse>;
    /**
     * 集成处分记录
     *
     * @param request - HrbrainImportPunDetailRequest
     * @param headers - HrbrainImportPunDetailHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainImportPunDetailResponse
     */
    hrbrainImportPunDetailWithOptions(request: HrbrainImportPunDetailRequest, headers: HrbrainImportPunDetailHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainImportPunDetailResponse>;
    /**
     * 集成处分记录
     *
     * @param request - HrbrainImportPunDetailRequest
     * @returns HrbrainImportPunDetailResponse
     */
    hrbrainImportPunDetail(request: HrbrainImportPunDetailRequest): Promise<HrbrainImportPunDetailResponse>;
    /**
     * 集成入职信息
     *
     * @param request - HrbrainImportRegistRequest
     * @param headers - HrbrainImportRegistHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainImportRegistResponse
     */
    hrbrainImportRegistWithOptions(request: HrbrainImportRegistRequest, headers: HrbrainImportRegistHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainImportRegistResponse>;
    /**
     * 集成入职信息
     *
     * @param request - HrbrainImportRegistRequest
     * @returns HrbrainImportRegistResponse
     */
    hrbrainImportRegist(request: HrbrainImportRegistRequest): Promise<HrbrainImportRegistResponse>;
    /**
     * 集成异动记录
     *
     * @param request - HrbrainImportTransferEvalRequest
     * @param headers - HrbrainImportTransferEvalHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainImportTransferEvalResponse
     */
    hrbrainImportTransferEvalWithOptions(request: HrbrainImportTransferEvalRequest, headers: HrbrainImportTransferEvalHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainImportTransferEvalResponse>;
    /**
     * 集成异动记录
     *
     * @param request - HrbrainImportTransferEvalRequest
     * @returns HrbrainImportTransferEvalResponse
     */
    hrbrainImportTransferEval(request: HrbrainImportTransferEvalRequest): Promise<HrbrainImportTransferEvalResponse>;
    /**
     * 集成工作经历
     *
     * @param request - HrbrainImportWorkExpRequest
     * @param headers - HrbrainImportWorkExpHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns HrbrainImportWorkExpResponse
     */
    hrbrainImportWorkExpWithOptions(request: HrbrainImportWorkExpRequest, headers: HrbrainImportWorkExpHeaders, runtime: $Util.RuntimeOptions): Promise<HrbrainImportWorkExpResponse>;
    /**
     * 集成工作经历
     *
     * @param request - HrbrainImportWorkExpRequest
     * @returns HrbrainImportWorkExpResponse
     */
    hrbrainImportWorkExp(request: HrbrainImportWorkExpRequest): Promise<HrbrainImportWorkExpResponse>;
    /**
     * 人员标签查询
     *
     * @param request - StaffLabelRecordsQueryRequest
     * @param headers - StaffLabelRecordsQueryHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns StaffLabelRecordsQueryResponse
     */
    staffLabelRecordsQueryWithOptions(request: StaffLabelRecordsQueryRequest, headers: StaffLabelRecordsQueryHeaders, runtime: $Util.RuntimeOptions): Promise<StaffLabelRecordsQueryResponse>;
    /**
     * 人员标签查询
     *
     * @param request - StaffLabelRecordsQueryRequest
     * @returns StaffLabelRecordsQueryResponse
     */
    staffLabelRecordsQuery(request: StaffLabelRecordsQueryRequest): Promise<StaffLabelRecordsQueryResponse>;
    /**
     * 同步统计基础数据
     *
     * @param request - SyncDataRequest
     * @param headers - SyncDataHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SyncDataResponse
     */
    syncDataWithOptions(request: SyncDataRequest, headers: SyncDataHeaders, runtime: $Util.RuntimeOptions): Promise<SyncDataResponse>;
    /**
     * 同步统计基础数据
     *
     * @param request - SyncDataRequest
     * @returns SyncDataResponse
     */
    syncData(request: SyncDataRequest): Promise<SyncDataResponse>;
}
