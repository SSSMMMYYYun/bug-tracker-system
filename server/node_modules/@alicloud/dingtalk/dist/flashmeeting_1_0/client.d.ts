/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class CreateFlashMeetingHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateFlashMeetingRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    creator?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    eventId?: string;
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateFlashMeetingResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    endTime?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    flashMeetingKey?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    startTime?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    title?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    url?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateFlashMeetingResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateFlashMeetingResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShanhuiByCalendarHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShanhuiByCalendarRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * VGZCWXpvTmxpQmorbUhiSXUveTB98Iok
     */
    eventId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * EUiSN7beu1Q2wR
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShanhuiByCalendarResponseBody extends $tea.Model {
    result?: GetShanhuiByCalendarResponseBodyResult;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShanhuiByCalendarResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetShanhuiByCalendarResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShanhuiByShanhuiKeyHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShanhuiByShanhuiKeyResponseBody extends $tea.Model {
    result?: GetShanhuiByShanhuiKeyResponseBodyResult;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShanhuiByShanhuiKeyResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetShanhuiByShanhuiKeyResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTaskFromShanhuiDocHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTaskFromShanhuiDocRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * gMp7ldNxoWbAqBQN
     */
    docKey?: string;
    /**
     * @example
     * 10
     */
    maxResults?: number;
    /**
     * @example
     * 0
     */
    nextToken?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * DMvP2vrwe5QVUk0RcNb2FgiEiE
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTaskFromShanhuiDocResponseBody extends $tea.Model {
    result?: GetTaskFromShanhuiDocResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTaskFromShanhuiDocResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetTaskFromShanhuiDocResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShanhuiByCalendarResponseBodyResultTopics extends $tea.Model {
    /**
     * @example
     * 27Hio9BV23Ghj8LkRe34QzSdP94UtMkju
     */
    docKey?: string;
    /**
     * @example
     * 会议1
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShanhuiByCalendarResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 1685332800000
     */
    endTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 8K4ny9P9No06sjhk
     */
    flashmeetingKey?: string;
    /**
     * @example
     * false
     */
    hasSummary?: boolean;
    /**
     * @example
     * 1685318400000
     */
    startTime?: number;
    /**
     * @example
     * 2Hj32Uio28fjmMiu9Klsk
     */
    summaryDocKey?: string;
    /**
     * @example
     * 测试闪会
     */
    title?: string;
    topics?: GetShanhuiByCalendarResponseBodyResultTopics[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShanhuiByShanhuiKeyResponseBodyResultTopics extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 27Hio9BV23Ghj8LkRe34QzSdP94UtMkju
     */
    docKey?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 会议1
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShanhuiByShanhuiKeyResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 1685332800000
     */
    endTime?: number;
    /**
     * @example
     * 2kms47sjhb882
     */
    eventId?: string;
    /**
     * @example
     * 8K4ny9P9No06sjhk
     */
    flashmeetingKey?: string;
    /**
     * @example
     * false
     */
    hasSummary?: boolean;
    /**
     * @example
     * 1685318400000
     */
    startTime?: number;
    /**
     * @example
     * 2Hj32Uio28fjmMiu9Klsk
     */
    summaryDocKey?: string;
    /**
     * @example
     * 测试闪会
     */
    title?: string;
    topics?: GetShanhuiByShanhuiKeyResponseBodyResultTopics[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTaskFromShanhuiDocResponseBodyResultItems extends $tea.Model {
    createTime?: number;
    deadline?: number;
    deleted?: boolean;
    priority?: number;
    taskKey?: string;
    taskStatus?: string;
    taskType?: string;
    title?: string;
    updateTime?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTaskFromShanhuiDocResponseBodyResult extends $tea.Model {
    hasMore?: boolean;
    items?: GetTaskFromShanhuiDocResponseBodyResultItems[];
    nextToken?: string;
    total?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 创建钉闪会并绑定日程
     *
     * @param request - CreateFlashMeetingRequest
     * @param headers - CreateFlashMeetingHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateFlashMeetingResponse
     */
    createFlashMeetingWithOptions(request: CreateFlashMeetingRequest, headers: CreateFlashMeetingHeaders, runtime: $Util.RuntimeOptions): Promise<CreateFlashMeetingResponse>;
    /**
     * 创建钉闪会并绑定日程
     *
     * @param request - CreateFlashMeetingRequest
     * @returns CreateFlashMeetingResponse
     */
    createFlashMeeting(request: CreateFlashMeetingRequest): Promise<CreateFlashMeetingResponse>;
    /**
     * 根据日程获取闪会的信息
     *
     * @param request - GetShanhuiByCalendarRequest
     * @param headers - GetShanhuiByCalendarHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetShanhuiByCalendarResponse
     */
    getShanhuiByCalendarWithOptions(request: GetShanhuiByCalendarRequest, headers: GetShanhuiByCalendarHeaders, runtime: $Util.RuntimeOptions): Promise<GetShanhuiByCalendarResponse>;
    /**
     * 根据日程获取闪会的信息
     *
     * @param request - GetShanhuiByCalendarRequest
     * @returns GetShanhuiByCalendarResponse
     */
    getShanhuiByCalendar(request: GetShanhuiByCalendarRequest): Promise<GetShanhuiByCalendarResponse>;
    /**
     * 根据闪会key来闪会的信息，包含关联的日程、会议时间、议题等
     *
     * @param headers - GetShanhuiByShanhuiKeyHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetShanhuiByShanhuiKeyResponse
     */
    getShanhuiByShanhuiKeyWithOptions(flashmeetingKey: string, headers: GetShanhuiByShanhuiKeyHeaders, runtime: $Util.RuntimeOptions): Promise<GetShanhuiByShanhuiKeyResponse>;
    /**
     * 根据闪会key来闪会的信息，包含关联的日程、会议时间、议题等
     * @returns GetShanhuiByShanhuiKeyResponse
     */
    getShanhuiByShanhuiKey(flashmeetingKey: string): Promise<GetShanhuiByShanhuiKeyResponse>;
    /**
     * 根据闪会文档id获取待办任务
     *
     * @param request - GetTaskFromShanhuiDocRequest
     * @param headers - GetTaskFromShanhuiDocHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetTaskFromShanhuiDocResponse
     */
    getTaskFromShanhuiDocWithOptions(request: GetTaskFromShanhuiDocRequest, headers: GetTaskFromShanhuiDocHeaders, runtime: $Util.RuntimeOptions): Promise<GetTaskFromShanhuiDocResponse>;
    /**
     * 根据闪会文档id获取待办任务
     *
     * @param request - GetTaskFromShanhuiDocRequest
     * @returns GetTaskFromShanhuiDocResponse
     */
    getTaskFromShanhuiDoc(request: GetTaskFromShanhuiDocRequest): Promise<GetTaskFromShanhuiDocResponse>;
}
