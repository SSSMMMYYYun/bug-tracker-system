/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class ResultValue extends $tea.Model {
    thumbnail?: string;
    fileSize?: number;
    extension?: string;
    fileName?: string;
    url?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ActivateDeviceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ActivateDeviceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * fafdfa-rewerwr-rewew-rwe
     */
    licenseKey?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * model1
     */
    model?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 三年级一班班牌
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ujoo-233
     */
    sn?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * VIDEO_CALL
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ActivateDeviceResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ActivateDeviceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ActivateDeviceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeAlumniDeptsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeAlumniDeptsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    depts?: AddCollegeAlumniDeptsRequestDepts[];
    /**
     * @remarks
     * This parameter is required.
     */
    operator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeAlumniDeptsResponseBody extends $tea.Model {
    result?: AddCollegeAlumniDeptsResponseBodyResult[];
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeAlumniDeptsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddCollegeAlumniDeptsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeAlumniUserInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeAlumniUserInfoRequest extends $tea.Model {
    address?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    deptIds?: number[];
    email?: string;
    intake?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    mobile?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    operator?: string;
    outtake?: string;
    studentNumber?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeAlumniUserInfoResponseBody extends $tea.Model {
    result?: AddCollegeAlumniUserInfoResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeAlumniUserInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddCollegeAlumniUserInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeContactExclusiveHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeContactExclusiveRequest extends $tea.Model {
    /**
     * @example
     * @lALPDfmVUw19YdrNA-jNA-g
     */
    avatarMediaId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    deptIdList?: number[];
    deptOrderList?: AddCollegeContactExclusiveRequestDeptOrderList[];
    deptPositionSet?: AddCollegeContactExclusiveRequestDeptPositionSet[];
    deptTitleList?: AddCollegeContactExclusiveRequestDeptTitleList[];
    /**
     * @example
     * test@xxx.com
     */
    email?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * college_student
     */
    empType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    exclusiveAccount?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * dingtalk
     */
    exclusiveAccountType?: string;
    extension?: {
        [key: string]: string;
    };
    /**
     * @example
     * 1597573616828
     */
    hiredDate?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    initPassword?: string;
    /**
     * @example
     * 666666
     */
    jobNumber?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * studentNo
     */
    loginIdType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123456
     */
    mainDeptId?: number;
    /**
     * @example
     * 001
     */
    managerUserid?: string;
    /**
     * @example
     * 185xxxx8888
     */
    mobile?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 张三
     */
    name?: string;
    /**
     * @example
     * 昵称
     */
    nickname?: string;
    /**
     * @example
     * test@xxx.com
     */
    orgEmail?: string;
    /**
     * @example
     * profession
     */
    orgEmailType?: string;
    /**
     * @example
     * 备注
     */
    remark?: string;
    sendActiveSms?: boolean;
    seniorMode?: boolean;
    /**
     * @example
     * 010-86123456-2345
     */
    telephone?: string;
    /**
     * @example
     * 学工处处长
     */
    title?: string;
    /**
     * @example
     * zhangsan666
     */
    userid?: string;
    /**
     * @example
     * 学工处办公室
     */
    workPlace?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeContactExclusiveResponseBody extends $tea.Model {
    result?: AddCollegeContactExclusiveResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeContactExclusiveResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddCollegeContactExclusiveResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeContactUserHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeContactUserRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    deptIdList?: number[];
    deptOrderList?: AddCollegeContactUserRequestDeptOrderList[];
    deptPositionSet?: AddCollegeContactUserRequestDeptPositionSet[];
    deptTitleList?: AddCollegeContactUserRequestDeptTitleList[];
    /**
     * @example
     * test@xxx.com
     */
    email?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * college_student
     */
    empType?: string;
    extension?: {
        [key: string]: string;
    };
    hideMobile?: boolean;
    /**
     * @example
     * 1597573616828
     */
    hiredDate?: number;
    /**
     * @example
     * 666666
     */
    jobNumber?: string;
    /**
     * @example
     * test@xxx.com
     */
    loginEmail?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123456
     */
    mainDeptId?: number;
    /**
     * @example
     * 001
     */
    managerUserid?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 185xxxx8888
     */
    mobile?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 张三
     */
    name?: string;
    /**
     * @example
     * test@xxx.com
     */
    orgEmail?: string;
    /**
     * @example
     * profession
     */
    orgEmailType?: string;
    /**
     * @example
     * 备注
     */
    remark?: string;
    sendActiveSms?: boolean;
    seniorMode?: boolean;
    /**
     * @example
     * 010-86123456-2345
     */
    telephone?: string;
    /**
     * @example
     * 学工处处长
     */
    title?: string;
    /**
     * @example
     * zhangsan666
     */
    userid?: string;
    /**
     * @example
     * 学工处办公室
     */
    workPlace?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeContactUserResponseBody extends $tea.Model {
    result?: AddCollegeContactUserResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeContactUserResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddCollegeContactUserResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCompetitionRecordHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCompetitionRecordRequest extends $tea.Model {
    /**
     * @example
     * 5F44C
     */
    competitionCode?: string;
    /**
     * @example
     * edu
     */
    groupTemplateCode?: string;
    joinGroup?: boolean;
    /**
     * @example
     * 小明
     */
    participantName?: string;
    /**
     * @example
     * VYn5fYjORJMi
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCompetitionRecordResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCompetitionRecordResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddCompetitionRecordResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddDeviceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddDeviceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123123123
     */
    merchantId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * M-123123
     */
    model?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 支付设备
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    scene?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * sn1234324234
     */
    sn?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    status?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    type?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddDeviceResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1002
     */
    id?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    merchantId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123123
     */
    sn?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    status?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddDeviceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddDeviceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddSchoolConfigHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddSchoolConfigRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 操作人id
     */
    operatorId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 操作人名称
     */
    operatorName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 测温上限
     */
    temperatureUpLimit?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddSchoolConfigResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddSchoolConfigResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddSchoolConfigResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AdjustCourseHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AdjustCourseRequest extends $tea.Model {
    /**
     * @example
     * {""}
     */
    attributes?: string;
    /**
     * @example
     * 一年级一班
     */
    className?: string;
    /**
     * @example
     * classRoom_xxx
     */
    classRoomId?: string;
    /**
     * @example
     * 音乐教室
     */
    classRoomName?: string;
    /**
     * @example
     * 1
     */
    classType?: number;
    /**
     * @example
     * dingxxx
     */
    corpId?: string;
    /**
     * @example
     * code_xxx
     */
    courseCode?: string;
    /**
     * @example
     * 0
     */
    courseDate?: number;
    /**
     * @example
     * 语文
     */
    courseName?: string;
    /**
     * @example
     * 1
     */
    courseWeek?: number;
    /**
     * @example
     * 1
     */
    endTime?: number;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    /**
     * @example
     * courseId
     */
    isvCourseId?: string;
    /**
     * @example
     * memo_xxx
     */
    memo?: string;
    /**
     * @example
     * 2024
     */
    schoolYear?: string;
    /**
     * @example
     * 1
     */
    semester?: number;
    /**
     * @example
     * 0
     */
    startTime?: number;
    /**
     * @example
     * 1
     */
    status?: number;
    /**
     * @example
     * 1
     */
    teachWeek?: number;
    /**
     * @example
     * 第一节
     */
    timeslotName?: string;
    /**
     * @example
     * 1
     */
    timeslotNum?: number;
    /**
     * @example
     * 1
     */
    type?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AdjustCourseResponseBody extends $tea.Model {
    result?: number;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AdjustCourseResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AdjustCourseResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AdjustKitHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AdjustKitRequest extends $tea.Model {
    /**
     * @example
     * {""}
     */
    attributes?: string;
    /**
     * @example
     * dingxxx
     */
    corpId?: string;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    /**
     * @example
     * course
     */
    isvProductScene?: string;
    /**
     * @example
     * 0
     */
    openEndTime?: number;
    /**
     * @example
     * 0
     */
    openStartTime?: number;
    /**
     * @example
     * staffxxx
     */
    openUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AdjustKitResponseBody extends $tea.Model {
    result?: number;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AdjustKitResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AdjustKitResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AssignClassHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AssignClassRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 353534
     */
    classId?: number;
    isFinish?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * staff234
     */
    operator?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 675656
     */
    studentId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 4240028
     */
    taskId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AssignClassResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AssignClassResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AssignClassResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * industry_center
     */
    cardBizCode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    data?: BatchCreateRequestData;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * AFC35F13-8A88-728F-27C5-3616AD7DFF2E
     */
    identifier?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 4
     */
    jsVersion?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * QUPEIYIN
     */
    sourceType?: string;
    userid?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateResponseBody extends $tea.Model {
    result?: BatchCreateResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchCreateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateCourseHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateCourseRequest extends $tea.Model {
    /**
     * @example
     * class_xxx
     */
    classId?: string;
    /**
     * @example
     * 一年级一班
     */
    className?: string;
    /**
     * @example
     * 1
     */
    classType?: number;
    /**
     * @example
     * ding_xxx
     */
    corpId?: string;
    courseDetailItemList?: BatchCreateCourseRequestCourseDetailItemList[];
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    /**
     * @example
     * 2024
     */
    schoolYear?: string;
    /**
     * @example
     * 1
     */
    semester?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateCourseResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateCourseResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchCreateCourseResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateStudentClassHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateStudentClassRequest extends $tea.Model {
    /**
     * @example
     * classxxx
     */
    classId?: string;
    /**
     * @example
     * 一年级一班
     */
    className?: string;
    /**
     * @example
     * 1
     */
    classType?: number;
    /**
     * @example
     * dingxxx
     */
    corpId?: string;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    studentList?: BatchCreateStudentClassRequestStudentList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateStudentClassResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateStudentClassResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchCreateStudentClassResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateTeacherCourseHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateTeacherCourseRequest extends $tea.Model {
    /**
     * @example
     * dingxxx
     */
    corpId?: string;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    teacherCourseDetailItemList?: BatchCreateTeacherCourseRequestTeacherCourseDetailItemList[];
    /**
     * @example
     * 李老师
     */
    teacherName?: string;
    /**
     * @example
     * staffxxx
     */
    teacherUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateTeacherCourseResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateTeacherCourseResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchCreateTeacherCourseResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchInvalidCourseHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchInvalidCourseRequest extends $tea.Model {
    /**
     * @example
     * class_xxx
     */
    classId?: string;
    /**
     * @example
     * dingxxx
     */
    corpId?: string;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    /**
     * @example
     * courseId
     */
    isvCourseId?: string;
    isvCourseIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchInvalidCourseResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchInvalidCourseResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchInvalidCourseResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchOrgCreateHWHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchOrgCreateHWRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    attributes?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    bizCode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    courseName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    hwContent?: string;
    hwDeadline?: number;
    /**
     * @example
     * Y
     *
     * **if can be null:**
     * false
     */
    hwDeadlineOpen?: string;
    hwMedia?: string;
    hwPhoto?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    hwTitle?: string;
    hwType?: string;
    hwVideo?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    identifier?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    openSelectItemList?: BatchOrgCreateHWRequestOpenSelectItemList[];
    scheduledRelease?: string;
    scheduledTime?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    status?: string;
    targetRole?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    teacherName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    teacherUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchOrgCreateHWResponseBody extends $tea.Model {
    result?: BatchOrgCreateHWResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchOrgCreateHWResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: BatchOrgCreateHWResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CancelOrderHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CancelOrderRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123456
     */
    faceId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123456
     */
    orderNo?: string;
    /**
     * @example
     * KSwZiSL1O7DiUNwjV168j3cP9ktp4bJTi5OQxAXre26KyBXza7+gCl/g1d0K3n3+9JhMqc2fUjBiENcAELw3Jb5xO/zslOeV4qFoMQfzW51+sdL/SSZCYvXEMhu9P6FAPhGZQ3vu6gr3oxUAXPIpWNb+sIfzR9epumoOXYeofH8=
     */
    signature?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123456
     */
    sn?: string;
    /**
     * @example
     * 1644413947909
     */
    timestamp?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123456
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CancelOrderResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * false
     */
    needRetry?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * refund
     */
    tradeAction?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CancelOrderResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CancelOrderResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CancelSnsOrderHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CancelSnsOrderRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123400
     */
    alipayAppId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10000
     */
    merchantId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * CM000001
     */
    orderNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * WWrhziOLF/XuRd3IyKwLkLeSFgKnUfeg2yLEVD9Bw+8
     */
    signature?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100000
     */
    timestamp?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CancelSnsOrderResponseBody extends $tea.Model {
    /**
     * @example
     * 123400
     */
    alipayAppId?: string;
    /**
     * @example
     * 10000
     */
    merchantId?: string;
    /**
     * @example
     * M000001
     */
    merchantOrderNo?: string;
    /**
     * @example
     * CM0001234
     */
    orderNo?: string;
    payStatus?: number;
    refundStatus?: number;
    totalAmount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CancelSnsOrderResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CancelSnsOrderResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CancelUserOrderHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CancelUserOrderRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123400
     */
    alipayAppId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10000
     */
    merchantId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * CM000001
     */
    orderNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * WWrhziOLF/XuRd3IyKwLkLeSFgKnUfeg2yLEVD9Bw+8
     */
    signature?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100000
     */
    timestamp?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CancelUserOrderResponseBody extends $tea.Model {
    /**
     * @example
     * 123400
     */
    alipayAppId?: string;
    /**
     * @example
     * 10000
     */
    merchantId?: string;
    /**
     * @example
     * M000001
     */
    merchantOrderNo?: string;
    /**
     * @example
     * CM0001234
     */
    orderNo?: string;
    payStatus?: number;
    refundStatus?: number;
    totalAmount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CancelUserOrderResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CancelUserOrderResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardBatchQueryCardsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardBatchQueryCardsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * industry_center
     */
    cardBizCode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    cardIds?: number[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * YUFANAI
     */
    sourceType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1678445875001
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardBatchQueryCardsResponseBody extends $tea.Model {
    result?: CardBatchQueryCardsResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardBatchQueryCardsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CardBatchQueryCardsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardDeleteCardHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardDeleteCardRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * industry_center
     */
    cardBizCode?: string;
    /**
     * @example
     * 23424234
     */
    cardBizId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 234234234
     */
    cardId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * YUFANAI
     */
    sourceType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 234234234
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardDeleteCardResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardDeleteCardResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CardDeleteCardResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardEndCardHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardEndCardRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * industry_center
     */
    cardBizCode?: string;
    /**
     * @example
     * 856237470
     */
    cardBizId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 80264668258
     */
    cardId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * YUFANAI
     */
    sourceType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager7741
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardEndCardResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardEndCardResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CardEndCardResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardGetCardHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardGetCardRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 80264668258
     */
    cardId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * YUFANAI
     */
    sourceType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardGetCardResponseBody extends $tea.Model {
    result?: CardGetCardResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardGetCardResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CardGetCardResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardGetCardFinishProgressHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardGetCardFinishProgressRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * industry_center
     */
    cardBizCode?: string;
    /**
     * @example
     * 856237470
     */
    cardBizId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 80264668258
     */
    cardId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * YUFANAI
     */
    sourceType?: string;
    /**
     * @example
     * 3000000000847390208
     */
    studentId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager7741
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardGetCardFinishProgressResponseBody extends $tea.Model {
    result?: CardGetCardFinishProgressResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardGetCardFinishProgressResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CardGetCardFinishProgressResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardQueryCardFeedsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardQueryCardFeedsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 3
     */
    bizType?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * industry_center
     */
    cardBizCode?: string;
    /**
     * @example
     * 856237470
     */
    cardBizId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 80264668258
     */
    cardId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5
     */
    count?: number;
    cursor?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    feedType?: number;
    needFinishProcess?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * YUFANAI
     */
    sourceType?: string;
    /**
     * @example
     * 3000000000847390208
     */
    studentId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * CARD_TASK_CODE_0
     */
    subBizId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager7741
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardQueryCardFeedsResponseBody extends $tea.Model {
    result?: CardQueryCardFeedsResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardQueryCardFeedsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CardQueryCardFeedsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckRestrictionHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckRestrictionRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    actualAmount?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    faceId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    scene?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    sn?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckRestrictionResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CheckRestrictionResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CheckRestrictionResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsumePointHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsumePointRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    amount?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    bizId?: string;
    /**
     * @example
     * point_exchange
     */
    description?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * FAMILY_GIFT_MALL
     */
    productCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsumePointResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ConsumePointResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ConsumePointResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CourseSchedulingComplimentNoticeHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CourseSchedulingComplimentNoticeRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 行政老师A
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CourseSchedulingComplimentNoticeResponseBody extends $tea.Model {
    /**
     * @example
     * true：成功 false：失败
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CourseSchedulingComplimentNoticeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CourseSchedulingComplimentNoticeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAppOrderHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAppOrderRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    actualAmount?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1234
     */
    alipayAppId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    bizCode?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    detailList?: CreateAppOrderRequestDetailList[];
    /**
     * @example
     * 1
     */
    labelAmount?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10000
     */
    merchantId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * M00001
     */
    merchantOrderNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10000
     */
    outerUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * WWrhziOLF/XuRd3IyKwLkLeSFgKnUfeg2yLEVD9Bw+8
     */
    signature?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 数字图书
     */
    subject?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100000
     */
    timestamp?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAppOrderResponseBody extends $tea.Model {
    /**
     * @example
     * 1
     */
    actualAmount?: number;
    /**
     * @example
     * 1234
     */
    alipayAppId?: string;
    /**
     * @example
     * alipay_sdk=alipay-sdk-java-dynamicVersionNo&version=1.0
     */
    body?: string;
    /**
     * @example
     * 10000
     */
    merchantId?: string;
    /**
     * @example
     * M00001
     */
    merchantOrderNo?: string;
    /**
     * @example
     * CM0001
     */
    orderNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAppOrderResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateAppOrderResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCollegeContactDeptHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCollegeContactDeptRequest extends $tea.Model {
    autoApproveApply?: boolean;
    /**
     * @example
     * 这是组织单元简介
     */
    brief?: string;
    /**
     * @example
     * 20000
     */
    code?: string;
    createDeptGroup?: boolean;
    /**
     * @example
     * dept456
     */
    deptCode?: string;
    deptPermits?: number[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * contact_class_dept
     */
    deptType?: string;
    empApplyJoinDept?: boolean;
    extension?: {
        [key: string]: string;
    };
    hideDept?: boolean;
    hideSceneConfig?: CreateCollegeContactDeptRequestHideSceneConfig;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 软件工程
     */
    name?: string;
    /**
     * @example
     * 20
     */
    order?: number;
    outerDept?: boolean;
    outerDeptOnlySelf?: boolean;
    outerPermitDepts?: number[];
    outerPermitUsers?: string[];
    outerSceneConfig?: CreateCollegeContactDeptRequestOuterSceneConfig;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20
     */
    parentId?: number;
    /**
     * @example
     * 软件工程标识
     */
    sourceIdentifier?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    struId?: number;
    /**
     * @example
     * 138xxxx0000
     */
    telephone?: string;
    userPermits?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCollegeContactDeptResponseBody extends $tea.Model {
    result?: CreateCollegeContactDeptResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCollegeContactDeptResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateCollegeContactDeptResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCollegeContactSceneStruHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCollegeContactSceneStruRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    hasStruFixedDept?: boolean;
    /**
     * @example
     * 20
     */
    order?: number;
    /**
     * @example
     * 场景架构标识
     */
    sourceIdentifier?: string;
    /**
     * @example
     * 这是场景架构简介
     */
    struBrief?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 科研架构
     */
    struName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * stru_research_dept
     */
    struType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCollegeContactSceneStruResponseBody extends $tea.Model {
    result?: CreateCollegeContactSceneStruResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCollegeContactSceneStruResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateCollegeContactSceneStruResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCourseHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCourseRequest extends $tea.Model {
    /**
     * @example
     * {""}
     */
    attributes?: string;
    /**
     * @example
     * class_xxx
     */
    classId?: string;
    /**
     * @example
     * 一年级一班
     */
    className?: string;
    /**
     * @example
     * classRoom_xxx
     */
    classRoomId?: string;
    /**
     * @example
     * 音乐教室
     */
    classRoomName?: string;
    /**
     * @example
     * 1
     */
    classType?: number;
    /**
     * @example
     * dingxxx
     */
    corpId?: string;
    /**
     * @example
     * code_xxx
     */
    courseCode?: string;
    /**
     * @example
     * 0
     */
    courseDate?: number;
    /**
     * @example
     * 语文
     */
    courseName?: string;
    /**
     * @example
     * 1
     */
    courseWeek?: number;
    /**
     * @example
     * 0
     */
    endTime?: number;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    /**
     * @example
     * courseId
     */
    isvCourseId?: string;
    /**
     * @example
     * memo_xxx
     */
    memo?: string;
    /**
     * @example
     * 2024
     */
    schoolYear?: string;
    /**
     * @example
     * 1
     */
    semester?: number;
    /**
     * @example
     * 0
     */
    startTime?: number;
    /**
     * @example
     * 1
     */
    status?: number;
    /**
     * @example
     * 1
     */
    teachWeek?: number;
    teacherList?: CreateCourseRequestTeacherList[];
    /**
     * @example
     * 第一节
     */
    timeslotName?: string;
    /**
     * @example
     * 1
     */
    timeslotNum?: number;
    /**
     * @example
     * 1
     */
    type?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCourseResponseBody extends $tea.Model {
    result?: number;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCourseResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateCourseResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomClassHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomClassRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    customClass?: CreateCustomClassRequestCustomClass;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1234
     */
    operator?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 12345
     */
    superId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomClassResponseBody extends $tea.Model {
    result?: CreateCustomClassResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomClassResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateCustomClassResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomDeptHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomDeptRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    customDept?: CreateCustomDeptRequestCustomDept;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 12345
     */
    operator?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1233
     */
    superId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomDeptResponseBody extends $tea.Model {
    result?: CreateCustomDeptResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomDeptResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateCustomDeptResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateEduAssetSpaceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateEduAssetSpaceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 目前仅支持soke
     */
    bizCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 存放语文教研文件
     */
    spaceDesc?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * https://gw.alicdn.com/imgextra/i4/O1CN01QGjRTl27z8YPPEQdr_!!6000000007867-2-tps-99-78.png
     */
    spaceIcon?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 语文教研组空间
     */
    spaceName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * aa12324
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateEduAssetSpaceResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    createTimeMillis?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    modifyTimeMillis?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * acl：acl授权 ; custom：自定义授权
     */
    permissionMode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    quota?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    spaceId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    spaceName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * custom：自定义类型
     */
    spaceType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    usedQuota?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateEduAssetSpaceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateEduAssetSpaceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateFulfilRecordHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateFulfilRecordRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1647503420000
     */
    bizTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * {"key":"value"}
     */
    extInfo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * F123123
     */
    faceId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    scene?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SN123456
     */
    sn?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 12312312444
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateFulfilRecordResponseBody extends $tea.Model {
    /**
     * @example
     * success
     */
    successInfo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateFulfilRecordResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateFulfilRecordResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateInviteUrlHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateInviteUrlRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    authCode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    targetCorpId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    targetOperator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateInviteUrlResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: CreateInviteUrlResponseBodyResult;
    /**
     * @remarks
     * This parameter is required.
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateInviteUrlResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateInviteUrlResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateItemHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateItemRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    description?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    effectType?: number;
    endTime?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    merchantId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    optUser?: string;
    periodType?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    price?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    scene?: number;
    startTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    status?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    type?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateItemResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    id?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    merchantId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    status?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateItemResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateItemResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOrderHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOrderRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100
     */
    actualAmount?: number;
    /**
     * @example
     * 1644413947909
     */
    createTime?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    detailList?: CreateOrderRequestDetailList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123123
     */
    faceId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * FACE_010100b0555Xczd4ePVLaB5V3cCzrONYpHWOENzRxDDqcnVjYXLso0U_1642665071746
     */
    ftoken?: string;
    /**
     * @example
     * KSwZiSL1O7DiUNwjV168j3cP9ktp4bJTi5OQxAXre26KyBXza7+gCl/g1d0K3n3+9JhMqc2fUjBiENcAELw3Jb5xO/zslOeV4qFoMQfzW51+sdL/SSZCYvXEMhu9P6FAPhGZQ3vu6gr3oxUAXPIpWNb+sIfzR9epumoOXYeofH8=
     */
    signature?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * QA62021121908E
     */
    sn?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * {\"terminalType\":\"IOT\"}
     */
    terminalParams?: string;
    /**
     * @example
     * 1644413947909
     */
    timestamp?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100
     */
    totalAmount?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1643334234626
     */
    userId?: string;
    /**
     * @example
     * 1.0
     */
    version?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOrderResponseBody extends $tea.Model {
    /**
     * @example
     * 20220124001
     */
    orderNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOrderResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateOrderResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOrderFlowHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOrderFlowRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100
     */
    actualAmount?: number;
    /**
     * @example
     * 2088112532248965
     */
    alipayUid?: string;
    /**
     * @example
     * 1644413947909
     */
    createTime?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    detailList?: CreateOrderFlowRequestDetailList[];
    /**
     * @example
     * 123123
     */
    faceId?: string;
    /**
     * @example
     * 123455
     */
    guardianUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2088821434894708
     */
    merchantId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2022012717252021400100822002
     */
    orderNo?: string;
    /**
     * @example
     * KSwZiSL1O7DiUNwjV168j3cP9ktp4bJTi5OQxAXre26KyBXza7+gCl/g1d0K3n3+9JhMqc2fUjBiENcAELw3Jb5xO/zslOeV4qFoMQfzW51+sdL/SSZCYvXEMhu9P6FAPhGZQ3vu6gr3oxUAXPIpWNb+sIfzR9epumoOXYeofH8=
     */
    signature?: string;
    /**
     * @example
     * QA62021121908E
     */
    sn?: string;
    /**
     * @example
     * 1644413947909
     */
    timestamp?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100
     */
    totalAmount?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1643334234626
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOrderFlowResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOrderFlowResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateOrderFlowResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreatePhysicalClassroomHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreatePhysicalClassroomRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 主楼
     */
    classroomBuilding?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 主校区
     */
    classroomCampus?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2层
     */
    classroomFloor?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 实验室
     */
    classroomName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 201
     */
    classroomNumber?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * Y
     */
    directBroadcast?: string;
    /**
     * @example
     * {}
     */
    ext?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manger1234
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreatePhysicalClassroomResponseBody extends $tea.Model {
    /**
     * @example
     * 10001
     */
    classroomId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreatePhysicalClassroomResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreatePhysicalClassroomResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRefundFlowHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRefundFlowRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123123
     */
    faceId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * S123
     */
    operatorId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 张三
     */
    operatorName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    orderNo?: string;
    /**
     * @example
     * KSwZiSL1O7DiUNwjV168j3cP9ktp4bJTi5OQxAXre26KyBXza7+gCl/g1d0K3n3+9JhMqc2fUjBiENcAELw3Jb5xO/zslOeV4qFoMQfzW51+sdL/SSZCYvXEMhu9P6FAPhGZQ3vu6gr3oxUAXPIpWNb+sIfzR9epumoOXYeofH8=
     */
    signature?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    sn?: string;
    /**
     * @example
     * 1644413947909
     */
    timestamp?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRefundFlowResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRefundFlowResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateRefundFlowResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRemoteClassCourseHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRemoteClassCourseRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    attendParticipants?: CreateRemoteClassCourseRequestAttendParticipants[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * bab02f63c1e030fbbxxxx
     */
    authCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 春天来了
     */
    courseName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1634184000000
     */
    endTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1634176800000
     */
    startTime?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    teachingParticipant?: CreateRemoteClassCourseRequestTeachingParticipant;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRemoteClassCourseResponseBody extends $tea.Model {
    result?: CreateRemoteClassCourseResponseBodyResult;
    /**
     * @remarks
     * This parameter is required.
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRemoteClassCourseResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateRemoteClassCourseResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSectionConfigHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSectionConfigRequest extends $tea.Model {
    /**
     * @example
     * 扩展参数
     */
    ext?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    sectionConfigs?: CreateSectionConfigRequestSectionConfigs[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager235
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSectionConfigResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSectionConfigResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateSectionConfigResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSnsAppOrderHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSnsAppOrderRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    actualAmount?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1234
     */
    alipayAppId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    bizCode?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    detailList?: CreateSnsAppOrderRequestDetailList[];
    /**
     * @example
     * 1
     */
    labelAmount?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10000
     */
    merchantId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * M00001
     */
    merchantOrderNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * WWrhziOLF/XuRd3IyKwLkLeSFgKnUfeg2yLEVD9Bw+8
     */
    signature?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 数字图书
     */
    subject?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100000
     */
    timestamp?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSnsAppOrderResponseBody extends $tea.Model {
    /**
     * @example
     * 1
     */
    actualAmount?: number;
    /**
     * @example
     * 1234
     */
    alipayAppId?: string;
    /**
     * @example
     * alipay_sdk=alipay-sdk-java-dynamicVersionNo&version=1.0
     */
    body?: string;
    /**
     * @example
     * 10000
     */
    merchantId?: string;
    /**
     * @example
     * M00001
     */
    merchantOrderNo?: string;
    /**
     * @example
     * CM0001
     */
    orderNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSnsAppOrderResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateSnsAppOrderResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateStsTokenHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateStsTokenRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * fjke/12-131jk
     */
    deviceSn?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * sls
     */
    stsType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateStsTokenResponseBody extends $tea.Model {
    /**
     * @example
     * fdasfad
     */
    accessKeyId?: string;
    /**
     * @example
     * fdsfwdsfdsafdaf
     */
    accessKeySecret?: string;
    /**
     * @example
     * 3600000
     */
    expiration?: string;
    /**
     * @example
     * {}
     */
    extInfo?: string;
    /**
     * @example
     * fdasgtwtgfds
     */
    securityToken?: string;
    /**
     * @example
     * 200
     */
    status?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateStsTokenResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateStsTokenResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateStudentClassHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateStudentClassRequest extends $tea.Model {
    /**
     * @example
     * {"key":"value"}
     */
    attributes?: string;
    /**
     * @example
     * classIdxxx
     */
    classId?: string;
    /**
     * @example
     * 一年级一班
     */
    className?: string;
    /**
     * @example
     * 0
     */
    classType?: number;
    /**
     * @example
     * dingxxx
     */
    corpId?: string;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    /**
     * @example
     * 小明
     */
    studentName?: string;
    /**
     * @example
     * staffxxx
     */
    studentUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateStudentClassResponseBody extends $tea.Model {
    result?: number;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateStudentClassResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateStudentClassResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTeacherCourseHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTeacherCourseRequest extends $tea.Model {
    /**
     * @example
     * {"key":"value"}
     */
    attributes?: string;
    /**
     * @example
     * dingxxx
     */
    corpId?: string;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    /**
     * @example
     * courseIdxxx
     */
    isvCourseId?: string;
    /**
     * @example
     * 李老师
     */
    teacherName?: string;
    /**
     * @example
     * staffxxx
     */
    teacherUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTeacherCourseResponseBody extends $tea.Model {
    result?: number;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTeacherCourseResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateTeacherCourseResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTimerCardHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTimerCardRequest extends $tea.Model {
    /**
     * @example
     * 0
     */
    actionTime?: number;
    bizData?: string;
    /**
     * @example
     * CARD_EVENT
     */
    bizType?: string;
    /**
     * @example
     * ding13424
     */
    corpId?: string;
    /**
     * @example
     * 20241213123213
     */
    identifier?: string;
    /**
     * @example
     * XIWO
     */
    isvCode?: string;
    memo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTimerCardResponseBody extends $tea.Model {
    result?: boolean;
    sucess?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTimerCardResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateTimerCardResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTokenHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTokenRequest extends $tea.Model {
    sn?: string;
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTokenResponseBody extends $tea.Model {
    accessKeyId?: string;
    accessKeySecret?: string;
    expiration?: string;
    extInfo?: string;
    securityToken?: string;
    status?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTokenResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateTokenResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTransferRecordHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTransferRecordRequest extends $tea.Model {
    /**
     * @example
     * {""}
     */
    attributes?: string;
    /**
     * @example
     * classIdx
     */
    classId?: string;
    /**
     * @example
     * 一年级一班
     */
    className?: string;
    /**
     * @example
     * dingxxx
     */
    corpId?: string;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    /**
     * @example
     * record
     */
    isvRecordId?: string;
    /**
     * @example
     * courseCode
     */
    srcCourseCode?: string;
    /**
     * @example
     * 0
     */
    srcCourseDate?: number;
    /**
     * @example
     * 语文
     */
    srcCourseName?: string;
    /**
     * @example
     * courseId
     */
    srcIsvCourseId?: string;
    /**
     * @example
     * 第一节
     */
    srcTimeslotName?: string;
    /**
     * @example
     * 1
     */
    srcTimeslotNum?: number;
    /**
     * @example
     * courseCode
     */
    tarCourseCode?: string;
    /**
     * @example
     * 0
     */
    tarCourseDate?: number;
    /**
     * @example
     * 语文
     */
    tarCourseName?: string;
    /**
     * @example
     * courseId
     */
    tarIsvCourseId?: string;
    /**
     * @example
     * 第二节
     */
    tarTimeslotName?: string;
    /**
     * @example
     * 1
     */
    tarTimeslotNum?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTransferRecordResponseBody extends $tea.Model {
    result?: number;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTransferRecordResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateTransferRecordResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateUniversityCourseGroupHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateUniversityCourseGroupRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 高数
     */
    courseGroupIntroduce?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 张老师_高数
     */
    courseGroupName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    courserGroupItemModels?: CreateUniversityCourseGroupRequestCourserGroupItemModels[];
    /**
     * @example
     * {}
     */
    ext?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * GZ1001
     */
    isvCourseGroupCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 大学：university
     */
    periodCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-2022
     */
    schoolYear?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    semester?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 高等数学
     */
    subjectName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    teacherInfos?: CreateUniversityCourseGroupRequestTeacherInfos[];
    /**
     * @remarks
     * This parameter is required.
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateUniversityCourseGroupResponseBody extends $tea.Model {
    courseGroupInfo?: CreateUniversityCourseGroupResponseBodyCourseGroupInfo;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateUniversityCourseGroupResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateUniversityCourseGroupResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateUniversityStudentHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateUniversityStudentRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    classId?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    gender?: string;
    identityNumber?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    mobile?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    studentNumber?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateUniversityStudentResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateUniversityStudentResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateUniversityStudentResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateUniversityTeacherHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateUniversityTeacherRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100987
     */
    classId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manger1234
     */
    opUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * headmaster:班主任；instructor:辅导员
     */
    role?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10877892
     */
    teacherUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateUniversityTeacherResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateUniversityTeacherResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateUniversityTeacherResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeactivateDeviceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeactivateDeviceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * model1
     */
    model?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * fdafds-432432
     */
    sn?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * VIDEO_CALL
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeactivateDeviceResponseBody extends $tea.Model {
    /**
     * @example
     * 2
     */
    activateTimes?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeactivateDeviceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeactivateDeviceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeductPointHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeductPointRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * biz01
     */
    bizId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 兑换商品
     */
    deductDesc?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * https://www.dingtalk.com/
     */
    deductDetailUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    deductNum?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * personal
     */
    pointType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeductPointResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeductPointResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeductPointResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCollegeAlumniDeptHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCollegeAlumniDeptRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    deptId?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    operator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCollegeAlumniDeptResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCollegeAlumniDeptResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteCollegeAlumniDeptResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCollegeAlumniUserInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCollegeAlumniUserInfoRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    deptId?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    operator?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    userIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCollegeAlumniUserInfoResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCollegeAlumniUserInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteCollegeAlumniUserInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCollegeContactSceneStruHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCollegeContactSceneStruRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20
     */
    struId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCollegeContactSceneStruResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCollegeContactSceneStruResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteCollegeContactSceneStruResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteDeptHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteDeptRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager1234
     */
    operator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteDeptResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteDeptResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteDeptResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteDeviceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteDeviceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * testSn
     */
    sn?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteDeviceResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteDeviceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteDeviceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteDeviceOrgHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteDeviceOrgRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    authCode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    deviceCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteDeviceOrgResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteDeviceOrgResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteDeviceOrgResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteGuardianHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteGuardianRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager123
     */
    operator?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1345
     */
    stuId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteGuardianResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteGuardianResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteGuardianResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteOrgRelationHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteOrgRelationRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    authCode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    targetCorpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteOrgRelationResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteOrgRelationResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteOrgRelationResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeletePhysicalClassroomHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeletePhysicalClassroomRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100016
     */
    classroomId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manger234
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeletePhysicalClassroomResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeletePhysicalClassroomResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeletePhysicalClassroomResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteRemoteClassCourseHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteRemoteClassCourseRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * bab02f63c1e030fbbxxxx
     */
    authCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteRemoteClassCourseResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteRemoteClassCourseResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteRemoteClassCourseResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteStudentHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteStudentRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123456
     */
    operator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteStudentResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteStudentResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteStudentResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteTeacherHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteTeacherRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    adviser?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1235
     */
    operator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteTeacherResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteTeacherResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteTeacherResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteUniversityCourseGroupHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteUniversityCourseGroupRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * GS1002
     */
    courseGroupCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manger1234
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteUniversityCourseGroupResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteUniversityCourseGroupResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteUniversityCourseGroupResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteUniversityStudentHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteUniversityStudentRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 76781
     */
    classId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manger1234
     */
    opUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * uu1234
     */
    studentUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteUniversityStudentResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteUniversityStudentResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteUniversityStudentResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteUniversityTeacherHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteUniversityTeacherRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 65781
     */
    classId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manger1234
     */
    opUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * headmaster：班主任；instructor：辅导员
     */
    role?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ujo2344
     */
    teacherUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteUniversityTeacherResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteUniversityTeacherResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteUniversityTeacherResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeviceHeartbeatHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeviceHeartbeatRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * sn123
     */
    sn?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeviceHeartbeatResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0心跳正常，1增量更新，2上传日志，3全量更新
     */
    command?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeviceHeartbeatResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeviceHeartbeatResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DisableCollegeContactSceneStruHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DisableCollegeContactSceneStruRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20
     */
    struId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DisableCollegeContactSceneStruResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DisableCollegeContactSceneStruResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DisableCollegeContactSceneStruResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EduAIGCCallbackHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EduAIGCCallbackRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * test
     */
    channelCode?: string;
    commitTime?: number;
    completeTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * http://xxxxx.doc
     */
    content?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1500
     */
    contentSize?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * url
     */
    contentType?: string;
    ext?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 请帮我写一篇读后感
     */
    prompt?: string;
    remark?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EduAIGCCallbackResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EduAIGCCallbackResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: EduAIGCCallbackResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EduFindUserRolesByUserIdHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EduFindUserRolesByUserIdRequest extends $tea.Model {
    /**
     * @example
     * 666666
     */
    classId?: number;
    /**
     * @example
     * ding123456
     */
    corpId?: string;
    hasOrgRole?: boolean;
    /**
     * @example
     * 123456
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EduFindUserRolesByUserIdResponseBody extends $tea.Model {
    result?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EduFindUserRolesByUserIdResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: EduFindUserRolesByUserIdResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EduGetFileSpaceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EduGetFileSpaceRequest extends $tea.Model {
    channelCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EduGetFileSpaceResponseBody extends $tea.Model {
    result?: EduGetFileSpaceResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EduGetFileSpaceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: EduGetFileSpaceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EduListUserByFromUserIdsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EduListUserByFromUserIdsRequest extends $tea.Model {
    classId?: number;
    /**
     * @example
     * ding123456
     */
    corpId?: string;
    /**
     * @example
     * 123456
     */
    guardianUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EduListUserByFromUserIdsResponseBody extends $tea.Model {
    result?: EduListUserByFromUserIdsResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EduListUserByFromUserIdsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: EduListUserByFromUserIdsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EduTeacherListHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EduTeacherListRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EduTeacherListResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: EduTeacherListResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EduTeacherListResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: EduTeacherListResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EnableCollegeContactSceneStruHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EnableCollegeContactSceneStruRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20
     */
    struId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EnableCollegeContactSceneStruResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EnableCollegeContactSceneStruResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: EnableCollegeContactSceneStruResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EndCourseHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EndCourseRequest extends $tea.Model {
    /**
     * @example
     * testCourseCode
     */
    courseCode?: string;
    /**
     * @example
     * extData
     */
    ext?: string;
    /**
     * @example
     * DDIsv
     */
    isvCode?: string;
    livePlayInfoList?: EndCourseRequestLivePlayInfoList[];
    /**
     * @example
     * 1
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EndCourseResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    universityCourseCommonResponse?: EndCourseResponseBodyUniversityCourseCommonResponse;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EndCourseResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: EndCourseResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetBindChildInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetBindChildInfoRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding95eef8003c9ca8ca24f2f5cc6abecb85
     */
    schoolCorpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 3000000000307711730
     */
    studentUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * X5y5kd8XiiqiScCl4Qlfy5GgiEiE
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetBindChildInfoResponseBody extends $tea.Model {
    /**
     * @example
     * 3000000000307711730
     */
    childUserId?: string;
    /**
     * @example
     * 3000000000433459511
     */
    currentUserId?: string;
    /**
     * @example
     * ding95eef8003c9ca8ca24f2f5cc6abecb85
     */
    familyCorpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetBindChildInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetBindChildInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetChildrenHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetChildrenResponseBody extends $tea.Model {
    result?: GetChildrenResponseBodyResult[];
    /**
     * @remarks
     * This parameter is required.
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetChildrenResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetChildrenResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCollegeAlumniDeptsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCollegeAlumniDeptsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    deptId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * staff234
     */
    operator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCollegeAlumniDeptsResponseBody extends $tea.Model {
    result?: GetCollegeAlumniDeptsResponseBodyResult[];
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCollegeAlumniDeptsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetCollegeAlumniDeptsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCollegeAlumniUserInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCollegeAlumniUserInfoRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    operator?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCollegeAlumniUserInfoResponseBody extends $tea.Model {
    result?: GetCollegeAlumniUserInfoResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCollegeAlumniUserInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetCollegeAlumniUserInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCollegeContactDeptDetailHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCollegeContactDeptDetailRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20
     */
    deptId?: number;
    /**
     * @example
     * zh_CN
     */
    language?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCollegeContactDeptDetailResponseBody extends $tea.Model {
    result?: GetCollegeContactDeptDetailResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCollegeContactDeptDetailResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetCollegeContactDeptDetailResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCollegeContactStandardStruDeptDetailHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCollegeContactStandardStruDeptDetailRequest extends $tea.Model {
    /**
     * @example
     * zh_CN
     */
    language?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCollegeContactStandardStruDeptDetailResponseBody extends $tea.Model {
    result?: GetCollegeContactStandardStruDeptDetailResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCollegeContactStandardStruDeptDetailResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetCollegeContactStandardStruDeptDetailResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetDefaultChildHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetDefaultChildResponseBody extends $tea.Model {
    avatar?: string;
    bindStudents?: GetDefaultChildResponseBodyBindStudents[];
    grade?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    nick?: string;
    period?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetDefaultChildResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetDefaultChildResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetEduUserIdentityHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetEduUserIdentityRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * VYn5fYjORJMi
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetEduUserIdentityResponseBody extends $tea.Model {
    data?: GetEduUserIdentityResponseBodyData;
    /**
     * @remarks
     * This parameter is required.
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetEduUserIdentityResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetEduUserIdentityResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFileDownloadInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFileDownloadInfoRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    fileIdList?: string[];
    /**
     * @remarks
     * This parameter is required.
     */
    spaceId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFileDownloadInfoResponseBody extends $tea.Model {
    result?: {
        [key: string]: ResultValue;
    };
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFileDownloadInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetFileDownloadInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFileDownloadInfoByPackageIdHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFileDownloadInfoByPackageIdRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    packageId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFileDownloadInfoByPackageIdResponseBody extends $tea.Model {
    result?: GetFileDownloadInfoByPackageIdResponseBodyResult[];
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFileDownloadInfoByPackageIdResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetFileDownloadInfoByPackageIdResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetImageTempDownloadUrlHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetImageTempDownloadUrlRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    mediaId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    sourceType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetImageTempDownloadUrlResponseBody extends $tea.Model {
    result?: GetImageTempDownloadUrlResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetImageTempDownloadUrlResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetImageTempDownloadUrlResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOpenCourseDetailHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOpenCourseDetailResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * fdjakl-fdaf-ds
     */
    courseId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    courseType?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * https://static.dingtalk.com/media/lALPDgCwRt4FagzMi8yZ_153_139.png
     */
    coverUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 开学的第一堂课
     */
    introduction?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    pushModel?: GetOpenCourseDetailResponseBodyPushModel;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1618369786000
     */
    startTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123124312314
     */
    teacherId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 张老师
     */
    teacherName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 开学第一课
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOpenCourseDetailResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetOpenCourseDetailResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOpenCoursesHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOpenCoursesRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOpenCoursesResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    courseList?: GetOpenCoursesResponseBodyCourseList[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 68
     */
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOpenCoursesResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetOpenCoursesResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPointActionRecordHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPointActionRecordRequest extends $tea.Model {
    body?: GetPointActionRecordRequestBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPointActionRecordShrinkRequest extends $tea.Model {
    bodyShrink?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPointActionRecordResponseBody extends $tea.Model {
    result?: GetPointActionRecordResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPointActionRecordResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetPointActionRecordResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPointInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPointInfoRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * personal
     */
    pointType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPointInfoResponseBody extends $tea.Model {
    result?: GetPointInfoResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPointInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetPointInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRemoteClassCourseHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRemoteClassCourseRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager1234
     */
    operator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRemoteClassCourseResponseBody extends $tea.Model {
    result?: GetRemoteClassCourseResponseBodyResult;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRemoteClassCourseResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetRemoteClassCourseResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShareRoleMembersHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShareRoleMembersResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: GetShareRoleMembersResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShareRoleMembersResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetShareRoleMembersResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShareRolesHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShareRolesResponseBody extends $tea.Model {
    result?: GetShareRolesResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShareRolesResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetShareRolesResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTaskListHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTaskListRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * staff234
     */
    operator?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    pageSize?: number;
    /**
     * @example
     * 2023
     */
    taskYear?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTaskListResponseBody extends $tea.Model {
    /**
     * @example
     * 2
     */
    count?: number;
    taskList?: GetTaskListResponseBodyTaskList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTaskListResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetTaskListResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTaskStudentListHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTaskStudentListRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * staff234
     */
    operator?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 50
     */
    pageSize?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 4240028
     */
    taskId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTaskStudentListResponseBody extends $tea.Model {
    /**
     * @example
     * 2000
     */
    count?: number;
    studentList?: GetTaskStudentListResponseBodyStudentList[];
    /**
     * @example
     * 4240028
     */
    taskId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTaskStudentListResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetTaskStudentListResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitCoursesOfClassHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitCoursesOfClassRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    courses?: InitCoursesOfClassRequestCourses[];
    /**
     * @remarks
     * This parameter is required.
     */
    sectionConfig?: InitCoursesOfClassRequestSectionConfig;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager235
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitCoursesOfClassResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitCoursesOfClassResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: InitCoursesOfClassResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitDeviceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitDeviceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * sdf34DFf2344
     */
    encryptPubKey?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * sdf34DFfffdf2344
     */
    signature?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SN123456
     */
    sn?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1231245511
     */
    timestamp?: number;
    /**
     * @example
     * 1.0
     */
    version?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitDeviceResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * success
     */
    successInfo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitDeviceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: InitDeviceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitVPaasDeviceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitVPaasDeviceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * fsdfdsa-41231
     */
    sn?: string;
    timestamp?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * VIDEO_CALL
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitVPaasDeviceResponseBody extends $tea.Model {
    /**
     * @example
     * fewupiehwioghj
     */
    pspk?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitVPaasDeviceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: InitVPaasDeviceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InsertSectionConfigHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InsertSectionConfigRequest extends $tea.Model {
    end?: InsertSectionConfigRequestEnd;
    /**
     * @example
     * 2020学年第一学期课表
     */
    scheduleName?: string;
    sectionModels?: InsertSectionConfigRequestSectionModels[];
    start?: InsertSectionConfigRequestStart;
    /**
     * @example
     * manager235
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InsertSectionConfigResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InsertSectionConfigResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: InsertSectionConfigResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InvalidCourseHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InvalidCourseRequest extends $tea.Model {
    /**
     * @example
     * classId_xxx
     */
    classId?: string;
    /**
     * @example
     * ding_xxx
     */
    corpId?: string;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    /**
     * @example
     * courseId_xxx
     */
    isvCourseId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InvalidCourseResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InvalidCourseResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: InvalidCourseResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InvalidKitHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InvalidKitRequest extends $tea.Model {
    /**
     * @example
     * dingxxx
     */
    corpId?: string;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    /**
     * @example
     * course
     */
    isvProductScene?: string;
    /**
     * @example
     * staffxxx
     */
    openUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InvalidKitResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InvalidKitResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: InvalidKitResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InvalidStudentClassHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InvalidStudentClassRequest extends $tea.Model {
    /**
     * @example
     * classxxx
     */
    classId?: string;
    /**
     * @example
     * 1
     */
    classType?: number;
    /**
     * @example
     * dingxxx
     */
    corpId?: string;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    studentUserIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InvalidStudentClassResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InvalidStudentClassResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: InvalidStudentClassResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InvalidTeacherCourseHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InvalidTeacherCourseRequest extends $tea.Model {
    /**
     * @example
     * dingxxx
     */
    corpId?: string;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    needDeleteCourseIdList?: string[];
    /**
     * @example
     * staffxxx
     */
    teacherUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InvalidTeacherCourseResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InvalidTeacherCourseResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: InvalidTeacherCourseResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class IsvDataWriteHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class IsvDataWriteRequest extends $tea.Model {
    /**
     * @example
     * tb_test01
     */
    objectCode?: string;
    rowValueList?: IsvDataWriteRequestRowValueList[][];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class IsvDataWriteResponseBody extends $tea.Model {
    result?: IsvDataWriteResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class IsvDataWriteResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: IsvDataWriteResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class IsvMetadataQueryHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class IsvMetadataQueryRequest extends $tea.Model {
    /**
     * @example
     * abc
     */
    objectCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class IsvMetadataQueryResponseBody extends $tea.Model {
    result?: IsvMetadataQueryResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class IsvMetadataQueryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: IsvMetadataQueryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCollegeContactDeptTypeConfigHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCollegeContactDeptTypeConfigRequest extends $tea.Model {
    /**
     * @example
     * zh_CN
     */
    language?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCollegeContactDeptTypeConfigResponseBody extends $tea.Model {
    result?: ListCollegeContactDeptTypeConfigResponseBodyResult[];
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCollegeContactDeptTypeConfigResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListCollegeContactDeptTypeConfigResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCollegeContactSceneStrusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCollegeContactSceneStrusRequest extends $tea.Model {
    /**
     * @example
     * zh_CN
     */
    language?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCollegeContactSceneStrusResponseBody extends $tea.Model {
    result?: ListCollegeContactSceneStrusResponseBodyResult[];
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCollegeContactSceneStrusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListCollegeContactSceneStrusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCollegeContactSubDeptsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCollegeContactSubDeptsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 200
     */
    deptId?: number;
    /**
     * @example
     * zh_CN
     */
    language?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCollegeContactSubDeptsResponseBody extends $tea.Model {
    result?: ListCollegeContactSubDeptsResponseBodyResult[];
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCollegeContactSubDeptsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListCollegeContactSubDeptsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListOrderHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListOrderRequest extends $tea.Model {
    /**
     * @example
     * 1647503420000
     */
    createTimeEnd?: number;
    /**
     * @example
     * 1647503420000
     */
    createTimeStart?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SM123124124
     */
    merchantId?: string;
    /**
     * @example
     * 2022312312333
     */
    orderNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 200
     */
    pageSize?: number;
    /**
     * @example
     * 1
     */
    scene?: number;
    /**
     * @example
     * 20
     */
    status?: number;
    /**
     * @example
     * 202221312333
     */
    tradeNo?: string;
    /**
     * @example
     * 123123123
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListOrderResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    list?: ListOrderResponseBodyList[];
    total?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListOrderResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListOrderResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MoveStudentHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MoveStudentRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1234
     */
    operator?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2000
     */
    originClassId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2001
     */
    targetClassId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1000
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MoveStudentResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MoveStudentResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: MoveStudentResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OpenKitHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OpenKitRequest extends $tea.Model {
    /**
     * @example
     * {""}
     */
    attributes?: string;
    /**
     * @example
     * dingxxx
     */
    corpId?: string;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    /**
     * @example
     * course
     */
    isvProductScene?: string;
    /**
     * @example
     * 0
     */
    openEndTime?: number;
    /**
     * @example
     * 0
     */
    openStartTime?: number;
    /**
     * @example
     * staffxxx
     */
    openUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OpenKitResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OpenKitResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: OpenKitResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OrderInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OrderInfoRequest extends $tea.Model {
    /**
     * @example
     * 80930501630545566xx
     */
    orderNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OrderInfoResponseBody extends $tea.Model {
    result?: OrderInfoResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OrderInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: OrderInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PageQueryClassCourseHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PageQueryClassCourseRequest extends $tea.Model {
    /**
     * @example
     * classId_xxx
     */
    classId?: string;
    /**
     * @example
     * ding_xxx
     */
    corpId?: string;
    /**
     * @example
     * 0
     */
    endCourseDate?: number;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    /**
     * @example
     * 0
     */
    pageNumber?: number;
    /**
     * @example
     * 20
     */
    pageSize?: number;
    /**
     * @example
     * 0
     */
    startCourseDate?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PageQueryClassCourseResponseBody extends $tea.Model {
    result?: PageQueryClassCourseResponseBodyResult[];
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PageQueryClassCourseResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: PageQueryClassCourseResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PageQueryDevicesHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PageQueryDevicesRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    maxResults?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    nextToken?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * VIDEO_CALL
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PageQueryDevicesResponseBody extends $tea.Model {
    list?: PageQueryDevicesResponseBodyList[];
    /**
     * @example
     * 2
     */
    nextToken?: string;
    /**
     * @example
     * 1300
     */
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PageQueryDevicesResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: PageQueryDevicesResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PageQueryKitOpenRecordHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PageQueryKitOpenRecordRequest extends $tea.Model {
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    /**
     * @example
     * course
     */
    isvProductScene?: string;
    /**
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @example
     * 1
     */
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PageQueryKitOpenRecordResponseBody extends $tea.Model {
    result?: PageQueryKitOpenRecordResponseBodyResult[];
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PageQueryKitOpenRecordResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: PageQueryKitOpenRecordResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PayOrderHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PayOrderRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    faceId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * sn123
     */
    orderNo?: string;
    /**
     * @example
     * KSwZiSL1O7DiUNwjV168j3cP9ktp4bJTi5OQxAXre26KyBXza7+gCl/g1d0K3n3+9JhMqc2fUjBiENcAELw3Jb5xO/zslOeV4qFoMQfzW51+sdL/SSZCYvXEMhu9P6FAPhGZQ3vu6gr3oxUAXPIpWNb+sIfzR9epumoOXYeofH8=
     */
    signature?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * sn123
     */
    sn?: string;
    /**
     * @example
     * 1644413947909
     */
    timestamp?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    userId?: string;
    /**
     * @example
     * 1.0
     */
    version?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PayOrderResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PayOrderResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: PayOrderResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PollingConfirmStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PollingConfirmStatusRequest extends $tea.Model {
    /**
     * @example
     * testCourseCode
     */
    courseCode?: string;
    /**
     * @example
     * testExt
     */
    ext?: string;
    /**
     * @example
     * DDIsv
     */
    isvCode?: string;
    /**
     * @example
     * 1
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PollingConfirmStatusResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    universityPollingCourseStatusResponse?: PollingConfirmStatusResponseBodyUniversityPollingCourseStatusResponse;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PollingConfirmStatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: PollingConfirmStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PreDialHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PreDialRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 00003213130
     */
    callerUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 312000030213120
     */
    receiverUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * fdaf-2132
     */
    sn?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * VIDEO_CALL
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PreDialResponseBody extends $tea.Model {
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PreDialResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: PreDialResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ProvidePointHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ProvidePointRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * action01
     */
    actionCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * biz01
     */
    bizId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * personal
     */
    pointType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ProvidePointResponseBody extends $tea.Model {
    result?: ProvidePointResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ProvidePointResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ProvidePointResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAllSubjectsFromClassScheduleHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAllSubjectsFromClassScheduleRequest extends $tea.Model {
    classIds?: number[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 34524523543
     */
    opUserId?: string;
    /**
     * @example
     * KINDERGARTEN
     */
    periodCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAllSubjectsFromClassScheduleShrinkRequest extends $tea.Model {
    classIdsShrink?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 34524523543
     */
    opUserId?: string;
    /**
     * @example
     * KINDERGARTEN
     */
    periodCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAllSubjectsFromClassScheduleResponseBody extends $tea.Model {
    result?: QueryAllSubjectsFromClassScheduleResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAllSubjectsFromClassScheduleResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryAllSubjectsFromClassScheduleResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    sectionIndexList?: number[];
    /**
     * @remarks
     * This parameter is required.
     */
    subscriberIds?: string[];
    /**
     * @example
     * 168454674745
     */
    endTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 234623456
     */
    opUserId?: string;
    /**
     * @example
     * 168454674745
     */
    startTime?: number;
    /**
     * @example
     * USER
     */
    subscriberType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleResponseBody extends $tea.Model {
    config?: QueryClassScheduleResponseBodyConfig;
    courseDTOS?: QueryClassScheduleResponseBodyCourseDTOS[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryClassScheduleResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleByTimeSchoolHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleByTimeSchoolRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    endTime?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    opUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    startTime?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleByTimeSchoolResponseBody extends $tea.Model {
    result?: QueryClassScheduleByTimeSchoolResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleByTimeSchoolResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryClassScheduleByTimeSchoolResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleConfigHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleConfigRequest extends $tea.Model {
    classIds?: number[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2534522534
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleConfigShrinkRequest extends $tea.Model {
    classIdsShrink?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2534522534
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleConfigResponseBody extends $tea.Model {
    result?: QueryClassScheduleConfigResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleConfigResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryClassScheduleConfigResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCollegeContactUserDetailHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCollegeContactUserDetailRequest extends $tea.Model {
    /**
     * @example
     * 12122294
     */
    jobNumber?: string;
    /**
     * @example
     * zh_CN
     */
    language?: string;
    /**
     * @example
     * zhangsan666
     */
    userid?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCollegeContactUserDetailResponseBody extends $tea.Model {
    result?: QueryCollegeContactUserDetailResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCollegeContactUserDetailResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryCollegeContactUserDetailResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryDeviceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryDeviceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * fadf-8008
     */
    sn?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryDeviceResponseBody extends $tea.Model {
    /**
     * @example
     * 1680227019000
     */
    gmtExpiry?: number;
    /**
     * @example
     * model1
     */
    model?: string;
    /**
     * @example
     * 三年级1班班牌
     */
    name?: string;
    /**
     * @example
     * fada-8008
     */
    sn?: string;
    /**
     * @example
     * VIDEO_CALL
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryDeviceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryDeviceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryDeviceListByCorpIdHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryDeviceListByCorpIdRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    operator?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    pageNumber?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryDeviceListByCorpIdResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: QueryDeviceListByCorpIdResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryDeviceListByCorpIdResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryDeviceListByCorpIdResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEduAssetSpacesHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEduAssetSpacesRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * soke
     */
    bizCode?: string;
    /**
     * @example
     * 10
     */
    maxResults?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20110
     */
    nextToken?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEduAssetSpacesResponseBody extends $tea.Model {
    hasMore?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    nextToken?: string;
    spaces?: QueryEduAssetSpacesResponseBodySpaces[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEduAssetSpacesResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryEduAssetSpacesResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryGroupIdHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryGroupIdRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * sn123
     */
    sn?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryGroupIdResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * dingding123
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * NTK300001
     */
    groupId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 200001
     */
    merchantId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 某某商户
     */
    merchantName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 阿里云教育
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100001
     */
    pid?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryGroupIdResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryGroupIdResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryKitOpenRecordHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryKitOpenRecordRequest extends $tea.Model {
    /**
     * @example
     * dingxxx
     */
    corpId?: string;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    /**
     * @example
     * course
     */
    isvProductScene?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryKitOpenRecordResponseBody extends $tea.Model {
    result?: QueryKitOpenRecordResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryKitOpenRecordResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryKitOpenRecordResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrderHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrderRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123400
     */
    alipayAppId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10000
     */
    merchantId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * CM00001
     */
    orderNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * WWrhziOLF/XuRd3IyKwLkLeSFgKnUfeg2yLEVD9Bw+8
     */
    signature?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrderResponseBody extends $tea.Model {
    actualAmount?: number;
    /**
     * @example
     * 123400
     */
    alipayAppId?: string;
    /**
     * @example
     * 2022-11-04T17:15Z
     */
    closeTime?: string;
    /**
     * @example
     * 1672973971107
     */
    closeTimestamp?: number;
    /**
     * @example
     * 2022-11-04T17:15Z
     */
    createTime?: string;
    /**
     * @example
     * 1672973971107
     */
    createTimestamp?: number;
    labelAmount?: number;
    /**
     * @example
     * 10000
     */
    merchantId?: string;
    /**
     * @example
     * M20000100
     */
    merchantMergeOrderNo?: string;
    /**
     * @example
     * M20000100
     */
    merchantOrderNo?: string;
    /**
     * @example
     * CM0001
     */
    orderNo?: string;
    /**
     * @example
     * 1
     */
    orderType?: string;
    /**
     * @example
     * fagweefdsdgfa
     */
    outerUserId?: string;
    /**
     * @example
     * 138***
     */
    payLogonId?: string;
    payStatus?: number;
    /**
     * @example
     * 2022-11-04T17:15Z
     */
    payTime?: string;
    /**
     * @example
     * 1672973971107
     */
    payTimestamp?: number;
    /**
     * @example
     * 1
     */
    payType?: string;
    refundAmount?: number;
    refundStatus?: number;
    /**
     * @example
     * 2022-11-04T17:15Z
     */
    refundTime?: string;
    /**
     * @example
     * 1672973971107
     */
    refundTimestamp?: number;
    /**
     * @example
     * 教育产品
     */
    subject?: string;
    /**
     * @example
     * 2022080311111
     */
    tradeNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrderResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryOrderResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgRelationListHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgRelationListRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    operator?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgRelationListResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: QueryOrgRelationListResponseBodyResult[];
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgRelationListResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryOrgRelationListResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgSecretKeyHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgSecretKeyRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * DDISV
     */
    isvCode?: string;
    /**
     * @example
     * manger1234
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgSecretKeyResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    universitySecretKeyInfo?: QueryOrgSecretKeyResponseBodyUniversitySecretKeyInfo;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgSecretKeyResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryOrgSecretKeyResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgTypeHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgTypeResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1, "省级教育厅";2, "市级教育局";3, "区县教育局";4, "中心校";5, "普通学校"
     */
    orgType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgTypeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryOrgTypeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPayResultHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPayResultRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 12312333
     */
    faceId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 202201240001
     */
    orderNo?: string;
    /**
     * @example
     * KSwZiSL1O7DiUNwjV168j3cP9ktp4bJTi5OQxAXre26KyBXza7+gCl/g1d0K3n3+9JhMqc2fUjBiENcAELw3Jb5xO/zslOeV4qFoMQfzW51+sdL/SSZCYvXEMhu9P6FAPhGZQ3vu6gr3oxUAXPIpWNb+sIfzR9epumoOXYeofH8=
     */
    signature?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * sn1234
     */
    sn?: string;
    /**
     * @example
     * 1644413947909
     */
    timestamp?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20200231
     */
    userId?: string;
    /**
     * @example
     * 1.0
     */
    version?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPayResultResponseBody extends $tea.Model {
    /**
     * @example
     * 状态，取值：10：待支付，11：关单，20：支付成功
     */
    status?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPayResultResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryPayResultResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPhysicalClassroomHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPhysicalClassroomRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    classroomId?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPhysicalClassroomResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: QueryPhysicalClassroomResponseBodyResult;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPhysicalClassroomResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryPhysicalClassroomResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPurchaseInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPurchaseInfoRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 300001
     */
    merchantId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1代表视频通话
     */
    scene?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * sn123
     */
    sn?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20001
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPurchaseInfoResponseBody extends $tea.Model {
    /**
     * @example
     * dingding123
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 300001
     */
    merchantId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 小明
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1视频通话
     */
    scene?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10、已订购；11、未订购（包含已过期）；12、取消
     */
    status?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 200001
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPurchaseInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryPurchaseInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRemoteClassCourseHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRemoteClassCourseRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1635436800000
     */
    endTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manager1234
     */
    operator?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1634832000000
     */
    startTime?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRemoteClassCourseResponseBody extends $tea.Model {
    result?: QueryRemoteClassCourseResponseBodyResult[];
    /**
     * @remarks
     * This parameter is required.
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRemoteClassCourseResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryRemoteClassCourseResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySchoolUserFaceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySchoolUserFaceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 从0开始
     */
    pageNumber?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 大于0小于200
     */
    pageSize?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * sn123
     */
    sn?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1全量模式，2增量模式
     */
    type?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySchoolUserFaceResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * dingding123
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true/false
     */
    hasMore?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    userFaceList?: QuerySchoolUserFaceResponseBodyUserFaceList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySchoolUserFaceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QuerySchoolUserFaceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySnsOrderHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySnsOrderRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123400
     */
    alipayAppId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10000
     */
    merchantId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * CM00001
     */
    orderNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * WWrhziOLF/XuRd3IyKwLkLeSFgKnUfeg2yLEVD9Bw+8
     */
    signature?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySnsOrderResponseBody extends $tea.Model {
    actualAmount?: number;
    /**
     * @example
     * 123400
     */
    alipayAppId?: string;
    /**
     * @example
     * 2022-11-04T17:15Z
     */
    closeTime?: string;
    /**
     * @example
     * 1672973971107
     */
    closeTimestamp?: number;
    /**
     * @example
     * 2022-11-04T17:15Z
     */
    createTime?: string;
    /**
     * @example
     * 1672973971107
     */
    createTimestamp?: number;
    labelAmount?: number;
    /**
     * @example
     * 10000
     */
    merchantId?: string;
    /**
     * @example
     * M20000100
     */
    merchantMergeOrderNo?: string;
    /**
     * @example
     * M20000100
     */
    merchantOrderNo?: string;
    /**
     * @example
     * CM0001
     */
    orderNo?: string;
    /**
     * @example
     * 1
     */
    orderType?: string;
    outerUserId?: string;
    /**
     * @example
     * 138***
     */
    payLogonId?: string;
    payStatus?: number;
    /**
     * @example
     * 2022-11-04T17:15Z
     */
    payTime?: string;
    /**
     * @example
     * 1672973971107
     */
    payTimestamp?: number;
    /**
     * @example
     * 1
     */
    payType?: string;
    refundAmount?: number;
    refundStatus?: number;
    refundTime?: string;
    /**
     * @example
     * 1672973971107
     */
    refundTimestamp?: number;
    /**
     * @example
     * 教育产品
     */
    subject?: string;
    /**
     * @example
     * 2022080311111
     */
    tradeNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySnsOrderResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QuerySnsOrderResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryStatisticsDataHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryStatisticsDataRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    sectionIndexList?: number[];
    /**
     * @remarks
     * This parameter is required.
     */
    teacherUserIds?: string[];
    endTime?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    opUserId?: string;
    startTime?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryStatisticsDataResponseBody extends $tea.Model {
    result?: QueryStatisticsDataResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryStatisticsDataResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryStatisticsDataResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryStudentClassHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryStudentClassRequest extends $tea.Model {
    /**
     * @example
     * classIdxxx
     */
    classId?: string;
    /**
     * @example
     * 1
     */
    classType?: number;
    /**
     * @example
     * dingxxx
     */
    corpId?: string;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    studentUserIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryStudentClassResponseBody extends $tea.Model {
    result?: QueryStudentClassResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryStudentClassResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryStudentClassResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySubjectTeachersHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySubjectTeachersRequest extends $tea.Model {
    classIds?: number[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 行政老师A
     */
    opUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * cn_yuwen
     */
    subjectCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySubjectTeachersResponseBody extends $tea.Model {
    result?: QuerySubjectTeachersResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySubjectTeachersResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QuerySubjectTeachersResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTeachSubjectsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTeachSubjectsRequest extends $tea.Model {
    classIds?: number[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 24275037451244334
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTeachSubjectsResponseBody extends $tea.Model {
    result?: QueryTeachSubjectsResponseBodyResult[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTeachSubjectsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryTeachSubjectsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTeacherCourseHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTeacherCourseRequest extends $tea.Model {
    /**
     * @example
     * dingxxx
     */
    corpId?: string;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    isvCourseIdList?: string[];
    /**
     * @example
     * staffxxx
     */
    teacherUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTeacherCourseResponseBody extends $tea.Model {
    result?: QueryTeacherCourseResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTeacherCourseResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryTeacherCourseResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTransferCourseHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTransferCourseRequest extends $tea.Model {
    /**
     * @example
     * dingxxx
     */
    corpId?: string;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    /**
     * @example
     * recordId
     */
    isvRecordId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTransferCourseResponseBody extends $tea.Model {
    result?: QueryTransferCourseResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTransferCourseResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryTransferCourseResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUniversityCourseGroupHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUniversityCourseGroupRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * GS10001
     */
    courseGroupCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manger1234
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUniversityCourseGroupResponseBody extends $tea.Model {
    universityCourseGroupInfo?: QueryUniversityCourseGroupResponseBodyUniversityCourseGroupInfo;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUniversityCourseGroupResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryUniversityCourseGroupResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserFaceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserFaceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 30001
     */
    faceId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * sn123
     */
    sn?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserFaceResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * dingding123
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 30001
     */
    faceId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 小明
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 40001
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserFaceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryUserFaceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserPayInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserPayInfoRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    faceId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    sn?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserPayInfoResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    signNo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserPayInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryUserPayInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RemoveDeviceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RemoveDeviceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    merchantId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SN123
     */
    sn?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RemoveDeviceResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RemoveDeviceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: RemoveDeviceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReportDeviceLogHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReportDeviceLogRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * xdfsf20001
     */
    mediaId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * sn123
     */
    sn?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * file：普通文件
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReportDeviceLogResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 失败false，成功true。
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReportDeviceLogResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ReportDeviceLogResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReportDeviceUseLogHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReportDeviceUseLogRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    action?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123123
     */
    orderNo?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * sn123
     */
    sn?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 312323321111
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReportDeviceUseLogResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ReportDeviceUseLogResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ReportDeviceUseLogResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RollbackDeductPointHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RollbackDeductPointRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * biz01
     */
    bizId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * personal
     */
    pointType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RollbackDeductPointResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RollbackDeductPointResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: RollbackDeductPointResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveClassLearningDataHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveClassLearningDataRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    assignNum?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    assignStudentUserIds?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    bizId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * HOMEWORK
     */
    bizType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * dingxxxxxxxxxxxxxxxxx
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    deptId?: number;
    /**
     * @example
     * .jpeg
     */
    fileSuffix?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1672502400000
     */
    generatedTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    questionNum?: number;
    /**
     * @example
     * 1
     */
    questionPictureNum?: number;
    /**
     * @example
     * 1
     */
    standardAnswerPictureNum?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * shuxue
     */
    subjectCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0123456
     */
    teacherUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveClassLearningDataResponseBody extends $tea.Model {
    result?: SaveClassLearningDataResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveClassLearningDataResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SaveClassLearningDataResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveStudentLearningDataHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveStudentLearningDataRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    assignNum?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    bizId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * HOMEWORK
     */
    bizType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * dingxxxxxxxxxxxxxxxxxxxxx
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    correctNum?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    deptId?: number;
    /**
     * @example
     * .jpeg
     */
    fileSuffix?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1672502400000
     */
    generatedTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    questionNum?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0123456
     */
    studentUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * shuxue
     */
    subjectCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    submitNum?: number;
    wrongQuestions?: SaveStudentLearningDataRequestWrongQuestions[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveStudentLearningDataResponseBody extends $tea.Model {
    result?: SaveStudentLearningDataResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveStudentLearningDataResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SaveStudentLearningDataResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchTeachersHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchTeachersRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 李
     */
    nameKeyword?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchTeachersResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    users?: SearchTeachersResponseBodyUsers[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchTeachersResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SearchTeachersResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendAiCardHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendAiCardRequest extends $tea.Model {
    /**
     * @example
     * aaa_event
     */
    actionType?: string;
    bizData?: string;
    /**
     * @example
     * AI_MANAGER_PRINCIPAL
     */
    cardChannel?: string;
    /**
     * @example
     * ding23423
     */
    corpId?: string;
    /**
     * @example
     * 234234234
     */
    identifier?: string;
    /**
     * @example
     * XIWO
     */
    isvCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendAiCardResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendAiCardResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SendAiCardResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendFileMessageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendFileMessageRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    bizId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    extension?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fileName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    fileSize?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    fileUrl?: string;
    sendType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendFileMessageResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendFileMessageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SendFileMessageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendMessageHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendMessageRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123123123123
     */
    bizId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123456
     */
    fromUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * SN123456
     */
    sn?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    toUserIdList?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    type?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendMessageResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * success
     */
    successInfo?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendMessageResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SendMessageResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendPrintOrderNoticeMsgHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendPrintOrderNoticeMsgRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    createOrderTime?: string;
    deliveryCompanyName?: string;
    deliveryNumber?: string;
    deliveryTime?: string;
    paymentTime?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    price?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    sceneCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendPrintOrderNoticeMsgResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SendPrintOrderNoticeMsgResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SendPrintOrderNoticeMsgResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StartCourseHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StartCourseRequest extends $tea.Model {
    /**
     * @example
     * testCourseCode
     */
    courseCode?: string;
    /**
     * @example
     * extData
     */
    ext?: string;
    /**
     * @example
     * DDIsv
     */
    isvCode?: string;
    livePlayInfoList?: StartCourseRequestLivePlayInfoList[];
    /**
     * @example
     * 1
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StartCourseResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    universityCourseCommonResponse?: StartCourseResponseBodyUniversityCourseCommonResponse;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StartCourseResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: StartCourseResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StartCoursePrepareHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StartCoursePrepareRequest extends $tea.Model {
    /**
     * @example
     * 2021-11-16
     */
    courseDate?: string;
    /**
     * @example
     * course1
     */
    courseGroupCode?: string;
    /**
     * @example
     * device1
     */
    deviceId?: string;
    /**
     * @example
     * extNumber
     */
    ext?: string;
    /**
     * @example
     * DDISV
     */
    isvCode?: string;
    /**
     * @example
     * ""
     */
    liveCoverImage?: string;
    sectionIndex?: number[];
    /**
     * @example
     * manger1234
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StartCoursePrepareResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    universityCourseCommonResponse?: StartCoursePrepareResponseBodyUniversityCourseCommonResponse;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StartCoursePrepareResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: StartCoursePrepareResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SubscribeUniversityCourseGroupHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SubscribeUniversityCourseGroupRequest extends $tea.Model {
    /**
     * @example
     * DDS10002
     */
    courseGroupCode?: string;
    studentUserIds?: string[];
    /**
     * @example
     * manger1234
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SubscribeUniversityCourseGroupResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SubscribeUniversityCourseGroupResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SubscribeUniversityCourseGroupResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UnsubscribeUniversityCourseGroupHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UnsubscribeUniversityCourseGroupRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * GSS10023
     */
    courseGroupCode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    studentUserIds?: string[];
    /**
     * @remarks
     * This parameter is required.
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UnsubscribeUniversityCourseGroupResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UnsubscribeUniversityCourseGroupResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UnsubscribeUniversityCourseGroupResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeAlumniUserInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeAlumniUserInfoRequest extends $tea.Model {
    address?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    deptIds?: number[];
    email?: string;
    intake?: string;
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    operator?: string;
    outtake?: string;
    studentNumber?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeAlumniUserInfoResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeAlumniUserInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateCollegeAlumniUserInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeContactDeptHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeContactDeptRequest extends $tea.Model {
    autoAddUser?: boolean;
    autoApproveApply?: boolean;
    /**
     * @example
     * 这是组织单元简介
     */
    brief?: string;
    /**
     * @example
     * 20000
     */
    code?: string;
    createDeptGroup?: boolean;
    /**
     * @example
     * dept456
     */
    deptCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 200
     */
    deptId?: number;
    deptManagerUseridList?: string[];
    deptPermits?: number[];
    /**
     * @example
     * contact_class_dept
     */
    deptType?: string;
    empApplyJoinDept?: boolean;
    extension?: {
        [key: string]: string;
    };
    forceUpdateFields?: string[];
    groupContainHiddenDept?: boolean;
    groupContainOuterDept?: boolean;
    groupContainSubDept?: boolean;
    hideDept?: boolean;
    hideSceneConfig?: UpdateCollegeContactDeptRequestHideSceneConfig;
    /**
     * @example
     * zh_CN
     */
    language?: string;
    /**
     * @example
     * 软件工程
     */
    name?: string;
    /**
     * @example
     * 20
     */
    order?: number;
    /**
     * @example
     * user234
     */
    orgDeptOwner?: string;
    outerDept?: boolean;
    outerDeptOnlySelf?: boolean;
    outerPermitDepts?: number[];
    outerPermitUsers?: string[];
    outerSceneConfig?: UpdateCollegeContactDeptRequestOuterSceneConfig;
    /**
     * @example
     * 20
     */
    parentId?: number;
    /**
     * @example
     * 软件工程标识
     */
    sourceIdentifier?: string;
    /**
     * @example
     * 138xxxx0000
     */
    telephone?: string;
    userPermits?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeContactDeptResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeContactDeptResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateCollegeContactDeptResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeContactExclusiveHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeContactExclusiveRequest extends $tea.Model {
    /**
     * @example
     * @lALPDfmVUw19YdrNA-jNA-g
     */
    avatarMediaId?: string;
    deptIdList?: number[];
    deptOrderList?: UpdateCollegeContactExclusiveRequestDeptOrderList[];
    deptPositionSet?: UpdateCollegeContactExclusiveRequestDeptPositionSet[];
    deptTitleList?: UpdateCollegeContactExclusiveRequestDeptTitleList[];
    /**
     * @example
     * test@xxx.com
     */
    email?: string;
    /**
     * @example
     * college_student
     */
    empType?: string;
    extension?: {
        [key: string]: string;
    };
    /**
     * @example
     * manager_userid
     */
    forceUpdateFields?: string;
    hideMobile?: boolean;
    /**
     * @example
     * 1597573616828
     */
    hiredDate?: number;
    /**
     * @example
     * 666666
     */
    jobNumber?: string;
    /**
     * @example
     * zh_CN
     */
    language?: string;
    /**
     * @example
     * studentNo
     */
    loginIdType?: string;
    /**
     * @example
     * 123456
     */
    mainDeptId?: number;
    /**
     * @example
     * 001
     */
    managerUserid?: string;
    /**
     * @example
     * 185xxxx8888
     */
    mobile?: string;
    /**
     * @example
     * 张三
     */
    name?: string;
    /**
     * @example
     * 昵称
     */
    nickname?: string;
    /**
     * @example
     * test@xxx.com
     */
    orgEmail?: string;
    /**
     * @example
     * profession
     */
    orgEmailType?: string;
    /**
     * @example
     * 备注
     */
    remark?: string;
    seniorMode?: boolean;
    /**
     * @example
     * 010-86123456-2345
     */
    telephone?: string;
    /**
     * @example
     * 学工处处长
     */
    title?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * zhangsan666
     */
    userid?: string;
    /**
     * @example
     * 学工处办公室
     */
    workPlace?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeContactExclusiveResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeContactExclusiveResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateCollegeContactExclusiveResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeContactSceneStruHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeContactSceneStruRequest extends $tea.Model {
    /**
     * @example
     * 20
     */
    order?: number;
    /**
     * @example
     * 场景架构标识
     */
    sourceIdentifier?: string;
    /**
     * @example
     * 这是场景架构简介
     */
    struBrief?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20
     */
    struId?: number;
    /**
     * @example
     * 科研架构
     */
    struName?: string;
    /**
     * @example
     * stru_research_dept
     */
    struType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeContactSceneStruResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeContactSceneStruResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateCollegeContactSceneStruResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeContactUserHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeContactUserRequest extends $tea.Model {
    deptIdList?: number[];
    deptOrderList?: UpdateCollegeContactUserRequestDeptOrderList[];
    deptPositionSet?: UpdateCollegeContactUserRequestDeptPositionSet[];
    deptTitleList?: UpdateCollegeContactUserRequestDeptTitleList[];
    /**
     * @example
     * test@xxx.com
     */
    email?: string;
    /**
     * @example
     * college_student
     */
    empType?: string;
    extension?: {
        [key: string]: string;
    };
    /**
     * @example
     * manager_userid
     */
    forceUpdateFields?: string;
    hideMobile?: boolean;
    /**
     * @example
     * 1597573616828
     */
    hiredDate?: number;
    /**
     * @example
     * 666666
     */
    jobNumber?: string;
    /**
     * @example
     * zh_CN
     */
    language?: string;
    /**
     * @example
     * 123456
     */
    mainDeptId?: number;
    /**
     * @example
     * 001
     */
    managerUserid?: string;
    /**
     * @example
     * 张三
     */
    name?: string;
    /**
     * @example
     * test@xxx.com
     */
    orgEmail?: string;
    /**
     * @example
     * 备注
     */
    remark?: string;
    seniorMode?: boolean;
    /**
     * @example
     * 010-86123456-2345
     */
    telephone?: string;
    /**
     * @example
     * 学工处处长
     */
    title?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * zhangsan666
     */
    userid?: string;
    /**
     * @example
     * 学工处办公室
     */
    workPlace?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeContactUserResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeContactUserResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateCollegeContactUserResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeUserEmpTypeHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeUserEmpTypeRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * college_student
     */
    empType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * zhangsan666
     */
    userid?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeUserEmpTypeResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeUserEmpTypeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateCollegeUserEmpTypeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCoursesOfClassHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCoursesOfClassRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    courses?: UpdateCoursesOfClassRequestCourses[];
    /**
     * @remarks
     * This parameter is required.
     */
    sectionConfig?: UpdateCoursesOfClassRequestSectionConfig;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 234536346
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCoursesOfClassResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCoursesOfClassResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateCoursesOfClassResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdatePhysicalClassroomHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdatePhysicalClassroomRequest extends $tea.Model {
    /**
     * @example
     * 主楼
     */
    classroomBuilding?: string;
    /**
     * @example
     * 主校区
     */
    classroomCampus?: string;
    /**
     * @example
     * 3层
     */
    classroomFloor?: string;
    /**
     * @example
     * 10001
     */
    classroomId?: number;
    /**
     * @example
     * 实验室
     */
    classroomName?: string;
    /**
     * @example
     * 301
     */
    classroomNumber?: string;
    /**
     * @example
     * Y
     */
    directBroadcast?: string;
    /**
     * @example
     * {}
     */
    ext?: string;
    /**
     * @example
     * manger1234
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdatePhysicalClassroomResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdatePhysicalClassroomResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdatePhysicalClassroomResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateRemoteClassCourseHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateRemoteClassCourseRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    attendParticipants?: UpdateRemoteClassCourseRequestAttendParticipants[];
    /**
     * @remarks
     * This parameter is required.
     */
    authCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * qdPP123456
     */
    courseCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 春天来了
     */
    courseName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1634184000000
     */
    endTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1634176800000
     */
    startTime?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    teachingParticipant?: UpdateRemoteClassCourseRequestTeachingParticipant;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateRemoteClassCourseResponseBody extends $tea.Model {
    result?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateRemoteClassCourseResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateRemoteClassCourseResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateRemoteClassDeviceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateRemoteClassDeviceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    authCode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    deviceCode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    deviceName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateRemoteClassDeviceResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateRemoteClassDeviceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateRemoteClassDeviceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateUniversityCourseGroupHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateUniversityCourseGroupRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * GS1001
     */
    courseGroupCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 高等数学
     */
    courseGroupIntroduce?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 高等数学
     */
    courseGroupName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    courserGroupItemModels?: UpdateUniversityCourseGroupRequestCourserGroupItemModels[];
    /**
     * @example
     * {}
     */
    ext?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * manger1234
     */
    opUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateUniversityCourseGroupResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    result?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateUniversityCourseGroupResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateUniversityCourseGroupResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadLearningDataCallbackHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadLearningDataCallbackRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    bizId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * HOMEWORK
     */
    bizType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * dingxxxxxxxxxxxxxxxxxxxx
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    deptId?: number;
    /**
     * @example
     * 1672502400000
     */
    generatedTime?: number;
    /**
     * @example
     * 0123456
     */
    studentUserId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * shuxue
     */
    subjectCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadLearningDataCallbackResponseBody extends $tea.Model {
    result?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UploadLearningDataCallbackResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UploadLearningDataCallbackResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class VPaasProxyHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class VPaasProxyRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * init
     */
    actionCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * {"a":"testA","b":"testB"}
     */
    params?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCVGpgpjjbBS1Pg1tYx23KDJiXokVdKFLdJznKxQe+fZcIOtcQDIYrfrBfHmiC/gASeF5NUTSrwjkr/i/2gqhIIxRinNJQm8L4GJ6fRGjN8tND7AfhfkGYIfOJCLFSiaYSa4TCM7WsmztkpR7DSvb4P+K/ppqYFfUB46a9nCcvecQIDAQAB
     */
    publicKey?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class VPaasProxyResponseBody extends $tea.Model {
    result?: string;
    ticket?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class VPaasProxyResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: VPaasProxyResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ValidateNewGradeManagerHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ValidateNewGradeManagerRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * VYn5fYjORJMi
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ValidateNewGradeManagerResponseBody extends $tea.Model {
    matchRule?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ValidateNewGradeManagerResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ValidateNewGradeManagerResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ValidateUserRoleHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ValidateUserRoleRequest extends $tea.Model {
    /**
     * @example
     * 1677600000000
     */
    timeThreshold?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * VYn5fYjORJMi
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ValidateUserRoleResponseBody extends $tea.Model {
    matchParentIdentity?: boolean;
    matchTeacherIdentity?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ValidateUserRoleResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ValidateUserRoleResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassCourseHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassCourseRequest extends $tea.Model {
    /**
     * @example
     * class_xxx
     */
    classId?: string;
    /**
     * @example
     * ding_xxx
     */
    corpId?: string;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    /**
     * @example
     * course_xxx
     */
    isvCourseId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassCourseResponseBody extends $tea.Model {
    result?: QueryClassCourseResponseBodyResult;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassCourseResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryClassCourseResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeAlumniDeptsRequestDepts extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    superId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeAlumniDeptsResponseBodyResult extends $tea.Model {
    corpId?: string;
    deptId?: number;
    deptType?: string;
    hasSubDept?: boolean;
    name?: string;
    superId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeAlumniUserInfoResponseBodyResult extends $tea.Model {
    success?: boolean;
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeContactExclusiveRequestDeptOrderList extends $tea.Model {
    /**
     * @example
     * 123456
     */
    deptId?: number;
    /**
     * @example
     * 1
     */
    order?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeContactExclusiveRequestDeptPositionSet extends $tea.Model {
    /**
     * @example
     * 123456
     */
    deptId?: number;
    /**
     * @example
     * 001
     */
    managerUserId?: string;
    /**
     * @example
     * 学工处处长
     */
    title?: string;
    /**
     * @example
     * 学工处办公室
     */
    workPlace?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeContactExclusiveRequestDeptTitleList extends $tea.Model {
    /**
     * @example
     * 123456
     */
    deptId?: number;
    /**
     * @example
     * 学工处处长
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeContactExclusiveResponseBodyResult extends $tea.Model {
    createResult?: number;
    unionId?: string;
    userid?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeContactUserRequestDeptOrderList extends $tea.Model {
    /**
     * @example
     * 123456
     */
    deptId?: number;
    /**
     * @example
     * 1
     */
    order?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeContactUserRequestDeptPositionSet extends $tea.Model {
    /**
     * @example
     * 123456
     */
    deptId?: number;
    /**
     * @example
     * 001
     */
    managerUserId?: string;
    /**
     * @example
     * 学工处处长
     */
    title?: string;
    /**
     * @example
     * 学工处办公室
     */
    workPlace?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeContactUserRequestDeptTitleList extends $tea.Model {
    /**
     * @example
     * 123456
     */
    deptId?: number;
    /**
     * @example
     * 学工处处长
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCollegeContactUserResponseBodyResult extends $tea.Model {
    createResult?: number;
    unionId?: string;
    userid?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateRequestDataCardRuleItemParamList extends $tea.Model {
    cardRuleAttr?: string;
    cardTaskCode?: string;
    dailyDubbing?: number;
    relationId?: string;
    relationTitle?: string;
    relationUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateRequestDataOrgClassStudentGroupListClassListStudents extends $tea.Model {
    name?: string;
    staffId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateRequestDataOrgClassStudentGroupListClassList extends $tea.Model {
    classId?: number;
    className?: string;
    students?: BatchCreateRequestDataOrgClassStudentGroupListClassListStudents[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateRequestDataOrgClassStudentGroupList extends $tea.Model {
    classList?: BatchCreateRequestDataOrgClassStudentGroupListClassList[];
    corpId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateRequestData extends $tea.Model {
    /**
     * @example
     * true
     */
    canReissueCard?: boolean;
    /**
     * @example
     * 3
     */
    cardCycle?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    cardFrequency?: number[];
    /**
     * @remarks
     * This parameter is required.
     */
    cardRuleItemParamList?: BatchCreateRequestDataCardRuleItemParamList[];
    classIds?: string[];
    classNames?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 打卡的内容
     */
    content?: string;
    effectDate?: number;
    medias?: string;
    needMetering?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    orgClassStudentGroupList?: BatchCreateRequestDataOrgClassStudentGroupList[];
    /**
     * @remarks
     * This parameter is required.
     */
    remindHour?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    remindMinute?: number;
    targetRole?: string;
    templateId?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    title?: string;
    unitOfMeasurement?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateResponseBodyResult extends $tea.Model {
    corpIdCardIdMap?: {
        [key: string]: string;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateCourseRequestCourseDetailItemListTeacherList extends $tea.Model {
    /**
     * @example
     * 李老师
     */
    teacherName?: string;
    /**
     * @example
     * staff_xxx
     */
    teacherUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateCourseRequestCourseDetailItemList extends $tea.Model {
    /**
     * @example
     * {""}
     */
    attributes?: string;
    /**
     * @example
     * classroom_xxx
     */
    classRoomId?: string;
    /**
     * @example
     * 音乐教室
     */
    classRoomName?: string;
    /**
     * @example
     * courseCode_xxx
     */
    courseCode?: string;
    /**
     * @example
     * 0
     */
    courseDate?: number;
    /**
     * @example
     * 语言
     */
    courseName?: string;
    /**
     * @example
     * 1
     */
    courseWeek?: number;
    /**
     * @example
     * 0
     */
    endTime?: number;
    /**
     * @example
     * courseId_xxx
     */
    isvCourseId?: string;
    /**
     * @example
     * memo_xxx
     */
    memo?: string;
    /**
     * @example
     * 0
     */
    startTime?: number;
    /**
     * @example
     * 1
     */
    status?: number;
    /**
     * @example
     * 1
     */
    teachWeek?: number;
    teacherList?: BatchCreateCourseRequestCourseDetailItemListTeacherList[];
    /**
     * @example
     * 第一节
     */
    timeslotName?: string;
    /**
     * @example
     * 1
     */
    timeslotNum?: number;
    /**
     * @example
     * 1
     */
    type?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateStudentClassRequestStudentList extends $tea.Model {
    /**
     * @example
     * {""}
     */
    attributes?: string;
    /**
     * @example
     * 小明
     */
    studentName?: string;
    /**
     * @example
     * studentxxx
     */
    studentUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchCreateTeacherCourseRequestTeacherCourseDetailItemList extends $tea.Model {
    /**
     * @example
     * {"key":"value"}
     */
    attributes?: string;
    /**
     * @example
     * courseIdxxx
     */
    isvCourseId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchOrgCreateHWRequestOpenSelectItemListClassListStudents extends $tea.Model {
    avatar?: string;
    name?: string;
    staffId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchOrgCreateHWRequestOpenSelectItemListClassList extends $tea.Model {
    all?: boolean;
    classId?: string;
    className?: string;
    students?: BatchOrgCreateHWRequestOpenSelectItemListClassListStudents[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchOrgCreateHWRequestOpenSelectItemList extends $tea.Model {
    classList?: BatchOrgCreateHWRequestOpenSelectItemListClassList[];
    corpId?: string;
    selectedClassesDesc?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchOrgCreateHWResponseBodyResultPublishList extends $tea.Model {
    corpid?: string;
    hwid?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class BatchOrgCreateHWResponseBodyResult extends $tea.Model {
    publishList?: BatchOrgCreateHWResponseBodyResultPublishList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardBatchQueryCardsResponseBodyResultCards extends $tea.Model {
    /**
     * @example
     * industry_center
     */
    cardBizCode?: string;
    /**
     * @example
     * 234234234
     */
    cardId?: number;
    /**
     * @example
     * 2
     */
    cardStatus?: number;
    /**
     * @example
     * 打卡任务
     */
    content?: string;
    /**
     * @example
     * dingdf19b4ee0d73233735c2f4657eb6378f
     */
    corpId?: string;
    /**
     * @example
     * 2023-11-16
     */
    effectTime?: string;
    finished?: boolean;
    /**
     * @example
     * 2023-11-19
     */
    gmtCreate?: string;
    /**
     * @example
     * 2023-11-16
     */
    optEndTime?: string;
    /**
     * @example
     * 234234234
     */
    optEndUserId?: string;
    /**
     * @example
     * 张三
     */
    optEndUserName?: string;
    /**
     * @example
     * 2023-11-16
     */
    sendTime?: string;
    /**
     * @example
     * 2023-11-16
     */
    startTime?: string;
    /**
     * @example
     * 2
     */
    status?: number;
    /**
     * @example
     * 23234234
     */
    teacherId?: string;
    /**
     * @example
     * 张三
     */
    teacherName?: string;
    /**
     * @example
     * 每日锻炼
     */
    title?: string;
    /**
     * @example
     * 1
     */
    type?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardBatchQueryCardsResponseBodyResult extends $tea.Model {
    cards?: CardBatchQueryCardsResponseBodyResultCards[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardGetCardResponseBodyResult extends $tea.Model {
    /**
     * @example
     * www.dingtalk.com
     */
    attr?: string;
    /**
     * @example
     * industry_center
     */
    cardBizCode?: string;
    /**
     * @example
     * 23424234
     */
    cardBizId?: string;
    /**
     * @example
     * 1
     */
    cardContentCount?: number;
    /**
     * @example
     * 2
     */
    cardCycle?: number;
    cardFrequency?: number[];
    /**
     * @example
     * 234234234324
     */
    cardId?: number;
    /**
     * @example
     * 1
     */
    cardStatus?: number;
    /**
     * @example
     * www.dingtalk.com
     */
    cardUrl?: string;
    /**
     * @example
     * 音乐
     */
    categoryContentTag?: string;
    /**
     * @example
     * www.dingtalk.com
     */
    categoryCoverImageUrl?: string;
    /**
     * @example
     * www.dingtalk.com
     */
    categoryCreateCardSmallImageUrl?: string;
    /**
     * @example
     * www.dingtalk.com
     */
    categoryListSmallImageUrl?: string;
    /**
     * @example
     * 美术
     */
    categoryName?: string;
    classIds?: string[];
    classNames?: string[];
    /**
     * @example
     * 打卡任务
     */
    content?: string;
    /**
     * @example
     * dingdf19b4ee0d73233735c2f4657eb6378f
     */
    corpId?: string;
    /**
     * @example
     * 2023-11-15
     */
    effectTime?: string;
    finished?: boolean;
    /**
     * @example
     * www.dingtalk.com
     */
    media?: string;
    /**
     * @example
     * 2023-11-15
     */
    optEndTime?: string;
    /**
     * @example
     * 234234234
     */
    optEndUserId?: string;
    /**
     * @example
     * 张三
     */
    optEndUserName?: string;
    /**
     * @example
     * 20
     */
    remindNotPunchCardHour?: number;
    /**
     * @example
     * 10
     */
    remindNotPunchCardMinute?: number;
    /**
     * @example
     * 2023-11-15
     */
    sendTime?: string;
    /**
     * @example
     * YUFANAI
     */
    sourceType?: string;
    /**
     * @example
     * 2023-11-15
     */
    startTime?: string;
    /**
     * @example
     * 1
     */
    status?: number;
    /**
     * @example
     * 424234324324
     */
    systemTime?: number;
    /**
     * @example
     * 234234234
     */
    teacherId?: string;
    /**
     * @example
     * 张三
     */
    teacherName?: string;
    /**
     * @example
     * www.dingtalk.com
     */
    templateCoverImageUrl?: string;
    /**
     * @example
     * 每日复习
     */
    title?: string;
    /**
     * @example
     * 3
     */
    type?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardGetCardFinishProgressResponseBodyResultClassStatisticsProcess extends $tea.Model {
    /**
     * @example
     * 2023-11-01
     */
    date?: string;
    /**
     * @example
     * 11
     */
    finishedStudentsNum?: number;
    /**
     * @example
     * 11
     */
    needFinishStudentsNum?: number;
    /**
     * @example
     * CARD_TASK_CODE_0
     */
    taskCode?: string;
    /**
     * @example
     * 2023-11-01
     */
    today?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardGetCardFinishProgressResponseBodyResultClassStatistics extends $tea.Model {
    /**
     * @example
     * 234234234
     */
    cardBizId?: string;
    /**
     * @example
     * 二年级1班
     */
    cardBizName?: string;
    /**
     * @example
     * 3424234
     */
    classId?: string;
    /**
     * @example
     * 二年级1班
     */
    className?: string;
    process?: CardGetCardFinishProgressResponseBodyResultClassStatisticsProcess[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardGetCardFinishProgressResponseBodyResultPatriarchStatistics extends $tea.Model {
    /**
     * @example
     * CARD_TASK_CODE_0
     */
    cardTaskCode?: string;
    /**
     * @example
     * 2023-11-01
     */
    date?: string;
    isFinished?: boolean;
    isFinishedByReissueCard?: boolean;
    isLastDay?: boolean;
    reissueCard?: boolean;
    /**
     * @example
     * 23424234
     */
    studentId?: string;
    /**
     * @example
     * 李四
     */
    studentName?: string;
    /**
     * @example
     * 2023-11-01
     */
    today?: string;
    /**
     * @example
     * 234234234
     */
    userSubTaskId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardGetCardFinishProgressResponseBodyResult extends $tea.Model {
    classStatistics?: CardGetCardFinishProgressResponseBodyResultClassStatistics[];
    patriarchStatistics?: CardGetCardFinishProgressResponseBodyResultPatriarchStatistics[];
    studentNameList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardQueryCardFeedsResponseBodyResultPostsAuthor extends $tea.Model {
    /**
     * @example
     * 博澜爸爸
     */
    showName?: string;
    /**
     * @example
     * 234234234
     */
    userId?: string;
    /**
     * @example
     * guardian
     */
    userRole?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardQueryCardFeedsResponseBodyResultPostsContent extends $tea.Model {
    /**
     * @example
     * 0
     */
    contentType?: number;
    /**
     * @example
     * {\"cardEditRedirectDTO\":{\"jumpType\":\"internal\"},\"content\":\"测试\",\"medias\":\"\\\"[{\\\\\\\"type\\\\\\\":\\\\\\\"image\\\\\\\",\\\\\\\"data\\\\\\\":{\\\\\\\"mediaUrl\\\\\\\":\\\\\\\"https://static.dingtalk.com/media/lQDPNDWzHQNv3fjNBQDNAlCwKIvuyoJrOfAFLEMmYrpsAA_592_1280.jpg\\\\\\\",\\\\\\\"thumbnailUrl\\\\\\\":\\\\\\\"https://static.dingtalk.com/media/lQDPNDWzHQNv3fjNBQDNAlCwKIvuyoJrOfAFLEMmYrpsAA_592_1280.jpg_200x200.jpg?bizType=edu_card\\\\\\\"}}]\\\"\",\"reissueCard\":false,\"resultEvaluation\":\"\",\"showName\":\"博澜爸爸\",\"sourceType\":\"\",\"studentId\":\"3000000000847390208\",\"unitOfMeasurement\":\"\"}
     */
    text?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardQueryCardFeedsResponseBodyResultPosts extends $tea.Model {
    author?: CardQueryCardFeedsResponseBodyResultPostsAuthor;
    /**
     * @example
     * 3
     */
    bizType?: number;
    content?: CardQueryCardFeedsResponseBodyResultPostsContent;
    /**
     * @example
     * 23424234234
     */
    createAt?: number;
    /**
     * @example
     * 0
     */
    feedType?: number;
    /**
     * @example
     * 232423423
     */
    postId?: number;
    /**
     * @example
     * 0
     */
    status?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CardQueryCardFeedsResponseBodyResult extends $tea.Model {
    hasMore?: boolean;
    posts?: CardQueryCardFeedsResponseBodyResultPosts[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAppOrderRequestDetailList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1234000
     */
    goodsId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 绘画图书
     */
    goodsName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    goodsPrice?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    goodsQuantity?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCollegeContactDeptRequestHideSceneConfig extends $tea.Model {
    active?: boolean;
    chatboxSubtitle?: boolean;
    nodeList?: boolean;
    profile?: boolean;
    search?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCollegeContactDeptRequestOuterSceneConfig extends $tea.Model {
    active?: boolean;
    chatboxSubtitle?: boolean;
    nodeList?: boolean;
    profile?: boolean;
    search?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCollegeContactDeptResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 20
     */
    deptId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCollegeContactSceneStruResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 20
     */
    struId?: number;
    /**
     * @example
     * 20
     */
    studentDeptId?: number;
    /**
     * @example
     * 20
     */
    teacherDeptId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCourseRequestTeacherList extends $tea.Model {
    /**
     * @example
     * 李老师
     */
    teacherName?: string;
    /**
     * @example
     * staff_xxx
     */
    teacherUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomClassRequestCustomClass extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021级培训班
     */
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomClassResponseBodyResult extends $tea.Model {
    deptId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomDeptRequestCustomDept extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 紫金港校区
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * custom_dept
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomDeptResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 1234
     */
    deptId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateInviteUrlResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    inviteUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOrderRequestDetailList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100
     */
    actualAmount?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100
     */
    itemAmount?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 测试商品
     */
    itemName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    scene?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateOrderFlowRequestDetailList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100
     */
    actualAmount?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 100
     */
    itemAmount?: number;
    /**
     * @example
     * 123
     */
    itemId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 测试商品
     */
    itemName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    scene?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRemoteClassCourseRequestAttendParticipants extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding23456
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 234567
     */
    participantId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRemoteClassCourseRequestTeachingParticipant extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding1234
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123456
     */
    participantId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateRemoteClassCourseResponseBodyResult extends $tea.Model {
    courseCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSectionConfigRequestSectionConfigsSectionEndDate extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 31
     */
    dayOfMonth?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 12
     */
    month?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021
     */
    year?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSectionConfigRequestSectionConfigsSectionModelsSectionEndTime extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 12
     */
    hour?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    min?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSectionConfigRequestSectionConfigsSectionModelsSectionStartTime extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 11
     */
    hour?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    min?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSectionConfigRequestSectionConfigsSectionModels extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    sectionEndTime?: CreateSectionConfigRequestSectionConfigsSectionModelsSectionEndTime;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    sectionIndex?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 第一节
     */
    sectionName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    sectionStartTime?: CreateSectionConfigRequestSectionConfigsSectionModelsSectionStartTime;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * COURSE：上课节次 REST：休息节次
     */
    sectionType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSectionConfigRequestSectionConfigsSectionStartDate extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 9
     */
    dayOfMonth?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 11
     */
    month?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021
     */
    year?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSectionConfigRequestSectionConfigsSemesterEndDate extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 31
     */
    dayOfMonth?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 12
     */
    month?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021
     */
    year?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSectionConfigRequestSectionConfigsSemesterStartDate extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 31
     */
    dayOfMonth?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 8
     */
    month?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021
     */
    year?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSectionConfigRequestSectionConfigs extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 第一学期课表
     */
    scheduleName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-2022
     */
    schoolYear?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    sectionEndDate?: CreateSectionConfigRequestSectionConfigsSectionEndDate;
    /**
     * @remarks
     * This parameter is required.
     */
    sectionModels?: CreateSectionConfigRequestSectionConfigsSectionModels[];
    /**
     * @remarks
     * This parameter is required.
     */
    sectionStartDate?: CreateSectionConfigRequestSectionConfigsSectionStartDate;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    semester?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    semesterEndDate?: CreateSectionConfigRequestSectionConfigsSemesterEndDate;
    /**
     * @remarks
     * This parameter is required.
     */
    semesterStartDate?: CreateSectionConfigRequestSectionConfigsSemesterStartDate;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateSnsAppOrderRequestDetailList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1234000
     */
    goodsId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 绘画图书
     */
    goodsName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    goodsPrice?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    goodsQuantity?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateUniversityCourseGroupRequestCourserGroupItemModelsCourserGroupItemEndDate extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 31
     */
    dayOfMonth?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    month?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021
     */
    year?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateUniversityCourseGroupRequestCourserGroupItemModelsCourserGroupItemStartDate extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    dayOfMonth?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    month?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021
     */
    year?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateUniversityCourseGroupRequestCourserGroupItemModels extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1、单周；2、双周；3、全周
     */
    classPeriodType?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10001
     */
    classroomId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1;音视频直播\2:线下课程\4:音视频及线下
     */
    courseType?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    courserGroupItemEndDate?: CreateUniversityCourseGroupRequestCourserGroupItemModelsCourserGroupItemEndDate;
    /**
     * @remarks
     * This parameter is required.
     */
    courserGroupItemStartDate?: CreateUniversityCourseGroupRequestCourserGroupItemModelsCourserGroupItemStartDate;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    dayOfWeek?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    sectionIndex?: number[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateUniversityCourseGroupRequestTeacherInfos extends $tea.Model {
    /**
     * @example
     * TEACHER授课教师/TEACHING_ASSISTANT助教
     */
    participantRole?: string;
    /**
     * @example
     * manger1234
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateUniversityCourseGroupResponseBodyCourseGroupInfo extends $tea.Model {
    /**
     * @example
     * GS10001
     */
    courseGroupCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EduGetFileSpaceResponseBodyResult extends $tea.Model {
    folderId?: string;
    spaceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EduListUserByFromUserIdsResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 666666
     */
    campusId?: number;
    /**
     * @example
     * 123456
     */
    classId?: number;
    /**
     * @example
     * 555555
     */
    gradeId?: number;
    /**
     * @example
     * 叔大
     */
    name?: string;
    /**
     * @example
     * 444444
     */
    periodId?: number;
    role?: string;
    /**
     * @example
     * 111111
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EduTeacherListResponseBodyResultTeacherDetails extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 张三
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * teacher
     */
    role?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 人员的unionId。
     */
    unionId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 77621233
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EduTeacherListResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    hasMore?: boolean;
    teacherDetails?: EduTeacherListResponseBodyResultTeacherDetails[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EndCourseRequestLivePlayInfoList extends $tea.Model {
    /**
     * @example
     * testUrl
     */
    liveInputUrl?: string;
    /**
     * @example
     * testUrl
     */
    liveOutputFlvUrl?: string;
    /**
     * @example
     * testUrl
     */
    liveOutputHlsUrl?: string;
    /**
     * @example
     * 1
     */
    liveType?: number;
    /**
     * @example
     * testUrl
     */
    replayUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class EndCourseResponseBodyUniversityCourseCommonResponse extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * testCourseCode
     */
    courseCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetChildrenResponseBodyResultBindStudents extends $tea.Model {
    /**
     * @example
     * 1
     */
    gradeLevel?: number;
    /**
     * @example
     * dinge066bea21c63b79b35c2f4657eb6378f
     */
    identityId?: string;
    /**
     * @example
     * primary_school
     */
    periodCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetChildrenResponseBodyResult extends $tea.Model {
    bindStudents?: GetChildrenResponseBodyResultBindStudents[];
    /**
     * @example
     * 杭州市
     */
    city?: string;
    /**
     * @example
     * 西湖区
     */
    district?: string;
    /**
     * @example
     * 1
     */
    gradeLevel?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 张三
     */
    name?: string;
    /**
     * @example
     * primary_school
     */
    periodCode?: string;
    /**
     * @example
     * 浙江省
     */
    province?: string;
    /**
     * @example
     * 330106
     */
    regionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCollegeAlumniDeptsResponseBodyResult extends $tea.Model {
    corpId?: string;
    deptId?: number;
    deptType?: string;
    hasSubDept?: boolean;
    name?: string;
    superId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCollegeAlumniUserInfoResponseBodyResultDepts extends $tea.Model {
    corpId?: string;
    deptId?: number;
    hasSubDept?: boolean;
    isIndustryDept?: boolean;
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCollegeAlumniUserInfoResponseBodyResult extends $tea.Model {
    address?: string;
    avatar?: string;
    corpId?: string;
    depts?: GetCollegeAlumniUserInfoResponseBodyResultDepts[];
    email?: string;
    intake?: string;
    inviteId?: number;
    mobile?: string;
    name?: string;
    outtake?: string;
    studentNumber?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCollegeContactDeptDetailResponseBodyResultHideSceneConfig extends $tea.Model {
    active?: boolean;
    chatboxSubtitle?: boolean;
    nodeList?: boolean;
    profile?: boolean;
    search?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCollegeContactDeptDetailResponseBodyResultOuterSceneConfig extends $tea.Model {
    active?: boolean;
    chatboxSubtitle?: boolean;
    nodeList?: boolean;
    profile?: boolean;
    search?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCollegeContactDeptDetailResponseBodyResult extends $tea.Model {
    autoAddUser?: boolean;
    autoApproveApply?: boolean;
    /**
     * @example
     * 这是简介
     */
    brief?: string;
    /**
     * @example
     * 10000
     */
    code?: string;
    createDeptGroup?: boolean;
    /**
     * @example
     * dept456
     */
    deptCode?: string;
    /**
     * @example
     * chat234
     */
    deptGroupChatId?: string;
    /**
     * @example
     * 200
     */
    deptId?: number;
    deptManagerUseridList?: string[];
    deptPermits?: number[];
    /**
     * @example
     * contact_class_dept
     */
    deptType?: string;
    empApplyJoinDept?: boolean;
    /**
     * @example
     * {}
     */
    extension?: string;
    fromUnionOrg?: boolean;
    groupContainSubDept?: boolean;
    hideDept?: boolean;
    hideSceneConfig?: GetCollegeContactDeptDetailResponseBodyResultHideSceneConfig;
    /**
     * @example
     * 软件工程
     */
    name?: string;
    /**
     * @example
     * 200
     */
    order?: number;
    /**
     * @example
     * user345
     */
    orgDeptOwner?: string;
    outerDept?: boolean;
    outerPermitDepts?: number[];
    outerPermitUsers?: string[];
    outerSceneConfig?: GetCollegeContactDeptDetailResponseBodyResultOuterSceneConfig;
    /**
     * @example
     * 200
     */
    parentId?: number;
    /**
     * @example
     * 软件工程标识
     */
    sourceIdentifier?: string;
    /**
     * @example
     * 200
     */
    struId?: number;
    /**
     * @example
     * campus
     */
    tags?: string;
    /**
     * @example
     * 138xxxx0000
     */
    telephone?: string;
    userPermits?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetCollegeContactStandardStruDeptDetailResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 456
     */
    struId?: number;
    /**
     * @example
     * 890
     */
    studentDeptId?: number;
    /**
     * @example
     * 678
     */
    teacherDeptId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetDefaultChildResponseBodyBindStudents extends $tea.Model {
    classId?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    period?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    staffId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetEduUserIdentityResponseBodyData extends $tea.Model {
    matchGuardianRule?: boolean;
    matchTeacherRule?: boolean;
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetFileDownloadInfoByPackageIdResponseBodyResult extends $tea.Model {
    fileId?: string;
    mediaId?: string;
    spaceId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetImageTempDownloadUrlResponseBodyResult extends $tea.Model {
    extension?: string;
    fileName?: string;
    fileSize?: number;
    url?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOpenCourseDetailResponseBodyPushModel extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    pushOrgNameList?: string[];
    /**
     * @remarks
     * This parameter is required.
     */
    pushRoleNameList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetOpenCoursesResponseBodyCourseList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * fdjakl-fdaf-ds
     */
    courseId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * https://static.dingtalk.com/media/lALPDgCwRt4FagzMi8yZ_153_139.png
     */
    coverUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    feedType?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * https://h5.dingtalk.com/live/video_lesson.htm?feedId=4aa5ter-05d8-4aac-834a-3b3847cf642e&mcnId=7536041420201104593&feedProperty=1&itemId=4aa563e1-05d8-4aac-841a-3b3847cf642e&dd_nav_bgcolor=FF2C2D2F#/live
     */
    jumpUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1618369786000
     */
    startTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123124312314
     */
    teacherId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 张老师
     */
    teacherName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 开学第一课
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPointActionRecordRequestBody extends $tea.Model {
    bizId?: string;
    ownerId?: string;
    pointType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPointActionRecordResponseBodyResult extends $tea.Model {
    actionTime?: string;
    quantity?: number;
    status?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPointInfoResponseBodyResult extends $tea.Model {
    availableQuota?: number;
    endTime?: string;
    startTime?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRemoteClassCourseResponseBodyResultAttendParticipants extends $tea.Model {
    /**
     * @example
     * ding23456
     */
    corpId?: string;
    /**
     * @example
     * 组织234
     */
    orgName?: string;
    /**
     * @example
     * 865306
     */
    participantId?: string;
    /**
     * @example
     * 二年级1班
     */
    participantName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRemoteClassCourseResponseBodyResultRecordInfos extends $tea.Model {
    /**
     * @example
     * 2021-11-17T02:08:45Z
     */
    startTime?: string;
    /**
     * @example
     * 2021-11-17T04:08:45Z
     */
    stopTime?: string;
    /**
     * @example
     * http://oss.xxx.com/xxxx
     */
    url?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRemoteClassCourseResponseBodyResultTeachingParticipant extends $tea.Model {
    /**
     * @example
     * ding1234
     */
    corpId?: string;
    /**
     * @example
     * 组织123
     */
    orgName?: string;
    /**
     * @example
     * 881436
     */
    participantId?: string;
    /**
     * @example
     * 一年级1班
     */
    participantName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetRemoteClassCourseResponseBodyResult extends $tea.Model {
    attendParticipants?: GetRemoteClassCourseResponseBodyResultAttendParticipants[];
    /**
     * @example
     * false
     */
    canEdit?: boolean;
    /**
     * @example
     * UvCIp16813006
     */
    courseCode?: string;
    /**
     * @example
     * 春天来了
     */
    courseName?: string;
    /**
     * @example
     * 1635157800000
     */
    endTime?: number;
    /**
     * @example
     * https://pre-live.edu.dingtalk.com/live/showLive?courseCode=UvCIp16813006#/aiclass
     */
    liveUrl?: string;
    recordInfos?: GetRemoteClassCourseResponseBodyResultRecordInfos[];
    /**
     * @example
     * 1
     */
    roomStatus?: number;
    /**
     * @example
     * 1635150600000
     */
    startTime?: number;
    /**
     * @example
     * 1
     */
    status?: number;
    teachingParticipant?: GetRemoteClassCourseResponseBodyResultTeachingParticipant;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShareRoleMembersResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding4lj234j3hj43hl312lh
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    memberUserIdListInTrunkOrg?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetShareRolesResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 123214123
     */
    shareRoleCode?: string;
    /**
     * @example
     * 校长
     */
    shareRoleName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTaskListResponseBodyTaskList extends $tea.Model {
    /**
     * @example
     * 2023希望校区初中
     */
    name?: string;
    /**
     * @example
     * 4240028
     */
    taskId?: number;
    /**
     * @example
     * 2023
     */
    taskYear?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetTaskStudentListResponseBodyStudentList extends $tea.Model {
    /**
     * @example
     * 张三
     */
    name?: string;
    /**
     * @example
     * F
     */
    sexuality?: string;
    /**
     * @example
     * 675656
     */
    studentId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitCoursesOfClassRequestCoursesDateModel extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 9
     */
    dayOfMonth?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 11
     */
    month?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2020
     */
    year?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitCoursesOfClassRequestCoursesSectionModel extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    sectionIndex?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 第一节
     */
    sectionName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitCoursesOfClassRequestCourses extends $tea.Model {
    /**
     * @example
     * 语文
     */
    courseName?: string;
    /**
     * @example
     * 李老师
     */
    creatorName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    dateModel?: InitCoursesOfClassRequestCoursesDateModel;
    /**
     * @example
     * 正心楼1-1
     */
    location?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    sectionModel?: InitCoursesOfClassRequestCoursesSectionModel;
    teacherStaffIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitCoursesOfClassRequestSectionConfigEnd extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 9
     */
    dayOfMonth?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 11
     */
    month?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2020
     */
    year?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitCoursesOfClassRequestSectionConfigSectionModelsEnd extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    hour?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 45
     */
    min?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitCoursesOfClassRequestSectionConfigSectionModelsStart extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    hour?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    min?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitCoursesOfClassRequestSectionConfigSectionModels extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    end?: InitCoursesOfClassRequestSectionConfigSectionModelsEnd;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    sectionIndex?: number;
    /**
     * @example
     * COURSE：上课节次 REST：休息节次
     */
    sectionType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    start?: InitCoursesOfClassRequestSectionConfigSectionModelsStart;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitCoursesOfClassRequestSectionConfigStart extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 9
     */
    dayOfMonth?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 11
     */
    month?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2020
     */
    year?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InitCoursesOfClassRequestSectionConfig extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    end?: InitCoursesOfClassRequestSectionConfigEnd;
    /**
     * @remarks
     * This parameter is required.
     */
    sectionModels?: InitCoursesOfClassRequestSectionConfigSectionModels[];
    /**
     * @remarks
     * This parameter is required.
     */
    start?: InitCoursesOfClassRequestSectionConfigStart;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InsertSectionConfigRequestEnd extends $tea.Model {
    /**
     * @example
     * 1
     */
    dayOfMonth?: number;
    /**
     * @example
     * 1
     */
    month?: number;
    /**
     * @example
     * 2021
     */
    year?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InsertSectionConfigRequestSectionModelsEnd extends $tea.Model {
    /**
     * @example
     * 10
     */
    hour?: number;
    /**
     * @example
     * 45
     */
    min?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InsertSectionConfigRequestSectionModelsStart extends $tea.Model {
    /**
     * @example
     * 10
     */
    hour?: number;
    /**
     * @example
     * 0
     */
    min?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InsertSectionConfigRequestSectionModels extends $tea.Model {
    end?: InsertSectionConfigRequestSectionModelsEnd;
    /**
     * @example
     * 1
     */
    sectionIndex?: number;
    /**
     * @example
     * 语文
     */
    sectionName?: string;
    /**
     * @example
     * REST/COURSE
     */
    sectionType?: string;
    start?: InsertSectionConfigRequestSectionModelsStart;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InsertSectionConfigRequestStart extends $tea.Model {
    /**
     * @example
     * 1
     */
    dayOfMonth?: number;
    /**
     * @example
     * 3
     */
    month?: number;
    /**
     * @example
     * 2021
     */
    year?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class IsvDataWriteRequestRowValueList extends $tea.Model {
    /**
     * @example
     * id
     */
    name?: string;
    /**
     * @example
     * 1
     */
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class IsvDataWriteResponseBodyResult extends $tea.Model {
    needRetry?: boolean;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class IsvMetadataQueryResponseBodyResultFields extends $tea.Model {
    /**
     * @example
     * 该字段为id主键
     */
    description?: string;
    /**
     * @example
     * id
     */
    fieldKey?: string;
    /**
     * @example
     * id主键
     */
    fieldName?: string;
    /**
     * @example
     * varchar
     */
    fieldType?: string;
    primaryKey?: boolean;
    required?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class IsvMetadataQueryResponseBodyResult extends $tea.Model {
    fields?: IsvMetadataQueryResponseBodyResultFields[];
    /**
     * @example
     * tb_test01
     */
    tableCode?: string;
    tableExist?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCollegeContactDeptTypeConfigResponseBodyResult extends $tea.Model {
    /**
     * @example
     * contact_class_dept
     */
    deptType?: string;
    /**
     * @example
     * 班级
     */
    name?: string;
    userDef?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCollegeContactSceneStrusResponseBodyResult extends $tea.Model {
    enable?: boolean;
    hasStruFixedDept?: boolean;
    /**
     * @example
     * 这是科研架构简介
     */
    struBrief?: string;
    /**
     * @example
     * 20
     */
    struId?: number;
    /**
     * @example
     * 科研架构
     */
    struName?: string;
    /**
     * @example
     * stru_research_dept
     */
    struType?: string;
    /**
     * @example
     * 20
     */
    studentDeptId?: number;
    /**
     * @example
     * 20
     */
    teacherDeptId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCollegeContactSubDeptsResponseBodyResult extends $tea.Model {
    autoAddUser?: boolean;
    createDeptGroup?: boolean;
    /**
     * @example
     * dept456
     */
    deptCode?: string;
    /**
     * @example
     * 456
     */
    deptId?: number;
    /**
     * @example
     * contact_class_dept
     */
    deptType?: string;
    /**
     * @example
     * {}
     */
    extension?: string;
    fromUnionOrg?: boolean;
    /**
     * @example
     * 软件工程
     */
    name?: string;
    /**
     * @example
     * 200
     */
    parentId?: number;
    /**
     * @example
     * 软件工程标识
     */
    sourceIdentifier?: string;
    /**
     * @example
     * 200
     */
    struId?: number;
    /**
     * @example
     * campus
     */
    tags?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListOrderResponseBodyList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    actualAmount?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    buyerId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    createTime?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    endTime?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    orderNo?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    payTime?: number;
    refundNo?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    scene?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    startTime?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    status?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    tradeNo?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OrderInfoResponseBodyResultItemList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 商品名称
     */
    itemName?: string;
    /**
     * @example
     * 2
     */
    itemNum?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class OrderInfoResponseBodyResult extends $tea.Model {
    /**
     * @example
     * xxx店铺
     */
    address?: string;
    itemList?: OrderInfoResponseBodyResultItemList[];
    /**
     * @example
     * 808324521
     */
    orderNo?: string;
    /**
     * @example
     * 7245
     */
    receiverPhoneSuffix?: string;
    /**
     * @example
     * 商家名称
     */
    shopName?: string;
    userId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PageQueryClassCourseResponseBodyResult extends $tea.Model {
    /**
     * @example
     * {""}
     */
    attributes?: string;
    /**
     * @example
     * classId_xxx
     */
    classId?: string;
    /**
     * @example
     * 一年级一班
     */
    className?: string;
    /**
     * @example
     * room_xxx
     */
    classRoomId?: string;
    /**
     * @example
     * 音乐教室
     */
    classRoomName?: string;
    /**
     * @example
     * 0
     */
    classType?: number;
    /**
     * @example
     * ding_xxx
     */
    corpId?: string;
    /**
     * @example
     * code_xxx
     */
    courseCode?: string;
    /**
     * @example
     * 2024-11-21 00:00:00
     */
    courseDate?: string;
    /**
     * @example
     * 语文
     */
    courseName?: string;
    /**
     * @example
     * 1
     */
    courseWeek?: number;
    /**
     * @example
     * 2024-11-21 00:00:00
     */
    endTime?: string;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    /**
     * @example
     * courseId
     */
    isvCourseId?: string;
    /**
     * @example
     * 备注
     */
    memo?: string;
    /**
     * @example
     * 2024
     */
    schoolYear?: string;
    /**
     * @example
     * 1
     */
    semester?: number;
    /**
     * @example
     * 2024-11-21 00:00:00
     */
    startTime?: string;
    /**
     * @example
     * 1
     */
    status?: number;
    /**
     * @example
     * 1
     */
    teachWeek?: number;
    /**
     * @example
     * 第一节
     */
    timeslotName?: string;
    /**
     * @example
     * 1
     */
    timeslotNum?: number;
    /**
     * @example
     * 1
     */
    type?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PageQueryDevicesResponseBodyList extends $tea.Model {
    /**
     * @example
     * 1696753792000
     */
    gmtExpiry?: number;
    /**
     * @example
     * model1
     */
    model?: string;
    /**
     * @example
     * 三年级1班班牌
     */
    name?: string;
    /**
     * @example
     * fadf-8008
     */
    sn?: string;
    /**
     * @example
     * VIDEO_CALL
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PageQueryKitOpenRecordResponseBodyResult extends $tea.Model {
    /**
     * @example
     * {""}
     */
    attributes?: string;
    /**
     * @example
     * dingxxx
     */
    corpId?: string;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    /**
     * @example
     * course
     */
    isvProductScene?: string;
    /**
     * @example
     * 2024-08-20 00:00:00
     */
    openEndTime?: string;
    /**
     * @example
     * 2024-01-20 00:00:00
     */
    openStartTime?: string;
    /**
     * @example
     * staffxxx
     */
    openUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PollingConfirmStatusResponseBodyUniversityPollingCourseStatusResponseLivePlayInfoList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * testUrl
     */
    liveInputUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * testUrl
     */
    liveOutputUrl?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    liveType?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * testUrl
     */
    replayUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class PollingConfirmStatusResponseBodyUniversityPollingCourseStatusResponse extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    confirmStatus?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * testCourseCode
     */
    courseCode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    livePlayInfoList?: PollingConfirmStatusResponseBodyUniversityPollingCourseStatusResponseLivePlayInfoList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ProvidePointResponseBodyResult extends $tea.Model {
    availableQuota?: number;
    provideNum?: number;
    provideSuccess?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAllSubjectsFromClassScheduleResponseBodyResultExtTeacherList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * url
     */
    avator?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 李老师
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 5824343
     */
    uid?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2534523452
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAllSubjectsFromClassScheduleResponseBodyResultExt extends $tea.Model {
    /**
     * @example
     * #000000
     */
    backgroundColor?: string;
    /**
     * @example
     * 2345
     */
    classId?: number;
    /**
     * @example
     * #000000
     */
    fontColor?: string;
    teacherList?: QueryAllSubjectsFromClassScheduleResponseBodyResultExtTeacherList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryAllSubjectsFromClassScheduleResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 创建者orgId
     */
    creatorOrgId?: number;
    ext?: QueryAllSubjectsFromClassScheduleResponseBodyResultExt;
    /**
     * @example
     * HIGH_SCHOOL
     */
    periodCode?: string;
    /**
     * @example
     * cn_yuwen
     */
    subjectCode?: string;
    /**
     * @example
     * 语文
     */
    subjectName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleResponseBodyConfigEnd extends $tea.Model {
    /**
     * @example
     * 1
     */
    dayOfMonth?: number;
    /**
     * @example
     * 2
     */
    month?: number;
    /**
     * @example
     * 2020
     */
    year?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleResponseBodyConfigSectionModelsEnd extends $tea.Model {
    /**
     * @example
     * 10
     */
    hour?: number;
    /**
     * @example
     * 45
     */
    min?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleResponseBodyConfigSectionModelsStart extends $tea.Model {
    /**
     * @example
     * 10
     */
    hour?: number;
    /**
     * @example
     * 0
     */
    min?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleResponseBodyConfigSectionModels extends $tea.Model {
    end?: QueryClassScheduleResponseBodyConfigSectionModelsEnd;
    /**
     * @example
     * 1
     */
    sectionIndex?: number;
    /**
     * @example
     * 第一节
     */
    sectionName?: string;
    /**
     * @example
     * COURSE
     */
    sectionType?: string;
    start?: QueryClassScheduleResponseBodyConfigSectionModelsStart;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleResponseBodyConfigStart extends $tea.Model {
    /**
     * @example
     * 1
     */
    dayOfMonth?: number;
    /**
     * @example
     * 1
     */
    month?: number;
    /**
     * @example
     * 2020
     */
    year?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleResponseBodyConfig extends $tea.Model {
    end?: QueryClassScheduleResponseBodyConfigEnd;
    sectionModels?: QueryClassScheduleResponseBodyConfigSectionModels[];
    start?: QueryClassScheduleResponseBodyConfigStart;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleResponseBodyCourseDTOSClassrooms extends $tea.Model {
    interactInfo?: string;
    targetId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleResponseBodyCourseDTOSEduUserModels extends $tea.Model {
    name?: string;
    uid?: number;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleResponseBodyCourseDTOS extends $tea.Model {
    /**
     * @example
     * 2345
     */
    classId?: number;
    classrooms?: QueryClassScheduleResponseBodyCourseDTOSClassrooms[];
    /**
     * @example
     * cn_yuwen
     */
    code?: string;
    /**
     * @example
     * Ekk24352534
     */
    courseGroupCode?: string;
    /**
     * @example
     * ruu
     */
    coverUrl?: string;
    /**
     * @example
     * ding32534536235
     */
    creatorCorpId?: string;
    /**
     * @example
     * 234525235
     */
    creatorUserId?: string;
    /**
     * @example
     * 行政老师A
     */
    creatorUserName?: string;
    eduUserModels?: QueryClassScheduleResponseBodyCourseDTOSEduUserModels[];
    endTime?: number;
    /**
     * @example
     * ext
     */
    extInfo?: string;
    /**
     * @example
     * 这是语文
     */
    introduce?: string;
    /**
     * @example
     * 语文
     */
    name?: string;
    /**
     * @example
     * 2
     */
    sectionIndex?: number;
    /**
     * @example
     * 语文
     */
    sectionName?: string;
    startTime?: number;
    /**
     * @example
     * 0
     */
    status?: number;
    /**
     * @example
     * cn_yuwen
     */
    subjectCode?: string;
    /**
     * @example
     * ding32534536235
     */
    teacherCorpId?: string;
    /**
     * @example
     * 25354252543
     */
    teacherUserId?: string;
    /**
     * @example
     * 李老师
     */
    teacherUserName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleByTimeSchoolResponseBodyResultClassrooms extends $tea.Model {
    interactInfo?: string;
    targetId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleByTimeSchoolResponseBodyResultEduUserModels extends $tea.Model {
    name?: string;
    uid?: number;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleByTimeSchoolResponseBodyResult extends $tea.Model {
    /**
     * @example
     * cn_yuwen_12341
     */
    bizKey?: string;
    /**
     * @example
     * 2345
     */
    classId?: number;
    classrooms?: QueryClassScheduleByTimeSchoolResponseBodyResultClassrooms[];
    /**
     * @example
     * EKK243
     */
    code?: string;
    /**
     * @example
     * Ek1234
     */
    courseGroupCode?: string;
    /**
     * @example
     * url
     */
    coverUrl?: string;
    /**
     * @example
     * Ekk512345
     */
    creatorCorpId?: string;
    /**
     * @example
     * 5234523452
     */
    creatorUserId?: string;
    /**
     * @example
     * 行政老师A
     */
    creatorUserName?: string;
    eduUserModels?: QueryClassScheduleByTimeSchoolResponseBodyResultEduUserModels[];
    /**
     * @example
     * 1682399879
     */
    endTime?: number;
    extInfo?: string;
    /**
     * @example
     * 这是语文
     */
    introduce?: string;
    /**
     * @example
     * 语文
     */
    name?: string;
    /**
     * @example
     * 1
     */
    sectionIndex?: number;
    /**
     * @example
     * 第一节
     */
    sectionName?: string;
    /**
     * @example
     * 1682397879
     */
    startTime?: number;
    status?: number;
    /**
     * @example
     * cn_yuwen
     */
    subjectCode?: string;
    /**
     * @example
     * ding253453
     */
    teacherCorpId?: string;
    /**
     * @example
     * 25234534552345
     */
    teacherUserId?: string;
    /**
     * @example
     * 李老师
     */
    teacherUserName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleConfigResponseBodyResultEnd extends $tea.Model {
    /**
     * @example
     * 30
     */
    dayOfMonth?: number;
    /**
     * @example
     * 1
     */
    month?: number;
    /**
     * @example
     * 2020
     */
    year?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleConfigResponseBodyResultSectionModelsEnd extends $tea.Model {
    /**
     * @example
     * 10
     */
    hour?: number;
    /**
     * @example
     * 45
     */
    min?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleConfigResponseBodyResultSectionModelsStart extends $tea.Model {
    /**
     * @example
     * 10
     */
    hour?: number;
    /**
     * @example
     * 0
     */
    min?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleConfigResponseBodyResultSectionModels extends $tea.Model {
    end?: QueryClassScheduleConfigResponseBodyResultSectionModelsEnd;
    /**
     * @example
     * 1
     */
    sectionIndex?: number;
    /**
     * @example
     * 第一节
     */
    sectionName?: string;
    sectionType?: string;
    start?: QueryClassScheduleConfigResponseBodyResultSectionModelsStart;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleConfigResponseBodyResultStart extends $tea.Model {
    /**
     * @example
     * 1
     */
    dayOfMonth?: number;
    /**
     * @example
     * 2
     */
    month?: number;
    /**
     * @example
     * 2020
     */
    year?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassScheduleConfigResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2345
     */
    classId?: number;
    end?: QueryClassScheduleConfigResponseBodyResultEnd;
    sectionModels?: QueryClassScheduleConfigResponseBodyResultSectionModels[];
    start?: QueryClassScheduleConfigResponseBodyResultStart;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCollegeContactUserDetailResponseBodyResultDeptOrderList extends $tea.Model {
    /**
     * @example
     * 123456
     */
    deptId?: number;
    /**
     * @example
     * 1
     */
    order?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCollegeContactUserDetailResponseBodyResultDeptPositionSet extends $tea.Model {
    /**
     * @example
     * 123456
     */
    deptId?: number;
    isMain?: boolean;
    /**
     * @example
     * 001
     */
    managerUserId?: string;
    /**
     * @example
     * 学工处处长
     */
    title?: string;
    /**
     * @example
     * 学工处办公室
     */
    workPlace?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCollegeContactUserDetailResponseBodyResultDeptTypeSet extends $tea.Model {
    /**
     * @example
     * 123456
     */
    deptId?: number;
    /**
     * @example
     * 土木202班
     */
    deptName?: string;
    /**
     * @example
     * stru_standard_dept
     */
    deptStructType?: string;
    /**
     * @example
     * contact_class_dept
     */
    deptType?: string;
    /**
     * @example
     * 10000
     */
    structDeptId?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCollegeContactUserDetailResponseBodyResultLeaderInDept extends $tea.Model {
    /**
     * @example
     * 123456
     */
    deptId?: number;
    leader?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCollegeContactUserDetailResponseBodyResultRoleList extends $tea.Model {
    /**
     * @example
     * 职务
     */
    groupName?: string;
    /**
     * @example
     * 100
     */
    id?: number;
    /**
     * @example
     * 宿舍长
     */
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCollegeContactUserDetailResponseBodyResultUnionEmpExtUnionEmpMapList extends $tea.Model {
    /**
     * @example
     * dingxxx
     */
    corpId?: string;
    /**
     * @example
     * 5000
     */
    userid?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCollegeContactUserDetailResponseBodyResultUnionEmpExt extends $tea.Model {
    /**
     * @example
     * dingxxx
     */
    corpId?: string;
    unionEmpMapList?: QueryCollegeContactUserDetailResponseBodyResultUnionEmpExtUnionEmpMapList[];
    /**
     * @example
     * 500
     */
    userid?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCollegeContactUserDetailResponseBodyResult extends $tea.Model {
    active?: boolean;
    admin?: boolean;
    /**
     * @example
     * xxxxxx
     */
    avatar?: string;
    boss?: boolean;
    deptIdList?: number[];
    deptOrderList?: QueryCollegeContactUserDetailResponseBodyResultDeptOrderList[];
    deptPositionSet?: QueryCollegeContactUserDetailResponseBodyResultDeptPositionSet[];
    deptTypeSet?: QueryCollegeContactUserDetailResponseBodyResultDeptTypeSet[];
    /**
     * @example
     * test@xxx.com
     */
    email?: string;
    /**
     * @example
     * college_student
     */
    empType?: string;
    exclusiveAccount?: boolean;
    exclusiveAccountCorpId?: string;
    /**
     * @example
     * 组织名称
     */
    exclusiveAccountCorpName?: string;
    /**
     * @example
     * dingtalk
     */
    exclusiveAccountType?: string;
    /**
     * @example
     * {"学号":"12122294","在校状态":"新生","学生类别":"本科生","考生号":"999888"}
     */
    extension?: string;
    hideMobile?: boolean;
    /**
     * @example
     * 1597573616828
     */
    hiredDate?: number;
    /**
     * @example
     * 12122294
     */
    jobNumber?: string;
    leaderInDept?: QueryCollegeContactUserDetailResponseBodyResultLeaderInDept[];
    /**
     * @example
     * 12122294
     */
    loginId?: string;
    /**
     * @example
     * studentNo
     */
    loginType?: string;
    /**
     * @example
     * 123456
     */
    mainDeptId?: number;
    /**
     * @example
     * 111111
     */
    managerUserid?: string;
    /**
     * @example
     * 188****4567
     */
    mobile?: string;
    /**
     * @example
     * 张三
     */
    name?: string;
    /**
     * @example
     * test@xxx.com
     */
    orgEmail?: string;
    /**
     * @example
     * profession
     */
    orgEmailType?: string;
    realAuthed?: boolean;
    /**
     * @example
     * 这是一个备注
     */
    remark?: string;
    roleList?: QueryCollegeContactUserDetailResponseBodyResultRoleList[];
    senior?: boolean;
    /**
     * @example
     * 86
     */
    stateCode?: string;
    /**
     * @example
     * 010-86123456-2345
     */
    telephone?: string;
    /**
     * @example
     * 学工处处长
     */
    title?: string;
    unionEmpExt?: QueryCollegeContactUserDetailResponseBodyResultUnionEmpExt;
    /**
     * @example
     * z21HjQliSzpw0YWCNxmii6u2Os62cZ62iSZ
     */
    unionId?: string;
    /**
     * @example
     * zhangsan666
     */
    userid?: string;
    /**
     * @example
     * 学工处办公室
     */
    workPlace?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryDeviceListByCorpIdResponseBodyResultList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    appStatus?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    deviceCode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    deviceName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryDeviceListByCorpIdResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    hasMore?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    list?: QueryDeviceListByCorpIdResponseBodyResultList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryEduAssetSpacesResponseBodySpaces extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    createTimeMillis?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    modifyTimeMillis?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    permissionMode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    quota?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    spaceId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    spaceName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    spaceType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    usedQuota?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryKitOpenRecordResponseBodyResult extends $tea.Model {
    /**
     * @example
     * {""}
     */
    attributes?: string;
    /**
     * @example
     * dingxxx
     */
    corpId?: string;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    /**
     * @example
     * course
     */
    isvProductScene?: string;
    /**
     * @example
     * 2025-01-20 00:00:00
     */
    openEndTime?: string;
    /**
     * @example
     * 2024-01-20 00:00:00
     */
    openStartTime?: string;
    /**
     * @example
     * staffxxx
     */
    openUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgRelationListResponseBodyResult extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    deviceCount?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgSecretKeyResponseBodyUniversitySecretKeyInfo extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ghiufhk123
     */
    secretKey?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryPhysicalClassroomResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 主楼
     */
    classroomBuilding?: string;
    /**
     * @example
     * 主校区
     */
    classroomCampus?: string;
    /**
     * @example
     * 3层
     */
    classroomFloor?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10001
     */
    classroomId?: number;
    /**
     * @example
     * 实验教室
     */
    classroomName?: string;
    /**
     * @example
     * 301
     */
    classroomNumber?: string;
    /**
     * @example
     * Y
     */
    directBroadcast?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRemoteClassCourseResponseBodyResultAttendParticipants extends $tea.Model {
    corpId?: string;
    orgName?: string;
    participantId?: string;
    participantName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRemoteClassCourseResponseBodyResultTeachingParticipant extends $tea.Model {
    corpId?: string;
    orgName?: string;
    participantId?: string;
    participantName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRemoteClassCourseResponseBodyResult extends $tea.Model {
    attendParticipants?: QueryRemoteClassCourseResponseBodyResultAttendParticipants[];
    canEdit?: boolean;
    courseCode?: string;
    courseName?: string;
    courseWays?: string[];
    endTime?: number;
    startTime?: number;
    status?: number;
    teachingParticipant?: QueryRemoteClassCourseResponseBodyResultTeachingParticipant;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySchoolUserFaceResponseBodyUserFaceList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 200001
     */
    faceId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 小明
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1有效；0无效
     */
    status?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 30001
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryStatisticsDataResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 2345
     */
    classId?: number;
    /**
     * @example
     * 6
     */
    courseCount?: number;
    /**
     * @example
     * 9
     */
    courseHours?: number;
    /**
     * @example
     * cn_shuxue
     */
    subjectCode?: string;
    /**
     * @example
     * 语文
     */
    subjectName?: number;
    /**
     * @example
     * 2352345345
     */
    userId?: string;
    /**
     * @example
     * 李老师
     */
    userName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryStudentClassResponseBodyResultStudentList extends $tea.Model {
    /**
     * @example
     * {""}
     */
    attributes?: string;
    /**
     * @example
     * 小明
     */
    studentName?: string;
    /**
     * @example
     * studentxxx
     */
    studentUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryStudentClassResponseBodyResult extends $tea.Model {
    /**
     * @example
     * classIdxxx
     */
    classId?: string;
    /**
     * @example
     * 1
     */
    classType?: number;
    /**
     * @example
     * dingxxx
     */
    corpId?: string;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    studentList?: QueryStudentClassResponseBodyResultStudentList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QuerySubjectTeachersResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 3333333
     */
    classId?: number;
    /**
     * @example
     * dingding142523424
     */
    corpId?: string;
    /**
     * @example
     * kindergarten
     */
    periodCode?: string;
    /**
     * @example
     * cn_yuwen
     */
    subjectCode?: string;
    /**
     * @example
     * 语文
     */
    subjectName?: string;
    /**
     * @example
     * 李老师
     */
    teacherName?: string;
    /**
     * @example
     * 50142345134
     */
    teacherUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTeachSubjectsResponseBodyResult extends $tea.Model {
    /**
     * @example
     * 333333
     */
    classId?: number;
    /**
     * @example
     * dingding142523424
     */
    corpId?: string;
    /**
     * @example
     * kindergarten
     */
    periodCode?: string;
    /**
     * @example
     * cn_yuwen
     */
    subjectCode?: string;
    /**
     * @example
     * 语文
     */
    subjectName?: string;
    /**
     * @example
     * 李老师
     */
    teacherName?: string;
    /**
     * @example
     * 50142345134
     */
    teacherUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTeacherCourseResponseBodyResultTeacherCourseDetailItemList extends $tea.Model {
    attributes?: string;
    isvCourseId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTeacherCourseResponseBodyResult extends $tea.Model {
    corpId?: string;
    isvCode?: string;
    teacherCourseDetailItemList?: QueryTeacherCourseResponseBodyResultTeacherCourseDetailItemList[];
    teacherName?: string;
    teacherUserId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryTransferCourseResponseBodyResult extends $tea.Model {
    /**
     * @example
     * {""}
     */
    attributes?: string;
    /**
     * @example
     * classIdx
     */
    classId?: string;
    /**
     * @example
     * 一年级一班
     */
    className?: string;
    /**
     * @example
     * ding_xxx
     */
    corpId?: string;
    /**
     * @example
     * ISV_XXX
     */
    isvCode?: string;
    /**
     * @example
     * record_xxx
     */
    isvRecordId?: string;
    /**
     * @example
     * srcCode
     */
    srcCourseCode?: string;
    /**
     * @example
     * 0
     */
    srcCourseDate?: number;
    /**
     * @example
     * srcName
     */
    srcCourseName?: string;
    /**
     * @example
     * srcId
     */
    srcIsvCourseId?: string;
    /**
     * @example
     * 第一节
     */
    srcTimeslotName?: string;
    /**
     * @example
     * 1
     */
    srcTimeslotNum?: number;
    /**
     * @example
     * tarCode
     */
    tarCourseCode?: string;
    /**
     * @example
     * 0
     */
    tarCourseDate?: number;
    /**
     * @example
     * tarName
     */
    tarCourseName?: string;
    /**
     * @example
     * tarId
     */
    tarIsvCourseId?: string;
    /**
     * @example
     * 第一节
     */
    tarTimeslotName?: string;
    /**
     * @example
     * 1
     */
    tarTimeslotNum?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUniversityCourseGroupResponseBodyUniversityCourseGroupInfoCourserGroupItemModelsCourserGroupItemEndDate extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 31
     */
    dayOfMonth?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    month?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021
     */
    year?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUniversityCourseGroupResponseBodyUniversityCourseGroupInfoCourserGroupItemModelsCourserGroupItemStartDate extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    dayOfMonth?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    month?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021
     */
    year?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUniversityCourseGroupResponseBodyUniversityCourseGroupInfoCourserGroupItemModels extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1、单周；2、双周；3、全周
     */
    classPeriodType?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10001
     */
    classroomId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1:音视频直播；2:线下课程；4:音视频及线下
     */
    courseType?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    courserGroupItemEndDate?: QueryUniversityCourseGroupResponseBodyUniversityCourseGroupInfoCourserGroupItemModelsCourserGroupItemEndDate;
    /**
     * @remarks
     * This parameter is required.
     */
    courserGroupItemStartDate?: QueryUniversityCourseGroupResponseBodyUniversityCourseGroupInfoCourserGroupItemModelsCourserGroupItemStartDate;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 7
     */
    dayOfWeek?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    sectionIndex?: number[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUniversityCourseGroupResponseBodyUniversityCourseGroupInfo extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * GS1001
     */
    courseGroupCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 高数
     */
    courseGroupIntroduce?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 高数_李老师
     */
    courseGroupName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    courserGroupItemModels?: QueryUniversityCourseGroupResponseBodyUniversityCourseGroupInfoCourserGroupItemModels[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * GZ1001
     */
    isvCourseGroupCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * university
     */
    periodCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-2022
     */
    schoolYear?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    semester?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 高等数学
     */
    subjectName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveClassLearningDataResponseBodyResult extends $tea.Model {
    questionUploadUrlList?: string[];
    standardAnswerUploadUrlList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveStudentLearningDataRequestWrongQuestions extends $tea.Model {
    knowledgePoints?: string[];
    /**
     * @example
     * 1
     */
    questionNo?: string;
    /**
     * @example
     * 1
     */
    questionPictureNum?: number;
    /**
     * @example
     * 1
     */
    standardAnswerPictureNum?: number;
    /**
     * @example
     * 1
     */
    userAnswerPictureNum?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveStudentLearningDataResponseBodyResultWrongQuestions extends $tea.Model {
    /**
     * @example
     * 1
     */
    questionNo?: string;
    questionUploadUrlList?: string[];
    standardAnswerUploadUrlList?: string[];
    userAnswerUploadUrlList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SaveStudentLearningDataResponseBodyResult extends $tea.Model {
    saveSuccess?: boolean;
    wrongQuestions?: SaveStudentLearningDataResponseBodyResultWrongQuestions[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SearchTeachersResponseBodyUsers extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    classId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 紫金港校区-小学-二年级2019级-二年级8班
     */
    deptName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 李老师
     */
    name?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 12345678
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StartCourseRequestLivePlayInfoList extends $tea.Model {
    /**
     * @example
     * testUrl
     */
    liveInputUrl?: string;
    /**
     * @example
     * testUrl
     */
    liveOutputFlvUrl?: string;
    /**
     * @example
     * testUrl
     */
    liveOutputHlsUrl?: string;
    /**
     * @example
     * 1
     */
    liveType?: number;
    /**
     * @example
     * testUrl
     */
    replayUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StartCourseResponseBodyUniversityCourseCommonResponse extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * testCourseCode
     */
    courseCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StartCoursePrepareResponseBodyUniversityCourseCommonResponse extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * testCourseCode
     */
    courseCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeContactDeptRequestHideSceneConfig extends $tea.Model {
    active?: boolean;
    chatboxSubtitle?: boolean;
    nodeList?: boolean;
    profile?: boolean;
    search?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeContactDeptRequestOuterSceneConfig extends $tea.Model {
    active?: boolean;
    chatboxSubtitle?: boolean;
    nodeList?: boolean;
    profile?: boolean;
    search?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeContactExclusiveRequestDeptOrderList extends $tea.Model {
    /**
     * @example
     * 123456
     */
    deptId?: number;
    /**
     * @example
     * 1
     */
    order?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeContactExclusiveRequestDeptPositionSet extends $tea.Model {
    /**
     * @example
     * 123456
     */
    deptId?: number;
    /**
     * @example
     * 001
     */
    managerUserId?: string;
    /**
     * @example
     * 学工处处长
     */
    title?: string;
    /**
     * @example
     * 学工处办公室
     */
    workPlace?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeContactExclusiveRequestDeptTitleList extends $tea.Model {
    /**
     * @example
     * 123456
     */
    deptId?: number;
    /**
     * @example
     * 学工处处长
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeContactUserRequestDeptOrderList extends $tea.Model {
    /**
     * @example
     * 123456
     */
    deptId?: number;
    /**
     * @example
     * 1
     */
    order?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeContactUserRequestDeptPositionSet extends $tea.Model {
    /**
     * @example
     * 123456
     */
    deptId?: number;
    /**
     * @example
     * 001
     */
    managerUserId?: string;
    /**
     * @example
     * 学工处处长
     */
    title?: string;
    /**
     * @example
     * 学工处办公室
     */
    workPlace?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCollegeContactUserRequestDeptTitleList extends $tea.Model {
    /**
     * @example
     * 123456
     */
    deptId?: number;
    /**
     * @example
     * 学工处处长
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCoursesOfClassRequestCoursesDateModel extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 9
     */
    dayOfMonth?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 11
     */
    month?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2020
     */
    year?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCoursesOfClassRequestCoursesSectionModel extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    sectionIndex?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 第一节/午休
     */
    sectionName?: string;
    sectionType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCoursesOfClassRequestCourses extends $tea.Model {
    courseCode?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    courseGroupCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 语文
     */
    courseName?: string;
    /**
     * @example
     * 李老师
     */
    creatorName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    dateModel?: UpdateCoursesOfClassRequestCoursesDateModel;
    deleteTag?: boolean;
    /**
     * @example
     * 正心楼1-1
     */
    location?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    sectionModel?: UpdateCoursesOfClassRequestCoursesSectionModel;
    teacherStaffIds?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCoursesOfClassRequestSectionConfigSectionModelsEnd extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    hour?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 45
     */
    min?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCoursesOfClassRequestSectionConfigSectionModelsStart extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    hour?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 0
     */
    min?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCoursesOfClassRequestSectionConfigSectionModels extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    end?: UpdateCoursesOfClassRequestSectionConfigSectionModelsEnd;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    sectionIndex?: number;
    /**
     * @example
     * COURSE：上课节次 REST：休息节次
     */
    sectionType?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    start?: UpdateCoursesOfClassRequestSectionConfigSectionModelsStart;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateCoursesOfClassRequestSectionConfig extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    sectionModels?: UpdateCoursesOfClassRequestSectionConfigSectionModels[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateRemoteClassCourseRequestAttendParticipants extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding234567
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 234567
     */
    participantId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateRemoteClassCourseRequestTeachingParticipant extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding123456
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123456
     */
    participantId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateUniversityCourseGroupRequestCourserGroupItemModelsCourserGroupItemEndDate extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 31
     */
    dayOfMonth?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    month?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021
     */
    year?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateUniversityCourseGroupRequestCourserGroupItemModelsCourserGroupItemStartDate extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    dayOfMonth?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 10
     */
    month?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021
     */
    year?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateUniversityCourseGroupRequestCourserGroupItemModels extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1、单周；2、双周；3、全周
     */
    classPeriodType?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1:音视频直播\2:线下课程\4:音视频及线下
     */
    classroomId?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    courseType?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    courserGroupItemEndDate?: UpdateUniversityCourseGroupRequestCourserGroupItemModelsCourserGroupItemEndDate;
    /**
     * @remarks
     * This parameter is required.
     */
    courserGroupItemStartDate?: UpdateUniversityCourseGroupRequestCourserGroupItemModelsCourserGroupItemStartDate;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 7
     */
    dayOfWeek?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    sectionIndex?: number[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryClassCourseResponseBodyResult extends $tea.Model {
    /**
     * @example
     * {""}
     */
    attributes?: string;
    /**
     * @example
     * class_xxx
     */
    classId?: string;
    /**
     * @example
     * 一年级一班
     */
    className?: string;
    /**
     * @example
     * classroom_xxx
     */
    classRoomId?: string;
    /**
     * @example
     * 音乐教室
     */
    classRoomName?: string;
    /**
     * @example
     * 1
     */
    classType?: number;
    /**
     * @example
     * ding_xxx
     */
    corpId?: string;
    /**
     * @example
     * course_xxx
     */
    courseCode?: string;
    /**
     * @example
     * 2024-11-11 00:00:00
     */
    courseDate?: string;
    /**
     * @example
     * 语文
     */
    courseName?: string;
    /**
     * @example
     * 0
     */
    courseWeek?: number;
    /**
     * @example
     * 2024-11-12 09:00:00
     */
    endTime?: string;
    /**
     * @example
     * isv_xxx
     */
    isvCode?: string;
    /**
     * @example
     * course_xxx
     */
    isvCourseId?: string;
    /**
     * @example
     * memo
     */
    memo?: string;
    /**
     * @example
     * 2024
     */
    schoolYear?: string;
    /**
     * @example
     * 1
     */
    semester?: number;
    /**
     * @example
     * 2024-11-12 09:00:00
     */
    startTime?: string;
    /**
     * @example
     * 1
     */
    status?: number;
    /**
     * @example
     * 1
     */
    teachWeek?: number;
    /**
     * @example
     * 第一节
     */
    timeslotName?: string;
    /**
     * @example
     * 1
     */
    timeslotNum?: number;
    /**
     * @example
     * 1
     */
    type?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 视讯paas机具激活
     *
     * @param request - ActivateDeviceRequest
     * @param headers - ActivateDeviceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ActivateDeviceResponse
     */
    activateDeviceWithOptions(request: ActivateDeviceRequest, headers: ActivateDeviceHeaders, runtime: $Util.RuntimeOptions): Promise<ActivateDeviceResponse>;
    /**
     * 视讯paas机具激活
     *
     * @param request - ActivateDeviceRequest
     * @returns ActivateDeviceResponse
     */
    activateDevice(request: ActivateDeviceRequest): Promise<ActivateDeviceResponse>;
    /**
     * 高校校友会批量创建部门
     *
     * @param request - AddCollegeAlumniDeptsRequest
     * @param headers - AddCollegeAlumniDeptsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddCollegeAlumniDeptsResponse
     */
    addCollegeAlumniDeptsWithOptions(request: AddCollegeAlumniDeptsRequest, headers: AddCollegeAlumniDeptsHeaders, runtime: $Util.RuntimeOptions): Promise<AddCollegeAlumniDeptsResponse>;
    /**
     * 高校校友会批量创建部门
     *
     * @param request - AddCollegeAlumniDeptsRequest
     * @returns AddCollegeAlumniDeptsResponse
     */
    addCollegeAlumniDepts(request: AddCollegeAlumniDeptsRequest): Promise<AddCollegeAlumniDeptsResponse>;
    /**
     * 高校校友会新增校友信息
     *
     * @param request - AddCollegeAlumniUserInfoRequest
     * @param headers - AddCollegeAlumniUserInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddCollegeAlumniUserInfoResponse
     */
    addCollegeAlumniUserInfoWithOptions(request: AddCollegeAlumniUserInfoRequest, headers: AddCollegeAlumniUserInfoHeaders, runtime: $Util.RuntimeOptions): Promise<AddCollegeAlumniUserInfoResponse>;
    /**
     * 高校校友会新增校友信息
     *
     * @param request - AddCollegeAlumniUserInfoRequest
     * @returns AddCollegeAlumniUserInfoResponse
     */
    addCollegeAlumniUserInfo(request: AddCollegeAlumniUserInfoRequest): Promise<AddCollegeAlumniUserInfoResponse>;
    /**
     * 创建高校账号用户
     *
     * @param request - AddCollegeContactExclusiveRequest
     * @param headers - AddCollegeContactExclusiveHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddCollegeContactExclusiveResponse
     */
    addCollegeContactExclusiveWithOptions(request: AddCollegeContactExclusiveRequest, headers: AddCollegeContactExclusiveHeaders, runtime: $Util.RuntimeOptions): Promise<AddCollegeContactExclusiveResponse>;
    /**
     * 创建高校账号用户
     *
     * @param request - AddCollegeContactExclusiveRequest
     * @returns AddCollegeContactExclusiveResponse
     */
    addCollegeContactExclusive(request: AddCollegeContactExclusiveRequest): Promise<AddCollegeContactExclusiveResponse>;
    /**
     * 创建个人账号用户
     *
     * @param request - AddCollegeContactUserRequest
     * @param headers - AddCollegeContactUserHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddCollegeContactUserResponse
     */
    addCollegeContactUserWithOptions(request: AddCollegeContactUserRequest, headers: AddCollegeContactUserHeaders, runtime: $Util.RuntimeOptions): Promise<AddCollegeContactUserResponse>;
    /**
     * 创建个人账号用户
     *
     * @param request - AddCollegeContactUserRequest
     * @returns AddCollegeContactUserResponse
     */
    addCollegeContactUser(request: AddCollegeContactUserRequest): Promise<AddCollegeContactUserResponse>;
    /**
     * 增加赛事记录
     *
     * @param request - AddCompetitionRecordRequest
     * @param headers - AddCompetitionRecordHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddCompetitionRecordResponse
     */
    addCompetitionRecordWithOptions(request: AddCompetitionRecordRequest, headers: AddCompetitionRecordHeaders, runtime: $Util.RuntimeOptions): Promise<AddCompetitionRecordResponse>;
    /**
     * 增加赛事记录
     *
     * @param request - AddCompetitionRecordRequest
     * @returns AddCompetitionRecordResponse
     */
    addCompetitionRecord(request: AddCompetitionRecordRequest): Promise<AddCompetitionRecordResponse>;
    /**
     * 添加设备
     *
     * @param request - AddDeviceRequest
     * @param headers - AddDeviceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddDeviceResponse
     */
    addDeviceWithOptions(request: AddDeviceRequest, headers: AddDeviceHeaders, runtime: $Util.RuntimeOptions): Promise<AddDeviceResponse>;
    /**
     * 添加设备
     *
     * @param request - AddDeviceRequest
     * @returns AddDeviceResponse
     */
    addDevice(request: AddDeviceRequest): Promise<AddDeviceResponse>;
    /**
     * 添加学校配置
     *
     * @param request - AddSchoolConfigRequest
     * @param headers - AddSchoolConfigHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddSchoolConfigResponse
     */
    addSchoolConfigWithOptions(request: AddSchoolConfigRequest, headers: AddSchoolConfigHeaders, runtime: $Util.RuntimeOptions): Promise<AddSchoolConfigResponse>;
    /**
     * 添加学校配置
     *
     * @param request - AddSchoolConfigRequest
     * @returns AddSchoolConfigResponse
     */
    addSchoolConfig(request: AddSchoolConfigRequest): Promise<AddSchoolConfigResponse>;
    /**
     * 修改课程
     *
     * @param request - AdjustCourseRequest
     * @param headers - AdjustCourseHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AdjustCourseResponse
     */
    adjustCourseWithOptions(request: AdjustCourseRequest, headers: AdjustCourseHeaders, runtime: $Util.RuntimeOptions): Promise<AdjustCourseResponse>;
    /**
     * 修改课程
     *
     * @param request - AdjustCourseRequest
     * @returns AdjustCourseResponse
     */
    adjustCourse(request: AdjustCourseRequest): Promise<AdjustCourseResponse>;
    /**
     * 修改教育套件
     *
     * @param request - AdjustKitRequest
     * @param headers - AdjustKitHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AdjustKitResponse
     */
    adjustKitWithOptions(request: AdjustKitRequest, headers: AdjustKitHeaders, runtime: $Util.RuntimeOptions): Promise<AdjustKitResponse>;
    /**
     * 修改教育套件
     *
     * @param request - AdjustKitRequest
     * @returns AdjustKitResponse
     */
    adjustKit(request: AdjustKitRequest): Promise<AdjustKitResponse>;
    /**
     * 进行分班
     *
     * @param request - AssignClassRequest
     * @param headers - AssignClassHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AssignClassResponse
     */
    assignClassWithOptions(request: AssignClassRequest, headers: AssignClassHeaders, runtime: $Util.RuntimeOptions): Promise<AssignClassResponse>;
    /**
     * 进行分班
     *
     * @param request - AssignClassRequest
     * @returns AssignClassResponse
     */
    assignClass(request: AssignClassRequest): Promise<AssignClassResponse>;
    /**
     * 批量创建打卡
     *
     * @param request - BatchCreateRequest
     * @param headers - BatchCreateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BatchCreateResponse
     */
    batchCreateWithOptions(request: BatchCreateRequest, headers: BatchCreateHeaders, runtime: $Util.RuntimeOptions): Promise<BatchCreateResponse>;
    /**
     * 批量创建打卡
     *
     * @param request - BatchCreateRequest
     * @returns BatchCreateResponse
     */
    batchCreate(request: BatchCreateRequest): Promise<BatchCreateResponse>;
    /**
     * 批量创建课程
     *
     * @param request - BatchCreateCourseRequest
     * @param headers - BatchCreateCourseHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BatchCreateCourseResponse
     */
    batchCreateCourseWithOptions(request: BatchCreateCourseRequest, headers: BatchCreateCourseHeaders, runtime: $Util.RuntimeOptions): Promise<BatchCreateCourseResponse>;
    /**
     * 批量创建课程
     *
     * @param request - BatchCreateCourseRequest
     * @returns BatchCreateCourseResponse
     */
    batchCreateCourse(request: BatchCreateCourseRequest): Promise<BatchCreateCourseResponse>;
    /**
     * 批量创建学生班级
     *
     * @param request - BatchCreateStudentClassRequest
     * @param headers - BatchCreateStudentClassHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BatchCreateStudentClassResponse
     */
    batchCreateStudentClassWithOptions(request: BatchCreateStudentClassRequest, headers: BatchCreateStudentClassHeaders, runtime: $Util.RuntimeOptions): Promise<BatchCreateStudentClassResponse>;
    /**
     * 批量创建学生班级
     *
     * @param request - BatchCreateStudentClassRequest
     * @returns BatchCreateStudentClassResponse
     */
    batchCreateStudentClass(request: BatchCreateStudentClassRequest): Promise<BatchCreateStudentClassResponse>;
    /**
     * 批量创建老师课程
     *
     * @param request - BatchCreateTeacherCourseRequest
     * @param headers - BatchCreateTeacherCourseHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BatchCreateTeacherCourseResponse
     */
    batchCreateTeacherCourseWithOptions(request: BatchCreateTeacherCourseRequest, headers: BatchCreateTeacherCourseHeaders, runtime: $Util.RuntimeOptions): Promise<BatchCreateTeacherCourseResponse>;
    /**
     * 批量创建老师课程
     *
     * @param request - BatchCreateTeacherCourseRequest
     * @returns BatchCreateTeacherCourseResponse
     */
    batchCreateTeacherCourse(request: BatchCreateTeacherCourseRequest): Promise<BatchCreateTeacherCourseResponse>;
    /**
     * 批量失效课程
     *
     * @param request - BatchInvalidCourseRequest
     * @param headers - BatchInvalidCourseHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BatchInvalidCourseResponse
     */
    batchInvalidCourseWithOptions(request: BatchInvalidCourseRequest, headers: BatchInvalidCourseHeaders, runtime: $Util.RuntimeOptions): Promise<BatchInvalidCourseResponse>;
    /**
     * 批量失效课程
     *
     * @param request - BatchInvalidCourseRequest
     * @returns BatchInvalidCourseResponse
     */
    batchInvalidCourse(request: BatchInvalidCourseRequest): Promise<BatchInvalidCourseResponse>;
    /**
     * 跨组织-批量创建作业
     *
     * @param request - BatchOrgCreateHWRequest
     * @param headers - BatchOrgCreateHWHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns BatchOrgCreateHWResponse
     */
    batchOrgCreateHWWithOptions(request: BatchOrgCreateHWRequest, headers: BatchOrgCreateHWHeaders, runtime: $Util.RuntimeOptions): Promise<BatchOrgCreateHWResponse>;
    /**
     * 跨组织-批量创建作业
     *
     * @param request - BatchOrgCreateHWRequest
     * @returns BatchOrgCreateHWResponse
     */
    batchOrgCreateHW(request: BatchOrgCreateHWRequest): Promise<BatchOrgCreateHWResponse>;
    /**
     * 撤销订单
     *
     * @param request - CancelOrderRequest
     * @param headers - CancelOrderHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CancelOrderResponse
     */
    cancelOrderWithOptions(request: CancelOrderRequest, headers: CancelOrderHeaders, runtime: $Util.RuntimeOptions): Promise<CancelOrderResponse>;
    /**
     * 撤销订单
     *
     * @param request - CancelOrderRequest
     * @returns CancelOrderResponse
     */
    cancelOrder(request: CancelOrderRequest): Promise<CancelOrderResponse>;
    /**
     * 个人应用撤销订单
     *
     * @param request - CancelSnsOrderRequest
     * @param headers - CancelSnsOrderHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CancelSnsOrderResponse
     */
    cancelSnsOrderWithOptions(request: CancelSnsOrderRequest, headers: CancelSnsOrderHeaders, runtime: $Util.RuntimeOptions): Promise<CancelSnsOrderResponse>;
    /**
     * 个人应用撤销订单
     *
     * @param request - CancelSnsOrderRequest
     * @returns CancelSnsOrderResponse
     */
    cancelSnsOrder(request: CancelSnsOrderRequest): Promise<CancelSnsOrderResponse>;
    /**
     * 取消订单
     *
     * @param request - CancelUserOrderRequest
     * @param headers - CancelUserOrderHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CancelUserOrderResponse
     */
    cancelUserOrderWithOptions(request: CancelUserOrderRequest, headers: CancelUserOrderHeaders, runtime: $Util.RuntimeOptions): Promise<CancelUserOrderResponse>;
    /**
     * 取消订单
     *
     * @param request - CancelUserOrderRequest
     * @returns CancelUserOrderResponse
     */
    cancelUserOrder(request: CancelUserOrderRequest): Promise<CancelUserOrderResponse>;
    /**
     * 批量查询打卡任务
     *
     * @param request - CardBatchQueryCardsRequest
     * @param headers - CardBatchQueryCardsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CardBatchQueryCardsResponse
     */
    cardBatchQueryCardsWithOptions(request: CardBatchQueryCardsRequest, headers: CardBatchQueryCardsHeaders, runtime: $Util.RuntimeOptions): Promise<CardBatchQueryCardsResponse>;
    /**
     * 批量查询打卡任务
     *
     * @param request - CardBatchQueryCardsRequest
     * @returns CardBatchQueryCardsResponse
     */
    cardBatchQueryCards(request: CardBatchQueryCardsRequest): Promise<CardBatchQueryCardsResponse>;
    /**
     * 删除打卡
     *
     * @param request - CardDeleteCardRequest
     * @param headers - CardDeleteCardHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CardDeleteCardResponse
     */
    cardDeleteCardWithOptions(request: CardDeleteCardRequest, headers: CardDeleteCardHeaders, runtime: $Util.RuntimeOptions): Promise<CardDeleteCardResponse>;
    /**
     * 删除打卡
     *
     * @param request - CardDeleteCardRequest
     * @returns CardDeleteCardResponse
     */
    cardDeleteCard(request: CardDeleteCardRequest): Promise<CardDeleteCardResponse>;
    /**
     * 打卡-结束打卡
     *
     * @param request - CardEndCardRequest
     * @param headers - CardEndCardHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CardEndCardResponse
     */
    cardEndCardWithOptions(request: CardEndCardRequest, headers: CardEndCardHeaders, runtime: $Util.RuntimeOptions): Promise<CardEndCardResponse>;
    /**
     * 打卡-结束打卡
     *
     * @param request - CardEndCardRequest
     * @returns CardEndCardResponse
     */
    cardEndCard(request: CardEndCardRequest): Promise<CardEndCardResponse>;
    /**
     * 查询打卡任务
     *
     * @param request - CardGetCardRequest
     * @param headers - CardGetCardHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CardGetCardResponse
     */
    cardGetCardWithOptions(request: CardGetCardRequest, headers: CardGetCardHeaders, runtime: $Util.RuntimeOptions): Promise<CardGetCardResponse>;
    /**
     * 查询打卡任务
     *
     * @param request - CardGetCardRequest
     * @returns CardGetCardResponse
     */
    cardGetCard(request: CardGetCardRequest): Promise<CardGetCardResponse>;
    /**
     * 获取打卡任务完成进度
     *
     * @param request - CardGetCardFinishProgressRequest
     * @param headers - CardGetCardFinishProgressHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CardGetCardFinishProgressResponse
     */
    cardGetCardFinishProgressWithOptions(request: CardGetCardFinishProgressRequest, headers: CardGetCardFinishProgressHeaders, runtime: $Util.RuntimeOptions): Promise<CardGetCardFinishProgressResponse>;
    /**
     * 获取打卡任务完成进度
     *
     * @param request - CardGetCardFinishProgressRequest
     * @returns CardGetCardFinishProgressResponse
     */
    cardGetCardFinishProgress(request: CardGetCardFinishProgressRequest): Promise<CardGetCardFinishProgressResponse>;
    /**
     * 查询打卡Feed流
     *
     * @param request - CardQueryCardFeedsRequest
     * @param headers - CardQueryCardFeedsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CardQueryCardFeedsResponse
     */
    cardQueryCardFeedsWithOptions(request: CardQueryCardFeedsRequest, headers: CardQueryCardFeedsHeaders, runtime: $Util.RuntimeOptions): Promise<CardQueryCardFeedsResponse>;
    /**
     * 查询打卡Feed流
     *
     * @param request - CardQueryCardFeedsRequest
     * @returns CardQueryCardFeedsResponse
     */
    cardQueryCardFeeds(request: CardQueryCardFeedsRequest): Promise<CardQueryCardFeedsResponse>;
    /**
     * 支付校验
     *
     * @param request - CheckRestrictionRequest
     * @param headers - CheckRestrictionHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CheckRestrictionResponse
     */
    checkRestrictionWithOptions(request: CheckRestrictionRequest, headers: CheckRestrictionHeaders, runtime: $Util.RuntimeOptions): Promise<CheckRestrictionResponse>;
    /**
     * 支付校验
     *
     * @param request - CheckRestrictionRequest
     * @returns CheckRestrictionResponse
     */
    checkRestriction(request: CheckRestrictionRequest): Promise<CheckRestrictionResponse>;
    /**
     * 积分兑换
     *
     * @param request - ConsumePointRequest
     * @param headers - ConsumePointHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ConsumePointResponse
     */
    consumePointWithOptions(request: ConsumePointRequest, headers: ConsumePointHeaders, runtime: $Util.RuntimeOptions): Promise<ConsumePointResponse>;
    /**
     * 积分兑换
     *
     * @param request - ConsumePointRequest
     * @returns ConsumePointResponse
     */
    consumePoint(request: ConsumePointRequest): Promise<ConsumePointResponse>;
    /**
     * 全校排课结束通知
     *
     * @param request - CourseSchedulingComplimentNoticeRequest
     * @param headers - CourseSchedulingComplimentNoticeHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CourseSchedulingComplimentNoticeResponse
     */
    courseSchedulingComplimentNoticeWithOptions(request: CourseSchedulingComplimentNoticeRequest, headers: CourseSchedulingComplimentNoticeHeaders, runtime: $Util.RuntimeOptions): Promise<CourseSchedulingComplimentNoticeResponse>;
    /**
     * 全校排课结束通知
     *
     * @param request - CourseSchedulingComplimentNoticeRequest
     * @returns CourseSchedulingComplimentNoticeResponse
     */
    courseSchedulingComplimentNotice(request: CourseSchedulingComplimentNoticeRequest): Promise<CourseSchedulingComplimentNoticeResponse>;
    /**
     * 创建App支付订单
     *
     * @param request - CreateAppOrderRequest
     * @param headers - CreateAppOrderHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateAppOrderResponse
     */
    createAppOrderWithOptions(request: CreateAppOrderRequest, headers: CreateAppOrderHeaders, runtime: $Util.RuntimeOptions): Promise<CreateAppOrderResponse>;
    /**
     * 创建App支付订单
     *
     * @param request - CreateAppOrderRequest
     * @returns CreateAppOrderResponse
     */
    createAppOrder(request: CreateAppOrderRequest): Promise<CreateAppOrderResponse>;
    /**
     * 创建高校通讯录组织单元
     *
     * @param request - CreateCollegeContactDeptRequest
     * @param headers - CreateCollegeContactDeptHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateCollegeContactDeptResponse
     */
    createCollegeContactDeptWithOptions(request: CreateCollegeContactDeptRequest, headers: CreateCollegeContactDeptHeaders, runtime: $Util.RuntimeOptions): Promise<CreateCollegeContactDeptResponse>;
    /**
     * 创建高校通讯录组织单元
     *
     * @param request - CreateCollegeContactDeptRequest
     * @returns CreateCollegeContactDeptResponse
     */
    createCollegeContactDept(request: CreateCollegeContactDeptRequest): Promise<CreateCollegeContactDeptResponse>;
    /**
     * 创建高校通讯录场景架构
     *
     * @param request - CreateCollegeContactSceneStruRequest
     * @param headers - CreateCollegeContactSceneStruHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateCollegeContactSceneStruResponse
     */
    createCollegeContactSceneStruWithOptions(request: CreateCollegeContactSceneStruRequest, headers: CreateCollegeContactSceneStruHeaders, runtime: $Util.RuntimeOptions): Promise<CreateCollegeContactSceneStruResponse>;
    /**
     * 创建高校通讯录场景架构
     *
     * @param request - CreateCollegeContactSceneStruRequest
     * @returns CreateCollegeContactSceneStruResponse
     */
    createCollegeContactSceneStru(request: CreateCollegeContactSceneStruRequest): Promise<CreateCollegeContactSceneStruResponse>;
    /**
     * 创建课程
     *
     * @param request - CreateCourseRequest
     * @param headers - CreateCourseHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateCourseResponse
     */
    createCourseWithOptions(request: CreateCourseRequest, headers: CreateCourseHeaders, runtime: $Util.RuntimeOptions): Promise<CreateCourseResponse>;
    /**
     * 创建课程
     *
     * @param request - CreateCourseRequest
     * @returns CreateCourseResponse
     */
    createCourse(request: CreateCourseRequest): Promise<CreateCourseResponse>;
    /**
     * 创建自定义部门下班级
     *
     * @param request - CreateCustomClassRequest
     * @param headers - CreateCustomClassHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateCustomClassResponse
     */
    createCustomClassWithOptions(request: CreateCustomClassRequest, headers: CreateCustomClassHeaders, runtime: $Util.RuntimeOptions): Promise<CreateCustomClassResponse>;
    /**
     * 创建自定义部门下班级
     *
     * @param request - CreateCustomClassRequest
     * @returns CreateCustomClassResponse
     */
    createCustomClass(request: CreateCustomClassRequest): Promise<CreateCustomClassResponse>;
    /**
     * 创建自定义校区或部门
     *
     * @param request - CreateCustomDeptRequest
     * @param headers - CreateCustomDeptHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateCustomDeptResponse
     */
    createCustomDeptWithOptions(request: CreateCustomDeptRequest, headers: CreateCustomDeptHeaders, runtime: $Util.RuntimeOptions): Promise<CreateCustomDeptResponse>;
    /**
     * 创建自定义校区或部门
     *
     * @param request - CreateCustomDeptRequest
     * @returns CreateCustomDeptResponse
     */
    createCustomDept(request: CreateCustomDeptRequest): Promise<CreateCustomDeptResponse>;
    /**
     * 教学资源库创建space
     *
     * @param request - CreateEduAssetSpaceRequest
     * @param headers - CreateEduAssetSpaceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateEduAssetSpaceResponse
     */
    createEduAssetSpaceWithOptions(request: CreateEduAssetSpaceRequest, headers: CreateEduAssetSpaceHeaders, runtime: $Util.RuntimeOptions): Promise<CreateEduAssetSpaceResponse>;
    /**
     * 教学资源库创建space
     *
     * @param request - CreateEduAssetSpaceRequest
     * @returns CreateEduAssetSpaceResponse
     */
    createEduAssetSpace(request: CreateEduAssetSpaceRequest): Promise<CreateEduAssetSpaceResponse>;
    /**
     * 创建设备履约记录，亲情通话、考勤数据同步
     *
     * @param request - CreateFulfilRecordRequest
     * @param headers - CreateFulfilRecordHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateFulfilRecordResponse
     */
    createFulfilRecordWithOptions(request: CreateFulfilRecordRequest, headers: CreateFulfilRecordHeaders, runtime: $Util.RuntimeOptions): Promise<CreateFulfilRecordResponse>;
    /**
     * 创建设备履约记录，亲情通话、考勤数据同步
     *
     * @param request - CreateFulfilRecordRequest
     * @returns CreateFulfilRecordResponse
     */
    createFulfilRecord(request: CreateFulfilRecordRequest): Promise<CreateFulfilRecordResponse>;
    /**
     * 查询某个组织下面的设备列表
     *
     * @param request - CreateInviteUrlRequest
     * @param headers - CreateInviteUrlHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateInviteUrlResponse
     */
    createInviteUrlWithOptions(request: CreateInviteUrlRequest, headers: CreateInviteUrlHeaders, runtime: $Util.RuntimeOptions): Promise<CreateInviteUrlResponse>;
    /**
     * 查询某个组织下面的设备列表
     *
     * @param request - CreateInviteUrlRequest
     * @returns CreateInviteUrlResponse
     */
    createInviteUrl(request: CreateInviteUrlRequest): Promise<CreateInviteUrlResponse>;
    /**
     * 创建商品
     *
     * @param request - CreateItemRequest
     * @param headers - CreateItemHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateItemResponse
     */
    createItemWithOptions(request: CreateItemRequest, headers: CreateItemHeaders, runtime: $Util.RuntimeOptions): Promise<CreateItemResponse>;
    /**
     * 创建商品
     *
     * @param request - CreateItemRequest
     * @returns CreateItemResponse
     */
    createItem(request: CreateItemRequest): Promise<CreateItemResponse>;
    /**
     * 创建订单信息
     *
     * @param request - CreateOrderRequest
     * @param headers - CreateOrderHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateOrderResponse
     */
    createOrderWithOptions(request: CreateOrderRequest, headers: CreateOrderHeaders, runtime: $Util.RuntimeOptions): Promise<CreateOrderResponse>;
    /**
     * 创建订单信息
     *
     * @param request - CreateOrderRequest
     * @returns CreateOrderResponse
     */
    createOrder(request: CreateOrderRequest): Promise<CreateOrderResponse>;
    /**
     * 创建开单流水
     *
     * @param request - CreateOrderFlowRequest
     * @param headers - CreateOrderFlowHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateOrderFlowResponse
     */
    createOrderFlowWithOptions(request: CreateOrderFlowRequest, headers: CreateOrderFlowHeaders, runtime: $Util.RuntimeOptions): Promise<CreateOrderFlowResponse>;
    /**
     * 创建开单流水
     *
     * @param request - CreateOrderFlowRequest
     * @returns CreateOrderFlowResponse
     */
    createOrderFlow(request: CreateOrderFlowRequest): Promise<CreateOrderFlowResponse>;
    /**
     * 添加物理教室信息
     *
     * @param request - CreatePhysicalClassroomRequest
     * @param headers - CreatePhysicalClassroomHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreatePhysicalClassroomResponse
     */
    createPhysicalClassroomWithOptions(request: CreatePhysicalClassroomRequest, headers: CreatePhysicalClassroomHeaders, runtime: $Util.RuntimeOptions): Promise<CreatePhysicalClassroomResponse>;
    /**
     * 添加物理教室信息
     *
     * @param request - CreatePhysicalClassroomRequest
     * @returns CreatePhysicalClassroomResponse
     */
    createPhysicalClassroom(request: CreatePhysicalClassroomRequest): Promise<CreatePhysicalClassroomResponse>;
    /**
     * 创建退款流水
     *
     * @param request - CreateRefundFlowRequest
     * @param headers - CreateRefundFlowHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateRefundFlowResponse
     */
    createRefundFlowWithOptions(request: CreateRefundFlowRequest, headers: CreateRefundFlowHeaders, runtime: $Util.RuntimeOptions): Promise<CreateRefundFlowResponse>;
    /**
     * 创建退款流水
     *
     * @param request - CreateRefundFlowRequest
     * @returns CreateRefundFlowResponse
     */
    createRefundFlow(request: CreateRefundFlowRequest): Promise<CreateRefundFlowResponse>;
    /**
     * 创建预约类型的专递课堂
     *
     * @param request - CreateRemoteClassCourseRequest
     * @param headers - CreateRemoteClassCourseHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateRemoteClassCourseResponse
     */
    createRemoteClassCourseWithOptions(request: CreateRemoteClassCourseRequest, headers: CreateRemoteClassCourseHeaders, runtime: $Util.RuntimeOptions): Promise<CreateRemoteClassCourseResponse>;
    /**
     * 创建预约类型的专递课堂
     *
     * @param request - CreateRemoteClassCourseRequest
     * @returns CreateRemoteClassCourseResponse
     */
    createRemoteClassCourse(request: CreateRemoteClassCourseRequest): Promise<CreateRemoteClassCourseResponse>;
    /**
     * 按学期创建课表模板
     *
     * @param request - CreateSectionConfigRequest
     * @param headers - CreateSectionConfigHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateSectionConfigResponse
     */
    createSectionConfigWithOptions(request: CreateSectionConfigRequest, headers: CreateSectionConfigHeaders, runtime: $Util.RuntimeOptions): Promise<CreateSectionConfigResponse>;
    /**
     * 按学期创建课表模板
     *
     * @param request - CreateSectionConfigRequest
     * @returns CreateSectionConfigResponse
     */
    createSectionConfig(request: CreateSectionConfigRequest): Promise<CreateSectionConfigResponse>;
    /**
     * 个人应用创建APP订单
     *
     * @param request - CreateSnsAppOrderRequest
     * @param headers - CreateSnsAppOrderHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateSnsAppOrderResponse
     */
    createSnsAppOrderWithOptions(request: CreateSnsAppOrderRequest, headers: CreateSnsAppOrderHeaders, runtime: $Util.RuntimeOptions): Promise<CreateSnsAppOrderResponse>;
    /**
     * 个人应用创建APP订单
     *
     * @param request - CreateSnsAppOrderRequest
     * @returns CreateSnsAppOrderResponse
     */
    createSnsAppOrder(request: CreateSnsAppOrderRequest): Promise<CreateSnsAppOrderResponse>;
    /**
     * 创建ststoken
     *
     * @param request - CreateStsTokenRequest
     * @param headers - CreateStsTokenHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateStsTokenResponse
     */
    createStsTokenWithOptions(request: CreateStsTokenRequest, headers: CreateStsTokenHeaders, runtime: $Util.RuntimeOptions): Promise<CreateStsTokenResponse>;
    /**
     * 创建ststoken
     *
     * @param request - CreateStsTokenRequest
     * @returns CreateStsTokenResponse
     */
    createStsToken(request: CreateStsTokenRequest): Promise<CreateStsTokenResponse>;
    /**
     * 创建学生班级
     *
     * @param request - CreateStudentClassRequest
     * @param headers - CreateStudentClassHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateStudentClassResponse
     */
    createStudentClassWithOptions(request: CreateStudentClassRequest, headers: CreateStudentClassHeaders, runtime: $Util.RuntimeOptions): Promise<CreateStudentClassResponse>;
    /**
     * 创建学生班级
     *
     * @param request - CreateStudentClassRequest
     * @returns CreateStudentClassResponse
     */
    createStudentClass(request: CreateStudentClassRequest): Promise<CreateStudentClassResponse>;
    /**
     * 创建老师课程
     *
     * @param request - CreateTeacherCourseRequest
     * @param headers - CreateTeacherCourseHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateTeacherCourseResponse
     */
    createTeacherCourseWithOptions(request: CreateTeacherCourseRequest, headers: CreateTeacherCourseHeaders, runtime: $Util.RuntimeOptions): Promise<CreateTeacherCourseResponse>;
    /**
     * 创建老师课程
     *
     * @param request - CreateTeacherCourseRequest
     * @returns CreateTeacherCourseResponse
     */
    createTeacherCourse(request: CreateTeacherCourseRequest): Promise<CreateTeacherCourseResponse>;
    /**
     * 套件-创建定时卡片
     *
     * @param request - CreateTimerCardRequest
     * @param headers - CreateTimerCardHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateTimerCardResponse
     */
    createTimerCardWithOptions(request: CreateTimerCardRequest, headers: CreateTimerCardHeaders, runtime: $Util.RuntimeOptions): Promise<CreateTimerCardResponse>;
    /**
     * 套件-创建定时卡片
     *
     * @param request - CreateTimerCardRequest
     * @returns CreateTimerCardResponse
     */
    createTimerCard(request: CreateTimerCardRequest): Promise<CreateTimerCardResponse>;
    /**
     * 创建授权token
     *
     * @param request - CreateTokenRequest
     * @param headers - CreateTokenHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateTokenResponse
     */
    createTokenWithOptions(request: CreateTokenRequest, headers: CreateTokenHeaders, runtime: $Util.RuntimeOptions): Promise<CreateTokenResponse>;
    /**
     * 创建授权token
     *
     * @param request - CreateTokenRequest
     * @returns CreateTokenResponse
     */
    createToken(request: CreateTokenRequest): Promise<CreateTokenResponse>;
    /**
     * 创建调代课记录
     *
     * @param request - CreateTransferRecordRequest
     * @param headers - CreateTransferRecordHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateTransferRecordResponse
     */
    createTransferRecordWithOptions(request: CreateTransferRecordRequest, headers: CreateTransferRecordHeaders, runtime: $Util.RuntimeOptions): Promise<CreateTransferRecordResponse>;
    /**
     * 创建调代课记录
     *
     * @param request - CreateTransferRecordRequest
     * @returns CreateTransferRecordResponse
     */
    createTransferRecord(request: CreateTransferRecordRequest): Promise<CreateTransferRecordResponse>;
    /**
     * 大学创建课程组
     *
     * @param request - CreateUniversityCourseGroupRequest
     * @param headers - CreateUniversityCourseGroupHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateUniversityCourseGroupResponse
     */
    createUniversityCourseGroupWithOptions(request: CreateUniversityCourseGroupRequest, headers: CreateUniversityCourseGroupHeaders, runtime: $Util.RuntimeOptions): Promise<CreateUniversityCourseGroupResponse>;
    /**
     * 大学创建课程组
     *
     * @param request - CreateUniversityCourseGroupRequest
     * @returns CreateUniversityCourseGroupResponse
     */
    createUniversityCourseGroup(request: CreateUniversityCourseGroupRequest): Promise<CreateUniversityCourseGroupResponse>;
    /**
     * 大学增加学生
     *
     * @param request - CreateUniversityStudentRequest
     * @param headers - CreateUniversityStudentHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateUniversityStudentResponse
     */
    createUniversityStudentWithOptions(request: CreateUniversityStudentRequest, headers: CreateUniversityStudentHeaders, runtime: $Util.RuntimeOptions): Promise<CreateUniversityStudentResponse>;
    /**
     * 大学增加学生
     *
     * @param request - CreateUniversityStudentRequest
     * @returns CreateUniversityStudentResponse
     */
    createUniversityStudent(request: CreateUniversityStudentRequest): Promise<CreateUniversityStudentResponse>;
    /**
     * 大学添加老师
     *
     * @param request - CreateUniversityTeacherRequest
     * @param headers - CreateUniversityTeacherHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateUniversityTeacherResponse
     */
    createUniversityTeacherWithOptions(request: CreateUniversityTeacherRequest, headers: CreateUniversityTeacherHeaders, runtime: $Util.RuntimeOptions): Promise<CreateUniversityTeacherResponse>;
    /**
     * 大学添加老师
     *
     * @param request - CreateUniversityTeacherRequest
     * @returns CreateUniversityTeacherResponse
     */
    createUniversityTeacher(request: CreateUniversityTeacherRequest): Promise<CreateUniversityTeacherResponse>;
    /**
     * 视讯paas机具取消激活
     *
     * @param request - DeactivateDeviceRequest
     * @param headers - DeactivateDeviceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeactivateDeviceResponse
     */
    deactivateDeviceWithOptions(request: DeactivateDeviceRequest, headers: DeactivateDeviceHeaders, runtime: $Util.RuntimeOptions): Promise<DeactivateDeviceResponse>;
    /**
     * 视讯paas机具取消激活
     *
     * @param request - DeactivateDeviceRequest
     * @returns DeactivateDeviceResponse
     */
    deactivateDevice(request: DeactivateDeviceRequest): Promise<DeactivateDeviceResponse>;
    /**
     * 扣减教育积分
     *
     * @param request - DeductPointRequest
     * @param headers - DeductPointHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeductPointResponse
     */
    deductPointWithOptions(request: DeductPointRequest, headers: DeductPointHeaders, runtime: $Util.RuntimeOptions): Promise<DeductPointResponse>;
    /**
     * 扣减教育积分
     *
     * @param request - DeductPointRequest
     * @returns DeductPointResponse
     */
    deductPoint(request: DeductPointRequest): Promise<DeductPointResponse>;
    /**
     * 高校校友会删除当前部门
     *
     * @param request - DeleteCollegeAlumniDeptRequest
     * @param headers - DeleteCollegeAlumniDeptHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteCollegeAlumniDeptResponse
     */
    deleteCollegeAlumniDeptWithOptions(request: DeleteCollegeAlumniDeptRequest, headers: DeleteCollegeAlumniDeptHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteCollegeAlumniDeptResponse>;
    /**
     * 高校校友会删除当前部门
     *
     * @param request - DeleteCollegeAlumniDeptRequest
     * @returns DeleteCollegeAlumniDeptResponse
     */
    deleteCollegeAlumniDept(request: DeleteCollegeAlumniDeptRequest): Promise<DeleteCollegeAlumniDeptResponse>;
    /**
     * 高校校友会删除校友信息
     *
     * @param request - DeleteCollegeAlumniUserInfoRequest
     * @param headers - DeleteCollegeAlumniUserInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteCollegeAlumniUserInfoResponse
     */
    deleteCollegeAlumniUserInfoWithOptions(request: DeleteCollegeAlumniUserInfoRequest, headers: DeleteCollegeAlumniUserInfoHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteCollegeAlumniUserInfoResponse>;
    /**
     * 高校校友会删除校友信息
     *
     * @param request - DeleteCollegeAlumniUserInfoRequest
     * @returns DeleteCollegeAlumniUserInfoResponse
     */
    deleteCollegeAlumniUserInfo(request: DeleteCollegeAlumniUserInfoRequest): Promise<DeleteCollegeAlumniUserInfoResponse>;
    /**
     * 删除高校通讯录场景架构
     *
     * @param request - DeleteCollegeContactSceneStruRequest
     * @param headers - DeleteCollegeContactSceneStruHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteCollegeContactSceneStruResponse
     */
    deleteCollegeContactSceneStruWithOptions(request: DeleteCollegeContactSceneStruRequest, headers: DeleteCollegeContactSceneStruHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteCollegeContactSceneStruResponse>;
    /**
     * 删除高校通讯录场景架构
     *
     * @param request - DeleteCollegeContactSceneStruRequest
     * @returns DeleteCollegeContactSceneStruResponse
     */
    deleteCollegeContactSceneStru(request: DeleteCollegeContactSceneStruRequest): Promise<DeleteCollegeContactSceneStruResponse>;
    /**
     * 删除家校部门
     *
     * @param request - DeleteDeptRequest
     * @param headers - DeleteDeptHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteDeptResponse
     */
    deleteDeptWithOptions(deptId: string, request: DeleteDeptRequest, headers: DeleteDeptHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteDeptResponse>;
    /**
     * 删除家校部门
     *
     * @param request - DeleteDeptRequest
     * @returns DeleteDeptResponse
     */
    deleteDept(deptId: string, request: DeleteDeptRequest): Promise<DeleteDeptResponse>;
    /**
     * 视讯paas机具删除
     *
     * @param request - DeleteDeviceRequest
     * @param headers - DeleteDeviceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteDeviceResponse
     */
    deleteDeviceWithOptions(request: DeleteDeviceRequest, headers: DeleteDeviceHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteDeviceResponse>;
    /**
     * 视讯paas机具删除
     *
     * @param request - DeleteDeviceRequest
     * @returns DeleteDeviceResponse
     */
    deleteDevice(request: DeleteDeviceRequest): Promise<DeleteDeviceResponse>;
    /**
     * 删除设备上面的组织
     *
     * @param request - DeleteDeviceOrgRequest
     * @param headers - DeleteDeviceOrgHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteDeviceOrgResponse
     */
    deleteDeviceOrgWithOptions(request: DeleteDeviceOrgRequest, headers: DeleteDeviceOrgHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteDeviceOrgResponse>;
    /**
     * 删除设备上面的组织
     *
     * @param request - DeleteDeviceOrgRequest
     * @returns DeleteDeviceOrgResponse
     */
    deleteDeviceOrg(request: DeleteDeviceOrgRequest): Promise<DeleteDeviceOrgResponse>;
    /**
     * 删除家长
     *
     * @param request - DeleteGuardianRequest
     * @param headers - DeleteGuardianHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteGuardianResponse
     */
    deleteGuardianWithOptions(classId: string, userId: string, request: DeleteGuardianRequest, headers: DeleteGuardianHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteGuardianResponse>;
    /**
     * 删除家长
     *
     * @param request - DeleteGuardianRequest
     * @returns DeleteGuardianResponse
     */
    deleteGuardian(classId: string, userId: string, request: DeleteGuardianRequest): Promise<DeleteGuardianResponse>;
    /**
     * 删除组织的关联关系
     *
     * @param request - DeleteOrgRelationRequest
     * @param headers - DeleteOrgRelationHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteOrgRelationResponse
     */
    deleteOrgRelationWithOptions(request: DeleteOrgRelationRequest, headers: DeleteOrgRelationHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteOrgRelationResponse>;
    /**
     * 删除组织的关联关系
     *
     * @param request - DeleteOrgRelationRequest
     * @returns DeleteOrgRelationResponse
     */
    deleteOrgRelation(request: DeleteOrgRelationRequest): Promise<DeleteOrgRelationResponse>;
    /**
     * 删除物理教室信息
     *
     * @param request - DeletePhysicalClassroomRequest
     * @param headers - DeletePhysicalClassroomHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeletePhysicalClassroomResponse
     */
    deletePhysicalClassroomWithOptions(request: DeletePhysicalClassroomRequest, headers: DeletePhysicalClassroomHeaders, runtime: $Util.RuntimeOptions): Promise<DeletePhysicalClassroomResponse>;
    /**
     * 删除物理教室信息
     *
     * @param request - DeletePhysicalClassroomRequest
     * @returns DeletePhysicalClassroomResponse
     */
    deletePhysicalClassroom(request: DeletePhysicalClassroomRequest): Promise<DeletePhysicalClassroomResponse>;
    /**
     * 删除专递课堂课程
     *
     * @param request - DeleteRemoteClassCourseRequest
     * @param headers - DeleteRemoteClassCourseHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteRemoteClassCourseResponse
     */
    deleteRemoteClassCourseWithOptions(courseCode: string, request: DeleteRemoteClassCourseRequest, headers: DeleteRemoteClassCourseHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteRemoteClassCourseResponse>;
    /**
     * 删除专递课堂课程
     *
     * @param request - DeleteRemoteClassCourseRequest
     * @returns DeleteRemoteClassCourseResponse
     */
    deleteRemoteClassCourse(courseCode: string, request: DeleteRemoteClassCourseRequest): Promise<DeleteRemoteClassCourseResponse>;
    /**
     * 删除学生
     *
     * @param request - DeleteStudentRequest
     * @param headers - DeleteStudentHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteStudentResponse
     */
    deleteStudentWithOptions(classId: string, userId: string, request: DeleteStudentRequest, headers: DeleteStudentHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteStudentResponse>;
    /**
     * 删除学生
     *
     * @param request - DeleteStudentRequest
     * @returns DeleteStudentResponse
     */
    deleteStudent(classId: string, userId: string, request: DeleteStudentRequest): Promise<DeleteStudentResponse>;
    /**
     * 删除老师
     *
     * @param request - DeleteTeacherRequest
     * @param headers - DeleteTeacherHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteTeacherResponse
     */
    deleteTeacherWithOptions(classId: string, userId: string, request: DeleteTeacherRequest, headers: DeleteTeacherHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteTeacherResponse>;
    /**
     * 删除老师
     *
     * @param request - DeleteTeacherRequest
     * @returns DeleteTeacherResponse
     */
    deleteTeacher(classId: string, userId: string, request: DeleteTeacherRequest): Promise<DeleteTeacherResponse>;
    /**
     * 删除大学课程组
     *
     * @param request - DeleteUniversityCourseGroupRequest
     * @param headers - DeleteUniversityCourseGroupHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteUniversityCourseGroupResponse
     */
    deleteUniversityCourseGroupWithOptions(request: DeleteUniversityCourseGroupRequest, headers: DeleteUniversityCourseGroupHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteUniversityCourseGroupResponse>;
    /**
     * 删除大学课程组
     *
     * @param request - DeleteUniversityCourseGroupRequest
     * @returns DeleteUniversityCourseGroupResponse
     */
    deleteUniversityCourseGroup(request: DeleteUniversityCourseGroupRequest): Promise<DeleteUniversityCourseGroupResponse>;
    /**
     * 删除大学学生
     *
     * @param request - DeleteUniversityStudentRequest
     * @param headers - DeleteUniversityStudentHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteUniversityStudentResponse
     */
    deleteUniversityStudentWithOptions(request: DeleteUniversityStudentRequest, headers: DeleteUniversityStudentHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteUniversityStudentResponse>;
    /**
     * 删除大学学生
     *
     * @param request - DeleteUniversityStudentRequest
     * @returns DeleteUniversityStudentResponse
     */
    deleteUniversityStudent(request: DeleteUniversityStudentRequest): Promise<DeleteUniversityStudentResponse>;
    /**
     * 删除大学教师
     *
     * @param request - DeleteUniversityTeacherRequest
     * @param headers - DeleteUniversityTeacherHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteUniversityTeacherResponse
     */
    deleteUniversityTeacherWithOptions(request: DeleteUniversityTeacherRequest, headers: DeleteUniversityTeacherHeaders, runtime: $Util.RuntimeOptions): Promise<DeleteUniversityTeacherResponse>;
    /**
     * 删除大学教师
     *
     * @param request - DeleteUniversityTeacherRequest
     * @returns DeleteUniversityTeacherResponse
     */
    deleteUniversityTeacher(request: DeleteUniversityTeacherRequest): Promise<DeleteUniversityTeacherResponse>;
    /**
     * 设备心跳上报
     *
     * @param request - DeviceHeartbeatRequest
     * @param headers - DeviceHeartbeatHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeviceHeartbeatResponse
     */
    deviceHeartbeatWithOptions(request: DeviceHeartbeatRequest, headers: DeviceHeartbeatHeaders, runtime: $Util.RuntimeOptions): Promise<DeviceHeartbeatResponse>;
    /**
     * 设备心跳上报
     *
     * @param request - DeviceHeartbeatRequest
     * @returns DeviceHeartbeatResponse
     */
    deviceHeartbeat(request: DeviceHeartbeatRequest): Promise<DeviceHeartbeatResponse>;
    /**
     * 停用高校通讯录场景架构
     *
     * @param request - DisableCollegeContactSceneStruRequest
     * @param headers - DisableCollegeContactSceneStruHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DisableCollegeContactSceneStruResponse
     */
    disableCollegeContactSceneStruWithOptions(request: DisableCollegeContactSceneStruRequest, headers: DisableCollegeContactSceneStruHeaders, runtime: $Util.RuntimeOptions): Promise<DisableCollegeContactSceneStruResponse>;
    /**
     * 停用高校通讯录场景架构
     *
     * @param request - DisableCollegeContactSceneStruRequest
     * @returns DisableCollegeContactSceneStruResponse
     */
    disableCollegeContactSceneStru(request: DisableCollegeContactSceneStruRequest): Promise<DisableCollegeContactSceneStruResponse>;
    /**
     * 教育三方aigc结果回调
     *
     * @param request - EduAIGCCallbackRequest
     * @param headers - EduAIGCCallbackHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns EduAIGCCallbackResponse
     */
    eduAIGCCallbackWithOptions(request: EduAIGCCallbackRequest, headers: EduAIGCCallbackHeaders, runtime: $Util.RuntimeOptions): Promise<EduAIGCCallbackResponse>;
    /**
     * 教育三方aigc结果回调
     *
     * @param request - EduAIGCCallbackRequest
     * @returns EduAIGCCallbackResponse
     */
    eduAIGCCallback(request: EduAIGCCallbackRequest): Promise<EduAIGCCallbackResponse>;
    /**
     * 教育侧用户的所有角色
     *
     * @param request - EduFindUserRolesByUserIdRequest
     * @param headers - EduFindUserRolesByUserIdHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns EduFindUserRolesByUserIdResponse
     */
    eduFindUserRolesByUserIdWithOptions(request: EduFindUserRolesByUserIdRequest, headers: EduFindUserRolesByUserIdHeaders, runtime: $Util.RuntimeOptions): Promise<EduFindUserRolesByUserIdResponse>;
    /**
     * 教育侧用户的所有角色
     *
     * @param request - EduFindUserRolesByUserIdRequest
     * @returns EduFindUserRolesByUserIdResponse
     */
    eduFindUserRolesByUserId(request: EduFindUserRolesByUserIdRequest): Promise<EduFindUserRolesByUserIdResponse>;
    /**
     * 获取用户文件存储空间信息
     *
     * @param request - EduGetFileSpaceRequest
     * @param headers - EduGetFileSpaceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns EduGetFileSpaceResponse
     */
    eduGetFileSpaceWithOptions(request: EduGetFileSpaceRequest, headers: EduGetFileSpaceHeaders, runtime: $Util.RuntimeOptions): Promise<EduGetFileSpaceResponse>;
    /**
     * 获取用户文件存储空间信息
     *
     * @param request - EduGetFileSpaceRequest
     * @returns EduGetFileSpaceResponse
     */
    eduGetFileSpace(request: EduGetFileSpaceRequest): Promise<EduGetFileSpaceResponse>;
    /**
     * 教育侧获取用户所有关系详情列表
     *
     * @param request - EduListUserByFromUserIdsRequest
     * @param headers - EduListUserByFromUserIdsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns EduListUserByFromUserIdsResponse
     */
    eduListUserByFromUserIdsWithOptions(request: EduListUserByFromUserIdsRequest, headers: EduListUserByFromUserIdsHeaders, runtime: $Util.RuntimeOptions): Promise<EduListUserByFromUserIdsResponse>;
    /**
     * 教育侧获取用户所有关系详情列表
     *
     * @param request - EduListUserByFromUserIdsRequest
     * @returns EduListUserByFromUserIdsResponse
     */
    eduListUserByFromUserIds(request: EduListUserByFromUserIdsRequest): Promise<EduListUserByFromUserIdsResponse>;
    /**
     * 查询教师列表
     *
     * @param request - EduTeacherListRequest
     * @param headers - EduTeacherListHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns EduTeacherListResponse
     */
    eduTeacherListWithOptions(request: EduTeacherListRequest, headers: EduTeacherListHeaders, runtime: $Util.RuntimeOptions): Promise<EduTeacherListResponse>;
    /**
     * 查询教师列表
     *
     * @param request - EduTeacherListRequest
     * @returns EduTeacherListResponse
     */
    eduTeacherList(request: EduTeacherListRequest): Promise<EduTeacherListResponse>;
    /**
     * 启用高校通讯录场景架构
     *
     * @param request - EnableCollegeContactSceneStruRequest
     * @param headers - EnableCollegeContactSceneStruHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns EnableCollegeContactSceneStruResponse
     */
    enableCollegeContactSceneStruWithOptions(request: EnableCollegeContactSceneStruRequest, headers: EnableCollegeContactSceneStruHeaders, runtime: $Util.RuntimeOptions): Promise<EnableCollegeContactSceneStruResponse>;
    /**
     * 启用高校通讯录场景架构
     *
     * @param request - EnableCollegeContactSceneStruRequest
     * @returns EnableCollegeContactSceneStruResponse
     */
    enableCollegeContactSceneStru(request: EnableCollegeContactSceneStruRequest): Promise<EnableCollegeContactSceneStruResponse>;
    /**
     * 关闭课程
     *
     * @param request - EndCourseRequest
     * @param headers - EndCourseHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns EndCourseResponse
     */
    endCourseWithOptions(request: EndCourseRequest, headers: EndCourseHeaders, runtime: $Util.RuntimeOptions): Promise<EndCourseResponse>;
    /**
     * 关闭课程
     *
     * @param request - EndCourseRequest
     * @returns EndCourseResponse
     */
    endCourse(request: EndCourseRequest): Promise<EndCourseResponse>;
    /**
     * 获取绑定孩子信息
     *
     * @param request - GetBindChildInfoRequest
     * @param headers - GetBindChildInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetBindChildInfoResponse
     */
    getBindChildInfoWithOptions(request: GetBindChildInfoRequest, headers: GetBindChildInfoHeaders, runtime: $Util.RuntimeOptions): Promise<GetBindChildInfoResponse>;
    /**
     * 获取绑定孩子信息
     *
     * @param request - GetBindChildInfoRequest
     * @returns GetBindChildInfoResponse
     */
    getBindChildInfo(request: GetBindChildInfoRequest): Promise<GetBindChildInfoResponse>;
    /**
     * 查询用户的孩子列表
     *
     * @param headers - GetChildrenHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetChildrenResponse
     */
    getChildrenWithOptions(headers: GetChildrenHeaders, runtime: $Util.RuntimeOptions): Promise<GetChildrenResponse>;
    /**
     * 查询用户的孩子列表
     * @returns GetChildrenResponse
     */
    getChildren(): Promise<GetChildrenResponse>;
    /**
     * 高校校友会获取当前部门的所有子部门
     *
     * @param request - GetCollegeAlumniDeptsRequest
     * @param headers - GetCollegeAlumniDeptsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetCollegeAlumniDeptsResponse
     */
    getCollegeAlumniDeptsWithOptions(request: GetCollegeAlumniDeptsRequest, headers: GetCollegeAlumniDeptsHeaders, runtime: $Util.RuntimeOptions): Promise<GetCollegeAlumniDeptsResponse>;
    /**
     * 高校校友会获取当前部门的所有子部门
     *
     * @param request - GetCollegeAlumniDeptsRequest
     * @returns GetCollegeAlumniDeptsResponse
     */
    getCollegeAlumniDepts(request: GetCollegeAlumniDeptsRequest): Promise<GetCollegeAlumniDeptsResponse>;
    /**
     * 高校校友会查询校友信息
     *
     * @param request - GetCollegeAlumniUserInfoRequest
     * @param headers - GetCollegeAlumniUserInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetCollegeAlumniUserInfoResponse
     */
    getCollegeAlumniUserInfoWithOptions(request: GetCollegeAlumniUserInfoRequest, headers: GetCollegeAlumniUserInfoHeaders, runtime: $Util.RuntimeOptions): Promise<GetCollegeAlumniUserInfoResponse>;
    /**
     * 高校校友会查询校友信息
     *
     * @param request - GetCollegeAlumniUserInfoRequest
     * @returns GetCollegeAlumniUserInfoResponse
     */
    getCollegeAlumniUserInfo(request: GetCollegeAlumniUserInfoRequest): Promise<GetCollegeAlumniUserInfoResponse>;
    /**
     * 获取高校通讯录组织单元详情
     *
     * @param request - GetCollegeContactDeptDetailRequest
     * @param headers - GetCollegeContactDeptDetailHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetCollegeContactDeptDetailResponse
     */
    getCollegeContactDeptDetailWithOptions(request: GetCollegeContactDeptDetailRequest, headers: GetCollegeContactDeptDetailHeaders, runtime: $Util.RuntimeOptions): Promise<GetCollegeContactDeptDetailResponse>;
    /**
     * 获取高校通讯录组织单元详情
     *
     * @param request - GetCollegeContactDeptDetailRequest
     * @returns GetCollegeContactDeptDetailResponse
     */
    getCollegeContactDeptDetail(request: GetCollegeContactDeptDetailRequest): Promise<GetCollegeContactDeptDetailResponse>;
    /**
     * 获取行政组织架构信息
     *
     * @param request - GetCollegeContactStandardStruDeptDetailRequest
     * @param headers - GetCollegeContactStandardStruDeptDetailHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetCollegeContactStandardStruDeptDetailResponse
     */
    getCollegeContactStandardStruDeptDetailWithOptions(request: GetCollegeContactStandardStruDeptDetailRequest, headers: GetCollegeContactStandardStruDeptDetailHeaders, runtime: $Util.RuntimeOptions): Promise<GetCollegeContactStandardStruDeptDetailResponse>;
    /**
     * 获取行政组织架构信息
     *
     * @param request - GetCollegeContactStandardStruDeptDetailRequest
     * @returns GetCollegeContactStandardStruDeptDetailResponse
     */
    getCollegeContactStandardStruDeptDetail(request: GetCollegeContactStandardStruDeptDetailRequest): Promise<GetCollegeContactStandardStruDeptDetailResponse>;
    /**
     * 获取默认孩子信息
     *
     * @param headers - GetDefaultChildHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetDefaultChildResponse
     */
    getDefaultChildWithOptions(headers: GetDefaultChildHeaders, runtime: $Util.RuntimeOptions): Promise<GetDefaultChildResponse>;
    /**
     * 获取默认孩子信息
     * @returns GetDefaultChildResponse
     */
    getDefaultChild(): Promise<GetDefaultChildResponse>;
    /**
     * 阿里云盘教师节活动获取用户身份
     *
     * @param request - GetEduUserIdentityRequest
     * @param headers - GetEduUserIdentityHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetEduUserIdentityResponse
     */
    getEduUserIdentityWithOptions(request: GetEduUserIdentityRequest, headers: GetEduUserIdentityHeaders, runtime: $Util.RuntimeOptions): Promise<GetEduUserIdentityResponse>;
    /**
     * 阿里云盘教师节活动获取用户身份
     *
     * @param request - GetEduUserIdentityRequest
     * @returns GetEduUserIdentityResponse
     */
    getEduUserIdentity(request: GetEduUserIdentityRequest): Promise<GetEduUserIdentityResponse>;
    /**
     * 获取文件下载信息
     *
     * @param request - GetFileDownloadInfoRequest
     * @param headers - GetFileDownloadInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetFileDownloadInfoResponse
     */
    getFileDownloadInfoWithOptions(request: GetFileDownloadInfoRequest, headers: GetFileDownloadInfoHeaders, runtime: $Util.RuntimeOptions): Promise<GetFileDownloadInfoResponse>;
    /**
     * 获取文件下载信息
     *
     * @param request - GetFileDownloadInfoRequest
     * @returns GetFileDownloadInfoResponse
     */
    getFileDownloadInfo(request: GetFileDownloadInfoRequest): Promise<GetFileDownloadInfoResponse>;
    /**
     * 查询文件和图片ID信息
     *
     * @param request - GetFileDownloadInfoByPackageIdRequest
     * @param headers - GetFileDownloadInfoByPackageIdHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetFileDownloadInfoByPackageIdResponse
     */
    getFileDownloadInfoByPackageIdWithOptions(request: GetFileDownloadInfoByPackageIdRequest, headers: GetFileDownloadInfoByPackageIdHeaders, runtime: $Util.RuntimeOptions): Promise<GetFileDownloadInfoByPackageIdResponse>;
    /**
     * 查询文件和图片ID信息
     *
     * @param request - GetFileDownloadInfoByPackageIdRequest
     * @returns GetFileDownloadInfoByPackageIdResponse
     */
    getFileDownloadInfoByPackageId(request: GetFileDownloadInfoByPackageIdRequest): Promise<GetFileDownloadInfoByPackageIdResponse>;
    /**
     * 获取图片下载信息
     *
     * @param request - GetImageTempDownloadUrlRequest
     * @param headers - GetImageTempDownloadUrlHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetImageTempDownloadUrlResponse
     */
    getImageTempDownloadUrlWithOptions(request: GetImageTempDownloadUrlRequest, headers: GetImageTempDownloadUrlHeaders, runtime: $Util.RuntimeOptions): Promise<GetImageTempDownloadUrlResponse>;
    /**
     * 获取图片下载信息
     *
     * @param request - GetImageTempDownloadUrlRequest
     * @returns GetImageTempDownloadUrlResponse
     */
    getImageTempDownloadUrl(request: GetImageTempDownloadUrlRequest): Promise<GetImageTempDownloadUrlResponse>;
    /**
     * 获取公开课的课程详情
     *
     * @param headers - GetOpenCourseDetailHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetOpenCourseDetailResponse
     */
    getOpenCourseDetailWithOptions(courseId: string, headers: GetOpenCourseDetailHeaders, runtime: $Util.RuntimeOptions): Promise<GetOpenCourseDetailResponse>;
    /**
     * 获取公开课的课程详情
     * @returns GetOpenCourseDetailResponse
     */
    getOpenCourseDetail(courseId: string): Promise<GetOpenCourseDetailResponse>;
    /**
     * 获取通过审核的课程列表
     *
     * @param request - GetOpenCoursesRequest
     * @param headers - GetOpenCoursesHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetOpenCoursesResponse
     */
    getOpenCoursesWithOptions(request: GetOpenCoursesRequest, headers: GetOpenCoursesHeaders, runtime: $Util.RuntimeOptions): Promise<GetOpenCoursesResponse>;
    /**
     * 获取通过审核的课程列表
     *
     * @param request - GetOpenCoursesRequest
     * @returns GetOpenCoursesResponse
     */
    getOpenCourses(request: GetOpenCoursesRequest): Promise<GetOpenCoursesResponse>;
    /**
     * 查询教育积分流水记录
     *
     * @param tmpReq - GetPointActionRecordRequest
     * @param headers - GetPointActionRecordHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetPointActionRecordResponse
     */
    getPointActionRecordWithOptions(tmpReq: GetPointActionRecordRequest, headers: GetPointActionRecordHeaders, runtime: $Util.RuntimeOptions): Promise<GetPointActionRecordResponse>;
    /**
     * 查询教育积分流水记录
     *
     * @param request - GetPointActionRecordRequest
     * @returns GetPointActionRecordResponse
     */
    getPointActionRecord(request: GetPointActionRecordRequest): Promise<GetPointActionRecordResponse>;
    /**
     * 查询教育积分信息
     *
     * @param request - GetPointInfoRequest
     * @param headers - GetPointInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetPointInfoResponse
     */
    getPointInfoWithOptions(request: GetPointInfoRequest, headers: GetPointInfoHeaders, runtime: $Util.RuntimeOptions): Promise<GetPointInfoResponse>;
    /**
     * 查询教育积分信息
     *
     * @param request - GetPointInfoRequest
     * @returns GetPointInfoResponse
     */
    getPointInfo(request: GetPointInfoRequest): Promise<GetPointInfoResponse>;
    /**
     * 查询专递课堂课程详情
     *
     * @param request - GetRemoteClassCourseRequest
     * @param headers - GetRemoteClassCourseHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetRemoteClassCourseResponse
     */
    getRemoteClassCourseWithOptions(courseCode: string, request: GetRemoteClassCourseRequest, headers: GetRemoteClassCourseHeaders, runtime: $Util.RuntimeOptions): Promise<GetRemoteClassCourseResponse>;
    /**
     * 查询专递课堂课程详情
     *
     * @param request - GetRemoteClassCourseRequest
     * @returns GetRemoteClassCourseResponse
     */
    getRemoteClassCourse(courseCode: string, request: GetRemoteClassCourseRequest): Promise<GetRemoteClassCourseResponse>;
    /**
     * 获取共享角色成员
     *
     * @param headers - GetShareRoleMembersHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetShareRoleMembersResponse
     */
    getShareRoleMembersWithOptions(shareRoleCode: string, headers: GetShareRoleMembersHeaders, runtime: $Util.RuntimeOptions): Promise<GetShareRoleMembersResponse>;
    /**
     * 获取共享角色成员
     * @returns GetShareRoleMembersResponse
     */
    getShareRoleMembers(shareRoleCode: string): Promise<GetShareRoleMembersResponse>;
    /**
     * 获取教育局的共享角色列表
     *
     * @param headers - GetShareRolesHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetShareRolesResponse
     */
    getShareRolesWithOptions(headers: GetShareRolesHeaders, runtime: $Util.RuntimeOptions): Promise<GetShareRolesResponse>;
    /**
     * 获取教育局的共享角色列表
     * @returns GetShareRolesResponse
     */
    getShareRoles(): Promise<GetShareRolesResponse>;
    /**
     * 查询入学任务列表
     *
     * @param request - GetTaskListRequest
     * @param headers - GetTaskListHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetTaskListResponse
     */
    getTaskListWithOptions(request: GetTaskListRequest, headers: GetTaskListHeaders, runtime: $Util.RuntimeOptions): Promise<GetTaskListResponse>;
    /**
     * 查询入学任务列表
     *
     * @param request - GetTaskListRequest
     * @returns GetTaskListResponse
     */
    getTaskList(request: GetTaskListRequest): Promise<GetTaskListResponse>;
    /**
     * 获取入学任务下的学生列表
     *
     * @param request - GetTaskStudentListRequest
     * @param headers - GetTaskStudentListHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetTaskStudentListResponse
     */
    getTaskStudentListWithOptions(request: GetTaskStudentListRequest, headers: GetTaskStudentListHeaders, runtime: $Util.RuntimeOptions): Promise<GetTaskStudentListResponse>;
    /**
     * 获取入学任务下的学生列表
     *
     * @param request - GetTaskStudentListRequest
     * @returns GetTaskStudentListResponse
     */
    getTaskStudentList(request: GetTaskStudentListRequest): Promise<GetTaskStudentListResponse>;
    /**
     * 初始化班级课程表
     *
     * @param request - InitCoursesOfClassRequest
     * @param headers - InitCoursesOfClassHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns InitCoursesOfClassResponse
     */
    initCoursesOfClassWithOptions(classId: string, request: InitCoursesOfClassRequest, headers: InitCoursesOfClassHeaders, runtime: $Util.RuntimeOptions): Promise<InitCoursesOfClassResponse>;
    /**
     * 初始化班级课程表
     *
     * @param request - InitCoursesOfClassRequest
     * @returns InitCoursesOfClassResponse
     */
    initCoursesOfClass(classId: string, request: InitCoursesOfClassRequest): Promise<InitCoursesOfClassResponse>;
    /**
     * 设备启动注册
     *
     * @param request - InitDeviceRequest
     * @param headers - InitDeviceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns InitDeviceResponse
     */
    initDeviceWithOptions(request: InitDeviceRequest, headers: InitDeviceHeaders, runtime: $Util.RuntimeOptions): Promise<InitDeviceResponse>;
    /**
     * 设备启动注册
     *
     * @param request - InitDeviceRequest
     * @returns InitDeviceResponse
     */
    initDevice(request: InitDeviceRequest): Promise<InitDeviceResponse>;
    /**
     * 视讯paas机具初始化
     *
     * @param request - InitVPaasDeviceRequest
     * @param headers - InitVPaasDeviceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns InitVPaasDeviceResponse
     */
    initVPaasDeviceWithOptions(request: InitVPaasDeviceRequest, headers: InitVPaasDeviceHeaders, runtime: $Util.RuntimeOptions): Promise<InitVPaasDeviceResponse>;
    /**
     * 视讯paas机具初始化
     *
     * @param request - InitVPaasDeviceRequest
     * @returns InitVPaasDeviceResponse
     */
    initVPaasDevice(request: InitVPaasDeviceRequest): Promise<InitVPaasDeviceResponse>;
    /**
     * 插入学校维度节次设置
     *
     * @param request - InsertSectionConfigRequest
     * @param headers - InsertSectionConfigHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns InsertSectionConfigResponse
     */
    insertSectionConfigWithOptions(request: InsertSectionConfigRequest, headers: InsertSectionConfigHeaders, runtime: $Util.RuntimeOptions): Promise<InsertSectionConfigResponse>;
    /**
     * 插入学校维度节次设置
     *
     * @param request - InsertSectionConfigRequest
     * @returns InsertSectionConfigResponse
     */
    insertSectionConfig(request: InsertSectionConfigRequest): Promise<InsertSectionConfigResponse>;
    /**
     * 失效课程
     *
     * @param request - InvalidCourseRequest
     * @param headers - InvalidCourseHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns InvalidCourseResponse
     */
    invalidCourseWithOptions(request: InvalidCourseRequest, headers: InvalidCourseHeaders, runtime: $Util.RuntimeOptions): Promise<InvalidCourseResponse>;
    /**
     * 失效课程
     *
     * @param request - InvalidCourseRequest
     * @returns InvalidCourseResponse
     */
    invalidCourse(request: InvalidCourseRequest): Promise<InvalidCourseResponse>;
    /**
     * 失效教育套件
     *
     * @param request - InvalidKitRequest
     * @param headers - InvalidKitHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns InvalidKitResponse
     */
    invalidKitWithOptions(request: InvalidKitRequest, headers: InvalidKitHeaders, runtime: $Util.RuntimeOptions): Promise<InvalidKitResponse>;
    /**
     * 失效教育套件
     *
     * @param request - InvalidKitRequest
     * @returns InvalidKitResponse
     */
    invalidKit(request: InvalidKitRequest): Promise<InvalidKitResponse>;
    /**
     * 删除学生班级
     *
     * @param request - InvalidStudentClassRequest
     * @param headers - InvalidStudentClassHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns InvalidStudentClassResponse
     */
    invalidStudentClassWithOptions(request: InvalidStudentClassRequest, headers: InvalidStudentClassHeaders, runtime: $Util.RuntimeOptions): Promise<InvalidStudentClassResponse>;
    /**
     * 删除学生班级
     *
     * @param request - InvalidStudentClassRequest
     * @returns InvalidStudentClassResponse
     */
    invalidStudentClass(request: InvalidStudentClassRequest): Promise<InvalidStudentClassResponse>;
    /**
     * 删除老师课程
     *
     * @param request - InvalidTeacherCourseRequest
     * @param headers - InvalidTeacherCourseHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns InvalidTeacherCourseResponse
     */
    invalidTeacherCourseWithOptions(request: InvalidTeacherCourseRequest, headers: InvalidTeacherCourseHeaders, runtime: $Util.RuntimeOptions): Promise<InvalidTeacherCourseResponse>;
    /**
     * 删除老师课程
     *
     * @param request - InvalidTeacherCourseRequest
     * @returns InvalidTeacherCourseResponse
     */
    invalidTeacherCourse(request: InvalidTeacherCourseRequest): Promise<InvalidTeacherCourseResponse>;
    /**
     * 第三方数据写入
     *
     * @param request - IsvDataWriteRequest
     * @param headers - IsvDataWriteHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns IsvDataWriteResponse
     */
    isvDataWriteWithOptions(request: IsvDataWriteRequest, headers: IsvDataWriteHeaders, runtime: $Util.RuntimeOptions): Promise<IsvDataWriteResponse>;
    /**
     * 第三方数据写入
     *
     * @param request - IsvDataWriteRequest
     * @returns IsvDataWriteResponse
     */
    isvDataWrite(request: IsvDataWriteRequest): Promise<IsvDataWriteResponse>;
    /**
     * Isv查询元数据信息
     *
     * @param request - IsvMetadataQueryRequest
     * @param headers - IsvMetadataQueryHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns IsvMetadataQueryResponse
     */
    isvMetadataQueryWithOptions(request: IsvMetadataQueryRequest, headers: IsvMetadataQueryHeaders, runtime: $Util.RuntimeOptions): Promise<IsvMetadataQueryResponse>;
    /**
     * Isv查询元数据信息
     *
     * @param request - IsvMetadataQueryRequest
     * @returns IsvMetadataQueryResponse
     */
    isvMetadataQuery(request: IsvMetadataQueryRequest): Promise<IsvMetadataQueryResponse>;
    /**
     * 获取高校组织单元类型
     *
     * @param request - ListCollegeContactDeptTypeConfigRequest
     * @param headers - ListCollegeContactDeptTypeConfigHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListCollegeContactDeptTypeConfigResponse
     */
    listCollegeContactDeptTypeConfigWithOptions(request: ListCollegeContactDeptTypeConfigRequest, headers: ListCollegeContactDeptTypeConfigHeaders, runtime: $Util.RuntimeOptions): Promise<ListCollegeContactDeptTypeConfigResponse>;
    /**
     * 获取高校组织单元类型
     *
     * @param request - ListCollegeContactDeptTypeConfigRequest
     * @returns ListCollegeContactDeptTypeConfigResponse
     */
    listCollegeContactDeptTypeConfig(request: ListCollegeContactDeptTypeConfigRequest): Promise<ListCollegeContactDeptTypeConfigResponse>;
    /**
     * 获取高校通讯录场景架构列表
     *
     * @param request - ListCollegeContactSceneStrusRequest
     * @param headers - ListCollegeContactSceneStrusHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListCollegeContactSceneStrusResponse
     */
    listCollegeContactSceneStrusWithOptions(request: ListCollegeContactSceneStrusRequest, headers: ListCollegeContactSceneStrusHeaders, runtime: $Util.RuntimeOptions): Promise<ListCollegeContactSceneStrusResponse>;
    /**
     * 获取高校通讯录场景架构列表
     *
     * @param request - ListCollegeContactSceneStrusRequest
     * @returns ListCollegeContactSceneStrusResponse
     */
    listCollegeContactSceneStrus(request: ListCollegeContactSceneStrusRequest): Promise<ListCollegeContactSceneStrusResponse>;
    /**
     * 获取高校通讯录子组织单元列表
     *
     * @param request - ListCollegeContactSubDeptsRequest
     * @param headers - ListCollegeContactSubDeptsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListCollegeContactSubDeptsResponse
     */
    listCollegeContactSubDeptsWithOptions(request: ListCollegeContactSubDeptsRequest, headers: ListCollegeContactSubDeptsHeaders, runtime: $Util.RuntimeOptions): Promise<ListCollegeContactSubDeptsResponse>;
    /**
     * 获取高校通讯录子组织单元列表
     *
     * @param request - ListCollegeContactSubDeptsRequest
     * @returns ListCollegeContactSubDeptsResponse
     */
    listCollegeContactSubDepts(request: ListCollegeContactSubDeptsRequest): Promise<ListCollegeContactSubDeptsResponse>;
    /**
     * 查询订单
     *
     * @param request - ListOrderRequest
     * @param headers - ListOrderHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListOrderResponse
     */
    listOrderWithOptions(request: ListOrderRequest, headers: ListOrderHeaders, runtime: $Util.RuntimeOptions): Promise<ListOrderResponse>;
    /**
     * 查询订单
     *
     * @param request - ListOrderRequest
     * @returns ListOrderResponse
     */
    listOrder(request: ListOrderRequest): Promise<ListOrderResponse>;
    /**
     * 学生调班，如果学生在本班有对应的家长，则家长也会跟同学生进行调整班级。
     *
     * @param request - MoveStudentRequest
     * @param headers - MoveStudentHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns MoveStudentResponse
     */
    moveStudentWithOptions(request: MoveStudentRequest, headers: MoveStudentHeaders, runtime: $Util.RuntimeOptions): Promise<MoveStudentResponse>;
    /**
     * 学生调班，如果学生在本班有对应的家长，则家长也会跟同学生进行调整班级。
     *
     * @param request - MoveStudentRequest
     * @returns MoveStudentResponse
     */
    moveStudent(request: MoveStudentRequest): Promise<MoveStudentResponse>;
    /**
     * 开通教育套件
     *
     * @param request - OpenKitRequest
     * @param headers - OpenKitHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns OpenKitResponse
     */
    openKitWithOptions(request: OpenKitRequest, headers: OpenKitHeaders, runtime: $Util.RuntimeOptions): Promise<OpenKitResponse>;
    /**
     * 开通教育套件
     *
     * @param request - OpenKitRequest
     * @returns OpenKitResponse
     */
    openKit(request: OpenKitRequest): Promise<OpenKitResponse>;
    /**
     * 查询订单信息
     *
     * @param request - OrderInfoRequest
     * @param headers - OrderInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns OrderInfoResponse
     */
    orderInfoWithOptions(request: OrderInfoRequest, headers: OrderInfoHeaders, runtime: $Util.RuntimeOptions): Promise<OrderInfoResponse>;
    /**
     * 查询订单信息
     *
     * @param request - OrderInfoRequest
     * @returns OrderInfoResponse
     */
    orderInfo(request: OrderInfoRequest): Promise<OrderInfoResponse>;
    /**
     * 批量查询班级课表
     *
     * @param request - PageQueryClassCourseRequest
     * @param headers - PageQueryClassCourseHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns PageQueryClassCourseResponse
     */
    pageQueryClassCourseWithOptions(request: PageQueryClassCourseRequest, headers: PageQueryClassCourseHeaders, runtime: $Util.RuntimeOptions): Promise<PageQueryClassCourseResponse>;
    /**
     * 批量查询班级课表
     *
     * @param request - PageQueryClassCourseRequest
     * @returns PageQueryClassCourseResponse
     */
    pageQueryClassCourse(request: PageQueryClassCourseRequest): Promise<PageQueryClassCourseResponse>;
    /**
     * 分页查询设备列表
     *
     * @param request - PageQueryDevicesRequest
     * @param headers - PageQueryDevicesHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns PageQueryDevicesResponse
     */
    pageQueryDevicesWithOptions(request: PageQueryDevicesRequest, headers: PageQueryDevicesHeaders, runtime: $Util.RuntimeOptions): Promise<PageQueryDevicesResponse>;
    /**
     * 分页查询设备列表
     *
     * @param request - PageQueryDevicesRequest
     * @returns PageQueryDevicesResponse
     */
    pageQueryDevices(request: PageQueryDevicesRequest): Promise<PageQueryDevicesResponse>;
    /**
     * 批量查询套件开通记录
     *
     * @param request - PageQueryKitOpenRecordRequest
     * @param headers - PageQueryKitOpenRecordHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns PageQueryKitOpenRecordResponse
     */
    pageQueryKitOpenRecordWithOptions(request: PageQueryKitOpenRecordRequest, headers: PageQueryKitOpenRecordHeaders, runtime: $Util.RuntimeOptions): Promise<PageQueryKitOpenRecordResponse>;
    /**
     * 批量查询套件开通记录
     *
     * @param request - PageQueryKitOpenRecordRequest
     * @returns PageQueryKitOpenRecordResponse
     */
    pageQueryKitOpenRecord(request: PageQueryKitOpenRecordRequest): Promise<PageQueryKitOpenRecordResponse>;
    /**
     * 支付订单
     *
     * @param request - PayOrderRequest
     * @param headers - PayOrderHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns PayOrderResponse
     */
    payOrderWithOptions(request: PayOrderRequest, headers: PayOrderHeaders, runtime: $Util.RuntimeOptions): Promise<PayOrderResponse>;
    /**
     * 支付订单
     *
     * @param request - PayOrderRequest
     * @returns PayOrderResponse
     */
    payOrder(request: PayOrderRequest): Promise<PayOrderResponse>;
    /**
     * 轮询课程状态，确认教师是否已同意开课
     *
     * @param request - PollingConfirmStatusRequest
     * @param headers - PollingConfirmStatusHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns PollingConfirmStatusResponse
     */
    pollingConfirmStatusWithOptions(request: PollingConfirmStatusRequest, headers: PollingConfirmStatusHeaders, runtime: $Util.RuntimeOptions): Promise<PollingConfirmStatusResponse>;
    /**
     * 轮询课程状态，确认教师是否已同意开课
     *
     * @param request - PollingConfirmStatusRequest
     * @returns PollingConfirmStatusResponse
     */
    pollingConfirmStatus(request: PollingConfirmStatusRequest): Promise<PollingConfirmStatusResponse>;
    /**
     * 视讯paas机具预拨号
     *
     * @param request - PreDialRequest
     * @param headers - PreDialHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns PreDialResponse
     */
    preDialWithOptions(request: PreDialRequest, headers: PreDialHeaders, runtime: $Util.RuntimeOptions): Promise<PreDialResponse>;
    /**
     * 视讯paas机具预拨号
     *
     * @param request - PreDialRequest
     * @returns PreDialResponse
     */
    preDial(request: PreDialRequest): Promise<PreDialResponse>;
    /**
     * 发放教育积分
     *
     * @param request - ProvidePointRequest
     * @param headers - ProvidePointHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ProvidePointResponse
     */
    providePointWithOptions(request: ProvidePointRequest, headers: ProvidePointHeaders, runtime: $Util.RuntimeOptions): Promise<ProvidePointResponse>;
    /**
     * 发放教育积分
     *
     * @param request - ProvidePointRequest
     * @returns ProvidePointResponse
     */
    providePoint(request: ProvidePointRequest): Promise<ProvidePointResponse>;
    /**
     * 查询全量学科实例列表
     *
     * @param tmpReq - QueryAllSubjectsFromClassScheduleRequest
     * @param headers - QueryAllSubjectsFromClassScheduleHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryAllSubjectsFromClassScheduleResponse
     */
    queryAllSubjectsFromClassScheduleWithOptions(tmpReq: QueryAllSubjectsFromClassScheduleRequest, headers: QueryAllSubjectsFromClassScheduleHeaders, runtime: $Util.RuntimeOptions): Promise<QueryAllSubjectsFromClassScheduleResponse>;
    /**
     * 查询全量学科实例列表
     *
     * @param request - QueryAllSubjectsFromClassScheduleRequest
     * @returns QueryAllSubjectsFromClassScheduleResponse
     */
    queryAllSubjectsFromClassSchedule(request: QueryAllSubjectsFromClassScheduleRequest): Promise<QueryAllSubjectsFromClassScheduleResponse>;
    /**
     * 查询课程表
     *
     * @param request - QueryClassScheduleRequest
     * @param headers - QueryClassScheduleHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryClassScheduleResponse
     */
    queryClassScheduleWithOptions(request: QueryClassScheduleRequest, headers: QueryClassScheduleHeaders, runtime: $Util.RuntimeOptions): Promise<QueryClassScheduleResponse>;
    /**
     * 查询课程表
     *
     * @param request - QueryClassScheduleRequest
     * @returns QueryClassScheduleResponse
     */
    queryClassSchedule(request: QueryClassScheduleRequest): Promise<QueryClassScheduleResponse>;
    /**
     * 按照学校和时间区间筛选课程
     *
     * @param request - QueryClassScheduleByTimeSchoolRequest
     * @param headers - QueryClassScheduleByTimeSchoolHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryClassScheduleByTimeSchoolResponse
     */
    queryClassScheduleByTimeSchoolWithOptions(request: QueryClassScheduleByTimeSchoolRequest, headers: QueryClassScheduleByTimeSchoolHeaders, runtime: $Util.RuntimeOptions): Promise<QueryClassScheduleByTimeSchoolResponse>;
    /**
     * 按照学校和时间区间筛选课程
     *
     * @param request - QueryClassScheduleByTimeSchoolRequest
     * @returns QueryClassScheduleByTimeSchoolResponse
     */
    queryClassScheduleByTimeSchool(request: QueryClassScheduleByTimeSchoolRequest): Promise<QueryClassScheduleByTimeSchoolResponse>;
    /**
     * 获取课程表设置
     *
     * @param tmpReq - QueryClassScheduleConfigRequest
     * @param headers - QueryClassScheduleConfigHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryClassScheduleConfigResponse
     */
    queryClassScheduleConfigWithOptions(tmpReq: QueryClassScheduleConfigRequest, headers: QueryClassScheduleConfigHeaders, runtime: $Util.RuntimeOptions): Promise<QueryClassScheduleConfigResponse>;
    /**
     * 获取课程表设置
     *
     * @param request - QueryClassScheduleConfigRequest
     * @returns QueryClassScheduleConfigResponse
     */
    queryClassScheduleConfig(request: QueryClassScheduleConfigRequest): Promise<QueryClassScheduleConfigResponse>;
    /**
     * 获取用户详情(包含高校账号)
     *
     * @param request - QueryCollegeContactUserDetailRequest
     * @param headers - QueryCollegeContactUserDetailHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryCollegeContactUserDetailResponse
     */
    queryCollegeContactUserDetailWithOptions(request: QueryCollegeContactUserDetailRequest, headers: QueryCollegeContactUserDetailHeaders, runtime: $Util.RuntimeOptions): Promise<QueryCollegeContactUserDetailResponse>;
    /**
     * 获取用户详情(包含高校账号)
     *
     * @param request - QueryCollegeContactUserDetailRequest
     * @returns QueryCollegeContactUserDetailResponse
     */
    queryCollegeContactUserDetail(request: QueryCollegeContactUserDetailRequest): Promise<QueryCollegeContactUserDetailResponse>;
    /**
     * 查询单台视讯PAAS设备
     *
     * @param request - QueryDeviceRequest
     * @param headers - QueryDeviceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryDeviceResponse
     */
    queryDeviceWithOptions(request: QueryDeviceRequest, headers: QueryDeviceHeaders, runtime: $Util.RuntimeOptions): Promise<QueryDeviceResponse>;
    /**
     * 查询单台视讯PAAS设备
     *
     * @param request - QueryDeviceRequest
     * @returns QueryDeviceResponse
     */
    queryDevice(request: QueryDeviceRequest): Promise<QueryDeviceResponse>;
    /**
     * 查询某个组织下面的设备列表
     *
     * @param request - QueryDeviceListByCorpIdRequest
     * @param headers - QueryDeviceListByCorpIdHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryDeviceListByCorpIdResponse
     */
    queryDeviceListByCorpIdWithOptions(request: QueryDeviceListByCorpIdRequest, headers: QueryDeviceListByCorpIdHeaders, runtime: $Util.RuntimeOptions): Promise<QueryDeviceListByCorpIdResponse>;
    /**
     * 查询某个组织下面的设备列表
     *
     * @param request - QueryDeviceListByCorpIdRequest
     * @returns QueryDeviceListByCorpIdResponse
     */
    queryDeviceListByCorpId(request: QueryDeviceListByCorpIdRequest): Promise<QueryDeviceListByCorpIdResponse>;
    /**
     * 教学资源库查询space列表
     *
     * @param request - QueryEduAssetSpacesRequest
     * @param headers - QueryEduAssetSpacesHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryEduAssetSpacesResponse
     */
    queryEduAssetSpacesWithOptions(request: QueryEduAssetSpacesRequest, headers: QueryEduAssetSpacesHeaders, runtime: $Util.RuntimeOptions): Promise<QueryEduAssetSpacesResponse>;
    /**
     * 教学资源库查询space列表
     *
     * @param request - QueryEduAssetSpacesRequest
     * @returns QueryEduAssetSpacesResponse
     */
    queryEduAssetSpaces(request: QueryEduAssetSpacesRequest): Promise<QueryEduAssetSpacesResponse>;
    /**
     * 根据设备SN信息查询学校人脸库
     *
     * @param request - QueryGroupIdRequest
     * @param headers - QueryGroupIdHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryGroupIdResponse
     */
    queryGroupIdWithOptions(request: QueryGroupIdRequest, headers: QueryGroupIdHeaders, runtime: $Util.RuntimeOptions): Promise<QueryGroupIdResponse>;
    /**
     * 根据设备SN信息查询学校人脸库
     *
     * @param request - QueryGroupIdRequest
     * @returns QueryGroupIdResponse
     */
    queryGroupId(request: QueryGroupIdRequest): Promise<QueryGroupIdResponse>;
    /**
     * 查询套件开通记录
     *
     * @param request - QueryKitOpenRecordRequest
     * @param headers - QueryKitOpenRecordHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryKitOpenRecordResponse
     */
    queryKitOpenRecordWithOptions(request: QueryKitOpenRecordRequest, headers: QueryKitOpenRecordHeaders, runtime: $Util.RuntimeOptions): Promise<QueryKitOpenRecordResponse>;
    /**
     * 查询套件开通记录
     *
     * @param request - QueryKitOpenRecordRequest
     * @returns QueryKitOpenRecordResponse
     */
    queryKitOpenRecord(request: QueryKitOpenRecordRequest): Promise<QueryKitOpenRecordResponse>;
    /**
     * 查询订单信息
     *
     * @param request - QueryOrderRequest
     * @param headers - QueryOrderHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryOrderResponse
     */
    queryOrderWithOptions(request: QueryOrderRequest, headers: QueryOrderHeaders, runtime: $Util.RuntimeOptions): Promise<QueryOrderResponse>;
    /**
     * 查询订单信息
     *
     * @param request - QueryOrderRequest
     * @returns QueryOrderResponse
     */
    queryOrder(request: QueryOrderRequest): Promise<QueryOrderResponse>;
    /**
     * 查询某个组织下面关联的组织列表
     *
     * @param request - QueryOrgRelationListRequest
     * @param headers - QueryOrgRelationListHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryOrgRelationListResponse
     */
    queryOrgRelationListWithOptions(request: QueryOrgRelationListRequest, headers: QueryOrgRelationListHeaders, runtime: $Util.RuntimeOptions): Promise<QueryOrgRelationListResponse>;
    /**
     * 查询某个组织下面关联的组织列表
     *
     * @param request - QueryOrgRelationListRequest
     * @returns QueryOrgRelationListResponse
     */
    queryOrgRelationList(request: QueryOrgRelationListRequest): Promise<QueryOrgRelationListResponse>;
    /**
     * 获取组织秘钥
     *
     * @param request - QueryOrgSecretKeyRequest
     * @param headers - QueryOrgSecretKeyHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryOrgSecretKeyResponse
     */
    queryOrgSecretKeyWithOptions(request: QueryOrgSecretKeyRequest, headers: QueryOrgSecretKeyHeaders, runtime: $Util.RuntimeOptions): Promise<QueryOrgSecretKeyResponse>;
    /**
     * 获取组织秘钥
     *
     * @param request - QueryOrgSecretKeyRequest
     * @returns QueryOrgSecretKeyResponse
     */
    queryOrgSecretKey(request: QueryOrgSecretKeyRequest): Promise<QueryOrgSecretKeyResponse>;
    /**
     * 查询教育组织类型
     *
     * @param headers - QueryOrgTypeHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryOrgTypeResponse
     */
    queryOrgTypeWithOptions(headers: QueryOrgTypeHeaders, runtime: $Util.RuntimeOptions): Promise<QueryOrgTypeResponse>;
    /**
     * 查询教育组织类型
     * @returns QueryOrgTypeResponse
     */
    queryOrgType(): Promise<QueryOrgTypeResponse>;
    /**
     * 查询支付结果
     *
     * @param request - QueryPayResultRequest
     * @param headers - QueryPayResultHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryPayResultResponse
     */
    queryPayResultWithOptions(request: QueryPayResultRequest, headers: QueryPayResultHeaders, runtime: $Util.RuntimeOptions): Promise<QueryPayResultResponse>;
    /**
     * 查询支付结果
     *
     * @param request - QueryPayResultRequest
     * @returns QueryPayResultResponse
     */
    queryPayResult(request: QueryPayResultRequest): Promise<QueryPayResultResponse>;
    /**
     * 查询物理教室信息
     *
     * @param request - QueryPhysicalClassroomRequest
     * @param headers - QueryPhysicalClassroomHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryPhysicalClassroomResponse
     */
    queryPhysicalClassroomWithOptions(request: QueryPhysicalClassroomRequest, headers: QueryPhysicalClassroomHeaders, runtime: $Util.RuntimeOptions): Promise<QueryPhysicalClassroomResponse>;
    /**
     * 查询物理教室信息
     *
     * @param request - QueryPhysicalClassroomRequest
     * @returns QueryPhysicalClassroomResponse
     */
    queryPhysicalClassroom(request: QueryPhysicalClassroomRequest): Promise<QueryPhysicalClassroomResponse>;
    /**
     * 查询用户订购服务状态
     *
     * @param request - QueryPurchaseInfoRequest
     * @param headers - QueryPurchaseInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryPurchaseInfoResponse
     */
    queryPurchaseInfoWithOptions(request: QueryPurchaseInfoRequest, headers: QueryPurchaseInfoHeaders, runtime: $Util.RuntimeOptions): Promise<QueryPurchaseInfoResponse>;
    /**
     * 查询用户订购服务状态
     *
     * @param request - QueryPurchaseInfoRequest
     * @returns QueryPurchaseInfoResponse
     */
    queryPurchaseInfo(request: QueryPurchaseInfoRequest): Promise<QueryPurchaseInfoResponse>;
    /**
     * 查询课程列表
     *
     * @param request - QueryRemoteClassCourseRequest
     * @param headers - QueryRemoteClassCourseHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryRemoteClassCourseResponse
     */
    queryRemoteClassCourseWithOptions(request: QueryRemoteClassCourseRequest, headers: QueryRemoteClassCourseHeaders, runtime: $Util.RuntimeOptions): Promise<QueryRemoteClassCourseResponse>;
    /**
     * 查询课程列表
     *
     * @param request - QueryRemoteClassCourseRequest
     * @returns QueryRemoteClassCourseResponse
     */
    queryRemoteClassCourse(request: QueryRemoteClassCourseRequest): Promise<QueryRemoteClassCourseResponse>;
    /**
     * 分批查询学校人脸id
     *
     * @param request - QuerySchoolUserFaceRequest
     * @param headers - QuerySchoolUserFaceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QuerySchoolUserFaceResponse
     */
    querySchoolUserFaceWithOptions(request: QuerySchoolUserFaceRequest, headers: QuerySchoolUserFaceHeaders, runtime: $Util.RuntimeOptions): Promise<QuerySchoolUserFaceResponse>;
    /**
     * 分批查询学校人脸id
     *
     * @param request - QuerySchoolUserFaceRequest
     * @returns QuerySchoolUserFaceResponse
     */
    querySchoolUserFace(request: QuerySchoolUserFaceRequest): Promise<QuerySchoolUserFaceResponse>;
    /**
     * 个人应用查询订单信息
     *
     * @param request - QuerySnsOrderRequest
     * @param headers - QuerySnsOrderHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QuerySnsOrderResponse
     */
    querySnsOrderWithOptions(request: QuerySnsOrderRequest, headers: QuerySnsOrderHeaders, runtime: $Util.RuntimeOptions): Promise<QuerySnsOrderResponse>;
    /**
     * 个人应用查询订单信息
     *
     * @param request - QuerySnsOrderRequest
     * @returns QuerySnsOrderResponse
     */
    querySnsOrder(request: QuerySnsOrderRequest): Promise<QuerySnsOrderResponse>;
    /**
     * 获得课程表详细信息
     *
     * @param request - QueryStatisticsDataRequest
     * @param headers - QueryStatisticsDataHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryStatisticsDataResponse
     */
    queryStatisticsDataWithOptions(request: QueryStatisticsDataRequest, headers: QueryStatisticsDataHeaders, runtime: $Util.RuntimeOptions): Promise<QueryStatisticsDataResponse>;
    /**
     * 获得课程表详细信息
     *
     * @param request - QueryStatisticsDataRequest
     * @returns QueryStatisticsDataResponse
     */
    queryStatisticsData(request: QueryStatisticsDataRequest): Promise<QueryStatisticsDataResponse>;
    /**
     * 查询学生班级
     *
     * @param request - QueryStudentClassRequest
     * @param headers - QueryStudentClassHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryStudentClassResponse
     */
    queryStudentClassWithOptions(request: QueryStudentClassRequest, headers: QueryStudentClassHeaders, runtime: $Util.RuntimeOptions): Promise<QueryStudentClassResponse>;
    /**
     * 查询学生班级
     *
     * @param request - QueryStudentClassRequest
     * @returns QueryStudentClassResponse
     */
    queryStudentClass(request: QueryStudentClassRequest): Promise<QueryStudentClassResponse>;
    /**
     * 查询教授某学科老师列表
     *
     * @param request - QuerySubjectTeachersRequest
     * @param headers - QuerySubjectTeachersHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QuerySubjectTeachersResponse
     */
    querySubjectTeachersWithOptions(request: QuerySubjectTeachersRequest, headers: QuerySubjectTeachersHeaders, runtime: $Util.RuntimeOptions): Promise<QuerySubjectTeachersResponse>;
    /**
     * 查询教授某学科老师列表
     *
     * @param request - QuerySubjectTeachersRequest
     * @returns QuerySubjectTeachersResponse
     */
    querySubjectTeachers(request: QuerySubjectTeachersRequest): Promise<QuerySubjectTeachersResponse>;
    /**
     * 查询老师教授学科列表
     *
     * @param request - QueryTeachSubjectsRequest
     * @param headers - QueryTeachSubjectsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryTeachSubjectsResponse
     */
    queryTeachSubjectsWithOptions(request: QueryTeachSubjectsRequest, headers: QueryTeachSubjectsHeaders, runtime: $Util.RuntimeOptions): Promise<QueryTeachSubjectsResponse>;
    /**
     * 查询老师教授学科列表
     *
     * @param request - QueryTeachSubjectsRequest
     * @returns QueryTeachSubjectsResponse
     */
    queryTeachSubjects(request: QueryTeachSubjectsRequest): Promise<QueryTeachSubjectsResponse>;
    /**
     * 查询老师课程
     *
     * @param request - QueryTeacherCourseRequest
     * @param headers - QueryTeacherCourseHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryTeacherCourseResponse
     */
    queryTeacherCourseWithOptions(request: QueryTeacherCourseRequest, headers: QueryTeacherCourseHeaders, runtime: $Util.RuntimeOptions): Promise<QueryTeacherCourseResponse>;
    /**
     * 查询老师课程
     *
     * @param request - QueryTeacherCourseRequest
     * @returns QueryTeacherCourseResponse
     */
    queryTeacherCourse(request: QueryTeacherCourseRequest): Promise<QueryTeacherCourseResponse>;
    /**
     * 查询调代课记录
     *
     * @param request - QueryTransferCourseRequest
     * @param headers - QueryTransferCourseHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryTransferCourseResponse
     */
    queryTransferCourseWithOptions(request: QueryTransferCourseRequest, headers: QueryTransferCourseHeaders, runtime: $Util.RuntimeOptions): Promise<QueryTransferCourseResponse>;
    /**
     * 查询调代课记录
     *
     * @param request - QueryTransferCourseRequest
     * @returns QueryTransferCourseResponse
     */
    queryTransferCourse(request: QueryTransferCourseRequest): Promise<QueryTransferCourseResponse>;
    /**
     * 查询大学课程组
     *
     * @param request - QueryUniversityCourseGroupRequest
     * @param headers - QueryUniversityCourseGroupHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryUniversityCourseGroupResponse
     */
    queryUniversityCourseGroupWithOptions(request: QueryUniversityCourseGroupRequest, headers: QueryUniversityCourseGroupHeaders, runtime: $Util.RuntimeOptions): Promise<QueryUniversityCourseGroupResponse>;
    /**
     * 查询大学课程组
     *
     * @param request - QueryUniversityCourseGroupRequest
     * @returns QueryUniversityCourseGroupResponse
     */
    queryUniversityCourseGroup(request: QueryUniversityCourseGroupRequest): Promise<QueryUniversityCourseGroupResponse>;
    /**
     * 根据人脸id查询用户信息
     *
     * @param request - QueryUserFaceRequest
     * @param headers - QueryUserFaceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryUserFaceResponse
     */
    queryUserFaceWithOptions(request: QueryUserFaceRequest, headers: QueryUserFaceHeaders, runtime: $Util.RuntimeOptions): Promise<QueryUserFaceResponse>;
    /**
     * 根据人脸id查询用户信息
     *
     * @param request - QueryUserFaceRequest
     * @returns QueryUserFaceResponse
     */
    queryUserFace(request: QueryUserFaceRequest): Promise<QueryUserFaceResponse>;
    /**
     * 查询用户支付信息
     *
     * @param request - QueryUserPayInfoRequest
     * @param headers - QueryUserPayInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryUserPayInfoResponse
     */
    queryUserPayInfoWithOptions(request: QueryUserPayInfoRequest, headers: QueryUserPayInfoHeaders, runtime: $Util.RuntimeOptions): Promise<QueryUserPayInfoResponse>;
    /**
     * 查询用户支付信息
     *
     * @param request - QueryUserPayInfoRequest
     * @returns QueryUserPayInfoResponse
     */
    queryUserPayInfo(request: QueryUserPayInfoRequest): Promise<QueryUserPayInfoResponse>;
    /**
     * 移除设备
     *
     * @param request - RemoveDeviceRequest
     * @param headers - RemoveDeviceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns RemoveDeviceResponse
     */
    removeDeviceWithOptions(request: RemoveDeviceRequest, headers: RemoveDeviceHeaders, runtime: $Util.RuntimeOptions): Promise<RemoveDeviceResponse>;
    /**
     * 移除设备
     *
     * @param request - RemoveDeviceRequest
     * @returns RemoveDeviceResponse
     */
    removeDevice(request: RemoveDeviceRequest): Promise<RemoveDeviceResponse>;
    /**
     * 设备日志上报接口
     *
     * @param request - ReportDeviceLogRequest
     * @param headers - ReportDeviceLogHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ReportDeviceLogResponse
     */
    reportDeviceLogWithOptions(request: ReportDeviceLogRequest, headers: ReportDeviceLogHeaders, runtime: $Util.RuntimeOptions): Promise<ReportDeviceLogResponse>;
    /**
     * 设备日志上报接口
     *
     * @param request - ReportDeviceLogRequest
     * @returns ReportDeviceLogResponse
     */
    reportDeviceLog(request: ReportDeviceLogRequest): Promise<ReportDeviceLogResponse>;
    /**
     * 上传设备使用日志
     *
     * @param request - ReportDeviceUseLogRequest
     * @param headers - ReportDeviceUseLogHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ReportDeviceUseLogResponse
     */
    reportDeviceUseLogWithOptions(request: ReportDeviceUseLogRequest, headers: ReportDeviceUseLogHeaders, runtime: $Util.RuntimeOptions): Promise<ReportDeviceUseLogResponse>;
    /**
     * 上传设备使用日志
     *
     * @param request - ReportDeviceUseLogRequest
     * @returns ReportDeviceUseLogResponse
     */
    reportDeviceUseLog(request: ReportDeviceUseLogRequest): Promise<ReportDeviceUseLogResponse>;
    /**
     * 回滚教育积分扣减
     *
     * @param request - RollbackDeductPointRequest
     * @param headers - RollbackDeductPointHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns RollbackDeductPointResponse
     */
    rollbackDeductPointWithOptions(request: RollbackDeductPointRequest, headers: RollbackDeductPointHeaders, runtime: $Util.RuntimeOptions): Promise<RollbackDeductPointResponse>;
    /**
     * 回滚教育积分扣减
     *
     * @param request - RollbackDeductPointRequest
     * @returns RollbackDeductPointResponse
     */
    rollbackDeductPoint(request: RollbackDeductPointRequest): Promise<RollbackDeductPointResponse>;
    /**
     * 保存班级学情数据
     *
     * @param request - SaveClassLearningDataRequest
     * @param headers - SaveClassLearningDataHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SaveClassLearningDataResponse
     */
    saveClassLearningDataWithOptions(request: SaveClassLearningDataRequest, headers: SaveClassLearningDataHeaders, runtime: $Util.RuntimeOptions): Promise<SaveClassLearningDataResponse>;
    /**
     * 保存班级学情数据
     *
     * @param request - SaveClassLearningDataRequest
     * @returns SaveClassLearningDataResponse
     */
    saveClassLearningData(request: SaveClassLearningDataRequest): Promise<SaveClassLearningDataResponse>;
    /**
     * 保存学生学情数据
     *
     * @param request - SaveStudentLearningDataRequest
     * @param headers - SaveStudentLearningDataHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SaveStudentLearningDataResponse
     */
    saveStudentLearningDataWithOptions(request: SaveStudentLearningDataRequest, headers: SaveStudentLearningDataHeaders, runtime: $Util.RuntimeOptions): Promise<SaveStudentLearningDataResponse>;
    /**
     * 保存学生学情数据
     *
     * @param request - SaveStudentLearningDataRequest
     * @returns SaveStudentLearningDataResponse
     */
    saveStudentLearningData(request: SaveStudentLearningDataRequest): Promise<SaveStudentLearningDataResponse>;
    /**
     * 按关键字搜索老师
     *
     * @param request - SearchTeachersRequest
     * @param headers - SearchTeachersHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SearchTeachersResponse
     */
    searchTeachersWithOptions(request: SearchTeachersRequest, headers: SearchTeachersHeaders, runtime: $Util.RuntimeOptions): Promise<SearchTeachersResponse>;
    /**
     * 按关键字搜索老师
     *
     * @param request - SearchTeachersRequest
     * @returns SearchTeachersResponse
     */
    searchTeachers(request: SearchTeachersRequest): Promise<SearchTeachersResponse>;
    /**
     * 套件-发送AI卡片
     *
     * @param request - SendAiCardRequest
     * @param headers - SendAiCardHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SendAiCardResponse
     */
    sendAiCardWithOptions(request: SendAiCardRequest, headers: SendAiCardHeaders, runtime: $Util.RuntimeOptions): Promise<SendAiCardResponse>;
    /**
     * 套件-发送AI卡片
     *
     * @param request - SendAiCardRequest
     * @returns SendAiCardResponse
     */
    sendAiCard(request: SendAiCardRequest): Promise<SendAiCardResponse>;
    /**
     * 收藏文件消息发送
     *
     * @param request - SendFileMessageRequest
     * @param headers - SendFileMessageHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SendFileMessageResponse
     */
    sendFileMessageWithOptions(request: SendFileMessageRequest, headers: SendFileMessageHeaders, runtime: $Util.RuntimeOptions): Promise<SendFileMessageResponse>;
    /**
     * 收藏文件消息发送
     *
     * @param request - SendFileMessageRequest
     * @returns SendFileMessageResponse
     */
    sendFileMessage(request: SendFileMessageRequest): Promise<SendFileMessageResponse>;
    /**
     * 亲情通话发消息
     *
     * @param request - SendMessageRequest
     * @param headers - SendMessageHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SendMessageResponse
     */
    sendMessageWithOptions(request: SendMessageRequest, headers: SendMessageHeaders, runtime: $Util.RuntimeOptions): Promise<SendMessageResponse>;
    /**
     * 亲情通话发消息
     *
     * @param request - SendMessageRequest
     * @returns SendMessageResponse
     */
    sendMessage(request: SendMessageRequest): Promise<SendMessageResponse>;
    /**
     * 发送打印订单提醒消息
     *
     * @param request - SendPrintOrderNoticeMsgRequest
     * @param headers - SendPrintOrderNoticeMsgHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SendPrintOrderNoticeMsgResponse
     */
    sendPrintOrderNoticeMsgWithOptions(request: SendPrintOrderNoticeMsgRequest, headers: SendPrintOrderNoticeMsgHeaders, runtime: $Util.RuntimeOptions): Promise<SendPrintOrderNoticeMsgResponse>;
    /**
     * 发送打印订单提醒消息
     *
     * @param request - SendPrintOrderNoticeMsgRequest
     * @returns SendPrintOrderNoticeMsgResponse
     */
    sendPrintOrderNoticeMsg(request: SendPrintOrderNoticeMsgRequest): Promise<SendPrintOrderNoticeMsgResponse>;
    /**
     * 开始课程
     *
     * @param request - StartCourseRequest
     * @param headers - StartCourseHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns StartCourseResponse
     */
    startCourseWithOptions(request: StartCourseRequest, headers: StartCourseHeaders, runtime: $Util.RuntimeOptions): Promise<StartCourseResponse>;
    /**
     * 开始课程
     *
     * @param request - StartCourseRequest
     * @returns StartCourseResponse
     */
    startCourse(request: StartCourseRequest): Promise<StartCourseResponse>;
    /**
     * 预开课，发送开课提醒
     *
     * @param request - StartCoursePrepareRequest
     * @param headers - StartCoursePrepareHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns StartCoursePrepareResponse
     */
    startCoursePrepareWithOptions(request: StartCoursePrepareRequest, headers: StartCoursePrepareHeaders, runtime: $Util.RuntimeOptions): Promise<StartCoursePrepareResponse>;
    /**
     * 预开课，发送开课提醒
     *
     * @param request - StartCoursePrepareRequest
     * @returns StartCoursePrepareResponse
     */
    startCoursePrepare(request: StartCoursePrepareRequest): Promise<StartCoursePrepareResponse>;
    /**
     * 订阅大学课程组
     *
     * @param request - SubscribeUniversityCourseGroupRequest
     * @param headers - SubscribeUniversityCourseGroupHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SubscribeUniversityCourseGroupResponse
     */
    subscribeUniversityCourseGroupWithOptions(request: SubscribeUniversityCourseGroupRequest, headers: SubscribeUniversityCourseGroupHeaders, runtime: $Util.RuntimeOptions): Promise<SubscribeUniversityCourseGroupResponse>;
    /**
     * 订阅大学课程组
     *
     * @param request - SubscribeUniversityCourseGroupRequest
     * @returns SubscribeUniversityCourseGroupResponse
     */
    subscribeUniversityCourseGroup(request: SubscribeUniversityCourseGroupRequest): Promise<SubscribeUniversityCourseGroupResponse>;
    /**
     * 取消订阅大学课程组
     *
     * @param request - UnsubscribeUniversityCourseGroupRequest
     * @param headers - UnsubscribeUniversityCourseGroupHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UnsubscribeUniversityCourseGroupResponse
     */
    unsubscribeUniversityCourseGroupWithOptions(request: UnsubscribeUniversityCourseGroupRequest, headers: UnsubscribeUniversityCourseGroupHeaders, runtime: $Util.RuntimeOptions): Promise<UnsubscribeUniversityCourseGroupResponse>;
    /**
     * 取消订阅大学课程组
     *
     * @param request - UnsubscribeUniversityCourseGroupRequest
     * @returns UnsubscribeUniversityCourseGroupResponse
     */
    unsubscribeUniversityCourseGroup(request: UnsubscribeUniversityCourseGroupRequest): Promise<UnsubscribeUniversityCourseGroupResponse>;
    /**
     * 高校校友会更新校友信息
     *
     * @param request - UpdateCollegeAlumniUserInfoRequest
     * @param headers - UpdateCollegeAlumniUserInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateCollegeAlumniUserInfoResponse
     */
    updateCollegeAlumniUserInfoWithOptions(request: UpdateCollegeAlumniUserInfoRequest, headers: UpdateCollegeAlumniUserInfoHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateCollegeAlumniUserInfoResponse>;
    /**
     * 高校校友会更新校友信息
     *
     * @param request - UpdateCollegeAlumniUserInfoRequest
     * @returns UpdateCollegeAlumniUserInfoResponse
     */
    updateCollegeAlumniUserInfo(request: UpdateCollegeAlumniUserInfoRequest): Promise<UpdateCollegeAlumniUserInfoResponse>;
    /**
     * 更新高校通讯录组织单元
     *
     * @param request - UpdateCollegeContactDeptRequest
     * @param headers - UpdateCollegeContactDeptHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateCollegeContactDeptResponse
     */
    updateCollegeContactDeptWithOptions(request: UpdateCollegeContactDeptRequest, headers: UpdateCollegeContactDeptHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateCollegeContactDeptResponse>;
    /**
     * 更新高校通讯录组织单元
     *
     * @param request - UpdateCollegeContactDeptRequest
     * @returns UpdateCollegeContactDeptResponse
     */
    updateCollegeContactDept(request: UpdateCollegeContactDeptRequest): Promise<UpdateCollegeContactDeptResponse>;
    /**
     * 更新高校账号用户
     *
     * @param request - UpdateCollegeContactExclusiveRequest
     * @param headers - UpdateCollegeContactExclusiveHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateCollegeContactExclusiveResponse
     */
    updateCollegeContactExclusiveWithOptions(request: UpdateCollegeContactExclusiveRequest, headers: UpdateCollegeContactExclusiveHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateCollegeContactExclusiveResponse>;
    /**
     * 更新高校账号用户
     *
     * @param request - UpdateCollegeContactExclusiveRequest
     * @returns UpdateCollegeContactExclusiveResponse
     */
    updateCollegeContactExclusive(request: UpdateCollegeContactExclusiveRequest): Promise<UpdateCollegeContactExclusiveResponse>;
    /**
     * 更新高校通讯录场景架构
     *
     * @param request - UpdateCollegeContactSceneStruRequest
     * @param headers - UpdateCollegeContactSceneStruHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateCollegeContactSceneStruResponse
     */
    updateCollegeContactSceneStruWithOptions(request: UpdateCollegeContactSceneStruRequest, headers: UpdateCollegeContactSceneStruHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateCollegeContactSceneStruResponse>;
    /**
     * 更新高校通讯录场景架构
     *
     * @param request - UpdateCollegeContactSceneStruRequest
     * @returns UpdateCollegeContactSceneStruResponse
     */
    updateCollegeContactSceneStru(request: UpdateCollegeContactSceneStruRequest): Promise<UpdateCollegeContactSceneStruResponse>;
    /**
     * 更新个人账号用户
     *
     * @param request - UpdateCollegeContactUserRequest
     * @param headers - UpdateCollegeContactUserHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateCollegeContactUserResponse
     */
    updateCollegeContactUserWithOptions(request: UpdateCollegeContactUserRequest, headers: UpdateCollegeContactUserHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateCollegeContactUserResponse>;
    /**
     * 更新个人账号用户
     *
     * @param request - UpdateCollegeContactUserRequest
     * @returns UpdateCollegeContactUserResponse
     */
    updateCollegeContactUser(request: UpdateCollegeContactUserRequest): Promise<UpdateCollegeContactUserResponse>;
    /**
     * 修改用户成员类型
     *
     * @param request - UpdateCollegeUserEmpTypeRequest
     * @param headers - UpdateCollegeUserEmpTypeHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateCollegeUserEmpTypeResponse
     */
    updateCollegeUserEmpTypeWithOptions(request: UpdateCollegeUserEmpTypeRequest, headers: UpdateCollegeUserEmpTypeHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateCollegeUserEmpTypeResponse>;
    /**
     * 修改用户成员类型
     *
     * @param request - UpdateCollegeUserEmpTypeRequest
     * @returns UpdateCollegeUserEmpTypeResponse
     */
    updateCollegeUserEmpType(request: UpdateCollegeUserEmpTypeRequest): Promise<UpdateCollegeUserEmpTypeResponse>;
    /**
     * 更新班级课程表（调代课等微调场景）
     *
     * @param request - UpdateCoursesOfClassRequest
     * @param headers - UpdateCoursesOfClassHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateCoursesOfClassResponse
     */
    updateCoursesOfClassWithOptions(classId: string, request: UpdateCoursesOfClassRequest, headers: UpdateCoursesOfClassHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateCoursesOfClassResponse>;
    /**
     * 更新班级课程表（调代课等微调场景）
     *
     * @param request - UpdateCoursesOfClassRequest
     * @returns UpdateCoursesOfClassResponse
     */
    updateCoursesOfClass(classId: string, request: UpdateCoursesOfClassRequest): Promise<UpdateCoursesOfClassResponse>;
    /**
     * 添加物理教室信息
     *
     * @param request - UpdatePhysicalClassroomRequest
     * @param headers - UpdatePhysicalClassroomHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdatePhysicalClassroomResponse
     */
    updatePhysicalClassroomWithOptions(request: UpdatePhysicalClassroomRequest, headers: UpdatePhysicalClassroomHeaders, runtime: $Util.RuntimeOptions): Promise<UpdatePhysicalClassroomResponse>;
    /**
     * 添加物理教室信息
     *
     * @param request - UpdatePhysicalClassroomRequest
     * @returns UpdatePhysicalClassroomResponse
     */
    updatePhysicalClassroom(request: UpdatePhysicalClassroomRequest): Promise<UpdatePhysicalClassroomResponse>;
    /**
     * 更新专递课堂课程
     *
     * @param request - UpdateRemoteClassCourseRequest
     * @param headers - UpdateRemoteClassCourseHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateRemoteClassCourseResponse
     */
    updateRemoteClassCourseWithOptions(request: UpdateRemoteClassCourseRequest, headers: UpdateRemoteClassCourseHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateRemoteClassCourseResponse>;
    /**
     * 更新专递课堂课程
     *
     * @param request - UpdateRemoteClassCourseRequest
     * @returns UpdateRemoteClassCourseResponse
     */
    updateRemoteClassCourse(request: UpdateRemoteClassCourseRequest): Promise<UpdateRemoteClassCourseResponse>;
    /**
     * 更新设备名称
     *
     * @param request - UpdateRemoteClassDeviceRequest
     * @param headers - UpdateRemoteClassDeviceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateRemoteClassDeviceResponse
     */
    updateRemoteClassDeviceWithOptions(request: UpdateRemoteClassDeviceRequest, headers: UpdateRemoteClassDeviceHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateRemoteClassDeviceResponse>;
    /**
     * 更新设备名称
     *
     * @param request - UpdateRemoteClassDeviceRequest
     * @returns UpdateRemoteClassDeviceResponse
     */
    updateRemoteClassDevice(request: UpdateRemoteClassDeviceRequest): Promise<UpdateRemoteClassDeviceResponse>;
    /**
     * 更新大学课程组
     *
     * @param request - UpdateUniversityCourseGroupRequest
     * @param headers - UpdateUniversityCourseGroupHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateUniversityCourseGroupResponse
     */
    updateUniversityCourseGroupWithOptions(request: UpdateUniversityCourseGroupRequest, headers: UpdateUniversityCourseGroupHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateUniversityCourseGroupResponse>;
    /**
     * 更新大学课程组
     *
     * @param request - UpdateUniversityCourseGroupRequest
     * @returns UpdateUniversityCourseGroupResponse
     */
    updateUniversityCourseGroup(request: UpdateUniversityCourseGroupRequest): Promise<UpdateUniversityCourseGroupResponse>;
    /**
     * 上传学情图片回调
     *
     * @param request - UploadLearningDataCallbackRequest
     * @param headers - UploadLearningDataCallbackHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UploadLearningDataCallbackResponse
     */
    uploadLearningDataCallbackWithOptions(request: UploadLearningDataCallbackRequest, headers: UploadLearningDataCallbackHeaders, runtime: $Util.RuntimeOptions): Promise<UploadLearningDataCallbackResponse>;
    /**
     * 上传学情图片回调
     *
     * @param request - UploadLearningDataCallbackRequest
     * @returns UploadLearningDataCallbackResponse
     */
    uploadLearningDataCallback(request: UploadLearningDataCallbackRequest): Promise<UploadLearningDataCallbackResponse>;
    /**
     * 视讯PAAS接口代理
     *
     * @param request - VPaasProxyRequest
     * @param headers - VPaasProxyHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns VPaasProxyResponse
     */
    vPaasProxyWithOptions(request: VPaasProxyRequest, headers: VPaasProxyHeaders, runtime: $Util.RuntimeOptions): Promise<VPaasProxyResponse>;
    /**
     * 视讯PAAS接口代理
     *
     * @param request - VPaasProxyRequest
     * @returns VPaasProxyResponse
     */
    vPaasProxy(request: VPaasProxyRequest): Promise<VPaasProxyResponse>;
    /**
     * 校验开学季任务是否完成
     *
     * @param request - ValidateNewGradeManagerRequest
     * @param headers - ValidateNewGradeManagerHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ValidateNewGradeManagerResponse
     */
    validateNewGradeManagerWithOptions(request: ValidateNewGradeManagerRequest, headers: ValidateNewGradeManagerHeaders, runtime: $Util.RuntimeOptions): Promise<ValidateNewGradeManagerResponse>;
    /**
     * 校验开学季任务是否完成
     *
     * @param request - ValidateNewGradeManagerRequest
     * @returns ValidateNewGradeManagerResponse
     */
    validateNewGradeManager(request: ValidateNewGradeManagerRequest): Promise<ValidateNewGradeManagerResponse>;
    /**
     * 校验用户的教育角色
     *
     * @param request - ValidateUserRoleRequest
     * @param headers - ValidateUserRoleHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ValidateUserRoleResponse
     */
    validateUserRoleWithOptions(request: ValidateUserRoleRequest, headers: ValidateUserRoleHeaders, runtime: $Util.RuntimeOptions): Promise<ValidateUserRoleResponse>;
    /**
     * 校验用户的教育角色
     *
     * @param request - ValidateUserRoleRequest
     * @returns ValidateUserRoleResponse
     */
    validateUserRole(request: ValidateUserRoleRequest): Promise<ValidateUserRoleResponse>;
    /**
     * 查询班级课程
     *
     * @param request - QueryClassCourseRequest
     * @param headers - QueryClassCourseHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryClassCourseResponse
     */
    queryClassCourseWithOptions(request: QueryClassCourseRequest, headers: QueryClassCourseHeaders, runtime: $Util.RuntimeOptions): Promise<QueryClassCourseResponse>;
    /**
     * 查询班级课程
     *
     * @param request - QueryClassCourseRequest
     * @returns QueryClassCourseResponse
     */
    queryClassCourse(request: QueryClassCourseRequest): Promise<QueryClassCourseResponse>;
}
