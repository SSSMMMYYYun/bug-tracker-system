/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class MetricMapValue extends $tea.Model {
    /**
     * @example
     * 1682562120000
     */
    timestamp?: number;
    /**
     * @example
     * 1145172
     */
    sendBitRate?: string;
    /**
     * @example
     * 111
     */
    recvBitRate?: string;
    /**
     * @example
     * 0
     */
    lostRate?: string;
    /**
     * @example
     * 20
     */
    roundTripTime?: string;
    /**
     * @example
     * 59103
     */
    audioSendBitRate?: string;
    /**
     * @example
     * 52939
     */
    audioRecvBitRate?: string;
    /**
     * @example
     * 25
     */
    audioRecLevel?: string;
    /**
     * @example
     * 27
     */
    audioPlayLevel?: string;
    /**
     * @example
     * 1145172
     */
    cameraSendBitRate?: string;
    /**
     * @example
     * 66160
     */
    cameraRecvBitRate?: string;
    /**
     * @example
     * 1920*1080
     */
    cameraSendResolutionActual?: string;
    /**
     * @example
     * 1920*1080
     */
    cameraRecvResolutionActual?: string;
    /**
     * @example
     * 20
     */
    cameraSendFrame?: string;
    /**
     * @example
     * 15701
     */
    screenSendBitRate?: string;
    /**
     * @example
     * 20
     */
    cameraRecvFrame?: string;
    /**
     * @example
     * 0
     */
    screenRecvBitRate?: string;
    /**
     * @example
     * 1920*1080
     */
    screenSendResolutionActual?: string;
    /**
     * @example
     * 1920*1080
     */
    screenRecvResolutionActual?: string;
    /**
     * @example
     * 14
     */
    screenSendFrame?: string;
    /**
     * @example
     * 0
     */
    screenRecvFrame?: string;
    /**
     * @example
     * 0
     */
    audioJitterMax?: string;
    /**
     * @example
     * 0
     */
    audioJitterAvg?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MemberModelMapValue extends $tea.Model {
    /**
     * @example
     * 2iPOLbpUNMLzB5LuwggiiqiPwiEiE
     */
    unionId?: string;
    /**
     * @example
     * 654058f2411fe90147e68780
     */
    conferenceId?: string;
    /**
     * @example
     * 测试昵称
     */
    userNick?: string;
    /**
     * @example
     * 1699347295876
     */
    joinTime?: number;
    /**
     * @example
     * 1699347395876
     */
    leaveTime?: number;
    /**
     * @example
     * 100000
     */
    duration?: number;
    /**
     * @example
     * 1：初始化  2：呼叫中  3：活跃（在会）  4：入会失败（拒接等）  5：被踢  6：离会
     */
    attendStatus?: number;
    /**
     * @example
     * true：是  false：否
     */
    host?: boolean;
    /**
     * @example
     * true：是  false：否
     */
    coHost?: boolean;
    /**
     * @example
     * true：是  false：否
     */
    outerOrgMember?: boolean;
    /**
     * @example
     * true：是  false：否
     */
    pstnJoin?: boolean;
    /**
     * @example
     * Win Mac iOS Android
     */
    deviceType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddRecordPermissionHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddRecordPermissionRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * cloud_record
     */
    bizType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * lJcRnm39OsU4jlFFXXXXXXX
     */
    ownerUnionId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * lJcRnm39OsU4jlFVmRGXXXXX
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddRecordPermissionResponseBody extends $tea.Model {
    code?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddRecordPermissionResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddRecordPermissionResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CancelScheduleConferenceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CancelScheduleConferenceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * qzR1iSMDvzR9iP7Pxxxxxxxxxxxx
     */
    creatorUnionId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2a489xxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
     */
    scheduleConferenceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CancelScheduleConferenceResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CancelScheduleConferenceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CancelScheduleConferenceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CloseVideoConferenceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CloseVideoConferenceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 27SaQ3iiHLN0uwqcPisedfreNwiEiE
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CloseVideoConferenceResponseBody extends $tea.Model {
    cause?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    code?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CloseVideoConferenceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CloseVideoConferenceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CohostsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CohostsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * add
     */
    action?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    userList?: CohostsRequestUserList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CohostsResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CohostsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CohostsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomShortLinkHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomShortLinkRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * COOLAPP-0-1026633886192127xxxB000W
     */
    coolAppCode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2iPOLbpUNMLzB5LuwggiiqiPwiEiE
     */
    creatorUnionId?: string;
    /**
     * @example
     * bizData
     */
    extensionAppBizData?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * f6fb627e-a7e8-403e-b1f8-26e85450f4a9
     */
    scheduleConferenceId?: string;
    /**
     * @example
     * true：使用 false：不使用
     */
    useExtensionApp?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomShortLinkResponseBody extends $tea.Model {
    result?: CreateCustomShortLinkResponseBodyResult;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomShortLinkResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateCustomShortLinkResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateScheduleConferenceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateScheduleConferenceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * qzR1iSMDvzR9iP7Pxxxxxxxxxxxx
     */
    creatorUnionId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1687928400000
     */
    endTime?: number;
    scheduleConfSettingModel?: CreateScheduleConferenceRequestScheduleConfSettingModel;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1687924800000
     */
    startTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 预约会议标题
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateScheduleConferenceResponseBody extends $tea.Model {
    phones?: string[];
    requestId?: string;
    /**
     * @example
     * 838 722 xxxxx
     */
    roomCode?: string;
    /**
     * @example
     * 2a489c68-xxxx-xxxx-xxxx-xxxxxxxxxxxx
     */
    scheduleConferenceId?: string;
    /**
     * @example
     * https://meeting.dingtalk.com/j/Bsbp3ixxxxxUyJJ9
     */
    url?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateScheduleConferenceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateScheduleConferenceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateVideoConferenceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateVideoConferenceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * XXX的视频会议
     */
    confTitle?: string;
    /**
     * @example
     * false
     *
     * **if can be null:**
     * true
     */
    inviteCaller?: boolean;
    /**
     * **if can be null:**
     * true
     */
    inviteUserIds?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 27SaQ3iiHLN0uwqcPisedfreNwiEiE
     */
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateVideoConferenceResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    conferenceId?: string;
    conferencePassword?: string;
    externalLinkUrl?: string;
    hostPassword?: string;
    phoneNumbers?: string[];
    roomCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateVideoConferenceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateVideoConferenceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class FocusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class FocusRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    action?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class FocusResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class FocusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: FocusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GenerateFlashMinutesDocumentUrlHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GenerateFlashMinutesDocumentUrlRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * cloud_record
     */
    bizType?: string;
    /**
     * @example
     * 1727185971000
     *
     * **if can be null:**
     * false
     */
    expireTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * lJcRnm39OsU4jlFVmRG9KXXXX
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GenerateFlashMinutesDocumentUrlResponseBody extends $tea.Model {
    minutesDocUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GenerateFlashMinutesDocumentUrlResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GenerateFlashMinutesDocumentUrlResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetConfDataByConferenceIdHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetConfDataByConferenceIdRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    realData?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetConfDataByConferenceIdResponseBody extends $tea.Model {
    /**
     * @example
     * 6449d8a6414xxxxxxxx01464af9f0
     */
    conferenceId?: string;
    /**
     * @example
     * njMTqKo9xxxxEiE
     */
    creatorId?: string;
    /**
     * @example
     * 张三
     */
    creatorNick?: string;
    /**
     * @example
     * xxxx
     */
    deptName?: string;
    /**
     * @example
     * 1682561790000
     */
    endTime?: number;
    /**
     * @example
     * 0
     */
    freeType?: string;
    /**
     * @example
     * ding_talk
     */
    scene?: string;
    /**
     * @example
     * 1682561190000
     */
    startTime?: number;
    /**
     * @example
     * 600000
     */
    timeLength?: number;
    /**
     * @example
     * xxxxx测试会议
     */
    title?: string;
    /**
     * @example
     * 2
     */
    userCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetConfDataByConferenceIdResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetConfDataByConferenceIdResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetConfDetailDataHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetConfDetailDataRequest extends $tea.Model {
    /**
     * @example
     * 100
     */
    maxResults?: number;
    /**
     * @example
     * xxx9uZ0bVGoqjxxxxxxxx
     */
    nextToken?: string;
    /**
     * @example
     * 张三
     */
    nick?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetConfDetailDataResponseBody extends $tea.Model {
    list?: GetConfDetailDataResponseBodyList[];
    /**
     * @example
     * xxxxZ0bVGoqxxBGQbxdxxxx
     */
    nextToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetConfDetailDataResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetConfDetailDataResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetHistoryConfDataListHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetHistoryConfDataListRequest extends $tea.Model {
    /**
     * @example
     * 张三
     */
    creatorNike?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1682611199000
     */
    endTime?: number;
    /**
     * @example
     * 0
     */
    freeType?: string;
    /**
     * @example
     * 100
     */
    maxResults?: number;
    /**
     * @example
     * xxx9uZ0bVGoqjxxxxxxxx
     */
    nextToken?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    realData?: boolean;
    /**
     * @example
     * ding_talk
     */
    scene?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1682524800000
     */
    startTime?: number;
    /**
     * @example
     * xxxxx视频会议
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetHistoryConfDataListResponseBody extends $tea.Model {
    list?: GetHistoryConfDataListResponseBodyList[];
    /**
     * @example
     * xxx9uZ0bVGoqjxxxxxxxx
     */
    nextToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetHistoryConfDataListResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetHistoryConfDataListResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserLastMetricHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserLastMetricRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    unionIdList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserLastMetricResponseBody extends $tea.Model {
    metricMap?: {
        [key: string]: MetricMapValue;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserLastMetricResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetUserLastMetricResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserMetricDataHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserMetricDataRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1682524800000
     */
    beginTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1682611199000
     */
    endTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * njMTqKo9iiyxxxxxxxxiEiE
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserMetricDataResponseBody extends $tea.Model {
    metricDataList?: GetUserMetricDataResponseBodyMetricDataList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserMetricDataResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetUserMetricDataResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InviteUsersHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InviteUsersRequest extends $tea.Model {
    inviteeList?: InviteUsersRequestInviteeList[];
    phoneInviteeList?: InviteUsersRequestPhoneInviteeList[];
    /**
     * @example
     * qzR1iSMDvzR9iPXXXXXXXXXXXXXX
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InviteUsersResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InviteUsersResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: InviteUsersResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class KickMembersHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class KickMembersRequest extends $tea.Model {
    forbiddenRejoin?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    userList?: KickMembersRequestUserList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class KickMembersResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class KickMembersResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: KickMembersResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class LockConferenceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class LockConferenceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * lock
     */
    action?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class LockConferenceResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class LockConferenceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: LockConferenceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MuteAllHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MuteAllRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * mute
     */
    action?: string;
    forceMute?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MuteAllResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MuteAllResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: MuteAllResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MuteMembersHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MuteMembersRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * mute
     */
    action?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    userList?: MuteMembersRequestUserList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MuteMembersResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MuteMembersResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: MuteMembersResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCloudRecordTextHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCloudRecordTextRequest extends $tea.Model {
    /**
     * @example
     * 1
     */
    direction?: string;
    maxResults?: number;
    nextToken?: number;
    startTime?: number;
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCloudRecordTextResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    hasMore?: boolean;
    paragraphList?: QueryCloudRecordTextResponseBodyParagraphList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCloudRecordTextResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryCloudRecordTextResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCloudRecordVideoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCloudRecordVideoRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCloudRecordVideoResponseBody extends $tea.Model {
    videoList?: QueryCloudRecordVideoResponseBodyVideoList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCloudRecordVideoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryCloudRecordVideoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCloudRecordVideoPlayInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCloudRecordVideoPlayInfoRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    mediaId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    regionId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCloudRecordVideoPlayInfoResponseBody extends $tea.Model {
    /**
     * @example
     * 59886
     */
    duration?: number;
    /**
     * @example
     * 1127942
     */
    fileSize?: number;
    /**
     * @example
     * https://vod.mcs.dingtalk.com/faa1566c5bc24f21821ae2394f82db2e/8bbd1612e686462ab4717919f67bb721-b8531e0d534b2f9747a9fdfxxxxxxxxc-sd.mp4
     */
    mp4FileUrl?: string;
    /**
     * @example
     * https://vod.mcs.dingtalk.com/faa1566c5bc24f21821ae2394f82db2e/8bbd1612e686462ab4717919f67bb721-ab85cc044a163568c9485xxxxxxxx76d-sd.m3u8
     */
    playUrl?: string;
    status?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCloudRecordVideoPlayInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryCloudRecordVideoPlayInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryConferenceInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryConferenceInfoResponseBody extends $tea.Model {
    confInfo?: QueryConferenceInfoResponseBodyConfInfo;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryConferenceInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryConferenceInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryConferenceInfoBatchHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryConferenceInfoBatchRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    conferenceIdList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryConferenceInfoBatchResponseBody extends $tea.Model {
    infos?: QueryConferenceInfoBatchResponseBodyInfos[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryConferenceInfoBatchResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryConferenceInfoBatchResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryConferenceInfoByRoomCodeHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryConferenceInfoByRoomCodeRequest extends $tea.Model {
    maxResults?: number;
    nextToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryConferenceInfoByRoomCodeResponseBody extends $tea.Model {
    conferenceList?: QueryConferenceInfoByRoomCodeResponseBodyConferenceList[];
    hasMore?: boolean;
    nextToken?: string;
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryConferenceInfoByRoomCodeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryConferenceInfoByRoomCodeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryConferenceMembersHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryConferenceMembersRequest extends $tea.Model {
    /**
     * @example
     * 20
     */
    maxResults?: number;
    /**
     * @example
     * 0
     */
    nextToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryConferenceMembersResponseBody extends $tea.Model {
    memberModels?: QueryConferenceMembersResponseBodyMemberModels[];
    /**
     * @example
     * 123000000
     */
    nextToken?: string;
    /**
     * @example
     * 20
     */
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryConferenceMembersResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryConferenceMembersResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryFlashMinutesSummaryHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryFlashMinutesSummaryRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * cloud_record
     */
    bizType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * lJcRnm39OsU4jlFVmRG9KXXXX
     */
    recorderUnionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryFlashMinutesSummaryResponseBody extends $tea.Model {
    flashMinutesSummary?: QueryFlashMinutesSummaryResponseBodyFlashMinutesSummary;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryFlashMinutesSummaryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryFlashMinutesSummaryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesAudioHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesAudioRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesAudioResponseBody extends $tea.Model {
    audioList?: QueryMinutesAudioResponseBodyAudioList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesAudioResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryMinutesAudioResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesSummaryHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesSummaryRequest extends $tea.Model {
    summaryTypeList?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 27SaQ3iiHLN0uwqcPisedfreNwiEiE
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesSummaryResponseBody extends $tea.Model {
    summary?: QueryMinutesSummaryResponseBodySummary;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesSummaryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryMinutesSummaryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesTextHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesTextRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    direction?: string;
    maxResults?: number;
    nextToken?: string;
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesTextResponseBody extends $tea.Model {
    /**
     * @example
     * true
     */
    hasMore?: boolean;
    /**
     * @example
     * 1631172045153000_7940
     */
    nextToken?: string;
    paragraphList?: QueryMinutesTextResponseBodyParagraphList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesTextResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryMinutesTextResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgConferenceListHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgConferenceListRequest extends $tea.Model {
    maxResults?: number;
    nextToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgConferenceListResponseBody extends $tea.Model {
    hasMore?: boolean;
    nextToken?: string;
    onGoingConfList?: QueryOrgConferenceListResponseBodyOnGoingConfList[];
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgConferenceListResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryOrgConferenceListResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRecordMinutesUrlHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRecordMinutesUrlRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * cloud_record
     */
    bizType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * lJcRnm39OsU4jlFVmRG9KXXXX
     */
    recorderUnionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRecordMinutesUrlResponseBody extends $tea.Model {
    recordMinutesUrls?: QueryRecordMinutesUrlResponseBodyRecordMinutesUrls[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRecordMinutesUrlResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryRecordMinutesUrlResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryScheduleConfSettingsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryScheduleConfSettingsRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    scheduleConferenceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryScheduleConfSettingsResponseBody extends $tea.Model {
    scheduleConfSettingModel?: QueryScheduleConfSettingsResponseBodyScheduleConfSettingModel;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryScheduleConfSettingsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryScheduleConfSettingsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryScheduleConferenceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryScheduleConferenceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * qzR1iSMDvzR9iP7Pxxxxxxxxxxxx
     */
    requestUnionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryScheduleConferenceResponseBody extends $tea.Model {
    /**
     * @example
     * 1687928400000
     */
    endTime?: number;
    phones?: string[];
    /**
     * @example
     * xxxxx
     */
    requestId?: string;
    /**
     * @example
     * 838 722 xxxxx
     */
    roomCode?: string;
    /**
     * @example
     * 2a489c68-xxxx-xxxx-xxxx-xxxxxxxxxxxx
     */
    scheduleConferenceId?: string;
    /**
     * @example
     * 1687924800000
     */
    startTime?: number;
    /**
     * @example
     * 预约会议标题
     */
    title?: string;
    /**
     * @example
     * https://meeting.dingtalk.com/j/Bsbp3ixxxxxUyJJ9
     */
    url?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryScheduleConferenceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryScheduleConferenceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryScheduleConferenceInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryScheduleConferenceInfoRequest extends $tea.Model {
    /**
     * @example
     * 20
     */
    maxResults?: number;
    /**
     * @example
     * 0
     *
     * **if can be null:**
     * true
     */
    nextToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryScheduleConferenceInfoResponseBody extends $tea.Model {
    conferenceList?: QueryScheduleConferenceInfoResponseBodyConferenceList[];
    /**
     * @remarks
     * This parameter is required.
     */
    nextToken?: string;
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryScheduleConferenceInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryScheduleConferenceInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserOnGoingConferenceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserOnGoingConferenceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2iPOLbpUNMLzB5LuwggiiqiPwiEiE
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserOnGoingConferenceResponseBody extends $tea.Model {
    memberModelMap?: {
        [key: string]: MemberModelMapValue;
    };
    onGoingConfIdList?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryUserOnGoingConferenceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryUserOnGoingConferenceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StartCloudRecordHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StartCloudRecordRequest extends $tea.Model {
    /**
     * @example
     * 演讲
     */
    mode?: string;
    /**
     * @example
     * 左上
     */
    smallWindowPosition?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 27SaQ3iiHLN0uwqcPisedfreNwiEiE
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StartCloudRecordResponseBody extends $tea.Model {
    code?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StartCloudRecordResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: StartCloudRecordResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StartMinutesHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StartMinutesRequest extends $tea.Model {
    /**
     * @example
     * 左上
     */
    ownerUnionId?: string;
    /**
     * @example
     * true
     */
    recordAudio?: boolean;
    /**
     * @example
     * 27SaQ3iiHLN0uwqcPisedfreNwiEiE
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StartMinutesResponseBody extends $tea.Model {
    code?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StartMinutesResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: StartMinutesResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StartStreamOutHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StartStreamOutRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * grip
     */
    mode?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    needHostJoin?: boolean;
    /**
     * @remarks
     * This parameter is required.
     */
    smallWindowPosition?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 推流名称
     */
    streamName?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    streamUrlList?: string[];
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 27SaQ3iiHLN0uwqcPisedfreNwiEiE
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StartStreamOutResponseBody extends $tea.Model {
    failStreamMap?: {
        [key: string]: any;
    };
    successStreamMap?: {
        [key: string]: any;
    };
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StartStreamOutResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: StartStreamOutResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StopCloudRecordHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StopCloudRecordRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StopCloudRecordResponseBody extends $tea.Model {
    code?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StopCloudRecordResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: StopCloudRecordResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StopMinutesHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StopMinutesRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StopMinutesResponseBody extends $tea.Model {
    code?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StopMinutesResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: StopMinutesResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StopStreamOutHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StopStreamOutRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * true
     */
    stopAllStream?: boolean;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 27SaQ3iiHLN0uwqcPisedfreNwiEiE
     */
    streamId?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StopStreamOutResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    code?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class StopStreamOutResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: StopStreamOutResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateScheduleConfSettingsHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateScheduleConfSettingsRequest extends $tea.Model {
    /**
     * @example
     * 2iPOLbpUNMLzB5LuwggiiqiPwiEiE
     */
    creatorUnionId?: string;
    scheduleConfSettingModel?: UpdateScheduleConfSettingsRequestScheduleConfSettingModel;
    /**
     * @example
     * f6fb627e-a7e8-403e-b1f8-26e85450f4a9
     */
    scheduleConferenceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateScheduleConfSettingsResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateScheduleConfSettingsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateScheduleConfSettingsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateScheduleConferenceHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateScheduleConferenceRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * qzR1iSMDvzR9iP7Pxxxxxxxxxxxx
     */
    creatorUnionId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1687928400000
     */
    endTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2a489xxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
     */
    scheduleConferenceId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1687924800000
     */
    startTime?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 预约会议标题
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateScheduleConferenceResponseBody extends $tea.Model {
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateScheduleConferenceResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateScheduleConferenceResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateVideoConferenceExtInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateVideoConferenceExtInfoResponseBody extends $tea.Model {
    case?: string;
    code?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateVideoConferenceExtInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateVideoConferenceExtInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateVideoConferenceSettingHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateVideoConferenceSettingRequest extends $tea.Model {
    allowUnmuteSelf?: boolean;
    autoTransferHost?: boolean;
    forbiddenShareScreen?: boolean;
    lockConference?: boolean;
    muteAll?: boolean;
    onlyInternalEmployeesJoin?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateVideoConferenceSettingResponseBody extends $tea.Model {
    case?: string;
    code?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateVideoConferenceSettingResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateVideoConferenceSettingResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CohostsRequestUserList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * qzR1iSMDvzR9iP7Pxxxxxxxxxxxxxxx
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateCustomShortLinkResponseBodyResult extends $tea.Model {
    customShortLink?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateScheduleConferenceRequestScheduleConfSettingModelMoziConfOpenRecordSetting extends $tea.Model {
    /**
     * @example
     * true：跟随 false：不跟随
     */
    isFollowHost?: boolean;
    /**
     * @example
     * grid：宫格模式,默认9宫格(3x3) speech：演讲者模式 full_screen：全屏模式 auto_grid：自动宫格模式，默认最大4x4宫格 screen_cast：屏幕共享模式，仅放置屏幕共享流 p2p：双人通话模式 full_screen_and_speaker：共享内容+发言人模式
     */
    mode?: string;
    /**
     * @example
     * 0：不自动开启 1：自动开启
     */
    recordAutoStart?: number;
    /**
     * @example
     * 0：我以主持人身份入会后自动开启 1：其他人以联席主持人身份入会后开启 2：任何人以任何身份入会后开启
     */
    recordAutoStartType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateScheduleConferenceRequestScheduleConfSettingModelMoziConfVirtualExtraSettingMoziConfExtensionAppSettings extends $tea.Model {
    /**
     * @example
     * 0：不自动打开 1：仅主持人/联席主持人自动打开 2：全员自动打开
     */
    autoOpenMode?: number;
    /**
     * @example
     * COOLAPP-0-1026633886192127xxxB000W
     */
    coolAppCode?: string;
    /**
     * @example
     * bizData
     */
    extensionAppBizData?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateScheduleConferenceRequestScheduleConfSettingModelMoziConfVirtualExtraSetting extends $tea.Model {
    /**
     * @example
     * 2iPOLbpUNMLzB5LuwggiiqiPwiEiE
     */
    cloudRecordOwnerUnionId?: string;
    /**
     * @example
     * 0：未开启 1：开启
     */
    enableChat?: number;
    /**
     * @example
     * true：允许匿名登录入会 false：不允许匿名登录入会
     */
    enableWebAnonymousJoin?: boolean;
    /**
     * @example
     * 0：未开启 1：开启
     */
    joinBeforeHost?: number;
    /**
     * @example
     * 0：未开启 1：开启
     */
    lockMediaStatusMicMute?: number;
    /**
     * @example
     * 0：未开启 1：开启
     */
    lockNick?: number;
    /**
     * @example
     * 2iPOLbpUNMLzB5LuwggiiqiPwiEiE
     */
    minutesOwnerUnionId?: string;
    moziConfExtensionAppSettings?: CreateScheduleConferenceRequestScheduleConfSettingModelMoziConfVirtualExtraSettingMoziConfExtensionAppSettings[];
    pushAllMeetingRecords?: boolean;
    pushCloudRecordCard?: boolean;
    pushMinutesCard?: boolean;
    /**
     * @example
     * 0：未开启 1：开启
     */
    waitingRoom?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateScheduleConferenceRequestScheduleConfSettingModel extends $tea.Model {
    cohostUnionIds?: string[];
    /**
     * @example
     * dingc02f685fa06381c44ac5d6980864d335
     */
    confAllowedCorpId?: string;
    /**
     * @example
     * 2iPOLbpUNMLzB5LuwggiiqiPwiEiE
     */
    hostUnionId?: string;
    /**
     * @example
     * 0：取消锁定 1：锁定
     */
    lockRoom?: number;
    moziConfOpenRecordSetting?: CreateScheduleConferenceRequestScheduleConfSettingModelMoziConfOpenRecordSetting;
    moziConfVirtualExtraSetting?: CreateScheduleConferenceRequestScheduleConfSettingModelMoziConfVirtualExtraSetting;
    /**
     * @example
     * -1：未开启 1：开启 6：超过6人自动开启静音
     */
    muteOnJoin?: number;
    /**
     * @example
     * 0：允许共享 1：禁止共享
     */
    screenShareForbidden?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetConfDetailDataResponseBodyList extends $tea.Model {
    /**
     * @example
     * true
     */
    belongOrg?: string;
    /**
     * @example
     * 6449d8a6414xxxxxxxx01464af9f0
     */
    conferenceId?: string;
    /**
     * @example
     * Mac
     */
    deviceType?: string;
    /**
     * @example
     * 974000
     */
    duration?: number;
    /**
     * @example
     * 1682561199000
     */
    joinTime?: number;
    /**
     * @example
     * 1682562173000
     */
    leaveTime?: number;
    /**
     * @example
     * -1
     */
    networkQuality?: string;
    /**
     * @example
     * 张三
     */
    nick?: string;
    /**
     * @example
     * 参会人
     */
    role?: string;
    /**
     * @example
     * xxxx
     */
    sessionId?: string;
    /**
     * @example
     * 已离开
     */
    status?: string;
    /**
     * @example
     * njMTqKo9xxxxEiE
     */
    unionId?: string;
    /**
     * @example
     * 6.1.1
     */
    version?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetHistoryConfDataListResponseBodyList extends $tea.Model {
    /**
     * @example
     * 6449d8a6414xxxxxxxx01464af9f0
     */
    conferenceId?: string;
    /**
     * @example
     * njMTqKo9xxxxEiE
     */
    creatorId?: string;
    /**
     * @example
     * 张三
     */
    creatorNick?: string;
    /**
     * @example
     * xxxxx
     */
    deptName?: string;
    /**
     * @example
     * 1682561790000
     */
    endTime?: number;
    /**
     * @example
     * 0
     */
    freeType?: string;
    /**
     * @example
     * ding_talk
     */
    scene?: string;
    /**
     * @example
     * 1682561190000
     */
    startTime?: number;
    /**
     * @example
     * 600000
     */
    timeLength?: number;
    /**
     * @example
     * xxxxx视频会议
     */
    title?: string;
    /**
     * @example
     * 2
     */
    userCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetUserMetricDataResponseBodyMetricDataList extends $tea.Model {
    /**
     * @example
     * 27
     */
    audioPlayLevel?: string;
    /**
     * @example
     * 25
     */
    audioRecLevel?: string;
    /**
     * @example
     * 52939
     */
    audioRecvBitRate?: string;
    /**
     * @example
     * 59103
     */
    audioSendBitRate?: string;
    /**
     * @example
     * 66160
     */
    cameraRecvBitRate?: string;
    /**
     * @example
     * 20
     */
    cameraRecvFrame?: string;
    /**
     * @example
     * 1920*1080
     */
    cameraRecvResolutionActual?: string;
    /**
     * @example
     * 1145172
     */
    cameraSendBitRate?: string;
    /**
     * @example
     * 20
     */
    cameraSendFrame?: string;
    /**
     * @example
     * 1920*1080
     */
    cameraSendResolutionActual?: string;
    /**
     * @example
     * 0
     */
    lostRate?: string;
    /**
     * @example
     * 66160
     */
    recvBitRate?: string;
    /**
     * @example
     * 20
     */
    roundTripTime?: string;
    /**
     * @example
     * 0
     */
    screenRecvBitRate?: string;
    /**
     * @example
     * 0
     */
    screenRecvFrame?: string;
    /**
     * @example
     * 1920*1080
     */
    screenRecvResolutionActual?: string;
    /**
     * @example
     * 15701
     */
    screenSendBitRate?: string;
    /**
     * @example
     * 14
     */
    screenSendFrame?: string;
    /**
     * @example
     * 1920*1080
     */
    screenSendResolutionActual?: string;
    /**
     * @example
     * 1145172
     */
    sendBitRate?: string;
    /**
     * @example
     * 1682562120000
     */
    timestamp?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InviteUsersRequestInviteeList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 测试用户
     */
    nick?: string;
    /**
     * @example
     * qzR1iSMDvzR9kXXXXXXXx
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class InviteUsersRequestPhoneInviteeList extends $tea.Model {
    /**
     * @example
     * false
     */
    inviteClient?: boolean;
    /**
     * @example
     * 测试电话用户
     */
    nick?: string;
    /**
     * @example
     * 1xxxxxxxxxx9
     */
    phoneNumber?: string;
    /**
     * @example
     * 86
     */
    statusCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class KickMembersRequestUserList extends $tea.Model {
    /**
     * @example
     * 644272f14ba3311xxxxxxxxx
     */
    participantId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * qzR1iSMDvzR9iP7Pxxxxxxxxxxxxxxx
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MuteMembersRequestUserList extends $tea.Model {
    /**
     * @example
     * 644272f14ba3311xxxxxxxxx
     */
    participantId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * qzR1iSMDvzR9iP7Pxxxxxxxxxxxxxxx
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCloudRecordTextResponseBodyParagraphListSentenceListWordList extends $tea.Model {
    /**
     * @example
     * 7940
     */
    endTime?: number;
    /**
     * @example
     * 7940
     */
    startTime?: number;
    /**
     * @example
     * 这里
     */
    word?: string;
    /**
     * @example
     * 1631172050535000#0
     */
    wordId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCloudRecordTextResponseBodyParagraphListSentenceList extends $tea.Model {
    /**
     * @example
     * 7940
     */
    endTime?: number;
    /**
     * @example
     * 这里是小钉
     */
    sentence?: string;
    /**
     * @example
     * 7940
     */
    startTime?: number;
    /**
     * @example
     * WFBkgJvt0xxxxSaA1jK4sgiEiE
     */
    unionId?: string;
    wordList?: QueryCloudRecordTextResponseBodyParagraphListSentenceListWordList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCloudRecordTextResponseBodyParagraphList extends $tea.Model {
    /**
     * @example
     * 7940
     */
    endTime?: number;
    /**
     * @example
     * 1631172045153000
     */
    nextTtoken?: number;
    /**
     * @example
     * 小钉
     */
    nickName?: string;
    /**
     * @example
     * 嘿！你好，这里是小钉
     */
    paragraph?: string;
    /**
     * @example
     * 44444
     */
    recordId?: number;
    sentenceList?: QueryCloudRecordTextResponseBodyParagraphListSentenceList[];
    /**
     * @example
     * 7940
     */
    startTime?: number;
    /**
     * @example
     * 1
     */
    status?: number;
    /**
     * @example
     * WFBkgJvt0xxxxSaA1jK4sgiEiE
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryCloudRecordVideoResponseBodyVideoList extends $tea.Model {
    /**
     * @example
     * 59886
     */
    duration?: number;
    /**
     * @example
     * 1631172094000
     */
    endTime?: number;
    /**
     * @example
     * 1127942
     */
    fileSize?: number;
    /**
     * @example
     * faa1566c5bc24f21821ae2394f82db2e
     */
    mediaId?: string;
    /**
     * @example
     * 290882268xxx1172033231
     */
    recordId?: string;
    /**
     * @example
     * 0
     */
    recordType?: number;
    /**
     * @example
     * cn-shenzhen
     */
    regionId?: string;
    /**
     * @example
     * 1631172094000
     */
    startTime?: number;
    /**
     * @example
     * WFBkgJvtxxxxtSaA1jK4sgiEiE
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryConferenceInfoResponseBodyConfInfoExtensionAppSettings extends $tea.Model {
    appCode?: string;
    appId?: string;
    autoOpenMode?: number;
    extensionAppBizData?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryConferenceInfoResponseBodyConfInfo extends $tea.Model {
    /**
     * @example
     * 10
     */
    activeNum?: number;
    /**
     * @example
     * 15
     */
    attendNum?: number;
    bizType?: string;
    cloudRecordOwnerUnionId?: string;
    cloudRecordStatus?: number;
    /**
     * @example
     * 1000000
     */
    confDuration?: number;
    /**
     * @example
     * 6323d7568777190142ab9d10
     */
    conferenceId?: string;
    /**
     * @example
     * 2iPOLbpUNMLzB5LuwggiiqiPwiEiE
     */
    creatorId?: string;
    /**
     * @example
     * 昵称
     */
    creatorNick?: string;
    endTime?: number;
    extensionAppSettings?: QueryConferenceInfoResponseBodyConfInfoExtensionAppSettings[];
    /**
     * @example
     * https://meeting.dingtalk.com/app?roomCode=42726033559&token=1_7ac974ac-6e4f-47c3-b82b-bfb32fd94d2c
     */
    externalLinkUrl?: string;
    /**
     * @example
     * 20
     */
    invitedNum?: number;
    minutesOwnerUnionId?: string;
    minutesStatus?: number;
    /**
     * @example
     * 42726033559
     */
    roomCode?: string;
    scheduleConferenceId?: string;
    /**
     * @example
     * 1663293270000
     */
    startTime?: number;
    /**
     * @example
     * 1
     */
    status?: number;
    /**
     * @example
     * 标题
     */
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryConferenceInfoBatchResponseBodyInfosUserList extends $tea.Model {
    /**
     * @example
     * 0-未定义,1-初始化,2-加入中,3-在会,4-加入失败,5,被踢出,6-离开
     */
    attendStatus?: number;
    /**
     * @example
     * 0-初始化，1-关闭，2-打开
     */
    cameraStatus?: number;
    /**
     * @example
     * 0-初始化，1-关闭，2-打开
     */
    micStatus?: number;
    nick?: string;
    /**
     * @example
     * 抱歉，正在开会
     */
    rejectDescription?: string;
    userId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryConferenceInfoBatchResponseBodyInfos extends $tea.Model {
    conferenceId?: string;
    /**
     * @example
     * 0-正常，1-麦克风静音，2-摄像头关闭，4-强制全员静音
     */
    mediaStatus?: number;
    startTime?: number;
    /**
     * @example
     * 0-初始化，1-会议结束，2-会议开始
     */
    status?: number;
    title?: string;
    userList?: QueryConferenceInfoBatchResponseBodyInfosUserList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryConferenceInfoByRoomCodeResponseBodyConferenceList extends $tea.Model {
    bizType?: string;
    confDuration?: number;
    conferenceId?: string;
    creatorId?: string;
    creatorNick?: string;
    endTime?: number;
    externalLinkUrl?: string;
    roomCode?: string;
    scheduleConferenceId?: string;
    startTime?: number;
    status?: number;
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryConferenceMembersResponseBodyMemberModels extends $tea.Model {
    /**
     * @example
     * 6
     */
    attendStatus?: number;
    coHost?: boolean;
    /**
     * @example
     * 6323d7562b18000142ab9d10
     */
    conferenceId?: string;
    duration?: number;
    host?: boolean;
    joinTime?: number;
    leaveTime?: number;
    outerOrgMember?: boolean;
    pstnJoin?: boolean;
    /**
     * @example
     * 2iPOLbpUNMLzB5LuwggiiqiPwiEiE
     */
    unionId?: string;
    /**
     * @example
     * 昵称
     */
    userNick?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryFlashMinutesSummaryResponseBodyFlashMinutesSummarySummary extends $tea.Model {
    end?: number;
    headline?: string;
    id?: number;
    start?: number;
    summary?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryFlashMinutesSummaryResponseBodyFlashMinutesSummary extends $tea.Model {
    status?: number;
    summary?: QueryFlashMinutesSummaryResponseBodyFlashMinutesSummarySummary[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesAudioResponseBodyAudioList extends $tea.Model {
    /**
     * @example
     * 59886
     */
    duration?: number;
    /**
     * @example
     * 1631172094000
     */
    endTime?: number;
    /**
     * @example
     * 1127942
     */
    fileSize?: number;
    /**
     * @example
     * https://xxx-hangzhou.oss-cn-hangzhou.aliyuncs.com/record_xxxx.mp3?Expires=1718045081&OSSAccessKeyId=TMP.3KdwHtvZxopmwacMZEdyb4WHLVmbArrNRB9CTKnR1MaJgmRjdmZczs6Rip66cgKgk2HhQon1yygvBnbY3uqEaZNeHBLcBa&Signature=OFWyAIY%2FdlzfwM9wIfEaKoAudkxxxxx
     */
    playUrl?: string;
    /**
     * @example
     * 290882268xxx1172033231
     */
    recordId?: string;
    /**
     * @example
     * 1631172094000
     */
    startTime?: number;
    /**
     * @example
     * WFBkgJvtxxxxtSaA1jK4sgiEiE
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesSummaryResponseBodySummaryActions extends $tea.Model {
    end?: number;
    id?: number;
    sentenceId?: number;
    start?: number;
    text?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesSummaryResponseBodySummaryAutoChapters extends $tea.Model {
    end?: number;
    headline?: string;
    id?: number;
    start?: number;
    summary?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesSummaryResponseBodySummaryConversationalSummary extends $tea.Model {
    speakerId?: string;
    speakerName?: string;
    summary?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesSummaryResponseBodySummaryKeySentences extends $tea.Model {
    end?: number;
    id?: number;
    sentenceId?: number;
    start?: number;
    text?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesSummaryResponseBodySummaryQuestionsAnsweringSummary extends $tea.Model {
    answer?: string;
    question?: string;
    sentenceIdsOfAnswer?: number[];
    sentenceIdsOfQuestion?: number[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesSummaryResponseBodySummary extends $tea.Model {
    actions?: QueryMinutesSummaryResponseBodySummaryActions[];
    autoChapters?: QueryMinutesSummaryResponseBodySummaryAutoChapters[];
    conversationalSummary?: QueryMinutesSummaryResponseBodySummaryConversationalSummary[];
    keySentences?: QueryMinutesSummaryResponseBodySummaryKeySentences[];
    keywords?: string[];
    paragraphSummary?: string;
    questionsAnsweringSummary?: QueryMinutesSummaryResponseBodySummaryQuestionsAnsweringSummary[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesTextResponseBodyParagraphListSentenceListWordList extends $tea.Model {
    /**
     * @example
     * 7940
     */
    endTime?: number;
    /**
     * @example
     * 7940
     */
    startTime?: number;
    /**
     * @example
     * 这里
     */
    word?: string;
    /**
     * @example
     * 1631172050535000#0
     */
    wordId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesTextResponseBodyParagraphListSentenceList extends $tea.Model {
    /**
     * @example
     * 7940
     */
    endTime?: number;
    /**
     * @example
     * 这里是小钉
     */
    sentence?: string;
    /**
     * @example
     * 7940
     */
    startTime?: number;
    /**
     * @example
     * WFBkgJvt0xxxxSaA1jK4sgiEiE
     */
    unionId?: string;
    wordList?: QueryMinutesTextResponseBodyParagraphListSentenceListWordList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesTextResponseBodyParagraphList extends $tea.Model {
    /**
     * @example
     * 7940
     */
    endTime?: number;
    /**
     * @example
     * 小钉
     */
    nickName?: string;
    /**
     * @example
     * 嘿！你好，这里是小钉
     */
    paragraph?: string;
    paragraphId?: number;
    /**
     * @example
     * 44444
     */
    recordId?: number;
    sentenceList?: QueryMinutesTextResponseBodyParagraphListSentenceList[];
    /**
     * @example
     * 7940
     */
    startTime?: number;
    /**
     * @example
     * WFBkgJvt0xxxxSaA1jK4sgiEiE
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryOrgConferenceListResponseBodyOnGoingConfList extends $tea.Model {
    bizType?: string;
    conferenceId?: string;
    creatorId?: string;
    creatorNick?: string;
    endTime?: number;
    roomCode?: string;
    startTime?: number;
    status?: number;
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryRecordMinutesUrlResponseBodyRecordMinutesUrls extends $tea.Model {
    recordMinutesUrl?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryScheduleConfSettingsResponseBodyScheduleConfSettingModelMoziConfVirtualExtraSettingMoziConfExtensionAppSettings extends $tea.Model {
    autoOpenMode?: string;
    clientId?: string;
    coolAppCode?: string;
    extensionAppBizData?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryScheduleConfSettingsResponseBodyScheduleConfSettingModelMoziConfVirtualExtraSetting extends $tea.Model {
    enableChat?: number;
    enableWebAnonymousJoin?: boolean;
    joinBeforeHost?: number;
    lockMediaStatusMicMute?: number;
    lockNick?: number;
    moziConfExtensionAppSettings?: QueryScheduleConfSettingsResponseBodyScheduleConfSettingModelMoziConfVirtualExtraSettingMoziConfExtensionAppSettings[];
    waitingRoom?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryScheduleConfSettingsResponseBodyScheduleConfSettingModel extends $tea.Model {
    cohostUnionIds?: string[];
    confAllowedCorpId?: string;
    hostUnionId?: string;
    lockRoom?: number;
    moziConfVirtualExtraSetting?: QueryScheduleConfSettingsResponseBodyScheduleConfSettingModelMoziConfVirtualExtraSetting;
    muteOnJoin?: number;
    screenShareForbidden?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryScheduleConferenceInfoResponseBodyConferenceList extends $tea.Model {
    conferenceId?: string;
    endTime?: number;
    roomCode?: string;
    startTime?: number;
    status?: number;
    title?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateScheduleConfSettingsRequestScheduleConfSettingModelMoziConfOpenRecordSetting extends $tea.Model {
    /**
     * @example
     * true：跟随 false：不跟随
     */
    isFollowHost?: boolean;
    /**
     * @example
     * grid：宫格模式,默认9宫格(3x3) speech：演讲者模式 full_screen：全屏模式 auto_grid：自动宫格模式，默认最大4x4宫格 screen_cast：屏幕共享模式，仅放置屏幕共享流 p2p：双人通话模式 full_screen_and_speaker：共享内容+发言人模式
     */
    mode?: string;
    /**
     * @example
     * 0：不自动开启 1：自动开启
     */
    recordAutoStart?: number;
    /**
     * @example
     * 0：我以主持人身份入会后自动开启 1：其他人以联席主持人身份入会后开启 2：任何人以任何身份入会后开启
     */
    recordAutoStartType?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateScheduleConfSettingsRequestScheduleConfSettingModelMoziConfVirtualExtraSettingMoziConfExtensionAppSettings extends $tea.Model {
    /**
     * @example
     * 0：不自动打开 1：仅主持人/联席主持人自动打开 2：全员自动打开
     */
    autoOpenMode?: number;
    /**
     * @example
     * COOLAPP-0-1026633886192127xxxB000W
     */
    coolAppCode?: string;
    /**
     * @example
     * bizData
     */
    extensionAppBizData?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateScheduleConfSettingsRequestScheduleConfSettingModelMoziConfVirtualExtraSetting extends $tea.Model {
    /**
     * @example
     * 2iPOLbpUNMLzB5LuwggiiqiPwiEiE
     */
    cloudRecordOwnerUnionId?: string;
    /**
     * @example
     * 0：未开启 1：开启
     */
    enableChat?: number;
    /**
     * @example
     * true：允许匿名登录入会 false：不允许匿名登录入会
     */
    enableWebAnonymousJoin?: boolean;
    /**
     * @example
     * 0：未开启 1：开启
     */
    joinBeforeHost?: number;
    /**
     * @example
     * 0：未开启 1：开启
     */
    lockMediaStatusMicMute?: number;
    /**
     * @example
     * 0：未开启 1：开启
     */
    lockNick?: number;
    /**
     * @example
     * 2iPOLbpUNMLzB5LuwggiiqiPwiEiE
     */
    minutesOwnerUnionId?: string;
    moziConfExtensionAppSettings?: UpdateScheduleConfSettingsRequestScheduleConfSettingModelMoziConfVirtualExtraSettingMoziConfExtensionAppSettings[];
    pushAllMeetingRecords?: boolean;
    pushCloudRecordCard?: boolean;
    pushMinutesCard?: boolean;
    /**
     * @example
     * 0：未开启 1：开启
     */
    waitingRoom?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateScheduleConfSettingsRequestScheduleConfSettingModel extends $tea.Model {
    cohostUnionIds?: string[];
    /**
     * @example
     * dingc02f685fa06381c44ac5d6980864d335
     */
    confAllowedCorpId?: string;
    /**
     * @example
     * 2iPOLbpUNMLzB5LuwggiiqiPwiEiE
     */
    hostUnionId?: string;
    /**
     * @example
     * 0：取消锁定 1：锁定
     */
    lockRoom?: number;
    moziConfOpenRecordSetting?: UpdateScheduleConfSettingsRequestScheduleConfSettingModelMoziConfOpenRecordSetting;
    moziConfVirtualExtraSetting?: UpdateScheduleConfSettingsRequestScheduleConfSettingModelMoziConfVirtualExtraSetting;
    /**
     * @example
     * -1：未开启 1：开启 6：超过6人自动开启静音
     */
    muteOnJoin?: number;
    /**
     * @example
     * 0：允许共享 1：禁止共享
     */
    screenShareForbidden?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 增加闪记权限
     *
     * @param request - AddRecordPermissionRequest
     * @param headers - AddRecordPermissionHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddRecordPermissionResponse
     */
    addRecordPermissionWithOptions(conferenceId: string, request: AddRecordPermissionRequest, headers: AddRecordPermissionHeaders, runtime: $Util.RuntimeOptions): Promise<AddRecordPermissionResponse>;
    /**
     * 增加闪记权限
     *
     * @param request - AddRecordPermissionRequest
     * @returns AddRecordPermissionResponse
     */
    addRecordPermission(conferenceId: string, request: AddRecordPermissionRequest): Promise<AddRecordPermissionResponse>;
    /**
     * 取消预约会议
     *
     * @param request - CancelScheduleConferenceRequest
     * @param headers - CancelScheduleConferenceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CancelScheduleConferenceResponse
     */
    cancelScheduleConferenceWithOptions(request: CancelScheduleConferenceRequest, headers: CancelScheduleConferenceHeaders, runtime: $Util.RuntimeOptions): Promise<CancelScheduleConferenceResponse>;
    /**
     * 取消预约会议
     *
     * @param request - CancelScheduleConferenceRequest
     * @returns CancelScheduleConferenceResponse
     */
    cancelScheduleConference(request: CancelScheduleConferenceRequest): Promise<CancelScheduleConferenceResponse>;
    /**
     * 关闭视频会议
     *
     * @param request - CloseVideoConferenceRequest
     * @param headers - CloseVideoConferenceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CloseVideoConferenceResponse
     */
    closeVideoConferenceWithOptions(conferenceId: string, request: CloseVideoConferenceRequest, headers: CloseVideoConferenceHeaders, runtime: $Util.RuntimeOptions): Promise<CloseVideoConferenceResponse>;
    /**
     * 关闭视频会议
     *
     * @param request - CloseVideoConferenceRequest
     * @returns CloseVideoConferenceResponse
     */
    closeVideoConference(conferenceId: string, request: CloseVideoConferenceRequest): Promise<CloseVideoConferenceResponse>;
    /**
     * 设置联席主持人
     *
     * @param request - CohostsRequest
     * @param headers - CohostsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CohostsResponse
     */
    cohostsWithOptions(conferenceId: string, request: CohostsRequest, headers: CohostsHeaders, runtime: $Util.RuntimeOptions): Promise<CohostsResponse>;
    /**
     * 设置联席主持人
     *
     * @param request - CohostsRequest
     * @returns CohostsResponse
     */
    cohosts(conferenceId: string, request: CohostsRequest): Promise<CohostsResponse>;
    /**
     * 创建专属短链
     *
     * @param request - CreateCustomShortLinkRequest
     * @param headers - CreateCustomShortLinkHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateCustomShortLinkResponse
     */
    createCustomShortLinkWithOptions(request: CreateCustomShortLinkRequest, headers: CreateCustomShortLinkHeaders, runtime: $Util.RuntimeOptions): Promise<CreateCustomShortLinkResponse>;
    /**
     * 创建专属短链
     *
     * @param request - CreateCustomShortLinkRequest
     * @returns CreateCustomShortLinkResponse
     */
    createCustomShortLink(request: CreateCustomShortLinkRequest): Promise<CreateCustomShortLinkResponse>;
    /**
     * 创建预约会议
     *
     * @param request - CreateScheduleConferenceRequest
     * @param headers - CreateScheduleConferenceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateScheduleConferenceResponse
     */
    createScheduleConferenceWithOptions(request: CreateScheduleConferenceRequest, headers: CreateScheduleConferenceHeaders, runtime: $Util.RuntimeOptions): Promise<CreateScheduleConferenceResponse>;
    /**
     * 创建预约会议
     *
     * @param request - CreateScheduleConferenceRequest
     * @returns CreateScheduleConferenceResponse
     */
    createScheduleConference(request: CreateScheduleConferenceRequest): Promise<CreateScheduleConferenceResponse>;
    /**
     * 创建视频会议
     *
     * @param request - CreateVideoConferenceRequest
     * @param headers - CreateVideoConferenceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateVideoConferenceResponse
     */
    createVideoConferenceWithOptions(request: CreateVideoConferenceRequest, headers: CreateVideoConferenceHeaders, runtime: $Util.RuntimeOptions): Promise<CreateVideoConferenceResponse>;
    /**
     * 创建视频会议
     *
     * @param request - CreateVideoConferenceRequest
     * @returns CreateVideoConferenceResponse
     */
    createVideoConference(request: CreateVideoConferenceRequest): Promise<CreateVideoConferenceResponse>;
    /**
     * 设置全员看他
     *
     * @param request - FocusRequest
     * @param headers - FocusHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns FocusResponse
     */
    focusWithOptions(conferenceId: string, request: FocusRequest, headers: FocusHeaders, runtime: $Util.RuntimeOptions): Promise<FocusResponse>;
    /**
     * 设置全员看他
     *
     * @param request - FocusRequest
     * @returns FocusResponse
     */
    focus(conferenceId: string, request: FocusRequest): Promise<FocusResponse>;
    /**
     * 生成会议闪记文档的下载链接
     *
     * @param request - GenerateFlashMinutesDocumentUrlRequest
     * @param headers - GenerateFlashMinutesDocumentUrlHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GenerateFlashMinutesDocumentUrlResponse
     */
    generateFlashMinutesDocumentUrlWithOptions(conferenceId: string, request: GenerateFlashMinutesDocumentUrlRequest, headers: GenerateFlashMinutesDocumentUrlHeaders, runtime: $Util.RuntimeOptions): Promise<GenerateFlashMinutesDocumentUrlResponse>;
    /**
     * 生成会议闪记文档的下载链接
     *
     * @param request - GenerateFlashMinutesDocumentUrlRequest
     * @returns GenerateFlashMinutesDocumentUrlResponse
     */
    generateFlashMinutesDocumentUrl(conferenceId: string, request: GenerateFlashMinutesDocumentUrlRequest): Promise<GenerateFlashMinutesDocumentUrlResponse>;
    /**
     * 通过conferenceId获取指定音视频会议信息
     *
     * @param request - GetConfDataByConferenceIdRequest
     * @param headers - GetConfDataByConferenceIdHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetConfDataByConferenceIdResponse
     */
    getConfDataByConferenceIdWithOptions(conferenceId: string, request: GetConfDataByConferenceIdRequest, headers: GetConfDataByConferenceIdHeaders, runtime: $Util.RuntimeOptions): Promise<GetConfDataByConferenceIdResponse>;
    /**
     * 通过conferenceId获取指定音视频会议信息
     *
     * @param request - GetConfDataByConferenceIdRequest
     * @returns GetConfDataByConferenceIdResponse
     */
    getConfDataByConferenceId(conferenceId: string, request: GetConfDataByConferenceIdRequest): Promise<GetConfDataByConferenceIdResponse>;
    /**
     * 通过conferenceId获取指定音视频会议成员信息
     *
     * @param request - GetConfDetailDataRequest
     * @param headers - GetConfDetailDataHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetConfDetailDataResponse
     */
    getConfDetailDataWithOptions(conferenceId: string, request: GetConfDetailDataRequest, headers: GetConfDetailDataHeaders, runtime: $Util.RuntimeOptions): Promise<GetConfDetailDataResponse>;
    /**
     * 通过conferenceId获取指定音视频会议成员信息
     *
     * @param request - GetConfDetailDataRequest
     * @returns GetConfDetailDataResponse
     */
    getConfDetailData(conferenceId: string, request: GetConfDetailDataRequest): Promise<GetConfDetailDataResponse>;
    /**
     * 获取音视频会议列表数据
     *
     * @param request - GetHistoryConfDataListRequest
     * @param headers - GetHistoryConfDataListHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetHistoryConfDataListResponse
     */
    getHistoryConfDataListWithOptions(request: GetHistoryConfDataListRequest, headers: GetHistoryConfDataListHeaders, runtime: $Util.RuntimeOptions): Promise<GetHistoryConfDataListResponse>;
    /**
     * 获取音视频会议列表数据
     *
     * @param request - GetHistoryConfDataListRequest
     * @returns GetHistoryConfDataListResponse
     */
    getHistoryConfDataList(request: GetHistoryConfDataListRequest): Promise<GetHistoryConfDataListResponse>;
    /**
     * 通过conferenceId和unionId获取最新会议质量数据
     *
     * @param request - GetUserLastMetricRequest
     * @param headers - GetUserLastMetricHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetUserLastMetricResponse
     */
    getUserLastMetricWithOptions(conferenceId: string, request: GetUserLastMetricRequest, headers: GetUserLastMetricHeaders, runtime: $Util.RuntimeOptions): Promise<GetUserLastMetricResponse>;
    /**
     * 通过conferenceId和unionId获取最新会议质量数据
     *
     * @param request - GetUserLastMetricRequest
     * @returns GetUserLastMetricResponse
     */
    getUserLastMetric(conferenceId: string, request: GetUserLastMetricRequest): Promise<GetUserLastMetricResponse>;
    /**
     * 通过conferenceId和unionId获取指定音视频会议人员的会议质量数据
     *
     * @param request - GetUserMetricDataRequest
     * @param headers - GetUserMetricDataHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetUserMetricDataResponse
     */
    getUserMetricDataWithOptions(conferenceId: string, request: GetUserMetricDataRequest, headers: GetUserMetricDataHeaders, runtime: $Util.RuntimeOptions): Promise<GetUserMetricDataResponse>;
    /**
     * 通过conferenceId和unionId获取指定音视频会议人员的会议质量数据
     *
     * @param request - GetUserMetricDataRequest
     * @returns GetUserMetricDataResponse
     */
    getUserMetricData(conferenceId: string, request: GetUserMetricDataRequest): Promise<GetUserMetricDataResponse>;
    /**
     * 邀请其他人员
     *
     * @param request - InviteUsersRequest
     * @param headers - InviteUsersHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns InviteUsersResponse
     */
    inviteUsersWithOptions(conferenceId: string, request: InviteUsersRequest, headers: InviteUsersHeaders, runtime: $Util.RuntimeOptions): Promise<InviteUsersResponse>;
    /**
     * 邀请其他人员
     *
     * @param request - InviteUsersRequest
     * @returns InviteUsersResponse
     */
    inviteUsers(conferenceId: string, request: InviteUsersRequest): Promise<InviteUsersResponse>;
    /**
     * 会议踢出成员
     *
     * @param request - KickMembersRequest
     * @param headers - KickMembersHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns KickMembersResponse
     */
    kickMembersWithOptions(conferenceId: string, request: KickMembersRequest, headers: KickMembersHeaders, runtime: $Util.RuntimeOptions): Promise<KickMembersResponse>;
    /**
     * 会议踢出成员
     *
     * @param request - KickMembersRequest
     * @returns KickMembersResponse
     */
    kickMembers(conferenceId: string, request: KickMembersRequest): Promise<KickMembersResponse>;
    /**
     * 锁定会议
     *
     * @param request - LockConferenceRequest
     * @param headers - LockConferenceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns LockConferenceResponse
     */
    lockConferenceWithOptions(conferenceId: string, request: LockConferenceRequest, headers: LockConferenceHeaders, runtime: $Util.RuntimeOptions): Promise<LockConferenceResponse>;
    /**
     * 锁定会议
     *
     * @param request - LockConferenceRequest
     * @returns LockConferenceResponse
     */
    lockConference(conferenceId: string, request: LockConferenceRequest): Promise<LockConferenceResponse>;
    /**
     * 会议全员静音或解除静音
     *
     * @param request - MuteAllRequest
     * @param headers - MuteAllHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns MuteAllResponse
     */
    muteAllWithOptions(conferenceId: string, request: MuteAllRequest, headers: MuteAllHeaders, runtime: $Util.RuntimeOptions): Promise<MuteAllResponse>;
    /**
     * 会议全员静音或解除静音
     *
     * @param request - MuteAllRequest
     * @returns MuteAllResponse
     */
    muteAll(conferenceId: string, request: MuteAllRequest): Promise<MuteAllResponse>;
    /**
     * 指定人员静音或取消静音
     *
     * @param request - MuteMembersRequest
     * @param headers - MuteMembersHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns MuteMembersResponse
     */
    muteMembersWithOptions(conferenceId: string, request: MuteMembersRequest, headers: MuteMembersHeaders, runtime: $Util.RuntimeOptions): Promise<MuteMembersResponse>;
    /**
     * 指定人员静音或取消静音
     *
     * @param request - MuteMembersRequest
     * @returns MuteMembersResponse
     */
    muteMembers(conferenceId: string, request: MuteMembersRequest): Promise<MuteMembersResponse>;
    /**
     * 查询云录制文本信息
     *
     * @param request - QueryCloudRecordTextRequest
     * @param headers - QueryCloudRecordTextHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryCloudRecordTextResponse
     */
    queryCloudRecordTextWithOptions(conferenceId: string, request: QueryCloudRecordTextRequest, headers: QueryCloudRecordTextHeaders, runtime: $Util.RuntimeOptions): Promise<QueryCloudRecordTextResponse>;
    /**
     * 查询云录制文本信息
     *
     * @param request - QueryCloudRecordTextRequest
     * @returns QueryCloudRecordTextResponse
     */
    queryCloudRecordText(conferenceId: string, request: QueryCloudRecordTextRequest): Promise<QueryCloudRecordTextResponse>;
    /**
     * 查询云录制视频
     *
     * @param request - QueryCloudRecordVideoRequest
     * @param headers - QueryCloudRecordVideoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryCloudRecordVideoResponse
     */
    queryCloudRecordVideoWithOptions(conferenceId: string, request: QueryCloudRecordVideoRequest, headers: QueryCloudRecordVideoHeaders, runtime: $Util.RuntimeOptions): Promise<QueryCloudRecordVideoResponse>;
    /**
     * 查询云录制视频
     *
     * @param request - QueryCloudRecordVideoRequest
     * @returns QueryCloudRecordVideoResponse
     */
    queryCloudRecordVideo(conferenceId: string, request: QueryCloudRecordVideoRequest): Promise<QueryCloudRecordVideoResponse>;
    /**
     * 查询云录制视频播放信息
     *
     * @param request - QueryCloudRecordVideoPlayInfoRequest
     * @param headers - QueryCloudRecordVideoPlayInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryCloudRecordVideoPlayInfoResponse
     */
    queryCloudRecordVideoPlayInfoWithOptions(conferenceId: string, request: QueryCloudRecordVideoPlayInfoRequest, headers: QueryCloudRecordVideoPlayInfoHeaders, runtime: $Util.RuntimeOptions): Promise<QueryCloudRecordVideoPlayInfoResponse>;
    /**
     * 查询云录制视频播放信息
     *
     * @param request - QueryCloudRecordVideoPlayInfoRequest
     * @returns QueryCloudRecordVideoPlayInfoResponse
     */
    queryCloudRecordVideoPlayInfo(conferenceId: string, request: QueryCloudRecordVideoPlayInfoRequest): Promise<QueryCloudRecordVideoPlayInfoResponse>;
    /**
     * 查询视频会议信息
     *
     * @param headers - QueryConferenceInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryConferenceInfoResponse
     */
    queryConferenceInfoWithOptions(conferenceId: string, headers: QueryConferenceInfoHeaders, runtime: $Util.RuntimeOptions): Promise<QueryConferenceInfoResponse>;
    /**
     * 查询视频会议信息
     * @returns QueryConferenceInfoResponse
     */
    queryConferenceInfo(conferenceId: string): Promise<QueryConferenceInfoResponse>;
    /**
     * 批量查询视频会议信息
     *
     * @param request - QueryConferenceInfoBatchRequest
     * @param headers - QueryConferenceInfoBatchHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryConferenceInfoBatchResponse
     */
    queryConferenceInfoBatchWithOptions(request: QueryConferenceInfoBatchRequest, headers: QueryConferenceInfoBatchHeaders, runtime: $Util.RuntimeOptions): Promise<QueryConferenceInfoBatchResponse>;
    /**
     * 批量查询视频会议信息
     *
     * @param request - QueryConferenceInfoBatchRequest
     * @returns QueryConferenceInfoBatchResponse
     */
    queryConferenceInfoBatch(request: QueryConferenceInfoBatchRequest): Promise<QueryConferenceInfoBatchResponse>;
    /**
     * 根据会议号查询会议信息
     *
     * @param request - QueryConferenceInfoByRoomCodeRequest
     * @param headers - QueryConferenceInfoByRoomCodeHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryConferenceInfoByRoomCodeResponse
     */
    queryConferenceInfoByRoomCodeWithOptions(roomCode: string, request: QueryConferenceInfoByRoomCodeRequest, headers: QueryConferenceInfoByRoomCodeHeaders, runtime: $Util.RuntimeOptions): Promise<QueryConferenceInfoByRoomCodeResponse>;
    /**
     * 根据会议号查询会议信息
     *
     * @param request - QueryConferenceInfoByRoomCodeRequest
     * @returns QueryConferenceInfoByRoomCodeResponse
     */
    queryConferenceInfoByRoomCode(roomCode: string, request: QueryConferenceInfoByRoomCodeRequest): Promise<QueryConferenceInfoByRoomCodeResponse>;
    /**
     * 查询视频会议成员
     *
     * @param request - QueryConferenceMembersRequest
     * @param headers - QueryConferenceMembersHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryConferenceMembersResponse
     */
    queryConferenceMembersWithOptions(conferenceId: string, request: QueryConferenceMembersRequest, headers: QueryConferenceMembersHeaders, runtime: $Util.RuntimeOptions): Promise<QueryConferenceMembersResponse>;
    /**
     * 查询视频会议成员
     *
     * @param request - QueryConferenceMembersRequest
     * @returns QueryConferenceMembersResponse
     */
    queryConferenceMembers(conferenceId: string, request: QueryConferenceMembersRequest): Promise<QueryConferenceMembersResponse>;
    /**
     * 查询云录制摘要请求
     *
     * @param request - QueryFlashMinutesSummaryRequest
     * @param headers - QueryFlashMinutesSummaryHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryFlashMinutesSummaryResponse
     */
    queryFlashMinutesSummaryWithOptions(conferenceId: string, request: QueryFlashMinutesSummaryRequest, headers: QueryFlashMinutesSummaryHeaders, runtime: $Util.RuntimeOptions): Promise<QueryFlashMinutesSummaryResponse>;
    /**
     * 查询云录制摘要请求
     *
     * @param request - QueryFlashMinutesSummaryRequest
     * @returns QueryFlashMinutesSummaryResponse
     */
    queryFlashMinutesSummary(conferenceId: string, request: QueryFlashMinutesSummaryRequest): Promise<QueryFlashMinutesSummaryResponse>;
    /**
     * 查询会议闪记的音频信息
     *
     * @param request - QueryMinutesAudioRequest
     * @param headers - QueryMinutesAudioHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryMinutesAudioResponse
     */
    queryMinutesAudioWithOptions(conferenceId: string, request: QueryMinutesAudioRequest, headers: QueryMinutesAudioHeaders, runtime: $Util.RuntimeOptions): Promise<QueryMinutesAudioResponse>;
    /**
     * 查询会议闪记的音频信息
     *
     * @param request - QueryMinutesAudioRequest
     * @returns QueryMinutesAudioResponse
     */
    queryMinutesAudio(conferenceId: string, request: QueryMinutesAudioRequest): Promise<QueryMinutesAudioResponse>;
    /**
     * 查询会议闪记智能纪要
     *
     * @param request - QueryMinutesSummaryRequest
     * @param headers - QueryMinutesSummaryHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryMinutesSummaryResponse
     */
    queryMinutesSummaryWithOptions(conferenceId: string, request: QueryMinutesSummaryRequest, headers: QueryMinutesSummaryHeaders, runtime: $Util.RuntimeOptions): Promise<QueryMinutesSummaryResponse>;
    /**
     * 查询会议闪记智能纪要
     *
     * @param request - QueryMinutesSummaryRequest
     * @returns QueryMinutesSummaryResponse
     */
    queryMinutesSummary(conferenceId: string, request: QueryMinutesSummaryRequest): Promise<QueryMinutesSummaryResponse>;
    /**
     * 查询会议闪记文本信息
     *
     * @param request - QueryMinutesTextRequest
     * @param headers - QueryMinutesTextHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryMinutesTextResponse
     */
    queryMinutesTextWithOptions(conferenceId: string, request: QueryMinutesTextRequest, headers: QueryMinutesTextHeaders, runtime: $Util.RuntimeOptions): Promise<QueryMinutesTextResponse>;
    /**
     * 查询会议闪记文本信息
     *
     * @param request - QueryMinutesTextRequest
     * @returns QueryMinutesTextResponse
     */
    queryMinutesText(conferenceId: string, request: QueryMinutesTextRequest): Promise<QueryMinutesTextResponse>;
    /**
     * 查询企业进行中会议列表
     *
     * @param request - QueryOrgConferenceListRequest
     * @param headers - QueryOrgConferenceListHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryOrgConferenceListResponse
     */
    queryOrgConferenceListWithOptions(request: QueryOrgConferenceListRequest, headers: QueryOrgConferenceListHeaders, runtime: $Util.RuntimeOptions): Promise<QueryOrgConferenceListResponse>;
    /**
     * 查询企业进行中会议列表
     *
     * @param request - QueryOrgConferenceListRequest
     * @returns QueryOrgConferenceListResponse
     */
    queryOrgConferenceList(request: QueryOrgConferenceListRequest): Promise<QueryOrgConferenceListResponse>;
    /**
     * 查询闪记链接
     *
     * @param request - QueryRecordMinutesUrlRequest
     * @param headers - QueryRecordMinutesUrlHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryRecordMinutesUrlResponse
     */
    queryRecordMinutesUrlWithOptions(conferenceId: string, request: QueryRecordMinutesUrlRequest, headers: QueryRecordMinutesUrlHeaders, runtime: $Util.RuntimeOptions): Promise<QueryRecordMinutesUrlResponse>;
    /**
     * 查询闪记链接
     *
     * @param request - QueryRecordMinutesUrlRequest
     * @returns QueryRecordMinutesUrlResponse
     */
    queryRecordMinutesUrl(conferenceId: string, request: QueryRecordMinutesUrlRequest): Promise<QueryRecordMinutesUrlResponse>;
    /**
     * 查询预约会议设置
     *
     * @param request - QueryScheduleConfSettingsRequest
     * @param headers - QueryScheduleConfSettingsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryScheduleConfSettingsResponse
     */
    queryScheduleConfSettingsWithOptions(request: QueryScheduleConfSettingsRequest, headers: QueryScheduleConfSettingsHeaders, runtime: $Util.RuntimeOptions): Promise<QueryScheduleConfSettingsResponse>;
    /**
     * 查询预约会议设置
     *
     * @param request - QueryScheduleConfSettingsRequest
     * @returns QueryScheduleConfSettingsResponse
     */
    queryScheduleConfSettings(request: QueryScheduleConfSettingsRequest): Promise<QueryScheduleConfSettingsResponse>;
    /**
     * 查询预约会议信息
     *
     * @param request - QueryScheduleConferenceRequest
     * @param headers - QueryScheduleConferenceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryScheduleConferenceResponse
     */
    queryScheduleConferenceWithOptions(scheduleConferenceId: string, request: QueryScheduleConferenceRequest, headers: QueryScheduleConferenceHeaders, runtime: $Util.RuntimeOptions): Promise<QueryScheduleConferenceResponse>;
    /**
     * 查询预约会议信息
     *
     * @param request - QueryScheduleConferenceRequest
     * @returns QueryScheduleConferenceResponse
     */
    queryScheduleConference(scheduleConferenceId: string, request: QueryScheduleConferenceRequest): Promise<QueryScheduleConferenceResponse>;
    /**
     * 分页获取预约会议历史会议信息，当前仅返回最后一次的会议信息
     *
     * @param request - QueryScheduleConferenceInfoRequest
     * @param headers - QueryScheduleConferenceInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryScheduleConferenceInfoResponse
     */
    queryScheduleConferenceInfoWithOptions(scheduleConferenceId: string, request: QueryScheduleConferenceInfoRequest, headers: QueryScheduleConferenceInfoHeaders, runtime: $Util.RuntimeOptions): Promise<QueryScheduleConferenceInfoResponse>;
    /**
     * 分页获取预约会议历史会议信息，当前仅返回最后一次的会议信息
     *
     * @param request - QueryScheduleConferenceInfoRequest
     * @returns QueryScheduleConferenceInfoResponse
     */
    queryScheduleConferenceInfo(scheduleConferenceId: string, request: QueryScheduleConferenceInfoRequest): Promise<QueryScheduleConferenceInfoResponse>;
    /**
     * 查询用户进行中会议
     *
     * @param request - QueryUserOnGoingConferenceRequest
     * @param headers - QueryUserOnGoingConferenceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryUserOnGoingConferenceResponse
     */
    queryUserOnGoingConferenceWithOptions(request: QueryUserOnGoingConferenceRequest, headers: QueryUserOnGoingConferenceHeaders, runtime: $Util.RuntimeOptions): Promise<QueryUserOnGoingConferenceResponse>;
    /**
     * 查询用户进行中会议
     *
     * @param request - QueryUserOnGoingConferenceRequest
     * @returns QueryUserOnGoingConferenceResponse
     */
    queryUserOnGoingConference(request: QueryUserOnGoingConferenceRequest): Promise<QueryUserOnGoingConferenceResponse>;
    /**
     * 开启云录制
     *
     * @param request - StartCloudRecordRequest
     * @param headers - StartCloudRecordHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns StartCloudRecordResponse
     */
    startCloudRecordWithOptions(conferenceId: string, request: StartCloudRecordRequest, headers: StartCloudRecordHeaders, runtime: $Util.RuntimeOptions): Promise<StartCloudRecordResponse>;
    /**
     * 开启云录制
     *
     * @param request - StartCloudRecordRequest
     * @returns StartCloudRecordResponse
     */
    startCloudRecord(conferenceId: string, request: StartCloudRecordRequest): Promise<StartCloudRecordResponse>;
    /**
     * 开启会议闪记
     *
     * @param request - StartMinutesRequest
     * @param headers - StartMinutesHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns StartMinutesResponse
     */
    startMinutesWithOptions(conferenceId: string, request: StartMinutesRequest, headers: StartMinutesHeaders, runtime: $Util.RuntimeOptions): Promise<StartMinutesResponse>;
    /**
     * 开启会议闪记
     *
     * @param request - StartMinutesRequest
     * @returns StartMinutesResponse
     */
    startMinutes(conferenceId: string, request: StartMinutesRequest): Promise<StartMinutesResponse>;
    /**
     * 会议开始直播推流
     *
     * @param request - StartStreamOutRequest
     * @param headers - StartStreamOutHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns StartStreamOutResponse
     */
    startStreamOutWithOptions(conferenceId: string, request: StartStreamOutRequest, headers: StartStreamOutHeaders, runtime: $Util.RuntimeOptions): Promise<StartStreamOutResponse>;
    /**
     * 会议开始直播推流
     *
     * @param request - StartStreamOutRequest
     * @returns StartStreamOutResponse
     */
    startStreamOut(conferenceId: string, request: StartStreamOutRequest): Promise<StartStreamOutResponse>;
    /**
     * 关闭云录制
     *
     * @param request - StopCloudRecordRequest
     * @param headers - StopCloudRecordHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns StopCloudRecordResponse
     */
    stopCloudRecordWithOptions(conferenceId: string, request: StopCloudRecordRequest, headers: StopCloudRecordHeaders, runtime: $Util.RuntimeOptions): Promise<StopCloudRecordResponse>;
    /**
     * 关闭云录制
     *
     * @param request - StopCloudRecordRequest
     * @returns StopCloudRecordResponse
     */
    stopCloudRecord(conferenceId: string, request: StopCloudRecordRequest): Promise<StopCloudRecordResponse>;
    /**
     * 暂停会议闪记
     *
     * @param request - StopMinutesRequest
     * @param headers - StopMinutesHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns StopMinutesResponse
     */
    stopMinutesWithOptions(conferenceId: string, request: StopMinutesRequest, headers: StopMinutesHeaders, runtime: $Util.RuntimeOptions): Promise<StopMinutesResponse>;
    /**
     * 暂停会议闪记
     *
     * @param request - StopMinutesRequest
     * @returns StopMinutesResponse
     */
    stopMinutes(conferenceId: string, request: StopMinutesRequest): Promise<StopMinutesResponse>;
    /**
     * 会议停止直播推流
     *
     * @param request - StopStreamOutRequest
     * @param headers - StopStreamOutHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns StopStreamOutResponse
     */
    stopStreamOutWithOptions(conferenceId: string, request: StopStreamOutRequest, headers: StopStreamOutHeaders, runtime: $Util.RuntimeOptions): Promise<StopStreamOutResponse>;
    /**
     * 会议停止直播推流
     *
     * @param request - StopStreamOutRequest
     * @returns StopStreamOutResponse
     */
    stopStreamOut(conferenceId: string, request: StopStreamOutRequest): Promise<StopStreamOutResponse>;
    /**
     * 更新预约会议设置
     *
     * @param request - UpdateScheduleConfSettingsRequest
     * @param headers - UpdateScheduleConfSettingsHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateScheduleConfSettingsResponse
     */
    updateScheduleConfSettingsWithOptions(request: UpdateScheduleConfSettingsRequest, headers: UpdateScheduleConfSettingsHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateScheduleConfSettingsResponse>;
    /**
     * 更新预约会议设置
     *
     * @param request - UpdateScheduleConfSettingsRequest
     * @returns UpdateScheduleConfSettingsResponse
     */
    updateScheduleConfSettings(request: UpdateScheduleConfSettingsRequest): Promise<UpdateScheduleConfSettingsResponse>;
    /**
     * 更新预约会议
     *
     * @param request - UpdateScheduleConferenceRequest
     * @param headers - UpdateScheduleConferenceHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateScheduleConferenceResponse
     */
    updateScheduleConferenceWithOptions(request: UpdateScheduleConferenceRequest, headers: UpdateScheduleConferenceHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateScheduleConferenceResponse>;
    /**
     * 更新预约会议
     *
     * @param request - UpdateScheduleConferenceRequest
     * @returns UpdateScheduleConferenceResponse
     */
    updateScheduleConference(request: UpdateScheduleConferenceRequest): Promise<UpdateScheduleConferenceResponse>;
    /**
     * 更新会议额外信息
     *
     * @param headers - UpdateVideoConferenceExtInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateVideoConferenceExtInfoResponse
     */
    updateVideoConferenceExtInfoWithOptions(conferenceId: string, headers: UpdateVideoConferenceExtInfoHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateVideoConferenceExtInfoResponse>;
    /**
     * 更新会议额外信息
     * @returns UpdateVideoConferenceExtInfoResponse
     */
    updateVideoConferenceExtInfo(conferenceId: string): Promise<UpdateVideoConferenceExtInfoResponse>;
    /**
     * 设置会议中的会议属性
     *
     * @param request - UpdateVideoConferenceSettingRequest
     * @param headers - UpdateVideoConferenceSettingHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateVideoConferenceSettingResponse
     */
    updateVideoConferenceSettingWithOptions(conferenceId: string, request: UpdateVideoConferenceSettingRequest, headers: UpdateVideoConferenceSettingHeaders, runtime: $Util.RuntimeOptions): Promise<UpdateVideoConferenceSettingResponse>;
    /**
     * 设置会议中的会议属性
     *
     * @param request - UpdateVideoConferenceSettingRequest
     * @returns UpdateVideoConferenceSettingResponse
     */
    updateVideoConferenceSetting(conferenceId: string, request: UpdateVideoConferenceSettingRequest): Promise<UpdateVideoConferenceSettingResponse>;
}
