/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class QueryMinutesStatusHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesStatusRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesStatusResponseBody extends $tea.Model {
    status?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesStatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryMinutesStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesTextHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesTextRequest extends $tea.Model {
    direction?: number;
    maxResults?: number;
    nextToken?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesTextResponseBody extends $tea.Model {
    hasNext?: boolean;
    nextToken?: string;
    paragraphList?: QueryMinutesTextResponseBodyParagraphList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesTextResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: QueryMinutesTextResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesTextResponseBodyParagraphListSentenceListWordList extends $tea.Model {
    endTime?: number;
    startTime?: number;
    word?: string;
    wordId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesTextResponseBodyParagraphListSentenceList extends $tea.Model {
    endTime?: number;
    sentence?: string;
    startTime?: number;
    wordList?: QueryMinutesTextResponseBodyParagraphListSentenceListWordList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class QueryMinutesTextResponseBodyParagraphList extends $tea.Model {
    endTime?: number;
    nickName?: string;
    paragraph?: string;
    paragraphId?: number;
    recordId?: number;
    sentenceList?: QueryMinutesTextResponseBodyParagraphListSentenceList[];
    startTime?: number;
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 查询闪记状态
     *
     * @param request - QueryMinutesStatusRequest
     * @param headers - QueryMinutesStatusHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryMinutesStatusResponse
     */
    queryMinutesStatusWithOptions(taskUuid: string, request: QueryMinutesStatusRequest, headers: QueryMinutesStatusHeaders, runtime: $Util.RuntimeOptions): Promise<QueryMinutesStatusResponse>;
    /**
     * 查询闪记状态
     *
     * @param request - QueryMinutesStatusRequest
     * @returns QueryMinutesStatusResponse
     */
    queryMinutesStatus(taskUuid: string, request: QueryMinutesStatusRequest): Promise<QueryMinutesStatusResponse>;
    /**
     * 查询闪记转写文本内容
     *
     * @param request - QueryMinutesTextRequest
     * @param headers - QueryMinutesTextHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns QueryMinutesTextResponse
     */
    queryMinutesTextWithOptions(taskUuid: string, request: QueryMinutesTextRequest, headers: QueryMinutesTextHeaders, runtime: $Util.RuntimeOptions): Promise<QueryMinutesTextResponse>;
    /**
     * 查询闪记转写文本内容
     *
     * @param request - QueryMinutesTextRequest
     * @returns QueryMinutesTextResponse
     */
    queryMinutesText(taskUuid: string, request: QueryMinutesTextRequest): Promise<QueryMinutesTextResponse>;
}
