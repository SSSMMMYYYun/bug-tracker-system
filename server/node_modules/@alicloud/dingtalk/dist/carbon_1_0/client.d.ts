/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class GetPersonalCarbonInfoHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPersonalCarbonInfoRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * salary
     */
    actionType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 23121
     */
    unionId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPersonalCarbonInfoResponseBody extends $tea.Model {
    content?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 3.25
     */
    personalCarbonAmount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPersonalCarbonInfoResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetPersonalCarbonInfoResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteAlibabaOrgCarbonHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteAlibabaOrgCarbonRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    orgDetailsList?: WriteAlibabaOrgCarbonRequestOrgDetailsList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteAlibabaOrgCarbonResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteAlibabaOrgCarbonResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: WriteAlibabaOrgCarbonResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteAlibabaUserCarbonHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteAlibabaUserCarbonRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    userDetailsList?: WriteAlibabaUserCarbonRequestUserDetailsList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteAlibabaUserCarbonResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteAlibabaUserCarbonResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: WriteAlibabaUserCarbonResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteIsvStateHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteIsvStateRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ISV
     */
    isvName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 20220328
     */
    statDate?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteIsvStateResponseBody extends $tea.Model {
    /**
     * @example
     * 1
     */
    result?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteIsvStateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: WriteIsvStateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteOrgCarbonHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteOrgCarbonRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    orgDetailsList?: WriteOrgCarbonRequestOrgDetailsList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteOrgCarbonResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteOrgCarbonResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: WriteOrgCarbonResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteUserCarbonHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteUserCarbonRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    userDetailsList?: WriteUserCarbonRequestUserDetailsList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteUserCarbonResponseBody extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    result?: number;
    /**
     * @remarks
     * This parameter is required.
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteUserCarbonResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: WriteUserCarbonResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteUserCarbonEnergyHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteUserCarbonEnergyRequest extends $tea.Model {
    userDetailsList?: WriteUserCarbonEnergyRequestUserDetailsList[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteUserCarbonEnergyResponseBody extends $tea.Model {
    result?: number;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteUserCarbonEnergyResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: WriteUserCarbonEnergyResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteAlibabaOrgCarbonRequestOrgDetailsList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 12320211126
     */
    actionId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-11-26 10:09:37
     */
    actionTime?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * VIDEO
     */
    actionType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 3.21
     */
    carbonAmount?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding12344
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 111
     */
    deptId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    version?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteAlibabaUserCarbonRequestUserDetailsList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-11-26 10:09:37
     */
    actionEndTime?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 12320211126
     */
    actionId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-11-26 10:09:37
     */
    actionStartTime?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * VIDEO
     */
    actionType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 3.21
     */
    carbonAmount?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding12344
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 111
     */
    deptId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    userId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    version?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteOrgCarbonRequestOrgDetailsList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 12320211126
     */
    actionId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-11-26 10:09:37
     */
    actionTime?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * VIDEO
     */
    actionType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 3.21
     */
    carbonAmount?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding12344
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 111
     */
    deptId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    version?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteUserCarbonRequestUserDetailsList extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-11-26 10:09:37
     */
    actionEndTime?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 12320211126
     */
    actionId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 2021-11-26 10:09:37
     */
    actionStartTime?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * VIDEO
     */
    actionType?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 3.21
     */
    carbonAmount?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * ding12344
     */
    corpId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 111
     */
    deptId?: number;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 123
     */
    userId?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * 1
     */
    version?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class WriteUserCarbonEnergyRequestUserDetailsList extends $tea.Model {
    /**
     * @example
     * 2021-11-26 10:09:37
     */
    actionEndTime?: string;
    /**
     * @example
     * 12320211126
     */
    actionId?: string;
    /**
     * @example
     * 2021-11-26 10:09:37
     */
    actionStartTime?: string;
    /**
     * @example
     * VIDEO
     */
    actionType?: string;
    /**
     * @example
     * 3.21
     */
    carbonAmount?: string;
    /**
     * @example
     * ding12344
     */
    corpId?: string;
    /**
     * @example
     * 111
     */
    deptId?: number;
    /**
     * @example
     * 123
     */
    userId?: string;
    /**
     * @example
     * 1
     */
    version?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    /**
     * 获取用户的减碳明细
     *
     * @param request - GetPersonalCarbonInfoRequest
     * @param headers - GetPersonalCarbonInfoHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetPersonalCarbonInfoResponse
     */
    getPersonalCarbonInfoWithOptions(request: GetPersonalCarbonInfoRequest, headers: GetPersonalCarbonInfoHeaders, runtime: $Util.RuntimeOptions): Promise<GetPersonalCarbonInfoResponse>;
    /**
     * 获取用户的减碳明细
     *
     * @param request - GetPersonalCarbonInfoRequest
     * @returns GetPersonalCarbonInfoResponse
     */
    getPersonalCarbonInfo(request: GetPersonalCarbonInfoRequest): Promise<GetPersonalCarbonInfoResponse>;
    /**
     * 写入阿里巴巴每日组织明细碳能量数据
     *
     * @param request - WriteAlibabaOrgCarbonRequest
     * @param headers - WriteAlibabaOrgCarbonHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns WriteAlibabaOrgCarbonResponse
     */
    writeAlibabaOrgCarbonWithOptions(request: WriteAlibabaOrgCarbonRequest, headers: WriteAlibabaOrgCarbonHeaders, runtime: $Util.RuntimeOptions): Promise<WriteAlibabaOrgCarbonResponse>;
    /**
     * 写入阿里巴巴每日组织明细碳能量数据
     *
     * @param request - WriteAlibabaOrgCarbonRequest
     * @returns WriteAlibabaOrgCarbonResponse
     */
    writeAlibabaOrgCarbon(request: WriteAlibabaOrgCarbonRequest): Promise<WriteAlibabaOrgCarbonResponse>;
    /**
     * 写入阿里巴巴每日用户碳能量数据
     *
     * @param request - WriteAlibabaUserCarbonRequest
     * @param headers - WriteAlibabaUserCarbonHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns WriteAlibabaUserCarbonResponse
     */
    writeAlibabaUserCarbonWithOptions(request: WriteAlibabaUserCarbonRequest, headers: WriteAlibabaUserCarbonHeaders, runtime: $Util.RuntimeOptions): Promise<WriteAlibabaUserCarbonResponse>;
    /**
     * 写入阿里巴巴每日用户碳能量数据
     *
     * @param request - WriteAlibabaUserCarbonRequest
     * @returns WriteAlibabaUserCarbonResponse
     */
    writeAlibabaUserCarbon(request: WriteAlibabaUserCarbonRequest): Promise<WriteAlibabaUserCarbonResponse>;
    /**
     * ISV记录数据传输当前状态
     *
     * @param request - WriteIsvStateRequest
     * @param headers - WriteIsvStateHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns WriteIsvStateResponse
     */
    writeIsvStateWithOptions(request: WriteIsvStateRequest, headers: WriteIsvStateHeaders, runtime: $Util.RuntimeOptions): Promise<WriteIsvStateResponse>;
    /**
     * ISV记录数据传输当前状态
     *
     * @param request - WriteIsvStateRequest
     * @returns WriteIsvStateResponse
     */
    writeIsvState(request: WriteIsvStateRequest): Promise<WriteIsvStateResponse>;
    /**
     * 写入isv每日组织明细碳能量数据
     *
     * @param request - WriteOrgCarbonRequest
     * @param headers - WriteOrgCarbonHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns WriteOrgCarbonResponse
     */
    writeOrgCarbonWithOptions(request: WriteOrgCarbonRequest, headers: WriteOrgCarbonHeaders, runtime: $Util.RuntimeOptions): Promise<WriteOrgCarbonResponse>;
    /**
     * 写入isv每日组织明细碳能量数据
     *
     * @param request - WriteOrgCarbonRequest
     * @returns WriteOrgCarbonResponse
     */
    writeOrgCarbon(request: WriteOrgCarbonRequest): Promise<WriteOrgCarbonResponse>;
    /**
     * 写入isv每日用户明细碳能量数据
     *
     * @param request - WriteUserCarbonRequest
     * @param headers - WriteUserCarbonHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns WriteUserCarbonResponse
     */
    writeUserCarbonWithOptions(request: WriteUserCarbonRequest, headers: WriteUserCarbonHeaders, runtime: $Util.RuntimeOptions): Promise<WriteUserCarbonResponse>;
    /**
     * 写入isv每日用户明细碳能量数据
     *
     * @param request - WriteUserCarbonRequest
     * @returns WriteUserCarbonResponse
     */
    writeUserCarbon(request: WriteUserCarbonRequest): Promise<WriteUserCarbonResponse>;
    /**
     * 写入isv能耗每日用户明细碳能量数据
     *
     * @param request - WriteUserCarbonEnergyRequest
     * @param headers - WriteUserCarbonEnergyHeaders
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns WriteUserCarbonEnergyResponse
     */
    writeUserCarbonEnergyWithOptions(request: WriteUserCarbonEnergyRequest, headers: WriteUserCarbonEnergyHeaders, runtime: $Util.RuntimeOptions): Promise<WriteUserCarbonEnergyResponse>;
    /**
     * 写入isv能耗每日用户明细碳能量数据
     *
     * @param request - WriteUserCarbonEnergyRequest
     * @returns WriteUserCarbonEnergyResponse
     */
    writeUserCarbonEnergy(request: WriteUserCarbonEnergyRequest): Promise<WriteUserCarbonEnergyResponse>;
}
