import * as plugin from './plugin';
/** for ts declaration */
import * as otherApi from './lib/otherApi';
import * as jsApi from './api/apiObj';
import { IUNCore } from './lib/ddSdk';
declare const dd: typeof otherApi & IUNCore & {
    biz: {
        ATMBle: {
            beaconPicker: typeof import("./api/biz/ATMBle/beaconPicker").beaconPicker$;
            detectFace: typeof import("./api/biz/ATMBle/detectFace").detectFace$;
            detectFaceFullScreen: typeof import("./api/biz/ATMBle/detectFaceFullScreen").detectFaceFullScreen$;
            exclusiveLiveCheck: typeof import("./api/biz/ATMBle/exclusiveLiveCheck").exclusiveLiveCheck$;
            faceManager: typeof import("./api/biz/ATMBle/faceManager").faceManager$;
            punchModePicker: typeof import("./api/biz/ATMBle/punchModePicker").punchModePicker$;
        };
        alipay: {
            bindAlipay: typeof import("./api/biz/alipay/bindAlipay").bindAlipay$;
            openAuth: typeof import("./api/biz/alipay/openAuth").openAuth$;
            pay: typeof import("./api/biz/alipay/pay").pay$;
        };
        attend: {
            getLBSWua: typeof import("./api/biz/attend/getLBSWua").getLBSWua$;
        };
        auth: {
            openAccountPwdLoginPage: typeof import("./api/biz/auth/openAccountPwdLoginPage").openAccountPwdLoginPage$;
            requestAuthInfo: typeof import("./api/biz/auth/requestAuthInfo").requestAuthInfo$;
        };
        calendar: {
            chooseDateTime: typeof import("./api/biz/calendar/chooseDateTime").chooseDateTime$;
            chooseHalfDay: typeof import("./api/biz/calendar/chooseHalfDay").chooseHalfDay$;
            chooseInterval: typeof import("./api/biz/calendar/chooseInterval").chooseInterval$;
            chooseOneDay: typeof import("./api/biz/calendar/chooseOneDay").chooseOneDay$;
        };
        chat: {
            chooseConversationByCorpId: typeof import("./api/biz/chat/chooseConversationByCorpId").chooseConversationByCorpId$;
            collectSticker: typeof import("./api/biz/chat/collectSticker").collectSticker$;
            createSceneGroup: typeof import("./api/biz/chat/createSceneGroup").createSceneGroup$;
            getRealmCid: typeof import("./api/biz/chat/getRealmCid").getRealmCid$;
            locationChatMessage: typeof import("./api/biz/chat/locationChatMessage").locationChatMessage$;
            openSingleChat: typeof import("./api/biz/chat/openSingleChat").openSingleChat$;
            pickConversation: typeof import("./api/biz/chat/pickConversation").pickConversation$;
            sendEmotion: typeof import("./api/biz/chat/sendEmotion").sendEmotion$;
            toConversation: typeof import("./api/biz/chat/toConversation").toConversation$;
            toConversationByOpenConversationId: typeof import("./api/biz/chat/toConversationByOpenConversationId").toConversationByOpenConversationId$;
        };
        clipboardData: {
            setData: typeof import("./api/biz/clipboardData/setData").setData$;
        };
        conference: {
            createCloudCall: typeof import("./api/biz/conference/createCloudCall").createCloudCall$;
            getCloudCallInfo: typeof import("./api/biz/conference/getCloudCallInfo").getCloudCallInfo$;
            getCloudCallList: typeof import("./api/biz/conference/getCloudCallList").getCloudCallList$;
            videoConfCall: typeof import("./api/biz/conference/videoConfCall").videoConfCall$;
        };
        contact: {
            choose: typeof import("./api/biz/contact/choose").choose$;
            chooseMobileContacts: typeof import("./api/biz/contact/chooseMobileContacts").chooseMobileContacts$;
            complexPicker: typeof import("./api/biz/contact/complexPicker").complexPicker$;
            createGroup: typeof import("./api/biz/contact/createGroup").createGroup$;
            departmentsPicker: typeof import("./api/biz/contact/departmentsPicker").departmentsPicker$;
            externalComplexPicker: typeof import("./api/biz/contact/externalComplexPicker").externalComplexPicker$;
            externalEditForm: typeof import("./api/biz/contact/externalEditForm").externalEditForm$;
            rolesPicker: typeof import("./api/biz/contact/rolesPicker").rolesPicker$;
            setRule: typeof import("./api/biz/contact/setRule").setRule$;
        };
        cspace: {
            chooseSpaceDir: typeof import("./api/biz/cspace/chooseSpaceDir").chooseSpaceDir$;
            delete: typeof import("./api/biz/cspace/delete").delete$;
            preview: typeof import("./api/biz/cspace/preview").preview$;
            previewDentryImages: typeof import("./api/biz/cspace/previewDentryImages").previewDentryImages$;
            saveFile: typeof import("./api/biz/cspace/saveFile").saveFile$;
        };
        customContact: {
            choose: typeof import("./api/biz/customContact/choose").choose$;
            multipleChoose: typeof import("./api/biz/customContact/multipleChoose").multipleChoose$;
        };
        data: {
            rsa: typeof import("./api/biz/data/rsa").rsa$;
        };
        ding: {
            create: typeof import("./api/biz/ding/create").create$;
            post: typeof import("./api/biz/ding/post").post$;
        };
        edu: {
            finishMiniCourseByRecordId: typeof import("./api/biz/edu/finishMiniCourseByRecordId").finishMiniCourseByRecordId$;
            getMiniCourseDraftList: typeof import("./api/biz/edu/getMiniCourseDraftList").getMiniCourseDraftList$;
            joinClassroom: typeof import("./api/biz/edu/joinClassroom").joinClassroom$;
            makeMiniCourse: typeof import("./api/biz/edu/makeMiniCourse").makeMiniCourse$;
            newMsgNotificationStatus: typeof import("./api/biz/edu/newMsgNotificationStatus").newMsgNotificationStatus$;
            startAuth: typeof import("./api/biz/edu/startAuth").startAuth$;
            tokenFaceImg: typeof import("./api/biz/edu/tokenFaceImg").tokenFaceImg$;
        };
        event: {
            notifyWeex: typeof import("./api/biz/event/notifyWeex").notifyWeex$;
        };
        file: {
            downloadFile: typeof import("./api/biz/file/downloadFile").downloadFile$;
        };
        intent: {
            fetchData: typeof import("./api/biz/intent/fetchData").fetchData$;
        };
        iot: {
            bind: typeof import("./api/biz/iot/bind").bind$;
            bindMeetingRoom: typeof import("./api/biz/iot/bindMeetingRoom").bindMeetingRoom$;
            getDeviceProperties: typeof import("./api/biz/iot/getDeviceProperties").getDeviceProperties$;
            invokeThingService: typeof import("./api/biz/iot/invokeThingService").invokeThingService$;
            queryMeetingRoomList: typeof import("./api/biz/iot/queryMeetingRoomList").queryMeetingRoomList$;
            setDeviceProperties: typeof import("./api/biz/iot/setDeviceProperties").setDeviceProperties$;
            unbind: typeof import("./api/biz/iot/unbind").unbind$;
        };
        live: {
            startClassRoom: typeof import("./api/biz/live/startClassRoom").startClassRoom$;
            startUnifiedLive: typeof import("./api/biz/live/startUnifiedLive").startUnifiedLive$;
        };
        map: {
            locate: typeof import("./api/biz/map/locate").locate$;
            search: typeof import("./api/biz/map/search").search$;
            view: typeof import("./api/biz/map/view").view$;
        };
        media: {
            compressVideo: typeof import("./api/biz/media/compressVideo").compressVideo$;
        };
        microApp: {
            openApp: typeof import("./api/biz/microApp/openApp").openApp$;
        };
        navigation: {
            close: typeof import("./api/biz/navigation/close").close$;
            goBack: typeof import("./api/biz/navigation/goBack").goBack$;
            hideBar: typeof import("./api/biz/navigation/hideBar").hideBar$;
            navigateBackPage: typeof import("./api/biz/navigation/navigateBackPage").navigateBackPage$;
            navigateToMiniProgram: typeof import("./api/biz/navigation/navigateToMiniProgram").navigateToMiniProgram$;
            navigateToPage: typeof import("./api/biz/navigation/navigateToPage").navigateToPage$;
            quit: typeof import("./api/biz/navigation/quit").quit$;
            replace: typeof import("./api/biz/navigation/replace").replace$;
            setIcon: typeof import("./api/biz/navigation/setIcon").setIcon$;
            setLeft: typeof import("./api/biz/navigation/setLeft").setLeft$;
            setMenu: typeof import("./api/biz/navigation/setMenu").setMenu$;
            setRight: typeof import("./api/biz/navigation/setRight").setRight$;
            setTitle: typeof import("./api/biz/navigation/setTitle").setTitle$;
        };
        pbp: {
            componentPunchFromPartner: typeof import("./api/biz/pbp/componentPunchFromPartner").componentPunchFromPartner$;
            startMatchRuleFromPartner: typeof import("./api/biz/pbp/startMatchRuleFromPartner").startMatchRuleFromPartner$;
            stopMatchRuleFromPartner: typeof import("./api/biz/pbp/stopMatchRuleFromPartner").stopMatchRuleFromPartner$;
        };
        phoneContact: {
            add: typeof import("./api/biz/phoneContact/add").add$;
        };
        realm: {
            getRealtimeTracingStatus: typeof import("./api/biz/realm/getRealtimeTracingStatus").getRealtimeTracingStatus$;
            getUserExclusiveInfo: typeof import("./api/biz/realm/getUserExclusiveInfo").getUserExclusiveInfo$;
            startRealtimeTracing: typeof import("./api/biz/realm/startRealtimeTracing").startRealtimeTracing$;
            stopRealtimeTracing: typeof import("./api/biz/realm/stopRealtimeTracing").stopRealtimeTracing$;
            subscribe: typeof import("./api/biz/realm/subscribe").subscribe$;
            unsubscribe: typeof import("./api/biz/realm/unsubscribe").unsubscribe$;
        };
        resource: {
            getInfo: typeof import("./api/biz/resource/getInfo").getInfo$;
            reportDebugMessage: typeof import("./api/biz/resource/reportDebugMessage").reportDebugMessage$;
        };
        shortCut: {
            addShortCut: typeof import("./api/biz/shortCut/addShortCut").addShortCut$;
        };
        sports: {
            getHealthAuthorizationStatus: typeof import("./api/biz/sports/getHealthAuthorizationStatus").getHealthAuthorizationStatus$;
            getHealthData: typeof import("./api/biz/sports/getHealthData").getHealthData$;
            getHealthDeviceData: typeof import("./api/biz/sports/getHealthDeviceData").getHealthDeviceData$;
            requestHealthAuthorization: typeof import("./api/biz/sports/requestHealthAuthorization").requestHealthAuthorization$;
        };
        store: {
            closeUnpayOrder: typeof import("./api/biz/store/closeUnpayOrder").closeUnpayOrder$;
            createOrder: typeof import("./api/biz/store/createOrder").createOrder$;
            getPayUrl: typeof import("./api/biz/store/getPayUrl").getPayUrl$;
            inquiry: typeof import("./api/biz/store/inquiry").inquiry$;
        };
        tabwindow: {
            isTab: typeof import("./api/biz/tabwindow/isTab").isTab$;
        };
        telephone: {
            call: typeof import("./api/biz/telephone/call").call$;
            checkBizCall: typeof import("./api/biz/telephone/checkBizCall").checkBizCall$;
            quickCallList: typeof import("./api/biz/telephone/quickCallList").quickCallList$;
            showCallMenu: typeof import("./api/biz/telephone/showCallMenu").showCallMenu$;
        };
        user: {
            checkPassword: typeof import("./api/biz/user/checkPassword").checkPassword$;
            get: typeof import("./api/biz/user/get").get$;
        };
        util: {
            callComponent: typeof import("./api/biz/util/callComponent").callComponent$;
            checkAuth: typeof import("./api/biz/util/checkAuth").checkAuth$;
            chooseImage: typeof import("./api/biz/util/chooseImage").chooseImage$;
            chooseRegion: typeof import("./api/biz/util/chooseRegion").chooseRegion$;
            chosen: typeof import("./api/biz/util/chosen").chosen$;
            clearWebStoreCache: typeof import("./api/biz/util/clearWebStoreCache").clearWebStoreCache$;
            closePreviewImage: typeof import("./api/biz/util/closePreviewImage").closePreviewImage$;
            compressImage: typeof import("./api/biz/util/compressImage").compressImage$;
            datepicker: typeof import("./api/biz/util/datepicker").datepicker$;
            datetimepicker: typeof import("./api/biz/util/datetimepicker").datetimepicker$;
            decrypt: typeof import("./api/biz/util/decrypt").decrypt$;
            downloadFile: typeof import("./api/biz/util/downloadFile").downloadFile$;
            encrypt: typeof import("./api/biz/util/encrypt").encrypt$;
            getPerfInfo: typeof import("./api/biz/util/getPerfInfo").getPerfInfo$;
            invokeWorkbench: typeof import("./api/biz/util/invokeWorkbench").invokeWorkbench$;
            isEnableGPUAcceleration: typeof import("./api/biz/util/isEnableGPUAcceleration").isEnableGPUAcceleration$;
            isLocalFileExist: typeof import("./api/biz/util/isLocalFileExist").isLocalFileExist$;
            multiSelect: typeof import("./api/biz/util/multiSelect").multiSelect$;
            open: typeof import("./api/biz/util/open").open$;
            openBrowser: typeof import("./api/biz/util/openBrowser").openBrowser$;
            openDocument: typeof import("./api/biz/util/openDocument").openDocument$;
            openLink: typeof import("./api/biz/util/openLink").openLink$;
            openLocalFile: typeof import("./api/biz/util/openLocalFile").openLocalFile$;
            openModal: typeof import("./api/biz/util/openModal").openModal$;
            openSlidePanel: typeof import("./api/biz/util/openSlidePanel").openSlidePanel$;
            presentWindow: typeof import("./api/biz/util/presentWindow").presentWindow$;
            previewImage: typeof import("./api/biz/util/previewImage").previewImage$;
            previewVideo: typeof import("./api/biz/util/previewVideo").previewVideo$;
            saveImage: typeof import("./api/biz/util/saveImage").saveImage$;
            saveImageToPhotosAlbum: typeof import("./api/biz/util/saveImageToPhotosAlbum").saveImageToPhotosAlbum$;
            scan: typeof import("./api/biz/util/scan").scan$;
            scanCard: typeof import("./api/biz/util/scanCard").scanCard$;
            setGPUAcceleration: typeof import("./api/biz/util/setGPUAcceleration").setGPUAcceleration$;
            setScreenBrightnessAndKeepOn: typeof import("./api/biz/util/setScreenBrightnessAndKeepOn").setScreenBrightnessAndKeepOn$;
            setScreenKeepOn: typeof import("./api/biz/util/setScreenKeepOn").setScreenKeepOn$;
            share: typeof import("./api/biz/util/share").share$;
            shareImage: typeof import("./api/biz/util/shareImage").shareImage$;
            showAuthGuide: typeof import("./api/biz/util/showAuthGuide").showAuthGuide$;
            showSharePanel: typeof import("./api/biz/util/showSharePanel").showSharePanel$;
            startDocSign: typeof import("./api/biz/util/startDocSign").startDocSign$;
            systemShare: typeof import("./api/biz/util/systemShare").systemShare$;
            timepicker: typeof import("./api/biz/util/timepicker").timepicker$;
            uploadAttachment: typeof import("./api/biz/util/uploadAttachment").uploadAttachment$;
            uploadFile: typeof import("./api/biz/util/uploadFile").uploadFile$;
            uploadImage: typeof import("./api/biz/util/uploadImage").uploadImage$;
            uploadImageFromCamera: typeof import("./api/biz/util/uploadImageFromCamera").uploadImageFromCamera$;
            ut: typeof import("./api/biz/util/ut").ut$;
        };
        verify: {
            openBindIDCard: typeof import("./api/biz/verify/openBindIDCard").openBindIDCard$;
            startAuth: typeof import("./api/biz/verify/startAuth").startAuth$;
        };
        voice: {
            makeCall: typeof import("./api/biz/voice/makeCall").makeCall$;
        };
        watermarkCamera: {
            getWatermarkInfo: typeof import("./api/biz/watermarkCamera/getWatermarkInfo").getWatermarkInfo$;
            setWatermarkInfo: typeof import("./api/biz/watermarkCamera/setWatermarkInfo").setWatermarkInfo$;
        };
    };
    channel: {
        permission: {
            requestAuthCode: typeof import("./api/channel/permission/requestAuthCode").requestAuthCode$;
        };
    };
    device: {
        accelerometer: {
            clearShake: typeof import("./api/device/accelerometer/clearShake").clearShake$;
            watchShake: typeof import("./api/device/accelerometer/watchShake").watchShake$;
        };
        audio: {
            download: typeof import("./api/device/audio/download").download$;
            onPlayEnd: typeof import("./api/device/audio/onPlayEnd").onPlayEnd$;
            onRecordEnd: typeof import("./api/device/audio/onRecordEnd").onRecordEnd$;
            pause: typeof import("./api/device/audio/pause").pause$;
            play: typeof import("./api/device/audio/play").play$;
            resume: typeof import("./api/device/audio/resume").resume$;
            startRecord: typeof import("./api/device/audio/startRecord").startRecord$;
            stop: typeof import("./api/device/audio/stop").stop$;
            stopRecord: typeof import("./api/device/audio/stopRecord").stopRecord$;
            translateVoice: typeof import("./api/device/audio/translateVoice").translateVoice$;
        };
        base: {
            getBatteryInfo: typeof import("./api/device/base/getBatteryInfo").getBatteryInfo$;
            getInterface: typeof import("./api/device/base/getInterface").getInterface$;
            getPhoneInfo: typeof import("./api/device/base/getPhoneInfo").getPhoneInfo$;
            getScanWifiListAsync: typeof import("./api/device/base/getScanWifiListAsync").getScanWifiListAsync$;
            getUUID: typeof import("./api/device/base/getUUID").getUUID$;
            getWifiStatus: typeof import("./api/device/base/getWifiStatus").getWifiStatus$;
            openSystemSetting: typeof import("./api/device/base/openSystemSetting").openSystemSetting$;
        };
        connection: {
            getNetworkType: typeof import("./api/device/connection/getNetworkType").getNetworkType$;
        };
        geolocation: {
            checkPermission: typeof import("./api/device/geolocation/checkPermission").checkPermission$;
            get: typeof import("./api/device/geolocation/get").get$;
            start: typeof import("./api/device/geolocation/start").start$;
            status: typeof import("./api/device/geolocation/status").status$;
            stop: typeof import("./api/device/geolocation/stop").stop$;
        };
        launcher: {
            checkInstalledApps: typeof import("./api/device/launcher/checkInstalledApps").checkInstalledApps$;
            launchApp: typeof import("./api/device/launcher/launchApp").launchApp$;
        };
        nfc: {
            nfcRead: typeof import("./api/device/nfc/nfcRead").nfcRead$;
            nfcStop: typeof import("./api/device/nfc/nfcStop").nfcStop$;
            nfcWrite: typeof import("./api/device/nfc/nfcWrite").nfcWrite$;
        };
        notification: {
            actionSheet: typeof import("./api/device/notification/actionSheet").actionSheet$;
            alert: typeof import("./api/device/notification/alert").alert$;
            confirm: typeof import("./api/device/notification/confirm").confirm$;
            extendModal: typeof import("./api/device/notification/extendModal").extendModal$;
            hidePreloader: typeof import("./api/device/notification/hidePreloader").hidePreloader$;
            modal: typeof import("./api/device/notification/modal").modal$;
            prompt: typeof import("./api/device/notification/prompt").prompt$;
            showPreloader: typeof import("./api/device/notification/showPreloader").showPreloader$;
            toast: typeof import("./api/device/notification/toast").toast$;
            vibrate: typeof import("./api/device/notification/vibrate").vibrate$;
        };
        screen: {
            getScreenBrightness: typeof import("./api/device/screen/getScreenBrightness").getScreenBrightness$;
            insetAdjust: typeof import("./api/device/screen/insetAdjust").insetAdjust$;
            isScreenReaderEnabled: typeof import("./api/device/screen/isScreenReaderEnabled").isScreenReaderEnabled$;
            resetView: typeof import("./api/device/screen/resetView").resetView$;
            rotateView: typeof import("./api/device/screen/rotateView").rotateView$;
            setScreenBrightness: typeof import("./api/device/screen/setScreenBrightness").setScreenBrightness$;
        };
    };
    media: {
        voiceRecorder: {
            keepAlive: typeof import("./api/media/voiceRecorder/keepAlive").keepAlive$;
            pause: typeof import("./api/media/voiceRecorder/pause").pause$;
            resume: typeof import("./api/media/voiceRecorder/resume").resume$;
            start: typeof import("./api/media/voiceRecorder/start").start$;
            stop: typeof import("./api/media/voiceRecorder/stop").stop$;
        };
    };
    net: {
        bjGovApn: {
            loginGovNet: typeof import("./api/net/bjGovApn/loginGovNet").loginGovNet$;
        };
    };
    runtime: {
        h5nuvabridge: {
            exec: typeof import("./api/runtime/h5nuvabridge/exec").exec$;
        };
        message: {
            fetch: typeof import("./api/runtime/message/fetch").fetch$;
            post: typeof import("./api/runtime/message/post").post$;
        };
        monitor: {
            getLoadTime: typeof import("./api/runtime/monitor/getLoadTime").getLoadTime$;
        };
        permission: {
            requestAuthCode: typeof import("./api/runtime/permission/requestAuthCode").requestAuthCode$;
            requestOperateAuthCode: typeof import("./api/runtime/permission/requestOperateAuthCode").requestOperateAuthCode$;
        };
    };
    ui: {
        input: {
            plain: typeof import("./api/ui/input/plain").plain$;
        };
        multitask: {
            addToFloat: typeof import("./api/ui/multitask/addToFloat").addToFloat$;
            removeFromFloat: typeof import("./api/ui/multitask/removeFromFloat").removeFromFloat$;
        };
        nav: {
            close: typeof import("./api/ui/nav/close").close$;
            getCurrentId: typeof import("./api/ui/nav/getCurrentId").getCurrentId$;
            go: typeof import("./api/ui/nav/go").go$;
            preload: typeof import("./api/ui/nav/preload").preload$;
            recycle: typeof import("./api/ui/nav/recycle").recycle$;
        };
        progressBar: {
            setColors: typeof import("./api/ui/progressBar/setColors").setColors$;
        };
        pullToRefresh: {
            disable: typeof import("./api/ui/pullToRefresh/disable").disable$;
            enable: typeof import("./api/ui/pullToRefresh/enable").enable$;
            stop: typeof import("./api/ui/pullToRefresh/stop").stop$;
        };
        webViewBounce: {
            disable: typeof import("./api/ui/webViewBounce/disable").disable$;
            enable: typeof import("./api/ui/webViewBounce/enable").enable$;
        };
    };
    ExternalChannelPublish: typeof jsApi.ExternalChannelPublish;
    addPhoneContact: typeof jsApi.addPhoneContact;
    alert: typeof jsApi.alert;
    callUsers: typeof jsApi.callUsers;
    checkAuth: typeof jsApi.checkAuth;
    checkBizCall: typeof jsApi.checkBizCall;
    chooseChat: typeof jsApi.chooseChat;
    chooseConversation: typeof jsApi.chooseConversation;
    chooseDateRangeInCalendar: typeof jsApi.chooseDateRangeInCalendar;
    chooseDateTime: typeof jsApi.chooseDateTime;
    chooseDepartments: typeof jsApi.chooseDepartments;
    chooseDingTalkDir: typeof jsApi.chooseDingTalkDir;
    chooseDistrict: typeof jsApi.chooseDistrict;
    chooseExternalUsers: typeof jsApi.chooseExternalUsers;
    chooseFile: typeof jsApi.chooseFile;
    chooseHalfDayInCalendar: typeof jsApi.chooseHalfDayInCalendar;
    chooseImage: typeof jsApi.chooseImage;
    chooseMedia: typeof jsApi.chooseMedia;
    chooseOneDayInCalendar: typeof jsApi.chooseOneDayInCalendar;
    choosePhonebook: typeof jsApi.choosePhonebook;
    chooseStaffForPC: typeof jsApi.chooseStaffForPC;
    chooseUserFromList: typeof jsApi.chooseUserFromList;
    clearShake: typeof jsApi.clearShake;
    closeBluetoothAdapter: typeof jsApi.closeBluetoothAdapter;
    closePage: typeof jsApi.closePage;
    complexChoose: typeof jsApi.complexChoose;
    compressImage: typeof jsApi.compressImage;
    confirm: typeof jsApi.confirm;
    connectBLEDevice: typeof jsApi.connectBLEDevice;
    createBLEPeripheralServer: typeof jsApi.createBLEPeripheralServer;
    createDing: typeof jsApi.createDing;
    createDingForPC: typeof jsApi.createDingForPC;
    createGroupChat: typeof jsApi.createGroupChat;
    createLiveClassRoom: typeof jsApi.createLiveClassRoom;
    cropImage: typeof jsApi.cropImage;
    customChooseUsers: typeof jsApi.customChooseUsers;
    datePicker: typeof jsApi.datePicker;
    dateRangePicker: typeof jsApi.dateRangePicker;
    decrypt: typeof jsApi.decrypt;
    disablePullDownRefresh: typeof jsApi.disablePullDownRefresh;
    disableWebViewBounce: typeof jsApi.disableWebViewBounce;
    disconnectBLEDevice: typeof jsApi.disconnectBLEDevice;
    downloadAudio: typeof jsApi.downloadAudio;
    downloadFile: typeof jsApi.downloadFile;
    editExternalUser: typeof jsApi.editExternalUser;
    editPicture: typeof jsApi.editPicture;
    enablePullDownRefresh: typeof jsApi.enablePullDownRefresh;
    enableWebViewBounce: typeof jsApi.enableWebViewBounce;
    encrypt: typeof jsApi.encrypt;
    exclusiveLiveCheck: typeof jsApi.exclusiveLiveCheck;
    generateImageFromCode: typeof jsApi.generateImageFromCode;
    getAdvertisingStatus: typeof jsApi.getAdvertisingStatus;
    getAuthCode: typeof jsApi.getAuthCode;
    getAuthCodeV2: typeof jsApi.getAuthCodeV2;
    getAuthInfo: typeof jsApi.getAuthInfo;
    getBLEDeviceCharacteristics: typeof jsApi.getBLEDeviceCharacteristics;
    getBLEDeviceServices: typeof jsApi.getBLEDeviceServices;
    getBatteryInfo: typeof jsApi.getBatteryInfo;
    getBeacons: typeof jsApi.getBeacons;
    getBluetoothAdapterState: typeof jsApi.getBluetoothAdapterState;
    getBluetoothDevices: typeof jsApi.getBluetoothDevices;
    getCloudCallInfo: typeof jsApi.getCloudCallInfo;
    getCloudCallList: typeof jsApi.getCloudCallList;
    getDeviceId: typeof jsApi.getDeviceId;
    getDeviceUUID: typeof jsApi.getDeviceUUID;
    getImageInfo: typeof jsApi.getImageInfo;
    getLocatingStatus: typeof jsApi.getLocatingStatus;
    getLocation: typeof jsApi.getLocation;
    getNetworkType: typeof jsApi.getNetworkType;
    getOperateAuthCode: typeof jsApi.getOperateAuthCode;
    getScreenBrightness: typeof jsApi.getScreenBrightness;
    getStorage: typeof jsApi.getStorage;
    getSystemInfo: typeof jsApi.getSystemInfo;
    getSystemSettings: typeof jsApi.getSystemSettings;
    getThirdAppConfCustomData: typeof jsApi.getThirdAppConfCustomData;
    getThirdAppUserCustomData: typeof jsApi.getThirdAppUserCustomData;
    getTranslateStatus: typeof jsApi.getTranslateStatus;
    getUserExclusiveInfo: typeof jsApi.getUserExclusiveInfo;
    getWifiHotspotStatus: typeof jsApi.getWifiHotspotStatus;
    getWifiStatus: typeof jsApi.getWifiStatus;
    goBackPage: typeof jsApi.goBackPage;
    hideLoading: typeof jsApi.hideLoading;
    hideToast: typeof jsApi.hideToast;
    isInTabWindow: typeof jsApi.isInTabWindow;
    isLocalFileExist: typeof jsApi.isLocalFileExist;
    isScreenReaderEnabled: typeof jsApi.isScreenReaderEnabled;
    locateInMap: typeof jsApi.locateInMap;
    makeCloudCall: typeof jsApi.makeCloudCall;
    makeVideoConfCall: typeof jsApi.makeVideoConfCall;
    multiSelect: typeof jsApi.multiSelect;
    navigateBackPage: typeof jsApi.navigateBackPage;
    navigateToPage: typeof jsApi.navigateToPage;
    nfcReadCardNumber: typeof jsApi.nfcReadCardNumber;
    notifyBLECharacteristicValueChange: typeof jsApi.notifyBLECharacteristicValueChange;
    notifyTranslateEvent: typeof jsApi.notifyTranslateEvent;
    offBLECharacteristicValueChange: typeof jsApi.offBLECharacteristicValueChange;
    offBLEConnectionStateChanged: typeof jsApi.offBLEConnectionStateChanged;
    offBluetoothAdapterStateChange: typeof jsApi.offBluetoothAdapterStateChange;
    offBluetoothDeviceFound: typeof jsApi.offBluetoothDeviceFound;
    onBLECharacteristicValueChange: typeof jsApi.onBLECharacteristicValueChange;
    onBLEConnectionStateChanged: typeof jsApi.onBLEConnectionStateChanged;
    onBLEPeripheralCharacteristicReadRequest: typeof jsApi.onBLEPeripheralCharacteristicReadRequest;
    onBLEPeripheralCharacteristicWriteRequest: typeof jsApi.onBLEPeripheralCharacteristicWriteRequest;
    onBLEPeripheralConnectionStateChanged: typeof jsApi.onBLEPeripheralConnectionStateChanged;
    onBeaconServiceChange: typeof jsApi.onBeaconServiceChange;
    onBeaconUpdate: typeof jsApi.onBeaconUpdate;
    onBluetoothAdapterStateChange: typeof jsApi.onBluetoothAdapterStateChange;
    onBluetoothDeviceFound: typeof jsApi.onBluetoothDeviceFound;
    onPlayAudioEnd: typeof jsApi.onPlayAudioEnd;
    onRecordEnd: typeof jsApi.onRecordEnd;
    openBluetoothAdapter: typeof jsApi.openBluetoothAdapter;
    openChatByChatId: typeof jsApi.openChatByChatId;
    openChatByConversationId: typeof jsApi.openChatByConversationId;
    openChatByUserId: typeof jsApi.openChatByUserId;
    openDocument: typeof jsApi.openDocument;
    openLink: typeof jsApi.openLink;
    openLocalFile: typeof jsApi.openLocalFile;
    openLocation: typeof jsApi.openLocation;
    openMicroApp: typeof jsApi.openMicroApp;
    openPageInMicroApp: typeof jsApi.openPageInMicroApp;
    openPageInModalForPC: typeof jsApi.openPageInModalForPC;
    openPageInSlidePanelForPC: typeof jsApi.openPageInSlidePanelForPC;
    openPageInWorkBenchForPC: typeof jsApi.openPageInWorkBenchForPC;
    pauseAduio: typeof jsApi.pauseAduio;
    playAduio: typeof jsApi.playAduio;
    popGesture: typeof jsApi.popGesture;
    previewFileInDingTalk: typeof jsApi.previewFileInDingTalk;
    previewImage: typeof jsApi.previewImage;
    previewImagesInDingTalkBatch: typeof jsApi.previewImagesInDingTalkBatch;
    previewMedia: typeof jsApi.previewMedia;
    prompt: typeof jsApi.prompt;
    quickCallList: typeof jsApi.quickCallList;
    quitPage: typeof jsApi.quitPage;
    readBLECharacteristicValue: typeof jsApi.readBLECharacteristicValue;
    readNFC: typeof jsApi.readNFC;
    removeStorage: typeof jsApi.removeStorage;
    replacePage: typeof jsApi.replacePage;
    requestAuthCode: typeof jsApi.requestAuthCode;
    requestMoneySubmmitOrder: typeof jsApi.requestMoneySubmmitOrder;
    resetScreenView: typeof jsApi.resetScreenView;
    resumeAudio: typeof jsApi.resumeAudio;
    rotateScreenView: typeof jsApi.rotateScreenView;
    rsa: typeof jsApi.rsa;
    saveFileToDingTalk: typeof jsApi.saveFileToDingTalk;
    saveImageToPhotosAlbum: typeof jsApi.saveImageToPhotosAlbum;
    saveVideoToPhotosAlbum: typeof jsApi.saveVideoToPhotosAlbum;
    scan: typeof jsApi.scan;
    scanCard: typeof jsApi.scanCard;
    searchMap: typeof jsApi.searchMap;
    setClipboard: typeof jsApi.setClipboard;
    setGestures: typeof jsApi.setGestures;
    setKeepScreenOn: typeof jsApi.setKeepScreenOn;
    setNavigationIcon: typeof jsApi.setNavigationIcon;
    setNavigationLeft: typeof jsApi.setNavigationLeft;
    setNavigationTitle: typeof jsApi.setNavigationTitle;
    setScreenBrightness: typeof jsApi.setScreenBrightness;
    setStorage: typeof jsApi.setStorage;
    share: typeof jsApi.share;
    showActionSheet: typeof jsApi.showActionSheet;
    showAuthGuide: typeof jsApi.showAuthGuide;
    showCallMenu: typeof jsApi.showCallMenu;
    showLoading: typeof jsApi.showLoading;
    showModal: typeof jsApi.showModal;
    showSharePanel: typeof jsApi.showSharePanel;
    showToast: typeof jsApi.showToast;
    singleSelect: typeof jsApi.singleSelect;
    startAdvertising: typeof jsApi.startAdvertising;
    startBeaconDiscovery: typeof jsApi.startBeaconDiscovery;
    startBluetoothDevicesDiscovery: typeof jsApi.startBluetoothDevicesDiscovery;
    startLocating: typeof jsApi.startLocating;
    startRecord: typeof jsApi.startRecord;
    stopAdvertising: typeof jsApi.stopAdvertising;
    stopAudio: typeof jsApi.stopAudio;
    stopBeaconDiscovery: typeof jsApi.stopBeaconDiscovery;
    stopBluetoothDevicesDiscovery: typeof jsApi.stopBluetoothDevicesDiscovery;
    stopLocating: typeof jsApi.stopLocating;
    stopPullDownRefresh: typeof jsApi.stopPullDownRefresh;
    stopRecord: typeof jsApi.stopRecord;
    subscribe: typeof jsApi.subscribe;
    timePicker: typeof jsApi.timePicker;
    translate: typeof jsApi.translate;
    translateVoice: typeof jsApi.translateVoice;
    uploadAttachmentToDingTalk: typeof jsApi.uploadAttachmentToDingTalk;
    uploadFile: typeof jsApi.uploadFile;
    vibrate: typeof jsApi.vibrate;
    watchShake: typeof jsApi.watchShake;
    writeBLECharacteristicValue: typeof jsApi.writeBLECharacteristicValue;
    writeBLEPeripheralCharacteristicValue: typeof jsApi.writeBLEPeripheralCharacteristicValue;
    writeNFC: typeof jsApi.writeNFC;
    util: {
        domainStorage: {
            getItem: typeof import("./api/util/domainStorage/getItem").getItem$;
            getStorageInfo: typeof import("./api/util/domainStorage/getStorageInfo").getStorageInfo$;
            removeItem: typeof import("./api/util/domainStorage/removeItem").removeItem$;
            setItem: typeof import("./api/util/domainStorage/setItem").setItem$;
        };
        openTemporary: {
            getData: typeof import("./api/util/openTemporary/getData").getData$;
        };
    };
} & {
    plugin: typeof plugin;
};
export = dd;
